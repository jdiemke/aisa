"use strict";(self.webpackChunkaisa=self.webpackChunkaisa||[]).push([[3441],{3441:(t,e,s)=>{s.r(e),s.d(e,{Scene6:()=>m});var n=s(10),h=s(7401),a=s(7552),r=s(9999),i=s(82),o=s(7569),l=s(6075),p=s(1829),u=s(7574),c=s(3362);class d extends r.p{heightmapSphere;env;obj;texturedRenderingPipeline;init(t){return this.texturedRenderingPipeline=new c.W(t),Promise.all([i.O.load(s(2093),!1).then((t=>this.heightmapSphere=t)),i.O.load(s(3734),!1).then((t=>this.env=t))]).then((()=>{this.obj=this.createSphereDistplaced(this.heightmapSphere)}))}render(t,e){t.clearColorBuffer(p.I.BLACK.toPackedFormat()),this.renderTransparent(t,e)}renderTransparent(t,e){t.setCullFace(u.u.BACK),t.setTexture(this.env);let s=h.C.constructScaleMatrix(3.7,3.7,3.7).multiplyMatrix(h.C.constructYRotationMatrix(1e-4*e).multiplyMatrix(h.C.constructXRotationMatrix(1e-4*e)));s=h.C.constructTranslationMatrix(-0,-0,-10-6*(.5*Math.sin(6e-4*e)+.5)).multiplyMatrix(s),t.clearDepthBuffer(),this.shadingSphereEnvDisp2(t,4e-4*e,s)}createSphere(){const t=[new a.l(0,-1,0),new a.l(1,0,0),new a.l(0,0,1),new a.l(-1,0,0),new a.l(0,0,-1),new a.l(0,1,0)],e=this.divideSphere(t,[0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1],4),s=[],n=[],h=[],r=[],i=[];return e.index.forEach((t=>{const n=e.points[t],h=s.find((t=>t.sub(n).length()<.001));if(h){const t=s.indexOf(h);i.push(t)}else i.push(s.push(n)-1)})),s.forEach((()=>{h.push(new a.l(0,0,0)),r.push(new a.l(0,0,0)),n.push(new a.l(0,0,0))})),{points:s,points2:n,normals:h,normals2:r,index:i}}divideSphere(t,e,s){const n=[],h=[],a=[];let r=0;for(let s=0;s<e.length;s+=3){const i=t[e[s]],o=t[e[s+1]],l=t[e[s+2]],p=o.sub(i).mul(.5).add(i).normalize(),u=l.sub(o).mul(.5).add(o).normalize(),c=i.sub(l).mul(.5).add(l).normalize();n.push(i),n.push(p),n.push(c),h.push(i),h.push(p),h.push(c),a.push(r++),a.push(r++),a.push(r++),n.push(p),n.push(o),n.push(u),h.push(p),h.push(o),h.push(u),a.push(r++),a.push(r++),a.push(r++),n.push(p),n.push(u),n.push(c),h.push(p),h.push(u),h.push(c),a.push(r++),a.push(r++),a.push(r++),n.push(c),n.push(u),n.push(l),h.push(c),h.push(u),h.push(l),a.push(r++),a.push(r++),a.push(r++)}return s>0?this.divideSphere(n,a,--s):{points:n,normals:h,index:a}}createSphereDistplaced(t){const e=this.createSphere(),s=new Array;return e.points.forEach((e=>{const n=e.x,h=e.y,a=e.z,r=Math.floor(255*(.5+Math.atan2(a,n)/(2*Math.PI))),i=Math.floor(255*(.5-Math.asin(h)/Math.PI)),o=1+(255&t.texture[r+256*i])/255*1.4;s.push(e.mul(o))})),e.points=s,e}shadingSphereEnvDisp2(t,e,s){const n=this.obj;for(let t=0;t<n.points.length;t++){const s=n.points[t].z,h=n.points[t].x,a=Math.sqrt(h*h+s*s);let r=4.5*Math.sin(.539*n.points[t].y+.06*Math.max(20-2*a,0)+.9*e);r*=.5*Math.sin(.25*e)+.5,n.points2[t].y=n.points[t].y,n.points2[t].x=n.points[t].x*Math.cos(r)-n.points[t].z*Math.sin(r),n.points2[t].z=n.points[t].x*Math.sin(r)+n.points[t].z*Math.cos(r),n.normals[t].x=0,n.normals[t].y=0,n.normals[t].z=0}const h=n.points2,r=n.index,i=n.normals,p=new a.l(0,0,0),u=new a.l(0,0,0),c=new a.l(0,0,0);for(let t=0;t<r.length;t+=3){const e=h[r[t]],s=h[r[t+1]],n=h[r[t+2]];p.sub2(s,e),u.sub2(n,e),c.cross2(p,u);const a=c;i[r[t]].add2(i[r[t]],a),i[r[t+1]].add2(i[r[t+1]],a),i[r[t+2]].add2(i[r[t+2]],a)}for(let t=0;t<i.length;t++)i[t].normalize2();const d=n.points2,m=n.normals2,x=s.computeNormalMatrix();for(let t=0;t<i.length;t++)x.multiplyHomArr(i[t],m[t]);for(let e=0;e<h.length;e++){const n=s.multiplyHom(h[e]);d[e].x=Math.round(.5*t.width+n.x/(.0078*-n.z)),d[e].y=Math.round(.5*t.height-n.y/(.0078*-n.z)),d[e].z=n.z}const f=new o.X;f.textureCoordinate=new l.l;const w=new o.X;w.textureCoordinate=new l.l;const M=new o.X;M.textureCoordinate=new l.l;const g=new Array(f,w,M);for(let e=0;e<r.length;e+=3){const s=d[r[e]],n=m[r[e]],h=d[r[e+1]],a=m[r[e+1]],i=d[r[e+2]],o=m[r[e+2]];t.isTriangleCCW(s,h,i)&&(g[0].projection=s,t.fakeSphere(n,f),g[1].projection=h,t.fakeSphere(a,w),g[2].projection=i,t.fakeSphere(o,M),s.x<t.minWindow.x||h.x<t.minWindow.x||i.x<t.minWindow.x||s.x>t.maxWindow.x||h.x>t.maxWindow.x||i.x>t.maxWindow.x||s.y<t.minWindow.y||h.y<t.minWindow.y||i.y<t.minWindow.y||s.y>t.maxWindow.y||h.y>t.maxWindow.y||i.y>t.maxWindow.y?this.texturedRenderingPipeline.clipConvexPolygon(t,g):this.texturedRenderingPipeline.triangleRasterizer.drawTriangleDDA(t,g[0],g[1],g[2]))}}}class m{PlaneDeformationScene;DistortedSphereScene;logo;init(t){return this.PlaneDeformationScene=new n.v(3,s(6644)),this.DistortedSphereScene=new d,Promise.all([this.DistortedSphereScene.init(t),this.PlaneDeformationScene.init(t),i.O.load(s(1405),!0).then((t=>this.logo=t))])}render(t,e){this.PlaneDeformationScene.render(t,e),this.DistortedSphereScene.renderTransparent(t,e),t.drawTexture(0,t.height-this.logo.height,this.logo,1)}}},10:(t,e,s)=>{s.d(e,{v:()=>r});var n=s(82),h=s(1829),a=s(613);class r{effectStyle;texturePath;mLUT;texture;constructor(t,e){this.effectStyle=t,this.texturePath=e}onInit(){}init(t){return Promise.all([n.O.load(this.texturePath,!1).then((e=>{this.texture=e,this.createLUT(this.effectStyle,t.width,t.height,this.texture.width,this.texture.height)}))])}createLUT(t,e,s,n,h){this.mLUT=new Int32Array(3*e*s);let r=0,i=0,o=0,l=0;for(let p=0;p<s;p++){const u=2*p/s-1;for(let s=0;s<e;s++){const p=2*s/e-1,c=Math.sqrt(p*p+u*u),d=Math.atan2(u,p),m=c;switch(t){case 1:i=Math.cos(d)/c,o=Math.sin(d)/c,l=2/(6*m+3*p)*-50;break;case 2:o=Math.sin(d+Math.cos(3*m))/Math.pow(m,.2),i=Math.cos(d+Math.cos(3*m))/Math.pow(m,.2),l=1;break;case 3:o=2/(6*m+3*p),i=3*d/Math.PI,l=25*-o;break;case 4:o=-.4/m+.1*Math.sin(8*d),i=.5+.5*d/Math.PI,l=0;break;case 5:i=(.02*u+.03)*Math.cos(3*d)/m,o=(.02*u+.03)*Math.sin(3*d)/m,l=0;break;case 6:i=1/(m+.5+.5*Math.sin(5*d)),o=3*d/Math.PI,l=0;break;case 7:i=.1*p/(.11+.5*m),o=.1*u/(.11+.5*m),l=0;break;case 8:i=p/Math.abs(u),o=1/Math.abs(u),l=40*-o;break;case 9:i=.5*d/Math.PI,o=Math.sin(2*m),l=0;break;case 10:o=Math.pow(m,.1),i=1*d/Math.PI+m,l=0;break;case 11:o=p*(3-Math.sqrt(4-5*m*m))/(m*m+1),i=u*(3-Math.sqrt(4-5*m*m))/(m*m+1),l=-130.9*(p+u+m*m-(p+u-1)*Math.sqrt(4-5*m*m)/3)/(m*m+1);break;default:i=p,o=u,l=0}this.mLUT[r++]=n*i&n-1,this.mLUT[r++]=h*o&h-1,this.mLUT[r++]=a.c.clamp(l,-255,255)}}return Promise.all([])}render(t,e){this.drawPlaneDeformation(t,e>>3,e>>3)}drawPlaneDeformation(t,e,s){for(let n=0;n<t.framebuffer.length;n++){const r=(n<<1)+n,i=this.mLUT[r+0]+s,o=this.mLUT[r+1]+e,l=this.mLUT[r+2];let p=this.texture.texture[this.texture.width*(o&this.texture.height-1)+(i&this.texture.width-1)];if(0!==l){let t=255&p,e=p>>8&255,s=p>>16&255;t+=l,e+=l,s+=l,t=a.c.clamp(t,0,255),e=a.c.clamp(e,0,255),s=a.c.clamp(s,0,255),p=new h.I(t,e,s,255).toPackedFormat()}t.framebuffer[n]=p}}drawOldPlaneDeformationFloor(t,e){let s=0;for(let n=0;n<t.height;n++){const h=n-t.height/2,a=((1/Math.abs(h/100*.02)+.069*e)%256+256)%256,r=1-Math.min(1,1/Math.abs(h/10));for(let e=0;e<t.width;e++){const n=((e-t.width/2)/t.width/Math.abs(h/100*.02)%256+256)%256,i=this.texture.texture[(0|n)+256*(0|a)],o=(i>>0&255)*r|0,l=(i>>8&255)*r|0,p=(i>>16&255)*r|0;t.framebuffer[s++]=o|l<<8|p<<16|255<<24}}}drawOldPlaneDeformationStar(t,e){let s=0;for(let n=0;n<t.height;n++)for(let h=0;h<t.width;h++){const a=(h-t.width/2)/(t.width/2),r=(n-t.height/2)/(t.height/2),i=1,o=Math.atan2(r,a)+4e-4*e,l=128*(3*o/Math.PI+4e-4*e)%256,p=(1/(Math.sqrt(a*a+r*r)+.5+.5*Math.sin(5*o))*32+.03*e)%256,u=this.texture.texture[(0|p)+256*(0|l)],c=(u>>0&255)*i|0,d=(u>>8&255)*i|0,m=(u>>16&255)*i|0;t.framebuffer[s++]=c|d<<8|m<<16|255<<24}}}},3734:(t,e,s)=>{t.exports=s.p+"dbfe6f136c603b175357.png"},2093:(t,e,s)=>{t.exports=s.p+"b067dd009dbd8781f197.png"},1405:(t,e,s)=>{t.exports=s.p+"60e84283a6f99ff48f75.png"},6644:(t,e,s)=>{t.exports=s.p+"dde80f7d8d6c1038a9b0.png"}}]);
//# sourceMappingURL=3441.js.map