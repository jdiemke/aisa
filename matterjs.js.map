{"version":3,"file":"matterjs.js","mappings":"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","sources":["webpack://aisa/./src/default-style.css","webpack://aisa/./node_modules/css-loader/dist/runtime/api.js","webpack://aisa/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://aisa/./node_modules/matter-js/build/matter.js","webpack://aisa/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://aisa/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://aisa/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://aisa/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://aisa/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://aisa/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://aisa/webpack/bootstrap","webpack://aisa/webpack/runtime/compat get default export","webpack://aisa/webpack/runtime/define property getters","webpack://aisa/webpack/runtime/global","webpack://aisa/webpack/runtime/hasOwnProperty shorthand","webpack://aisa/webpack/runtime/publicPath","webpack://aisa/webpack/runtime/nonce","webpack://aisa/./src/blitter/ScaleClipBlitter.ts","webpack://aisa/./src/core/Color.ts","webpack://aisa/./src/CullFace.ts","webpack://aisa/./src/math/Vector4f.ts","webpack://aisa/./src/geometrical-objects/AbstractGeometricObject.ts","webpack://aisa/./src/math/Vector3f.ts","webpack://aisa/./src/geometrical-objects/Torus.ts","webpack://aisa/./src/math/Vector2f.ts","webpack://aisa/./src/math/Matrix4f.ts","webpack://aisa/./src/math/Matrix3.ts","webpack://aisa/./src/math/Interpolator.ts","webpack://aisa/./src/RandomNumberGenerator.ts","webpack://aisa/./src/rasterizer/AbstractTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/AbstractScanlineTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/FlatShadingTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/line/LineRasterizer.ts","webpack://aisa/./src/rasterizer/line/LineRasterizerNoZ.ts","webpack://aisa/./src/rasterizer/TexturedTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/TexturedAlphaBlendingTriangleRasterizer.ts","webpack://aisa/./src/TextureCoordinate.ts","webpack://aisa/./src/Vertex.ts","webpack://aisa/./src/rendering-pipelines/AbstractRenderingPipeline.ts","webpack://aisa/./src/rendering-pipelines/TexturingRenderingPipeline.ts","webpack://aisa/./src/screen-space-clipping/AbstractClipEdge.ts","webpack://aisa/./src/screen-space-clipping/BottomClipEdge.ts","webpack://aisa/./src/screen-space-clipping/CohenSutherlandLineClipper.ts","webpack://aisa/./src/screen-space-clipping/LeftClipEdge.ts","webpack://aisa/./src/screen-space-clipping/RightClipEdge.ts","webpack://aisa/./src/screen-space-clipping/TopClipEdge.ts","webpack://aisa/./src/texture/Texture.ts","webpack://aisa/./src/Framebuffer.ts","webpack://aisa/./src/fullscreen/FullscreenUtils.ts","webpack://aisa/./src/Canvas.ts","webpack://aisa/./src/scenes/AbstractScene.ts","webpack://aisa/./src/texture/TextureUtils.ts","webpack://aisa/./src/screen-space-clipping/SutherlandHodgman2DClipper.ts","webpack://aisa/./src/rasterizer/TexturedTriangleRasterizer2D.ts","webpack://aisa/./src/examples/xenusion/ParallaxScrollingScene.ts","webpack://aisa/./src/examples/matterjs/MatterScene.ts","webpack://aisa/./src/default-style.css?9c7b","webpack://aisa/./src/examples/matterjs/Application.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n    background-color: #000;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/default-style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,sBAAsB;AAC1B\",\"sourcesContent\":[\"body {\\n    background-color: #000;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","/*!\n * matter-js 0.20.0 by @liabru\n * http://brm.io/matter-js/\n * License MIT\n * \n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Matter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Matter\"] = factory();\n\telse\n\t\troot[\"Matter\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 20);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._baseDelta = 1000 / 60;\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n    Common._warnedOnce = {};\n    Common._decomp = null;\n    \n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result is in milliseconds and will use high-resolution timing if available.\n     * @method now\n     * @return {number} the current timestamp in milliseconds\n     */\n    Common.now = function() {\n        if (typeof window !== 'undefined' && window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        if (Date.now) {\n            return Date.now();\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @static\n     * @property logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Uses `Common.warn` to log the given message one time only.\n     * @method warnOnce\n     * @param ...objs {} The objects to log.\n     */\n    Common.warnOnce = function() {\n        var message = Array.prototype.slice.call(arguments).join(' ');\n\n        if (!Common._warnedOnce[message]) {\n            Common.warn(message);\n            Common._warnedOnce[message] = true;\n        }\n    };\n\n    /**\n     * Shows a deprecated console warning when the function on the given object is called.\n     * The target function will be replaced with a new function that first shows the warning\n     * and then calls the original function.\n     * @method deprecated\n     * @param {object} obj The object or module\n     * @param {string} name The property name of the function on obj\n     * @param {string} warning The one-time message to show if the function is called\n     */\n    Common.deprecated = function(obj, prop, warning) {\n        obj[prop] = Common.chain(function() {\n            Common.warnOnce('🔅 deprecated 🔅', warning);\n        }, obj[prop]);\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Provide the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module to enable\n     * concave vertex decomposition support when using `Bodies.fromVertices` e.g. `Common.setDecomp(require('poly-decomp'))`.\n     * @method setDecomp\n     * @param {} decomp The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module.\n     */\n    Common.setDecomp = function(decomp) {\n        Common._decomp = decomp;\n    };\n\n    /**\n     * Returns the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module provided through `Common.setDecomp`,\n     * otherwise returns the global `decomp` if set.\n     * @method getDecomp\n     * @return {} The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module if provided.\n     */\n    Common.getDecomp = function() {\n        // get user provided decomp if set\n        var decomp = Common._decomp;\n\n        try {\n            // otherwise from window global\n            if (!decomp && typeof window !== 'undefined') {\n                decomp = window.decomp;\n            }\n    \n            // otherwise from node global\n            if (!decomp && typeof global !== 'undefined') {\n                decomp = global.decomp;\n            }\n        } catch (e) {\n            // decomp not available\n            decomp = null;\n        }\n\n        return decomp;\n    };\n})();\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([-\\d.e]+)[\\s,]*([-\\d.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        scalar = typeof scalar !== 'undefined' ? scalar : 1;\n\n        var verticesLength = vertices.length,\n            translateX = vector.x * scalar,\n            translateY = vector.y * scalar,\n            i;\n        \n        for (i = 0; i < verticesLength; i++) {\n            vertices[i].x += translateX;\n            vertices[i].y += translateY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            pointX = point.x,\n            pointY = point.y,\n            verticesLength = vertices.length,\n            vertex,\n            dx,\n            dy,\n            i;\n\n        for (i = 0; i < verticesLength; i++) {\n            vertex = vertices[i];\n            dx = vertex.x - pointX;\n            dy = vertex.y - pointY;\n            vertex.x = pointX + (dx * cos - dy * sin);\n            vertex.y = pointY + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        var pointX = point.x,\n            pointY = point.y,\n            verticesLength = vertices.length,\n            vertex = vertices[verticesLength - 1],\n            nextVertex;\n\n        for (var i = 0; i < verticesLength; i++) {\n            nextVertex = vertices[i];\n\n            if ((pointX - vertex.x) * (nextVertex.y - vertex.y) \n                + (pointY - vertex.y) * (vertex.x - nextVertex.x) > 0) {\n                return false;\n            }\n\n            vertex = nextVertex;\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Body` module contains methods for creating and manipulating rigid bodies.\n* For creating bodies with common configurations such as rectangles, circles and other polygons see the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(11);\n\n(function() {\n\n    Body._timeCorrection = true;\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n    Body._baseDelta = 1000 / 60;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                strokeStyle: null,\n                fillStyle: null,\n                lineWidth: null,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                }\n            },\n            events: null,\n            bounds: null,\n            chamfer: null,\n            circleRadius: 0,\n            positionPrev: null,\n            anglePrev: 0,\n            parent: null,\n            axes: null,\n            area: 0,\n            mass: 0,\n            inertia: 0,\n            deltaTime: 1000 / 60,\n            _original: null\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#14151f' : Common.choose(['#f19648', '#f5d259', '#f55a3c', '#063e7b', '#ececd1'])),\n            defaultStrokeStyle = body.isStatic ? '#555' : '#ccc',\n            defaultLineWidth = body.isStatic && body.render.fillStyle === null ? 1 : 0;\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.lineWidth = body.render.lineWidth || defaultLineWidth;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            if (!Object.prototype.hasOwnProperty.call(settings, property))\n                continue;\n\n            value = settings[property];\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'speed':\n                Body.setSpeed(body, value);\n                break;\n            case 'angularSpeed':\n                Body.setAngularSpeed(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            case 'centre':\n                Body.setCentre(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            if (isStatic) {\n                if (!part.isStatic) {\n                    part._original = {\n                        restitution: part.restitution,\n                        friction: part.friction,\n                        mass: part.mass,\n                        inertia: part.inertia,\n                        density: part.density,\n                        inverseMass: part.inverseMass,\n                        inverseInertia: part.inverseInertia\n                    };\n                }\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                part._original = null;\n            }\n\n            part.isStatic = isStatic;\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia of the body. This is the second moment of area in two dimensions.\n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull. Concave vertices must be decomposed into convex parts.\n     * \n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body`. \n     * \n     * See `body.parts` for details and requirements on how parts are used.\n     * \n     * See Bodies.fromVertices for a related utility.\n     * \n     * This function updates `body` mass, inertia and centroid based on the parts geometry.  \n     * Sets each `part.parent` to be this `body`.  \n     * \n     * The convex hull is computed and set on this `body` (unless `autoHull` is `false`).  \n     * Automatically ensures that the first part in `body.parts` is the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param {body[]} parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Set the centre of mass of the body. \n     * The `centre` is a vector in world-space unless `relative` is set, in which case it is a translation.\n     * The centre of mass is the point the body rotates about and can be used to simulate non-uniform density.\n     * This is equal to moving `body.position` but not the `body.vertices`.\n     * Invalid if the `centre` falls outside the body's convex hull.\n     * @method setCentre\n     * @param {body} body\n     * @param {vector} centre\n     * @param {bool} relative\n     */\n    Body.setCentre = function(body, centre, relative) {\n        if (!relative) {\n            body.positionPrev.x = centre.x - (body.position.x - body.positionPrev.x);\n            body.positionPrev.y = centre.y - (body.position.y - body.positionPrev.y);\n            body.position.x = centre.x;\n            body.position.y = centre.y;\n        } else {\n            body.positionPrev.x += centre.x;\n            body.positionPrev.y += centre.y;\n            body.position.x += centre.x;\n            body.position.y += centre.y;\n        }\n    };\n\n    /**\n     * Sets the position of the body. By default velocity is unchanged.\n     * If `updateVelocity` is `true` then velocity is inferred from the change in position.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     * @param {boolean} [updateVelocity=false]\n     */\n    Body.setPosition = function(body, position, updateVelocity) {\n        var delta = Vector.sub(position, body.position);\n\n        if (updateVelocity) {\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n            body.velocity.x = delta.x;\n            body.velocity.y = delta.y;\n            body.speed = Vector.magnitude(delta);\n        } else {\n            body.positionPrev.x += delta.x;\n            body.positionPrev.y += delta.y;\n        }\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body. By default angular velocity is unchanged.\n     * If `updateVelocity` is `true` then angular velocity is inferred from the change in angle.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     * @param {boolean} [updateVelocity=false]\n     */\n    Body.setAngle = function(body, angle, updateVelocity) {\n        var delta = angle - body.angle;\n        \n        if (updateVelocity) {\n            body.anglePrev = body.angle;\n            body.angularVelocity = delta;\n            body.angularSpeed = Math.abs(delta);\n        } else {\n            body.anglePrev += delta;\n        }\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the current linear velocity of the body.  \n     * Affects body speed.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        var timeScale = body.deltaTime / Body._baseDelta;\n        body.positionPrev.x = body.position.x - velocity.x * timeScale;\n        body.positionPrev.y = body.position.y - velocity.y * timeScale;\n        body.velocity.x = (body.position.x - body.positionPrev.x) / timeScale;\n        body.velocity.y = (body.position.y - body.positionPrev.y) / timeScale;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Gets the current linear velocity of the body.\n     * @method getVelocity\n     * @param {body} body\n     * @return {vector} velocity\n     */\n    Body.getVelocity = function(body) {\n        var timeScale = Body._baseDelta / body.deltaTime;\n\n        return {\n            x: (body.position.x - body.positionPrev.x) * timeScale,\n            y: (body.position.y - body.positionPrev.y) * timeScale\n        };\n    };\n\n    /**\n     * Gets the current linear speed of the body.  \n     * Equivalent to the magnitude of its velocity.\n     * @method getSpeed\n     * @param {body} body\n     * @return {number} speed\n     */\n    Body.getSpeed = function(body) {\n        return Vector.magnitude(Body.getVelocity(body));\n    };\n\n    /**\n     * Sets the current linear speed of the body.  \n     * Direction is maintained. Affects body velocity.\n     * @method setSpeed\n     * @param {body} body\n     * @param {number} speed\n     */\n    Body.setSpeed = function(body, speed) {\n        Body.setVelocity(body, Vector.mult(Vector.normalise(Body.getVelocity(body)), speed));\n    };\n\n    /**\n     * Sets the current rotational velocity of the body.  \n     * Affects body angular speed.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        var timeScale = body.deltaTime / Body._baseDelta;\n        body.anglePrev = body.angle - velocity * timeScale;\n        body.angularVelocity = (body.angle - body.anglePrev) / timeScale;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Gets the current rotational velocity of the body.\n     * @method getAngularVelocity\n     * @param {body} body\n     * @return {number} angular velocity\n     */\n    Body.getAngularVelocity = function(body) {\n        return (body.angle - body.anglePrev) * Body._baseDelta / body.deltaTime;\n    };\n\n    /**\n     * Gets the current rotational speed of the body.  \n     * Equivalent to the magnitude of its angular velocity.\n     * @method getAngularSpeed\n     * @param {body} body\n     * @return {number} angular speed\n     */\n    Body.getAngularSpeed = function(body) {\n        return Math.abs(Body.getAngularVelocity(body));\n    };\n\n    /**\n     * Sets the current rotational speed of the body.  \n     * Direction is maintained. Affects body angular velocity.\n     * @method setAngularSpeed\n     * @param {body} body\n     * @param {number} speed\n     */\n    Body.setAngularSpeed = function(body, speed) {\n        Body.setAngularVelocity(body, Common.sign(Body.getAngularVelocity(body)) * speed);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position. By default velocity is unchanged.\n     * If `updateVelocity` is `true` then velocity is inferred from the change in position.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     * @param {boolean} [updateVelocity=false]\n     */\n    Body.translate = function(body, translation, updateVelocity) {\n        Body.setPosition(body, Vector.add(body.position, translation), updateVelocity);\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle. By default angular velocity is unchanged.\n     * If `updateVelocity` is `true` then angular velocity is inferred from the change in angle.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     * @param {boolean} [updateVelocity=false]\n     */\n    Body.rotate = function(body, rotation, point, updateVelocity) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation, updateVelocity);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            }, updateVelocity);\n\n            Body.setAngle(body, body.angle + rotation, updateVelocity);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs an update by integrating the equations of motion on the `body`.\n     * This is applied every update by `Matter.Engine` automatically.\n     * @method update\n     * @param {body} body\n     * @param {number} [deltaTime=16.666]\n     */\n    Body.update = function(body, deltaTime) {\n        deltaTime = (typeof deltaTime !== 'undefined' ? deltaTime : (1000 / 60)) * body.timeScale;\n\n        var deltaTimeSquared = deltaTime * deltaTime,\n            correction = Body._timeCorrection ? deltaTime / (body.deltaTime || deltaTime) : 1;\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * (deltaTime / Common._baseDelta),\n            velocityPrevX = (body.position.x - body.positionPrev.x) * correction,\n            velocityPrevY = (body.position.y - body.positionPrev.y) * correction;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n        body.deltaTime = deltaTime;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Updates properties `body.velocity`, `body.speed`, `body.angularVelocity` and `body.angularSpeed` which are normalised in relation to `Body._baseDelta`.\n     * @method updateVelocities\n     * @param {body} body\n     */\n    Body.updateVelocities = function(body) {\n        var timeScale = Body._baseDelta / body.deltaTime,\n            bodyVelocity = body.velocity;\n\n        bodyVelocity.x = (body.position.x - body.positionPrev.x) * timeScale;\n        bodyVelocity.y = (body.position.y - body.positionPrev.y) * timeScale;\n        body.speed = Math.sqrt((bodyVelocity.x * bodyVelocity.x) + (bodyVelocity.y * bodyVelocity.y));\n\n        body.angularVelocity = (body.angle - body.anglePrev) * timeScale;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Applies the `force` to the `body` from the force origin `position` in world-space, over a single timestep, including applying any resulting angular torque.\n     * \n     * Forces are useful for effects like gravity, wind or rocket thrust, but can be difficult in practice when precise control is needed. In these cases see `Body.setVelocity` and `Body.setPosition` as an alternative.\n     * \n     * The force from this function is only applied once for the duration of a single timestep, in other words the duration depends directly on the current engine update `delta` and the rate of calls to this function.\n     * \n     * Therefore to account for time, you should apply the force constantly over as many engine updates as equivalent to the intended duration.\n     * \n     * If all or part of the force duration is some fraction of a timestep, first multiply the force by `duration / timestep`.\n     * \n     * The force origin `position` in world-space must also be specified. Passing `body.position` will result in zero angular effect as the force origin would be at the centre of mass.\n     * \n     * The `body` will take time to accelerate under a force, the resulting effect depends on duration of the force, the body mass and other forces on the body including friction combined.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position The force origin in world-space. Pass `body.position` to avoid angular torque.\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.force.x += force.x;\n        body.force.y += force.y;\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * _Read only_. Set by `Body.create`.\n     * \n     * A `String` denoting the type of object.\n     *\n     * @readOnly\n     * @property type\n     * @type string\n     * @default \"body\"\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * _Read only_. Use `Body.setParts` to set. \n     * \n     * See `Bodies.fromVertices` for a related utility.\n     * \n     * An array of bodies (the 'parts') that make up this body (the 'parent'). The first body in this array must always be a self-reference to this `body`.  \n     * \n     * The parts are fixed together and therefore perform as a single unified rigid body.\n     * \n     * Parts in relation to each other are allowed to overlap, as well as form gaps or holes, so can be used to create complex concave bodies unlike when using a single part. \n     * \n     * Use properties and functions on the parent `body` rather than on parts.\n     *   \n     * Outside of their geometry, most properties on parts are not considered or updated.  \n     * As such 'per-part' material properties among others are not currently considered.\n     * \n     * Parts should be created specifically for their parent body.  \n     * Parts should not be shared or reused between bodies, only one parent is supported.  \n     * Parts should not have their own parts, they are not handled recursively.  \n     * Parts should not be added to the world directly or any other composite.  \n     * Parts own vertices must be convex and in clockwise order.   \n     * \n     * A body with more than one part is sometimes referred to as a 'compound' body. \n     * \n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.  \n     *\n     * @readOnly\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * _Read only_. Updated by `Body.setParts`.\n     * \n     * A reference to the body that this is a part of. See `body.parts`.\n     * This is a self reference if the body is not a part of another body.\n     *\n     * @readOnly\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * _Read only_. Use `Body.setVertices` or `Body.setParts` to set. See also `Bodies.fromVertices`.\n     * \n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     * `[{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]`\n     * \n     * Vertices must always be convex, in clockwise order and must not contain any duplicate points.\n     * \n     * Concave vertices should be decomposed into convex `parts`, see `Bodies.fromVertices` and `Body.setParts`.\n     *\n     * When set the vertices are translated such that `body.position` is at the centre of mass.\n     * Many other body properties are automatically calculated from these vertices when set including `density`, `area` and `inertia`.\n     * \n     * The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @readOnly\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * _Read only_. Use `Body.setPosition` to set. \n     * \n     * A `Vector` that specifies the current world-space position of the body.\n     * \n     * @readOnly\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that accumulates the total force applied to the body for a single update.\n     * Force is zeroed after every `Engine.update`, so constant forces should be applied for every update they are needed. See also `Body.applyForce`.\n     * \n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that accumulates the total torque (turning force) applied to the body for a single update. See also `Body.applyForce`.\n     * Torque is zeroed after every `Engine.update`, so constant torques should be applied for every update they are needed.\n     *\n     * Torques result in angular acceleration on every update, which depends on body inertia and the engine update delta.\n     * \n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * _Read only_. Use `Body.setSpeed` to set. \n     * \n     * See `Body.getSpeed` for details.\n     * \n     * Equivalent to the magnitude of `body.velocity` (always positive).\n     * \n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * _Read only_. Use `Body.setVelocity` to set. \n     * \n     * See `Body.getVelocity` for details.\n     * \n     * Equivalent to the magnitude of `body.angularVelocity` (always positive).\n     * \n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * _Read only_. Use `Body.setAngularSpeed` to set. \n     * \n     * See `Body.getAngularSpeed` for details.\n     * \n     * \n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * _Read only_. Use `Body.setAngularVelocity` to set. \n     * \n     * See `Body.getAngularVelocity` for details.\n     * \n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * _Read only_. Use `Body.setStatic` to set. \n     * \n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     *\n     * @readOnly\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * _Read only_. Use `Sleeping.set` to set. \n     * \n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     *\n     * @readOnly\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * _Read only_. Calculated during engine update only when sleeping is enabled.\n     * \n     * A `Number` that loosely measures the amount of movement a body currently has.\n     *\n     * Derived from `body.speed^2 + body.angularSpeed^2`. See `Sleeping.update`.\n     * \n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the length of time during which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     * \n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * _Read only_. Use `Body.setDensity` to set. \n     * \n     * A `Number` that defines the density of the body (mass per unit area).\n     * \n     * Mass will also be updated when set.\n     *\n     * @readOnly\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * _Read only_. Use `Body.setMass` to set. \n     * \n     * A `Number` that defines the mass of the body.\n     * \n     * Density will also be updated when set.\n     * \n     * @readOnly\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * _Read only_. Use `Body.setMass` to set. \n     * \n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     *\n     * @readOnly\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * _Read only_. Automatically calculated when vertices, mass or density are set or set through `Body.setInertia`.\n     * \n     * A `Number` that defines the moment of inertia of the body. This is the second moment of area in two dimensions.\n     * \n     * Can be manually set to `Infinity` to prevent rotation of the body. See `Body.setInertia`.\n     * \n     * @readOnly\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * _Read only_. Automatically calculated when vertices, mass or density are set or calculated by `Body.setInertia`.\n     * \n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * \n     * @readOnly\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     * `Math.max(bodyA.restitution, bodyB.restitution)`\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     * `Math.min(bodyA.friction, bodyB.friction)`\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a thin boundary around the body where it is allowed to slightly sink into other bodies.\n     * \n     * This is required for proper collision response, including friction and restitution effects.\n     * \n     * The default should generally suffice in most cases. You may need to decrease this value for very small bodies that are nearing the default value in scale.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that specifies per-body time scaling.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * _Read only_. Updated during engine update.\n     * \n     * A `Number` that records the last delta time value used to update this body.\n     * Used to calculate speed and velocity.\n     *\n     * @readOnly\n     * @property deltaTime\n     * @type number\n     * @default 1000 / 60\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * _Read only_. Calculated automatically when vertices are set.\n     * \n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated when vertices are set.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @readOnly\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * _Read only_. Calculated automatically when vertices are set.\n     * \n     * A `Number` that measures the area of the body's convex hull.\n     * \n     * @readOnly\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated when vertices are set and constantly updated by `Body.update` during simulation.\n     * \n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * Temporarily may hold parameters to be passed to `Vertices.chamfer` where supported by external functions.\n     * \n     * See `Vertices.chamfer` for possible parameters this object may hold.\n     * \n     * Currently only functions inside `Matter.Bodies` provide a utility using this property as a vertices pre-processing option.\n     * \n     * Alternatively consider using `Vertices.chamfer` directly on vertices before passing them to a body creation function.\n     * \n     * @property chamfer\n     * @type object|null|undefined\n     */\n\n})();\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        var events = object.events;\n        \n        if (events && Common.keys(events).length > 0) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* A composite is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite` objects.\n*\n* They are a container that can represent complex objects made of multiple parts, even if they are not physically connected.\n* A composite could contain anything from a single body all the way up to a whole world.\n* \n* When making any changes to composites, use the included functions rather than changing their properties directly.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = __webpack_require__(5);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Body = __webpack_require__(4);\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {},\n            cache: {\n                allBodies: null,\n                allConstraints: null,\n                allComposites: null\n            }\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @private\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (isModified && composite.cache) {\n            composite.cache.allBodies = null;\n            composite.cache.allConstraints = null;\n            composite.cache.allComposites = null;\n        }\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for (var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic single or multi-add function. Adds a single or an array of body(s), constraint(s) or composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {object|array} object A single or an array of body(s), constraint(s) or composite(s)\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {object|array} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n\n        if (position !== -1) {\n            var bodies = Composite.allBodies(compositeB);\n\n            Composite.removeCompositeAt(compositeA, position);\n\n            for (var i = 0; i < bodies.length; i++) {\n                bodies[i].sleepCounter = 0;\n            }\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            body.sleepCounter = 0;\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        \n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        if (composite.cache && composite.cache.allBodies) {\n            return composite.cache.allBodies;\n        }\n\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        if (composite.cache) {\n            composite.cache.allBodies = bodies;\n        }\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        if (composite.cache && composite.cache.allConstraints) {\n            return composite.cache.allConstraints;\n        }\n\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        if (composite.cache) {\n            composite.cache.allConstraints = constraints;\n        }\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        if (composite.cache && composite.cache.allComposites) {\n            return composite.cache.allComposites;\n        }\n\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        if (composite.cache) {\n            composite.cache.allComposites = composites;\n        }\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n            .concat(Composite.allConstraints(composite))\n            .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * This is automatically managed when bodies, constraints or composites are added or removed.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * An object used for storing cached results for performance reasons.\n     * This is used internally only and is automatically managed.\n     *\n     * @private\n     * @property cache\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Body = __webpack_require__(4);\nvar Events = __webpack_require__(5);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} delta\n     */\n    Sleeping.update = function(bodies, delta) {\n        var timeScale = delta / Common._baseDelta,\n            motionSleepThreshold = Sleeping._motionSleepThreshold;\n        \n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                speed = Body.getSpeed(body),\n                angularSpeed = Body.getAngularSpeed(body),\n                motion = speed * speed + angularSpeed * angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n\n            if (body.sleepThreshold > 0 && body.motion < motionSleepThreshold) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold / timeScale) {\n                    Sleeping.set(body, true);\n                }\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     */\n    Sleeping.afterCollisions = function(pairs) {\n        var motionSleepThreshold = Sleeping._motionSleepThreshold;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > motionSleepThreshold) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Collision` module contains methods for detecting collisions between a given pair of bodies.\n*\n* For efficient detection between a list of bodies, see `Matter.Detector` and `Matter.Query`.\n*\n* See `Matter.Engine` for collision events.\n*\n* @class Collision\n*/\n\nvar Collision = {};\n\nmodule.exports = Collision;\n\nvar Vertices = __webpack_require__(3);\nvar Pair = __webpack_require__(9);\n\n(function() {\n    var _supports = [];\n\n    var _overlapAB = {\n        overlap: 0,\n        axis: null\n    };\n\n    var _overlapBA = {\n        overlap: 0,\n        axis: null\n    };\n\n    /**\n     * Creates a new collision record.\n     * @method create\n     * @param {body} bodyA The first body part represented by the collision record\n     * @param {body} bodyB The second body part represented by the collision record\n     * @return {collision} A new collision record\n     */\n    Collision.create = function(bodyA, bodyB) {\n        return { \n            pair: null,\n            collided: false,\n            bodyA: bodyA,\n            bodyB: bodyB,\n            parentA: bodyA.parent,\n            parentB: bodyB.parent,\n            depth: 0,\n            normal: { x: 0, y: 0 },\n            tangent: { x: 0, y: 0 },\n            penetration: { x: 0, y: 0 },\n            supports: [null, null],\n            supportCount: 0\n        };\n    };\n\n    /**\n     * Detect collision between two bodies.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {pairs} [pairs] Optionally reuse collision records from existing pairs.\n     * @return {collision|null} A collision record if detected, otherwise null\n     */\n    Collision.collides = function(bodyA, bodyB, pairs) {\n        Collision._overlapAxes(_overlapAB, bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n        if (_overlapAB.overlap <= 0) {\n            return null;\n        }\n\n        Collision._overlapAxes(_overlapBA, bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n        if (_overlapBA.overlap <= 0) {\n            return null;\n        }\n\n        // reuse collision records for gc efficiency\n        var pair = pairs && pairs.table[Pair.id(bodyA, bodyB)],\n            collision;\n\n        if (!pair) {\n            collision = Collision.create(bodyA, bodyB);\n            collision.collided = true;\n            collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n            collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n            collision.parentA = collision.bodyA.parent;\n            collision.parentB = collision.bodyB.parent;\n        } else {\n            collision = pair.collision;\n        }\n\n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        var minOverlap;\n\n        if (_overlapAB.overlap < _overlapBA.overlap) {\n            minOverlap = _overlapAB;\n        } else {\n            minOverlap = _overlapBA;\n        }\n\n        var normal = collision.normal,\n            tangent = collision.tangent,\n            penetration = collision.penetration,\n            supports = collision.supports,\n            depth = minOverlap.overlap,\n            minAxis = minOverlap.axis,\n            normalX = minAxis.x,\n            normalY = minAxis.y,\n            deltaX = bodyB.position.x - bodyA.position.x,\n            deltaY = bodyB.position.y - bodyA.position.y;\n\n        // ensure normal is facing away from bodyA\n        if (normalX * deltaX + normalY * deltaY >= 0) {\n            normalX = -normalX;\n            normalY = -normalY;\n        }\n\n        normal.x = normalX;\n        normal.y = normalY;\n        \n        tangent.x = -normalY;\n        tangent.y = normalX;\n\n        penetration.x = normalX * depth;\n        penetration.y = normalY * depth;\n\n        collision.depth = depth;\n\n        // find support points, there is always either exactly one or two\n        var supportsB = Collision._findSupports(bodyA, bodyB, normal, 1),\n            supportCount = 0;\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, supportsB[0])) {\n            supports[supportCount++] = supportsB[0];\n        }\n\n        if (Vertices.contains(bodyA.vertices, supportsB[1])) {\n            supports[supportCount++] = supportsB[1];\n        }\n\n        // find the supports from bodyA that are inside bodyB\n        if (supportCount < 2) {\n            var supportsA = Collision._findSupports(bodyB, bodyA, normal, -1);\n\n            if (Vertices.contains(bodyB.vertices, supportsA[0])) {\n                supports[supportCount++] = supportsA[0];\n            }\n\n            if (supportCount < 2 && Vertices.contains(bodyB.vertices, supportsA[1])) {\n                supports[supportCount++] = supportsA[1];\n            }\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supportCount === 0) {\n            supports[supportCount++] = supportsB[0];\n        }\n\n        // update support count\n        collision.supportCount = supportCount;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {object} result\n     * @param {vertices} verticesA\n     * @param {vertices} verticesB\n     * @param {axes} axes\n     */\n    Collision._overlapAxes = function(result, verticesA, verticesB, axes) {\n        var verticesALength = verticesA.length,\n            verticesBLength = verticesB.length,\n            verticesAX = verticesA[0].x,\n            verticesAY = verticesA[0].y,\n            verticesBX = verticesB[0].x,\n            verticesBY = verticesB[0].y,\n            axesLength = axes.length,\n            overlapMin = Number.MAX_VALUE,\n            overlapAxisNumber = 0,\n            overlap,\n            overlapAB,\n            overlapBA,\n            dot,\n            i,\n            j;\n\n        for (i = 0; i < axesLength; i++) {\n            var axis = axes[i],\n                axisX = axis.x,\n                axisY = axis.y,\n                minA = verticesAX * axisX + verticesAY * axisY,\n                minB = verticesBX * axisX + verticesBY * axisY,\n                maxA = minA,\n                maxB = minB;\n            \n            for (j = 1; j < verticesALength; j += 1) {\n                dot = verticesA[j].x * axisX + verticesA[j].y * axisY;\n\n                if (dot > maxA) { \n                    maxA = dot;\n                } else if (dot < minA) { \n                    minA = dot;\n                }\n            }\n\n            for (j = 1; j < verticesBLength; j += 1) {\n                dot = verticesB[j].x * axisX + verticesB[j].y * axisY;\n\n                if (dot > maxB) { \n                    maxB = dot;\n                } else if (dot < minB) { \n                    minB = dot;\n                }\n            }\n\n            overlapAB = maxA - minB;\n            overlapBA = maxB - minA;\n            overlap = overlapAB < overlapBA ? overlapAB : overlapBA;\n\n            if (overlap < overlapMin) {\n                overlapMin = overlap;\n                overlapAxisNumber = i;\n\n                if (overlap <= 0) {\n                    // can not be intersecting\n                    break;\n                }\n            } \n        }\n\n        result.axis = axes[overlapAxisNumber];\n        result.overlap = overlapMin;\n    };\n\n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {vector} normal\n     * @param {number} direction\n     * @return [vector]\n     */\n    Collision._findSupports = function(bodyA, bodyB, normal, direction) {\n        var vertices = bodyB.vertices,\n            verticesLength = vertices.length,\n            bodyAPositionX = bodyA.position.x,\n            bodyAPositionY = bodyA.position.y,\n            normalX = normal.x * direction,\n            normalY = normal.y * direction,\n            vertexA = vertices[0],\n            vertexB = vertexA,\n            nearestDistance = normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y),\n            vertexC,\n            distance,\n            j;\n\n        // find deepest vertex relative to the axis\n        for (j = 1; j < verticesLength; j += 1) {\n            vertexB = vertices[j];\n            distance = normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y);\n\n            // convex hill-climbing\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertexB;\n            }\n        }\n\n        // measure next vertex\n        vertexC = vertices[(verticesLength + vertexA.index - 1) % verticesLength];\n        nearestDistance = normalX * (bodyAPositionX - vertexC.x) + normalY * (bodyAPositionY - vertexC.y);\n\n        // compare with previous vertex\n        vertexB = vertices[(vertexA.index + 1) % verticesLength];\n        if (normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y) < nearestDistance) {\n            _supports[0] = vertexA;\n            _supports[1] = vertexB;\n\n            return _supports;\n        }\n\n        _supports[0] = vertexA;\n        _supports[1] = vertexC;\n\n        return _supports;\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A reference to the pair using this collision record, if there is one.\n     *\n     * @property pair\n     * @type {pair|null}\n     * @default null\n     */\n\n    /**\n     * A flag that indicates if the bodies were colliding when the collision was last updated.\n     * \n     * @property collided\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The first body part represented by the collision (see also `collision.parentA`).\n     * \n     * @property bodyA\n     * @type body\n     */\n\n    /**\n     * The second body part represented by the collision (see also `collision.parentB`).\n     * \n     * @property bodyB\n     * @type body\n     */\n\n    /**\n     * The first body represented by the collision (i.e. `collision.bodyA.parent`).\n     * \n     * @property parentA\n     * @type body\n     */\n\n    /**\n     * The second body represented by the collision (i.e. `collision.bodyB.parent`).\n     * \n     * @property parentB\n     * @type body\n     */\n\n    /**\n     * A `Number` that represents the minimum separating distance between the bodies along the collision normal.\n     *\n     * @readOnly\n     * @property depth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A normalised `Vector` that represents the direction between the bodies that provides the minimum separating distance.\n     *\n     * @property normal\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A normalised `Vector` that is the tangent direction to the collision normal.\n     *\n     * @property tangent\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that represents the direction and depth of the collision.\n     *\n     * @property penetration\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * An array of body vertices that represent the support points in the collision.\n     * \n     * _Note:_ Only the first `collision.supportCount` items of `collision.supports` are active.\n     * Therefore use `collision.supportCount` instead of `collision.supports.length` when iterating the active supports.\n     * \n     * These are the deepest vertices (along the collision normal) of each body that are contained by the other body's vertices.\n     *\n     * @property supports\n     * @type vector[]\n     * @default []\n     */\n\n    /**\n     * The number of active supports for this collision found in `collision.supports`.\n     * \n     * _Note:_ Only the first `collision.supportCount` items of `collision.supports` are active.\n     * Therefore use `collision.supportCount` instead of `collision.supports.length` when iterating the active supports.\n     *\n     * @property supportCount\n     * @type number\n     * @default 0\n     */\n\n})();\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = __webpack_require__(16);\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            collision: collision,\n            contacts: [Contact.create(), Contact.create()],\n            contactCount: 0,\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: 0,\n            friction: 0,\n            frictionStatic: 0,\n            restitution: 0,\n            slop: 0\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var supports = collision.supports,\n            supportCount = collision.supportCount,\n            contacts = pair.contacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.isActive = true;\n        pair.timeUpdated = timestamp;\n        pair.collision = collision;\n        pair.separation = collision.depth;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = parentA.friction < parentB.friction ? parentA.friction : parentB.friction;\n        pair.frictionStatic = parentA.frictionStatic > parentB.frictionStatic ? parentA.frictionStatic : parentB.frictionStatic;\n        pair.restitution = parentA.restitution > parentB.restitution ? parentA.restitution : parentB.restitution;\n        pair.slop = parentA.slop > parentB.slop ? parentA.slop : parentB.slop;\n\n        pair.contactCount = supportCount;\n        collision.pair = pair;\n\n        var supportA = supports[0],\n            contactA = contacts[0],\n            supportB = supports[1],\n            contactB = contacts[1];\n\n        // match contacts to supports\n        if (contactB.vertex === supportA || contactA.vertex === supportB) {\n            contacts[1] = contactA;\n            contacts[0] = contactA = contactB;\n            contactB = contacts[1];\n        }\n\n        // update contacts\n        contactA.vertex = supportA;\n        contactB.vertex = supportB;\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.contactCount = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        return bodyA.id < bodyB.id ? bodyA.id.toString(36) + ':' + bodyB.id.toString(36) \n            : bodyB.id.toString(36) + ':' + bodyA.id.toString(36);\n    };\n\n})();\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(11);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} delta\n     */\n    Constraint.solveAll = function(constraints, delta) {\n        var timeScale = Common.clamp(delta / Common._baseDelta, 0, 1);\n\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            isRigid = constraint.stiffness >= 1 || constraint.length === 0,\n            stiffness = isRigid ? constraint.stiffness * timeScale \n                : constraint.stiffness * timeScale * timeScale,\n            damping = constraint.damping * timeScale,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n    \n        if (damping > 0) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (damping > 0) {\n                bodyA.positionPrev.x -= damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (damping > 0) {\n                bodyB.positionPrev.x += damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointA`, accounting for `constraint.bodyA`.\n     * @method pointAWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointAWorld = function(constraint) {\n        return {\n            x: (constraint.bodyA ? constraint.bodyA.position.x : 0) \n                + (constraint.pointA ? constraint.pointA.x : 0),\n            y: (constraint.bodyA ? constraint.bodyA.position.y : 0) \n                + (constraint.pointA ? constraint.pointA.y : 0)\n        };\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointB`, accounting for `constraint.bodyB`.\n     * @method pointBWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointBWorld = function(constraint) {\n        return {\n            x: (constraint.bodyB ? constraint.bodyB.position.x : 0) \n                + (constraint.pointB ? constraint.pointB.x : 0),\n            y: (constraint.bodyB ? constraint.bodyB.position.y : 0) \n                + (constraint.pointB ? constraint.pointB.y : 0)\n        };\n    };\n\n    /**\n     * Returns the current length of the constraint. \n     * This is the distance between both of the constraint's end points.\n     * See `constraint.length` for the target rest length.\n     * @method currentLength\n     * @param {constraint} constraint\n     * @returns {number} the current length\n     */\n    Constraint.currentLength = function(constraint) {\n        var pointAX = (constraint.bodyA ? constraint.bodyA.position.x : 0) \n            + (constraint.pointA ? constraint.pointA.x : 0);\n\n        var pointAY = (constraint.bodyA ? constraint.bodyA.position.y : 0) \n            + (constraint.pointA ? constraint.pointA.y : 0);\n\n        var pointBX = (constraint.bodyB ? constraint.bodyB.position.x : 0) \n            + (constraint.pointB ? constraint.pointB.x : 0);\n            \n        var pointBY = (constraint.bodyB ? constraint.bodyB.position.y : 0) \n            + (constraint.pointB ? constraint.pointB.y : 0);\n\n        var deltaX = pointAX - pointBX;\n        var deltaY = pointAY - pointBY;\n\n        return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = __webpack_require__(3);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(4);\nvar Bounds = __webpack_require__(1);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The `slope` is parameterised as a fraction of `width` and must be < 1 to form a valid trapezoid. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope Must be a number < 1.\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        if (slope >= 1) {\n            Common.warn('Bodies.trapezoid: slope parameter must be < 1.');\n        }\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Utility to create a compound body based on set(s) of vertices.\n     * \n     * _Note:_ To optionally enable automatic concave vertices decomposition the [poly-decomp](https://github.com/schteppe/poly-decomp.js) \n     * package must be first installed and provided see `Common.setDecomp`, otherwise the convex hull of each vertex set will be used.\n     * \n     * The resulting vertices are reorientated about their centre of mass,\n     * and offset such that `body.position` corresponds to this point.\n     * \n     * The resulting offset may be found if needed by subtracting `body.bounds` from the original input bounds.\n     * To later move the centre of mass see `Body.setCentre`.\n     * \n     * Note that automatic conconcave decomposition results are not always optimal. \n     * For best results, simplify the input vertices as much as possible first.\n     * By default this function applies some addtional simplification to help.\n     * \n     * Some outputs may also require further manual processing afterwards to be robust.\n     * In particular some parts may need to be overlapped to avoid collision gaps.\n     * Thin parts and sharp points should be avoided or removed where possible.\n     *\n     * The options parameter object specifies any `Matter.Body` properties you wish to override the defaults.\n     * \n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param {array} vertexSets One or more arrays of vertex points e.g. `[[{ x: 0, y: 0 }...], ...]`.\n     * @param {object} [options] The body options.\n     * @param {bool} [flagInternal=false] Optionally marks internal edges with `isInternal`.\n     * @param {number} [removeCollinear=0.01] Threshold when simplifying vertices along the same edge.\n     * @param {number} [minimumArea=10] Threshold when removing small parts.\n     * @param {number} [removeDuplicatePoints=0.01] Threshold when simplifying nearby vertices.\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea, removeDuplicatePoints) {\n        var decomp = Common.getDecomp(),\n            canDecomp,\n            body,\n            parts,\n            isConvex,\n            isConcave,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        // check decomp is as expected\n        canDecomp = Boolean(decomp && decomp.quickDecomp);\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n        removeDuplicatePoints = typeof removeDuplicatePoints !== 'undefined' ? removeDuplicatePoints : 0.01;\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n            isConcave = !isConvex;\n\n            if (isConcave && !canDecomp) {\n                Common.warnOnce(\n                    'Bodies.fromVertices: Install the \\'poly-decomp\\' library and use Common.setDecomp or provide \\'decomp\\' as a global to decompose concave vertices.'\n                );\n            }\n\n            if (isConvex || !canDecomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n                if (removeDuplicatePoints !== false && decomp.removeDuplicatePoints)\n                    decomp.removeDuplicatePoints(concave, removeDuplicatePoints);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n\n            // offset such that body.position is at the centre off mass\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Detector` module contains methods for efficiently detecting collisions between a list of bodies using a broadphase algorithm.\n*\n* @class Detector\n*/\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar Common = __webpack_require__(0);\nvar Collision = __webpack_require__(8);\n\n(function() {\n\n    /**\n     * Creates a new collision detector.\n     * @method create\n     * @param {} options\n     * @return {detector} A new collision detector\n     */\n    Detector.create = function(options) {\n        var defaults = {\n            bodies: [],\n            collisions: [],\n            pairs: null\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * Sets the list of bodies in the detector.\n     * @method setBodies\n     * @param {detector} detector\n     * @param {body[]} bodies\n     */\n    Detector.setBodies = function(detector, bodies) {\n        detector.bodies = bodies.slice(0);\n    };\n\n    /**\n     * Clears the detector including its list of bodies.\n     * @method clear\n     * @param {detector} detector\n     */\n    Detector.clear = function(detector) {\n        detector.bodies = [];\n        detector.collisions = [];\n    };\n\n    /**\n     * Efficiently finds all collisions among all the bodies in `detector.bodies` using a broadphase algorithm.\n     * \n     * _Note:_ The specific ordering of collisions returned is not guaranteed between releases and may change for performance reasons.\n     * If a specific ordering is required then apply a sort to the resulting array.\n     * @method collisions\n     * @param {detector} detector\n     * @return {collision[]} collisions\n     */\n    Detector.collisions = function(detector) {\n        var pairs = detector.pairs,\n            bodies = detector.bodies,\n            bodiesLength = bodies.length,\n            canCollide = Detector.canCollide,\n            collides = Collision.collides,\n            collisions = detector.collisions,\n            collisionIndex = 0,\n            i,\n            j;\n\n        bodies.sort(Detector._compareBoundsX);\n\n        for (i = 0; i < bodiesLength; i++) {\n            var bodyA = bodies[i],\n                boundsA = bodyA.bounds,\n                boundXMax = bodyA.bounds.max.x,\n                boundYMax = bodyA.bounds.max.y,\n                boundYMin = bodyA.bounds.min.y,\n                bodyAStatic = bodyA.isStatic || bodyA.isSleeping,\n                partsALength = bodyA.parts.length,\n                partsASingle = partsALength === 1;\n\n            for (j = i + 1; j < bodiesLength; j++) {\n                var bodyB = bodies[j],\n                    boundsB = bodyB.bounds;\n\n                if (boundsB.min.x > boundXMax) {\n                    break;\n                }\n\n                if (boundYMax < boundsB.min.y || boundYMin > boundsB.max.y) {\n                    continue;\n                }\n\n                if (bodyAStatic && (bodyB.isStatic || bodyB.isSleeping)) {\n                    continue;\n                }\n\n                if (!canCollide(bodyA.collisionFilter, bodyB.collisionFilter)) {\n                    continue;\n                }\n\n                var partsBLength = bodyB.parts.length;\n\n                if (partsASingle && partsBLength === 1) {\n                    var collision = collides(bodyA, bodyB, pairs);\n\n                    if (collision) {\n                        collisions[collisionIndex++] = collision;\n                    }\n                } else {\n                    var partsAStart = partsALength > 1 ? 1 : 0,\n                        partsBStart = partsBLength > 1 ? 1 : 0;\n                    \n                    for (var k = partsAStart; k < partsALength; k++) {\n                        var partA = bodyA.parts[k],\n                            boundsA = partA.bounds;\n\n                        for (var z = partsBStart; z < partsBLength; z++) {\n                            var partB = bodyB.parts[z],\n                                boundsB = partB.bounds;\n\n                            if (boundsA.min.x > boundsB.max.x || boundsA.max.x < boundsB.min.x\n                                || boundsA.max.y < boundsB.min.y || boundsA.min.y > boundsB.max.y) {\n                                continue;\n                            }\n\n                            var collision = collides(partA, partB, pairs);\n\n                            if (collision) {\n                                collisions[collisionIndex++] = collision;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (collisions.length !== collisionIndex) {\n            collisions.length = collisionIndex;\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n    /**\n     * The comparison function used in the broadphase algorithm.\n     * Returns the signed delta of the bodies bounds on the x-axis.\n     * @private\n     * @method _sortCompare\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {number} The signed delta used for sorting\n     */\n    Detector._compareBoundsX = function(bodyA, bodyB) {\n        return bodyA.bounds.min.x - bodyB.bounds.min.x;\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The array of `Matter.Body` between which the detector finds collisions.\n     * \n     * _Note:_ The order of bodies in this array _is not fixed_ and will be continually managed by the detector.\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * The array of `Matter.Collision` found in the last call to `Detector.collisions` on this detector.\n     * @property collisions\n     * @type collision[]\n     * @default []\n     */\n\n    /**\n     * Optional. A `Matter.Pairs` object from which previous collision objects may be reused. Intended for internal `Matter.Engine` usage.\n     * @property pairs\n     * @type {pairs|null}\n     * @default null\n     */\n\n})();\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = parseInt(mouse.element.getAttribute('data-pixel-ratio'), 10) || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n            mouse.sourceEvents.mousewheel = event;\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove, { passive: true });\n        element.addEventListener('mousedown', mouse.mousedown, { passive: true });\n        element.addEventListener('mouseup', mouse.mouseup, { passive: true });\n        \n        element.addEventListener('wheel', mouse.mousewheel, { passive: false });\n        \n        element.addEventListener('touchmove', mouse.mousemove, { passive: false });\n        element.addEventListener('touchstart', mouse.mousedown, { passive: false });\n        element.addEventListener('touchend', mouse.mouseup, { passive: false });\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-+]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Greater than ranges e.g. `>1.2.3`\n     * - Greater than or equal ranges e.g. `>=1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^(\\*)|(\\^|~|>=|>)?\\s*((\\d+)\\.(\\d+)\\.(\\d+))(-[0-9A-Za-z-+]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var parts = pattern.exec(range);\n        var major = Number(parts[4]);\n        var minor = Number(parts[5]);\n        var patch = Number(parts[6]);\n\n        return {\n            isRange: Boolean(parts[1] || parts[2]),\n            version: parts[3],\n            range: range,\n            operator: parts[1] || parts[2] || '',\n            major: major,\n            minor: minor,\n            patch: patch,\n            parts: [major, minor, patch],\n            prerelease: parts[7],\n            number: major * 1e8 + minor * 1e4 + patch\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var r = Plugin.versionParse(range),\n            v = Plugin.versionParse(version);\n\n        if (r.isRange) {\n            if (r.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (r.operator === '>') {\n                return v.number > r.number;\n            }\n\n            if (r.operator === '>=') {\n                return v.number >= r.number;\n            }\n\n            if (r.operator === '~') {\n                return v.major === r.major && v.minor === r.minor && v.patch >= r.patch;\n            }\n\n            if (r.operator === '^') {\n                if (r.major > 0) {\n                    return v.major === r.major && v.number >= r.number;\n                }\n\n                if (r.minor > 0) {\n                    return v.minor === r.minor && v.patch >= r.patch;\n                }\n\n                return v.patch === r.patch;\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} [vertex]\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n\n})();\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar Sleeping = __webpack_require__(7);\nvar Resolver = __webpack_require__(18);\nvar Detector = __webpack_require__(13);\nvar Pairs = __webpack_require__(19);\nvar Events = __webpack_require__(5);\nvar Composite = __webpack_require__(6);\nvar Constraint = __webpack_require__(10);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(4);\n\n(function() {\n\n    Engine._deltaMax = 1000 / 60;\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(options) {\n        options = options || {};\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            timing: {\n                timestamp: 0,\n                timeScale: 1,\n                lastDelta: 0,\n                lastElapsed: 0,\n                lastUpdatesPerFrame: 0\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        engine.world = options.world || Composite.create({ label: 'World' });\n        engine.pairs = options.pairs || Pairs.create();\n        engine.detector = options.detector || Detector.create();\n        engine.detector.pairs = engine.pairs;\n\n        // for temporary back compatibility only\n        engine.grid = { buckets: [] };\n        engine.world.gravity = engine.gravity;\n        engine.broadphase = engine.grid;\n        engine.metrics = {};\n        \n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` milliseconds.\n     * Triggers `beforeUpdate`, `beforeSolve` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     */\n    Engine.update = function(engine, delta) {\n        var startTime = Common.now();\n\n        var world = engine.world,\n            detector = engine.detector,\n            pairs = engine.pairs,\n            timing = engine.timing,\n            timestamp = timing.timestamp,\n            i;\n\n        // warn if high delta\n        if (delta > Engine._deltaMax) {\n            Common.warnOnce(\n                'Matter.Engine.update: delta argument is recommended to be less than or equal to', Engine._deltaMax.toFixed(3), 'ms.'\n            );\n        }\n\n        delta = typeof delta !== 'undefined' ? delta : Common._baseDelta;\n        delta *= timing.timeScale;\n\n        // increment timestamp\n        timing.timestamp += delta;\n        timing.lastDelta = delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp,\n            delta: delta\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get all bodies and all constraints in the world\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n        // if the world has changed\n        if (world.isModified) {\n            // update the detector bodies\n            Detector.setBodies(detector, allBodies);\n\n            // reset all composite modified flags\n            Composite.setModified(world, false, false, true);\n        }\n\n        // update sleeping if enabled\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, delta);\n\n        // apply gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, engine.gravity);\n\n        // update all body position and rotation by integration\n        if (delta > 0) {\n            Engine._bodiesUpdate(allBodies, delta);\n        }\n\n        Events.trigger(engine, 'beforeSolve', event);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, delta);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // find all collisions\n        var collisions = Detector.collisions(detector);\n\n        // update collision pairs\n        Pairs.update(pairs, collisions, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0) {\n            Events.trigger(engine, 'collisionStart', { \n                pairs: pairs.collisionStart,\n                timestamp: timing.timestamp,\n                delta: delta\n            });\n        }\n\n        // iteratively resolve position between collisions\n        var positionDamping = Common.clamp(20 / engine.positionIterations, 0, 1);\n        \n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, delta, positionDamping);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, delta);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, delta);\n        }\n\n        // update body speed and velocity properties\n        Engine._bodiesUpdateVelocities(allBodies);\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0) {\n            Events.trigger(engine, 'collisionActive', { \n                pairs: pairs.collisionActive, \n                timestamp: timing.timestamp,\n                delta: delta\n            });\n        }\n\n        if (pairs.collisionEnd.length > 0) {\n            Events.trigger(engine, 'collisionEnd', {\n                pairs: pairs.collisionEnd,\n                timestamp: timing.timestamp,\n                delta: delta\n            });\n        }\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        // log the time elapsed computing this update\n        engine.timing.lastElapsed = Common.now() - startTime;\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine pairs and detector.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        Pairs.clear(engine.pairs);\n        Detector.clear(engine.detector);\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        var bodiesLength = bodies.length;\n\n        for (var i = 0; i < bodiesLength; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applies gravitational acceleration to all `bodies`.\n     * This models a [uniform gravitational field](https://en.wikipedia.org/wiki/Gravity_of_Earth), similar to near the surface of a planet.\n     * \n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001,\n            bodiesLength = bodies.length;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodiesLength; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // add the resultant force of gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applies `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} delta The amount of time elapsed between updates\n     */\n    Engine._bodiesUpdate = function(bodies, delta) {\n        var bodiesLength = bodies.length;\n\n        for (var i = 0; i < bodiesLength; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, delta);\n        }\n    };\n\n    /**\n     * Applies `Body.updateVelocities` to all given `bodies`.\n     * @method _bodiesUpdateVelocities\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesUpdateVelocities = function(bodies) {\n        var bodiesLength = bodies.length;\n\n        for (var i = 0; i < bodiesLength; i++) {\n            Body.updateVelocities(bodies[i]);\n        }\n    };\n\n    /**\n     * A deprecated alias for `Runner.run`, use `Matter.Runner.run(engine)` instead and see `Matter.Runner` for more information.\n     * @deprecated use Matter.Runner.run(engine) instead\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {object} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {number} event.delta The delta time in milliseconds value used in the update\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /**\n    * Fired after bodies updated based on their velocity and forces, but before any collision detection, constraints and resolving etc.\n    *\n    * @event beforeSolve\n    * @param {object} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {number} event.delta The delta time in milliseconds value used in the update\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {object} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {number} event.delta The delta time in milliseconds value used in the update\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {number} event.delta The delta time in milliseconds value used in the update\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {number} event.delta The delta time in milliseconds value used in the update\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {number} event.delta The delta time in milliseconds value used in the update\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     * \n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that represents the total execution time elapsed during the last `Engine.update` in milliseconds.\n     * It is updated by timing from the start of the last `Engine.update` call until it ends.\n     *\n     * This value will also include the total execution time of all event handlers directly or indirectly triggered by the engine update.\n     * \n     * @property timing.lastElapsed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that represents the `delta` value used in the last engine update.\n     * \n     * @property timing.lastDelta\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Matter.Detector` instance.\n     *\n     * @property detector\n     * @type detector\n     * @default a Matter.Detector instance\n     */\n\n    /**\n     * A `Matter.Grid` instance.\n     *\n     * @deprecated replaced by `engine.detector`\n     * @property grid\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * Replaced by and now alias for `engine.grid`.\n     *\n     * @deprecated replaced by `engine.detector`\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * The root `Matter.Composite` instance that will contain all bodies, constraints and other composites to be simulated by this engine.\n     *\n     * @property world\n     * @type composite\n     * @default a Matter.Composite instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * An optional gravitational acceleration applied to all bodies in `engine.world` on every update.\n     * \n     * This models a [uniform gravitational field](https://en.wikipedia.org/wiki/Gravity_of_Earth), similar to near the surface of a planet. For gravity in other contexts, disable this and apply forces as needed.\n     * \n     * To disable set the `scale` component to `0`.\n     * \n     * This is split into three components for ease of use:  \n     * a normalised direction (`x` and `y`) and magnitude (`scale`).\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravitational direction normal `x` component, to be multiplied by `gravity.scale`.\n     * \n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravitational direction normal `y` component, to be multiplied by `gravity.scale`.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The magnitude of the gravitational acceleration.\n     * \n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n})();\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = __webpack_require__(3);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    Resolver._restingThresh = 2;\n    Resolver._restingThreshTangent = Math.sqrt(6);\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n    Resolver._frictionMaxStatic = Number.MAX_VALUE;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            contactCount,\n            pairsLength = pairs.length;\n\n        // find total contacts on each body\n        for (i = 0; i < pairsLength; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            contactCount = pair.contactCount;\n            pair.collision.parentA.totalContacts += contactCount;\n            pair.collision.parentB.totalContacts += contactCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} delta\n     * @param {number} [damping=1]\n     */\n    Resolver.solvePosition = function(pairs, delta, damping) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            contactShare,\n            positionImpulse,\n            positionDampen = Resolver._positionDampen * (damping || 1),\n            slopDampen = Common.clamp(delta / Common._baseDelta, 0, 1),\n            pairsLength = pairs.length;\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairsLength; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            pair.separation = \n                collision.depth + normal.x * (bodyB.positionImpulse.x - bodyA.positionImpulse.x)\n                + normal.y * (bodyB.positionImpulse.y - bodyA.positionImpulse.y);\n        }\n        \n        for (i = 0; i < pairsLength; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = pair.separation - pair.slop * slopDampen;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        var positionWarming = Resolver._positionWarming,\n            bodiesLength = bodies.length,\n            verticesTranslate = Vertices.translate,\n            boundsUpdate = Bounds.update;\n\n        for (var i = 0; i < bodiesLength; i++) {\n            var body = bodies[i],\n                positionImpulse = body.positionImpulse,\n                positionImpulseX = positionImpulse.x,\n                positionImpulseY = positionImpulse.y,\n                velocity = body.velocity;\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (positionImpulseX !== 0 || positionImpulseY !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    verticesTranslate(part.vertices, positionImpulse);\n                    boundsUpdate(part.bounds, part.vertices, velocity);\n                    part.position.x += positionImpulseX;\n                    part.position.y += positionImpulseY;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += positionImpulseX;\n                body.positionPrev.y += positionImpulseY;\n\n                if (positionImpulseX * velocity.x + positionImpulseY * velocity.y < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    positionImpulse.x = 0;\n                    positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    positionImpulse.x *= positionWarming;\n                    positionImpulse.y *= positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var pairsLength = pairs.length,\n            i,\n            j;\n        \n        for (i = 0; i < pairsLength; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var contacts = pair.contacts,\n                contactCount = pair.contactCount,\n                collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent;\n    \n            // resolve each contact\n            for (j = 0; j < contactCount; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    normalImpulse = contact.normalImpulse,\n                    tangentImpulse = contact.tangentImpulse;\n    \n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    var impulseX = normal.x * normalImpulse + tangent.x * tangentImpulse,\n                        impulseY = normal.y * normalImpulse + tangent.y * tangentImpulse;\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        bodyA.positionPrev.x += impulseX * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulseY * bodyA.inverseMass;\n                        bodyA.anglePrev += bodyA.inverseInertia * (\n                            (contactVertex.x - bodyA.position.x) * impulseY\n                            - (contactVertex.y - bodyA.position.y) * impulseX\n                        );\n                    }\n    \n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        bodyB.positionPrev.x -= impulseX * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulseY * bodyB.inverseMass;\n                        bodyB.anglePrev -= bodyB.inverseInertia * (\n                            (contactVertex.x - bodyB.position.x) * impulseY \n                            - (contactVertex.y - bodyB.position.y) * impulseX\n                        );\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} delta\n     */\n    Resolver.solveVelocity = function(pairs, delta) {\n        var timeScale = delta / Common._baseDelta,\n            timeScaleSquared = timeScale * timeScale,\n            timeScaleCubed = timeScaleSquared * timeScale,\n            restingThresh = -Resolver._restingThresh * timeScale,\n            restingThreshTangent = Resolver._restingThreshTangent,\n            frictionNormalMultiplier = Resolver._frictionNormalMultiplier * timeScale,\n            frictionMaxStatic = Resolver._frictionMaxStatic,\n            pairsLength = pairs.length,\n            tangentImpulse,\n            maxFriction,\n            i,\n            j;\n\n        for (i = 0; i < pairsLength; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normalX = collision.normal.x,\n                normalY = collision.normal.y,\n                tangentX = collision.tangent.x,\n                tangentY = collision.tangent.y,\n                inverseMassTotal = pair.inverseMass,\n                friction = pair.friction * pair.frictionStatic * frictionNormalMultiplier,\n                contacts = pair.contacts,\n                contactCount = pair.contactCount,\n                contactShare = 1 / contactCount;\n\n            // get body velocities\n            var bodyAVelocityX = bodyA.position.x - bodyA.positionPrev.x,\n                bodyAVelocityY = bodyA.position.y - bodyA.positionPrev.y,\n                bodyAAngularVelocity = bodyA.angle - bodyA.anglePrev,\n                bodyBVelocityX = bodyB.position.x - bodyB.positionPrev.x,\n                bodyBVelocityY = bodyB.position.y - bodyB.positionPrev.y,\n                bodyBAngularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (j = 0; j < contactCount; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex;\n\n                var offsetAX = contactVertex.x - bodyA.position.x,\n                    offsetAY = contactVertex.y - bodyA.position.y,\n                    offsetBX = contactVertex.x - bodyB.position.x,\n                    offsetBY = contactVertex.y - bodyB.position.y;\n \n                var velocityPointAX = bodyAVelocityX - offsetAY * bodyAAngularVelocity,\n                    velocityPointAY = bodyAVelocityY + offsetAX * bodyAAngularVelocity,\n                    velocityPointBX = bodyBVelocityX - offsetBY * bodyBAngularVelocity,\n                    velocityPointBY = bodyBVelocityY + offsetBX * bodyBAngularVelocity;\n\n                var relativeVelocityX = velocityPointAX - velocityPointBX,\n                    relativeVelocityY = velocityPointAY - velocityPointBY;\n\n                var normalVelocity = normalX * relativeVelocityX + normalY * relativeVelocityY,\n                    tangentVelocity = tangentX * relativeVelocityX + tangentY * relativeVelocityY;\n\n                // coulomb friction\n                var normalOverlap = pair.separation + normalVelocity;\n                var normalForce = Math.min(normalOverlap, 1);\n                normalForce = normalOverlap < 0 ? 0 : normalForce;\n\n                var frictionLimit = normalForce * friction;\n\n                if (tangentVelocity < -frictionLimit || tangentVelocity > frictionLimit) {\n                    maxFriction = (tangentVelocity > 0 ? tangentVelocity : -tangentVelocity);\n                    tangentImpulse = pair.friction * (tangentVelocity > 0 ? 1 : -1) * timeScaleCubed;\n                    \n                    if (tangentImpulse < -maxFriction) {\n                        tangentImpulse = -maxFriction;\n                    } else if (tangentImpulse > maxFriction) {\n                        tangentImpulse = maxFriction;\n                    }\n                } else {\n                    tangentImpulse = tangentVelocity;\n                    maxFriction = frictionMaxStatic;\n                }\n\n                // account for mass, inertia and contact offset\n                var oAcN = offsetAX * normalY - offsetAY * normalX,\n                    oBcN = offsetBX * normalY - offsetBY * normalX,\n                    share = contactShare / (inverseMassTotal + bodyA.inverseInertia * oAcN * oAcN + bodyB.inverseInertia * oBcN * oBcN);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity * share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < restingThresh) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse += normalImpulse;\n                    if (contact.normalImpulse > 0) contact.normalImpulse = 0;\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity < -restingThreshTangent || tangentVelocity > restingThreshTangent) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse += tangentImpulse;\n                    if (contact.tangentImpulse < -maxFriction) contact.tangentImpulse = -maxFriction;\n                    if (contact.tangentImpulse > maxFriction) contact.tangentImpulse = maxFriction;\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                var impulseX = normalX * normalImpulse + tangentX * tangentImpulse,\n                    impulseY = normalY * normalImpulse + tangentY * tangentImpulse;\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulseX * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulseY * bodyA.inverseMass;\n                    bodyA.anglePrev += (offsetAX * impulseY - offsetAY * impulseX) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulseX * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulseY * bodyB.inverseMass;\n                    bodyB.anglePrev -= (offsetBX * impulseY - offsetBY * impulseX) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = __webpack_require__(9);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairUpdate = Pair.update,\n            pairCreate = Pair.create,\n            pairSetActive = Pair.setActive,\n            pairsTable = pairs.table,\n            pairsList = pairs.list,\n            pairsListLength = pairsList.length,\n            pairsListIndex = pairsListLength,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            collisionsLength = collisions.length,\n            collisionStartIndex = 0,\n            collisionEndIndex = 0,\n            collisionActiveIndex = 0,\n            collision,\n            pair,\n            i;\n\n        for (i = 0; i < collisionsLength; i++) {\n            collision = collisions[i];\n            pair = collision.pair;\n\n            if (pair) {\n                // pair already exists (but may or may not be active)\n                if (pair.isActive) {\n                    // pair exists and is active\n                    collisionActive[collisionActiveIndex++] = pair;\n                }\n\n                // update the pair\n                pairUpdate(pair, collision, timestamp);\n            } else {\n                // pair did not exist, create a new pair\n                pair = pairCreate(collision, timestamp);\n                pairsTable[pair.id] = pair;\n\n                // add the new pair\n                collisionStart[collisionStartIndex++] = pair;\n                pairsList[pairsListIndex++] = pair;\n            }\n        }\n\n        // find pairs that are no longer active\n        pairsListIndex = 0;\n        pairsListLength = pairsList.length;\n\n        for (i = 0; i < pairsListLength; i++) {\n            pair = pairsList[i];\n            \n            // pair is active if updated this timestep\n            if (pair.timeUpdated >= timestamp) {\n                // keep active pairs\n                pairsList[pairsListIndex++] = pair;\n            } else {\n                pairSetActive(pair, false, timestamp);\n\n                // keep inactive pairs if both bodies may be sleeping\n                if (pair.collision.bodyA.sleepCounter > 0 && pair.collision.bodyB.sleepCounter > 0) {\n                    pairsList[pairsListIndex++] = pair;\n                } else {\n                    // remove inactive pairs if either body awake\n                    collisionEnd[collisionEndIndex++] = pair;\n                    delete pairsTable[pair.id];\n                }\n            }\n        }\n\n        // update array lengths if changed\n        if (pairsList.length !== pairsListIndex) {\n            pairsList.length = pairsListIndex;\n        }\n\n        if (collisionStart.length !== collisionStartIndex) {\n            collisionStart.length = collisionStartIndex;\n        }\n\n        if (collisionEnd.length !== collisionEndIndex) {\n            collisionEnd.length = collisionEndIndex;\n        }\n\n        if (collisionActive.length !== collisionActiveIndex) {\n            collisionActive.length = collisionActiveIndex;\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Matter = module.exports = __webpack_require__(21);\r\n\r\nMatter.Axes = __webpack_require__(11);\r\nMatter.Bodies = __webpack_require__(12);\r\nMatter.Body = __webpack_require__(4);\r\nMatter.Bounds = __webpack_require__(1);\r\nMatter.Collision = __webpack_require__(8);\r\nMatter.Common = __webpack_require__(0);\r\nMatter.Composite = __webpack_require__(6);\r\nMatter.Composites = __webpack_require__(22);\r\nMatter.Constraint = __webpack_require__(10);\r\nMatter.Contact = __webpack_require__(16);\r\nMatter.Detector = __webpack_require__(13);\r\nMatter.Engine = __webpack_require__(17);\r\nMatter.Events = __webpack_require__(5);\r\nMatter.Grid = __webpack_require__(23);\r\nMatter.Mouse = __webpack_require__(14);\r\nMatter.MouseConstraint = __webpack_require__(24);\r\nMatter.Pair = __webpack_require__(9);\r\nMatter.Pairs = __webpack_require__(19);\r\nMatter.Plugin = __webpack_require__(15);\r\nMatter.Query = __webpack_require__(25);\r\nMatter.Render = __webpack_require__(26);\r\nMatter.Resolver = __webpack_require__(18);\r\nMatter.Runner = __webpack_require__(27);\r\nMatter.SAT = __webpack_require__(28);\r\nMatter.Sleeping = __webpack_require__(7);\r\nMatter.Svg = __webpack_require__(29);\r\nMatter.Vector = __webpack_require__(2);\r\nMatter.Vertices = __webpack_require__(3);\r\nMatter.World = __webpack_require__(30);\r\n\r\n// temporary back compatibility\r\nMatter.Engine.run = Matter.Runner.run;\r\nMatter.Common.deprecated(Matter.Engine, 'run', 'Engine.run ➤ use Matter.Runner.run(engine) instead');\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\r\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\r\n*\r\n* @class Matter\r\n*/\r\n\r\nvar Matter = {};\r\n\r\nmodule.exports = Matter;\r\n\r\nvar Plugin = __webpack_require__(15);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * The library name.\r\n     * @property name\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.name = 'matter-js';\r\n\r\n    /**\r\n     * The library version.\r\n     * @property version\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.version =  true ? \"0.20.0\" : undefined;\r\n\r\n    /**\r\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\r\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\r\n     * @property uses\r\n     * @type {Array}\r\n     */\r\n    Matter.uses = [];\r\n\r\n    /**\r\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\r\n     * @property used\r\n     * @readOnly\r\n     * @type {Array}\r\n     */\r\n    Matter.used = [];\r\n\r\n    /**\r\n     * Installs the given plugins on the `Matter` namespace.\r\n     * This is a short-hand for `Plugin.use`, see it for more information.\r\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\r\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\r\n     * @method use\r\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\r\n     */\r\n    Matter.use = function() {\r\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method before\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain before the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.before = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathBefore(Matter, path, func);\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method after\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain after the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.after = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathAfter(Matter, path, func);\r\n    };\r\n\r\n})();\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = __webpack_require__(6);\nvar Constraint = __webpack_require__(10);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(4);\nvar Bodies = __webpack_require__(12);\nvar deprecated = Common.deprecated;\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} x Starting position in X.\n     * @param {number} y Starting position in Y.\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(x, y, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            currentX = x,\n            currentY = y,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(currentX, currentY, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    currentX = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    currentX += columnGap;\n                }\n            }\n            \n            currentY += maxHeight + rowGap;\n            currentX = x;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} x Starting position in X.\n     * @param {number} y Starting position in Y.\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(x, y, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(x, y, columns, rows, columnGap, rowGap, function(stackX, stackY, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(x + xOffset + column * columnGap, stackY, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * This has now moved to the [newtonsCradle example](https://github.com/liabru/matter-js/blob/master/examples/newtonsCradle.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to newtonsCradle example\n     * @method newtonsCradle\n     * @param {number} x Starting position in X.\n     * @param {number} y Starting position in Y.\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(x, y, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(x + i * (size * separation), y + length, size, \n                    { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: x + i * (size * separation), y: y }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n\n    deprecated(Composites, 'newtonsCradle', 'Composites.newtonsCradle ➤ moved to newtonsCradle example');\n    \n    /**\n     * This has now moved to the [car example](https://github.com/liabru/matter-js/blob/master/examples/car.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to car example\n     * @method car\n     * @param {number} x Starting position in X.\n     * @param {number} y Starting position in Y.\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(x, y, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(x, y, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(x + wheelAOffset, y + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(x + wheelBOffset, y + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    deprecated(Composites, 'car', 'Composites.car ➤ moved to car example');\n\n    /**\n     * This has now moved to the [softBody example](https://github.com/liabru/matter-js/blob/master/examples/softBody.js)\n     * and the [cloth example](https://github.com/liabru/matter-js/blob/master/examples/cloth.js), follow those instead as this function is deprecated here.\n     * @deprecated moved to softBody and cloth examples\n     * @method softBody\n     * @param {number} x Starting position in X.\n     * @param {number} y Starting position in Y.\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(x, y, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(x, y, columns, rows, columnGap, rowGap, function(stackX, stackY) {\n            return Bodies.circle(stackX, stackY, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n    deprecated(Composites, 'softBody', 'Composites.softBody ➤ moved to softBody and cloth examples');\n})();\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* This module has now been replaced by `Matter.Detector`.\n*\n* All usage should be migrated to `Matter.Detector` or another alternative.\n* For back-compatibility purposes this module will remain for a short term and then later removed in a future release.\n*\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n* @deprecated\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = __webpack_require__(9);\nvar Common = __webpack_require__(0);\nvar deprecated = Common.deprecated;\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @deprecated replaced by Matter.Detector\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @deprecated replaced by Matter.Detector\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // temporary back compatibility bounds check\n            if (world.bounds && (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y))\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    deprecated(Grid, 'update', 'Grid.update ➤ replaced by Matter.Detector');\n\n    /**\n     * Clears the grid.\n     * @deprecated replaced by Matter.Detector\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    deprecated(Grid, 'clear', 'Grid.clear ➤ replaced by Matter.Detector');\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        var gridPairs = grid.pairs,\n            pairId = Pair.id,\n            bucketLength = bucket.length,\n            i;\n\n        // add new pairs\n        for (i = 0; i < bucketLength; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var id = pairId(body, bodyB),\n                pair = gridPairs[id];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                gridPairs[id] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        var gridPairs = grid.pairs,\n            pairId = Pair.id,\n            i;\n\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        var bucketLength = bucket.length;\n\n        // update pair counts\n        for (i = 0; i < bucketLength; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var pair = gridPairs[pairId(body, bucket[i])];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pair,\n            gridPairs = grid.pairs,\n            pairKeys = Common.keys(gridPairs),\n            pairKeysLength = pairKeys.length,\n            pairs = [],\n            k;\n\n        // iterate over grid.pairs\n        for (k = 0; k < pairKeysLength; k++) {\n            pair = gridPairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete gridPairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = __webpack_require__(3);\nvar Sleeping = __webpack_require__(7);\nvar Mouse = __webpack_require__(14);\nvar Events = __webpack_require__(5);\nvar Detector = __webpack_require__(13);\nvar Constraint = __webpack_require__(10);\nvar Composite = __webpack_require__(6);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = __webpack_require__(2);\nvar Collision = __webpack_require__(8);\nvar Bounds = __webpack_require__(1);\nvar Bodies = __webpack_require__(12);\nvar Vertices = __webpack_require__(3);\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {collision[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [],\n            bodiesLength = bodies.length,\n            bounds = body.bounds,\n            collides = Collision.collides,\n            overlaps = Bounds.overlaps;\n\n        for (var i = 0; i < bodiesLength; i++) {\n            var bodyA = bodies[i],\n                partsALength = bodyA.parts.length,\n                partsAStart = partsALength === 1 ? 0 : 1;\n            \n            if (overlaps(bodyA.bounds, bounds)) {\n                for (var j = partsAStart; j < partsALength; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (overlaps(part.bounds, bounds)) {\n                        var collision = collides(part, body);\n\n                        if (collision) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {collision[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Render` module is a lightweight, optional utility which provides a simple canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Body = __webpack_require__(4);\nvar Common = __webpack_require__(0);\nvar Composite = __webpack_require__(6);\nvar Bounds = __webpack_require__(1);\nvar Events = __webpack_require__(5);\nvar Vector = __webpack_require__(2);\nvar Mouse = __webpack_require__(14);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    Render._goodFps = 30;\n    Render._goodDelta = 1000 / 60;\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            timing: {\n                historySize: 60,\n                delta: 0,\n                deltaHistory: [],\n                lastTime: 0,\n                lastTimestamp: 0,\n                lastElapsed: 0,\n                timestampElapsed: 0,\n                timestampElapsedHistory: [],\n                engineDeltaHistory: [],\n                engineElapsedHistory: [],\n                engineUpdatesHistory: [],\n                elapsedHistory: []\n            },\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#14151f',\n                wireframeBackground: '#14151f',\n                wireframeStrokeStyle: '#bbb',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showStats: false,\n                showPerformance: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        // for temporary back compatibility only\n        render.controller = Render;\n        render.options.showBroadphase = false;\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            \n            _updateTiming(render, time);\n\n            Render.world(render, time);\n\n            render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n\n            if (render.options.showStats || render.options.showDebug) {\n                Render.stats(render, render.context, time);\n            }\n\n            if (render.options.showPerformance || render.options.showDebug) {\n                Render.performance(render, render.context, time);\n            }\n\n            render.context.setTransform(1, 0, 0, 1, 0, 0);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n    };\n\n    /**\n     * Sets the render `width` and `height`.\n     * \n     * Updates the canvas accounting for `render.options.pixelRatio`.  \n     * \n     * Updates the bottom right render bound `render.bounds.max` relative to the provided `width` and `height`.\n     * The top left render bound `render.bounds.min` isn't changed.\n     * \n     * Follow this call with `Render.lookAt` if you need to change the render bounds.\n     * \n     * See also `Render.setPixelRatio`.\n     * @method setSize\n     * @param {render} render\n     * @param {number} width The width (in CSS pixels)\n     * @param {number} height The height (in CSS pixels)\n     */\n    Render.setSize = function(render, width, height) {\n        render.options.width = width;\n        render.options.height = height;\n        render.bounds.max.x = render.bounds.min.x + width;\n        render.bounds.max.y = render.bounds.min.y + height;\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        } else {\n            render.canvas.width = width;\n            render.canvas.height = height;\n        }\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.setTransform(\n            render.options.pixelRatio / boundsScaleX, 0, 0, \n            render.options.pixelRatio / boundsScaleY, 0, 0\n        );\n        \n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render, time) {\n        var startTime = Common.now(),\n            engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            timing = render.timing;\n\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n\n            if (render.options.pixelRatio !== 1) {\n                render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n            }\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n\n        // log the time elapsed computing this update\n        timing.lastElapsed = Common.now() - startTime;\n    };\n\n    /**\n     * Renders statistics about the engine and world useful for debugging.\n     * @private\n     * @method stats\n     * @param {render} render\n     * @param {RenderingContext} context\n     * @param {Number} time\n     */\n    Render.stats = function(render, context, time) {\n        var engine = render.engine,\n            world = engine.world,\n            bodies = Composite.allBodies(world),\n            parts = 0,\n            width = 55,\n            height = 44,\n            x = 0,\n            y = 0;\n        \n        // count parts\n        for (var i = 0; i < bodies.length; i += 1) {\n            parts += bodies[i].parts.length;\n        }\n\n        // sections\n        var sections = {\n            'Part': parts,\n            'Body': bodies.length,\n            'Cons': Composite.allConstraints(world).length,\n            'Comp': Composite.allComposites(world).length,\n            'Pair': engine.pairs.list.length\n        };\n\n        // background\n        context.fillStyle = '#0e0f19';\n        context.fillRect(x, y, width * 5.5, height);\n\n        context.font = '12px Arial';\n        context.textBaseline = 'top';\n        context.textAlign = 'right';\n\n        // sections\n        for (var key in sections) {\n            var section = sections[key];\n            // label\n            context.fillStyle = '#aaa';\n            context.fillText(key, x + width, y + 8);\n\n            // value\n            context.fillStyle = '#eee';\n            context.fillText(section, x + width, y + 26);\n\n            x += width;\n        }\n    };\n\n    /**\n     * Renders engine and render performance information.\n     * @private\n     * @method performance\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.performance = function(render, context) {\n        var engine = render.engine,\n            timing = render.timing,\n            deltaHistory = timing.deltaHistory,\n            elapsedHistory = timing.elapsedHistory,\n            timestampElapsedHistory = timing.timestampElapsedHistory,\n            engineDeltaHistory = timing.engineDeltaHistory,\n            engineUpdatesHistory = timing.engineUpdatesHistory,\n            engineElapsedHistory = timing.engineElapsedHistory,\n            lastEngineUpdatesPerFrame = engine.timing.lastUpdatesPerFrame,\n            lastEngineDelta = engine.timing.lastDelta;\n        \n        var deltaMean = _mean(deltaHistory),\n            elapsedMean = _mean(elapsedHistory),\n            engineDeltaMean = _mean(engineDeltaHistory),\n            engineUpdatesMean = _mean(engineUpdatesHistory),\n            engineElapsedMean = _mean(engineElapsedHistory),\n            timestampElapsedMean = _mean(timestampElapsedHistory),\n            rateMean = (timestampElapsedMean / deltaMean) || 0,\n            neededUpdatesPerFrame = Math.round(deltaMean / lastEngineDelta),\n            fps = (1000 / deltaMean) || 0;\n\n        var graphHeight = 4,\n            gap = 12,\n            width = 60,\n            height = 34,\n            x = 10,\n            y = 69;\n\n        // background\n        context.fillStyle = '#0e0f19';\n        context.fillRect(0, 50, gap * 5 + width * 6 + 22, height);\n\n        // show FPS\n        Render.status(\n            context, x, y, width, graphHeight, deltaHistory.length, \n            Math.round(fps) + ' fps', \n            fps / Render._goodFps,\n            function(i) { return (deltaHistory[i] / deltaMean) - 1; }\n        );\n\n        // show engine delta\n        Render.status(\n            context, x + gap + width, y, width, graphHeight, engineDeltaHistory.length,\n            lastEngineDelta.toFixed(2) + ' dt', \n            Render._goodDelta / lastEngineDelta,\n            function(i) { return (engineDeltaHistory[i] / engineDeltaMean) - 1; }\n        );\n\n        // show engine updates per frame\n        Render.status(\n            context, x + (gap + width) * 2, y, width, graphHeight, engineUpdatesHistory.length,\n            lastEngineUpdatesPerFrame + ' upf', \n            Math.pow(Common.clamp((engineUpdatesMean / neededUpdatesPerFrame) || 1, 0, 1), 4),\n            function(i) { return (engineUpdatesHistory[i] / engineUpdatesMean) - 1; }\n        );\n\n        // show engine update time\n        Render.status(\n            context, x + (gap + width) * 3, y, width, graphHeight, engineElapsedHistory.length,\n            engineElapsedMean.toFixed(2) + ' ut', \n            1 - (lastEngineUpdatesPerFrame * engineElapsedMean / Render._goodFps),\n            function(i) { return (engineElapsedHistory[i] / engineElapsedMean) - 1; }\n        );\n\n        // show render time\n        Render.status(\n            context, x + (gap + width) * 4, y, width, graphHeight, elapsedHistory.length,\n            elapsedMean.toFixed(2) + ' rt', \n            1 - (elapsedMean / Render._goodFps),\n            function(i) { return (elapsedHistory[i] / elapsedMean) - 1; }\n        );\n\n        // show effective speed\n        Render.status(\n            context, x + (gap + width) * 5, y, width, graphHeight, timestampElapsedHistory.length, \n            rateMean.toFixed(2) + ' x', \n            rateMean * rateMean * rateMean,\n            function(i) { return (((timestampElapsedHistory[i] / deltaHistory[i]) / rateMean) || 0) - 1; }\n        );\n    };\n\n    /**\n     * Renders a label, indicator and a chart.\n     * @private\n     * @method status\n     * @param {RenderingContext} context\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} count\n     * @param {string} label\n     * @param {string} indicator\n     * @param {function} plotY\n     */\n    Render.status = function(context, x, y, width, height, count, label, indicator, plotY) {\n        // background\n        context.strokeStyle = '#888';\n        context.fillStyle = '#444';\n        context.lineWidth = 1;\n        context.fillRect(x, y + 7, width, 1);\n\n        // chart\n        context.beginPath();\n        context.moveTo(x, y + 7 - height * Common.clamp(0.4 * plotY(0), -2, 2));\n        for (var i = 0; i < width; i += 1) {\n            context.lineTo(x + i, y + 7 - (i < count ? height * Common.clamp(0.4 * plotY(i), -2, 2) : 0));\n        }\n        context.stroke();\n\n        // indicator\n        context.fillStyle = 'hsl(' + Common.clamp(25 + 95 * indicator, 0, 120) + ',100%,60%)';\n        context.fillRect(x, y - 7, 4, 4);\n\n        // label\n        context.font = '12px Arial';\n        context.textBaseline = 'middle';\n        context.textAlign = 'right';\n        context.fillStyle = '#eee';\n        context.fillText(label, x + width, y - 5);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = render.options.wireframeStrokeStyle;\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = render.options.wireframeStrokeStyle;\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                            (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            var velocity = Body.getVelocity(body);\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + velocity.x, body.position.y + velocity.y);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.contactCount; j++) {\n                var contact = pair.contacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.contactCount > 0) {\n                var normalPosX = pair.contacts[0].vertex.x,\n                    normalPosY = pair.contacts[0].vertex.y;\n\n                if (pair.contactCount === 2) {\n                    normalPosX = (pair.contacts[0].vertex.x + pair.contacts[1].vertex.x) / 2;\n                    normalPosY = (pair.contacts[0].vertex.y + pair.contacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                    Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Updates render timing.\n     * @method _updateTiming\n     * @private\n     * @param {render} render\n     * @param {number} time\n     */\n    var _updateTiming = function(render, time) {\n        var engine = render.engine,\n            timing = render.timing,\n            historySize = timing.historySize,\n            timestamp = engine.timing.timestamp;\n\n        timing.delta = time - timing.lastTime || Render._goodDelta;\n        timing.lastTime = time;\n\n        timing.timestampElapsed = timestamp - timing.lastTimestamp || 0;\n        timing.lastTimestamp = timestamp;\n\n        timing.deltaHistory.unshift(timing.delta);\n        timing.deltaHistory.length = Math.min(timing.deltaHistory.length, historySize);\n\n        timing.engineDeltaHistory.unshift(engine.timing.lastDelta);\n        timing.engineDeltaHistory.length = Math.min(timing.engineDeltaHistory.length, historySize);\n\n        timing.timestampElapsedHistory.unshift(timing.timestampElapsed);\n        timing.timestampElapsedHistory.length = Math.min(timing.timestampElapsedHistory.length, historySize);\n\n        timing.engineUpdatesHistory.unshift(engine.timing.lastUpdatesPerFrame);\n        timing.engineUpdatesHistory.length = Math.min(timing.engineUpdatesHistory.length, historySize);\n\n        timing.engineElapsedHistory.unshift(engine.timing.lastElapsed);\n        timing.engineElapsedHistory.length = Math.min(timing.engineElapsedHistory.length, historySize);\n\n        timing.elapsedHistory.unshift(timing.lastElapsed);\n        timing.elapsedHistory.length = Math.min(timing.elapsedHistory.length, historySize);\n    };\n\n    /**\n     * Returns the mean value of the given numbers.\n     * @method _mean\n     * @private\n     * @param {Number[]} values\n     * @return {Number} the mean of given values\n     */\n    var _mean = function(values) {\n        var result = 0;\n        for (var i = 0; i < values.length; i += 1) {\n            result += values[i];\n        }\n        return (result / values.length) || 0;\n    };\n\n    /**\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @deprecated\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n    /**\n     * The mouse to render if `render.options.showMousePosition` is enabled.\n     *\n     * @property mouse\n     * @type mouse\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * The [pixel ratio](https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio) to use when rendering.\n     *\n     * @property options.pixelRatio\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A CSS background color string to use when `render.options.wireframes` is disabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.background\n     * @type string\n     * @default '#14151f'\n     */\n\n    /**\n     * A CSS color string to use for background when `render.options.wireframes` is enabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.wireframeBackground\n     * @type string\n     * @default '#14151f'\n     */\n\n    /**\n     * A CSS color string to use for stroke when `render.options.wireframes` is enabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.wireframeStrokeStyle\n     * @type string\n     * @default '#bbb'\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable all debug information overlays together.  \n     * This includes and has priority over the values of:\n     *\n     * - `render.options.showStats`\n     * - `render.options.showPerformance`\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the engine stats info overlay.  \n     * From left to right, the values shown are:\n     *\n     * - body parts total\n     * - body total\n     * - constraints total\n     * - composites total\n     * - collision pairs total\n     *\n     * @property options.showStats\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable performance charts.  \n     * From left to right, the values shown are:\n     *\n     * - average render frequency (e.g. 60 fps)\n     * - exact engine delta time used for last update (e.g. 16.66ms)\n     * - average updates per frame (e.g. 1)\n     * - average engine execution duration (e.g. 5.00ms)\n     * - average render execution duration (e.g. 0.40ms)\n     * - average effective play speed (e.g. '1.00x' is 'real-time')\n     *\n     * Each value is recorded over a fixed sample of past frames (60 frames).\n     *\n     * A chart shown below each value indicates the variance from the average over the sample.\n     * The more stable or fixed the value is the flatter the chart will appear.\n     *\n     * @property options.showPerformance\n     * @type boolean\n     * @default false\n     */\n    \n    /**\n     * A flag to enable or disable rendering entirely.\n     *\n     * @property options.enabled\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to toggle wireframe rendering otherwise solid fill rendering is used.\n     *\n     * @property options.wireframes\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A flag to enable or disable sleeping bodies indicators.\n     *\n     * @property options.showSleeping\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A flag to enable or disable the debug information overlay.\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the collision broadphase debug overlay.\n     *\n     * @deprecated no longer implemented\n     * @property options.showBroadphase\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body bounds debug overlay.\n     *\n     * @property options.showBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body velocity debug overlay.\n     *\n     * @property options.showVelocity\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body collisions debug overlay.\n     *\n     * @property options.showCollisions\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the collision resolver separations debug overlay.\n     *\n     * @property options.showSeparations\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body axes debug overlay.\n     *\n     * @property options.showAxes\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body positions debug overlay.\n     *\n     * @property options.showPositions\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body angle debug overlay.\n     *\n     * @property options.showAngleIndicator\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body and part ids debug overlay.\n     *\n     * @property options.showIds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body vertex numbers debug overlay.\n     *\n     * @property options.showVertexNumbers\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body convex hulls debug overlay.\n     *\n     * @property options.showConvexHulls\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body internal edges debug overlay.\n     *\n     * @property options.showInternalEdges\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the mouse position debug overlay.\n     *\n     * @property options.showMousePosition\n     * @type boolean\n     * @default false\n     */\n\n})();\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Runner` module is an optional utility that provides a game loop for running a `Matter.Engine` inside a browser environment.\n* A runner will continuously update a `Matter.Engine` whilst synchronising engine updates with the browser frame rate.\n* This runner favours a smoother user experience over perfect time keeping.\n* This runner is optional and is used for development and debugging but could be useful as a starting point for implementing some games and experiences.\n* Alternatively see `Engine.update` to step the engine directly inside your own game loop implementation as may be needed inside other environments.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = __webpack_require__(5);\nvar Engine = __webpack_require__(17);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Runner._maxFrameDelta = 1000 / 15;\n    Runner._frameDeltaFallback = 1000 / 60;\n    Runner._timeBufferMargin = 1.5;\n    Runner._elapsedNextEstimate = 1;\n    Runner._smoothingLowerBound = 0.1;\n    Runner._smoothingUpperBound = 0.9;\n\n    /**\n     * Creates a new Runner. \n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            delta: 1000 / 60,\n            frameDelta: null,\n            frameDeltaSmoothing: true,\n            frameDeltaSnapping: true,\n            frameDeltaHistory: [],\n            frameDeltaHistorySize: 100,\n            frameRequestId: null,\n            timeBuffer: 0,\n            timeLastTick: null,\n            maxUpdates: null,\n            maxFrameTime: 1000 / 30,\n            lastUpdatesDeferred: 0,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        // for temporary back compatibility only\n        runner.fps = 0;\n\n        return runner;\n    };\n\n    /**\n     * Runs a `Matter.Engine` whilst synchronising engine updates with the browser frame rate. \n     * See module and properties descriptions for more information on this runner.\n     * Alternatively see `Engine.update` to step the engine directly inside your own game loop implementation.\n     * @method run\n     * @param {runner} runner\n     * @param {engine} [engine]\n     * @return {runner} runner\n     */\n    Runner.run = function(runner, engine) {\n        // initial time buffer for the first frame\n        runner.timeBuffer = Runner._frameDeltaFallback;\n\n        (function onFrame(time){\n            runner.frameRequestId = Runner._onNextFrame(runner, onFrame);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * Performs a single runner tick as used inside `Runner.run`.\n     * See module and properties descriptions for more information on this runner.\n     * Alternatively see `Engine.update` to step the engine directly inside your own game loop implementation.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var tickStartTime = Common.now(),\n            engineDelta = runner.delta,\n            updateCount = 0;\n\n        // find frame delta time since last call\n        var frameDelta = time - runner.timeLastTick;\n\n        // fallback for unusable frame delta values (e.g. 0, NaN, on first frame or long pauses)\n        if (!frameDelta || !runner.timeLastTick || frameDelta > Math.max(Runner._maxFrameDelta, runner.maxFrameTime)) {\n            // reuse last accepted frame delta else fallback\n            frameDelta = runner.frameDelta || Runner._frameDeltaFallback;\n        }\n\n        if (runner.frameDeltaSmoothing) {\n            // record frame delta over a number of frames\n            runner.frameDeltaHistory.push(frameDelta);\n            runner.frameDeltaHistory = runner.frameDeltaHistory.slice(-runner.frameDeltaHistorySize);\n\n            // sort frame delta history\n            var deltaHistorySorted = runner.frameDeltaHistory.slice(0).sort();\n\n            // sample a central window to limit outliers\n            var deltaHistoryWindow = runner.frameDeltaHistory.slice(\n                deltaHistorySorted.length * Runner._smoothingLowerBound, \n                deltaHistorySorted.length * Runner._smoothingUpperBound\n            );\n\n            // take the mean of the central window\n            var frameDeltaSmoothed = _mean(deltaHistoryWindow);\n            frameDelta = frameDeltaSmoothed || frameDelta;\n        }\n\n        if (runner.frameDeltaSnapping) {\n            // snap frame delta to the nearest 1 Hz\n            frameDelta = 1000 / Math.round(1000 / frameDelta);\n        }\n\n        // update runner values for next call\n        runner.frameDelta = frameDelta;\n        runner.timeLastTick = time;\n\n        // accumulate elapsed time\n        runner.timeBuffer += runner.frameDelta;\n\n        // limit time buffer size to a single frame of updates\n        runner.timeBuffer = Common.clamp(\n            runner.timeBuffer, 0, runner.frameDelta + engineDelta * Runner._timeBufferMargin\n        );\n\n        // reset count of over budget updates\n        runner.lastUpdatesDeferred = 0;\n\n        // get max updates per frame\n        var maxUpdates = runner.maxUpdates || Math.ceil(runner.maxFrameTime / engineDelta);\n\n        // create event object\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        // tick events before update\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(runner, 'tick', event);\n\n        var updateStartTime = Common.now();\n\n        // simulate time elapsed between calls\n        while (engineDelta > 0 && runner.timeBuffer >= engineDelta * Runner._timeBufferMargin) {\n            // update the engine\n            Events.trigger(runner, 'beforeUpdate', event);\n            Engine.update(engine, engineDelta);\n            Events.trigger(runner, 'afterUpdate', event);\n\n            // consume time simulated from buffer\n            runner.timeBuffer -= engineDelta;\n            updateCount += 1;\n\n            // find elapsed time during this tick\n            var elapsedTimeTotal = Common.now() - tickStartTime,\n                elapsedTimeUpdates = Common.now() - updateStartTime,\n                elapsedNextEstimate = elapsedTimeTotal + Runner._elapsedNextEstimate * elapsedTimeUpdates / updateCount;\n\n            // defer updates if over performance budgets for this frame\n            if (updateCount >= maxUpdates || elapsedNextEstimate > runner.maxFrameTime) {\n                runner.lastUpdatesDeferred = Math.round(Math.max(0, (runner.timeBuffer / engineDelta) - Runner._timeBufferMargin));\n                break;\n            }\n        }\n\n        // track timing metrics\n        engine.timing.lastUpdatesPerFrame = updateCount;\n\n        // tick events after update\n        Events.trigger(runner, 'afterTick', event);\n\n        // show useful warnings if needed\n        if (runner.frameDeltaHistory.length >= 100) {\n            if (runner.lastUpdatesDeferred && Math.round(runner.frameDelta / engineDelta) > maxUpdates) {\n                Common.warnOnce('Matter.Runner: runner reached runner.maxUpdates, see docs.');\n            } else if (runner.lastUpdatesDeferred) {\n                Common.warnOnce('Matter.Runner: runner reached runner.maxFrameTime, see docs.');\n            }\n\n            if (typeof runner.isFixed !== 'undefined') {\n                Common.warnOnce('Matter.Runner: runner.isFixed is now redundant, see docs.');\n            }\n\n            if (runner.deltaMin || runner.deltaMax) {\n                Common.warnOnce('Matter.Runner: runner.deltaMin and runner.deltaMax were removed, see docs.');\n            }\n\n            if (runner.fps !== 0) {\n                Common.warnOnce('Matter.Runner: runner.fps was replaced by runner.delta, see docs.');\n            }\n        }\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner` by canceling the frame loop.\n     * Alternatively to temporarily pause the runner, see `runner.enabled`.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        Runner._cancelNextFrame(runner);\n    };\n\n    /**\n     * Schedules the `callback` on this `runner` for the next animation frame.\n     * @private\n     * @method _onNextFrame\n     * @param {runner} runner\n     * @param {function} callback\n     * @return {number} frameRequestId\n     */\n    Runner._onNextFrame = function(runner, callback) {\n        if (typeof window !== 'undefined' && window.requestAnimationFrame) {\n            runner.frameRequestId = window.requestAnimationFrame(callback);\n        } else {\n            throw new Error('Matter.Runner: missing required global window.requestAnimationFrame.');\n        }\n\n        return runner.frameRequestId;\n    };\n\n    /**\n     * Cancels the last callback scheduled by `Runner._onNextFrame` on this `runner`.\n     * @private\n     * @method _cancelNextFrame\n     * @param {runner} runner\n     */\n    Runner._cancelNextFrame = function(runner) {\n        if (typeof window !== 'undefined' && window.cancelAnimationFrame) {\n            window.cancelAnimationFrame(runner.frameRequestId);\n        } else {\n            throw new Error('Matter.Runner: missing required global window.cancelAnimationFrame.');\n        }\n    };\n\n    /**\n     * Returns the mean of the given numbers.\n     * @method _mean\n     * @private\n     * @param {Number[]} values\n     * @return {Number} the mean of given values.\n     */\n    var _mean = function(values) {\n        var result = 0,\n            valuesLength = values.length;\n\n        for (var i = 0; i < valuesLength; i += 1) {\n            result += values[i];\n        }\n\n        return (result / valuesLength) || 0;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired once at the start of the browser frame, before any engine updates.\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired once at the start of the browser frame, after `beforeTick`.\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired once at the end of the browser frame, after `beforeTick`, `tick` and after any engine updates.\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before each and every engine update in this browser frame (if any). \n    * There may be multiple engine update calls per browser frame (or none) depending on framerate and timestep delta.\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after each and every engine update in this browser frame (if any). \n    * There may be multiple engine update calls per browser frame (or none) depending on framerate and timestep delta.\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The fixed timestep size used for `Engine.update` calls in milliseconds, known as `delta`.\n     * \n     * This value is recommended to be `1000 / 60` ms or smaller (i.e. equivalent to at least 60hz).\n     * \n     * Smaller `delta` values provide higher quality results at the cost of performance.\n     * \n     * You should usually avoid changing `delta` during running, otherwise quality may be affected. \n     * \n     * For smoother frame pacing choose a `delta` that is an even multiple of each display FPS you target, i.e. `1000 / (n * fps)` as this helps distribute an equal number of updates over each display frame.\n     * \n     * For example with a 60 Hz `delta` i.e. `1000 / 60` the runner will on average perform one update per frame on displays running 60 FPS and one update every two frames on displays running 120 FPS, etc.\n     * \n     * Where as e.g. using a 240 Hz `delta` i.e. `1000 / 240` the runner will on average perform four updates per frame on displays running 60 FPS and two updates per frame on displays running 120 FPS, etc.\n     * \n     * Therefore `Runner.run` will call multiple engine updates (or none) as needed to simulate the time elapsed between browser frames. \n     * \n     * In practice the number of updates in any particular frame may be restricted to respect the runner's performance budgets. These are specified by `runner.maxFrameTime` and `runner.maxUpdates`, see those properties for details.\n     * \n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n    /**\n     * A flag that can be toggled to enable or disable tick calls on this runner, therefore pausing engine updates and events while the runner loop remains running.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The accumulated time elapsed that has yet to be simulated in milliseconds.\n     * This value is clamped within certain limits (see `Runner.tick` code).\n     *\n     * @private\n     * @property timeBuffer\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * The measured time elapsed between the last two browser frames measured in milliseconds.\n     * This is useful e.g. to estimate the current browser FPS using `1000 / runner.frameDelta`.\n     *\n     * @readonly\n     * @property frameDelta\n     * @type number\n     */\n\n    /**\n     * Enables averaging to smooth frame rate measurements and therefore stabilise play rate.\n     *\n     * @property frameDeltaSmoothing\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Rounds measured browser frame delta to the nearest 1 Hz.\n     * This option can help smooth frame rate measurements and simplify handling hardware timing differences e.g. 59.94Hz and 60Hz displays.\n     * For best results you should also round your `runner.delta` equivalent to the nearest 1 Hz.\n     *\n     * @property frameDeltaSnapping\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A performance budget that limits execution time allowed for this runner per browser frame in milliseconds.\n     * \n     * To calculate the effective browser FPS at which this throttle is applied use `1000 / runner.maxFrameTime`.\n     * \n     * This performance budget is intended to help maintain browser interactivity and help improve framerate recovery during temporary high CPU usage.\n     * \n     * This budget only covers the measured time elapsed executing the functions called in the scope of the runner tick, including `Engine.update` and its related user event callbacks.\n     * \n     * You may also reduce this budget to allow for any significant additional processing you perform on the same thread outside the scope of this runner tick, e.g. rendering time.\n     * \n     * See also `runner.maxUpdates`.\n     *\n     * @property maxFrameTime\n     * @type number\n     * @default 1000 / 30\n     */\n\n    /**\n     * An optional limit for maximum engine update count allowed per frame tick in addition to `runner.maxFrameTime`.\n     * \n     * Unless you set a value it is automatically chosen based on `runner.delta` and `runner.maxFrameTime`.\n     * \n     * See also `runner.maxFrameTime`.\n     * \n     * @property maxUpdates\n     * @type number\n     * @default null\n     */\n\n    /**\n     * The timestamp of the last call to `Runner.tick` used to measure `frameDelta`.\n     *\n     * @private\n     * @property timeLastTick\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * The id of the last call to `Runner._onNextFrame`.\n     *\n     * @private\n     * @property frameRequestId\n     * @type number\n     * @default null\n     */\n\n})();\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* This module has now been replaced by `Matter.Collision`.\n*\n* All usage should be migrated to `Matter.Collision`.\n* For back-compatibility purposes this module will remain for a short term and then later removed in a future release.\n*\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n* @deprecated\n*/\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Collision = __webpack_require__(8);\nvar Common = __webpack_require__(0);\nvar deprecated = Common.deprecated;\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @deprecated replaced by Collision.collides\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB) {\n        return Collision.collides(bodyA, bodyB);\n    };\n\n    deprecated(SAT, 'collides', 'SAT.collides ➤ replaced by Collision.collides');\n\n})();\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = __webpack_require__(1);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* This module has now been replaced by `Matter.Composite`.\n*\n* All usage should be migrated to the equivalent functions found on `Matter.Composite`.\n* For example `World.add(world, body)` now becomes `Composite.add(world, body)`.\n*\n* The property `world.gravity` has been moved to `engine.gravity`.\n*\n* For back-compatibility purposes this module will remain as a direct alias to `Matter.Composite` in the short term during migration.\n* Eventually this alias module will be marked as deprecated and then later removed in a future release.\n*\n* @class World\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = __webpack_require__(6);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * See above, aliases for back compatibility only\n     */\n    World.create = Composite.create;\n    World.add = Composite.add;\n    World.remove = Composite.remove;\n    World.clear = Composite.clear;\n    World.addComposite = Composite.addComposite;\n    World.addBody = Composite.addBody;\n    World.addConstraint = Composite.addConstraint;\n\n})();\n\n\n/***/ })\n/******/ ]);\n});","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.nc = undefined;","import { Framebuffer } from '../Framebuffer';\nimport { Texture } from '../texture/Texture';\n\nexport class ScaleClipBlitter {\n\n    constructor(private framebuffer: Framebuffer) {\n\n    }\n\n    public drawScaledTextureClip(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.framebuffer.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.framebuffer.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.framebuffer.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.framebuffer.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.framebuffer.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.framebuffer.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.framebuffer.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                const xxInt = xx | 0;\n                const yyInt = yy | 0;\n                const textureIndex = xxInt + yyInt * texture.width;\n                // (xxInt > texture.width - 1 ? texture.width - 1 : xxInt) +\n                // (yyInt > texture.height - 1 ? texture.height - 1 : yyInt) * texture.width;\n\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                const inverseAlpha = 1 - alpha;\n\n                const framebufferPixel = this.framebuffer.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.framebuffer.width;\n        }\n    }\n\n}\n","/**\n * Color\n *\n * @export\n * @class Color\n * @see https://www.rapidtables.com/web/color/RGB_Color.html\n * @author Johannes Diemke\n */\nexport class Color {\n\n    public static readonly BLACK: Color = new Color(0, 0, 0, 255);\n    public static readonly WHITE: Color = new Color(255, 255, 255, 255);\n    public static readonly RED: Color = new Color(255, 0, 0, 255);\n    public static readonly GREEN: Color = new Color(0, 255, 0, 255);\n    public static readonly LIME: Color = new Color(0, 255, 0, 255);\n    public static readonly BLUE: Color = new Color(0, 0, 255, 255);\n    public static readonly DARK_BLUE: Color = new Color(0, 0, 64, 255);\n    public static readonly YELLOW: Color = new Color(255, 255, 0, 255);\n    public static readonly CYAN: Color = new Color(0, 255, 255, 255);\n    public static readonly MAGENTA: Color = new Color(255, 0, 255, 255);\n    public static readonly SLATE_GRAY: Color = new Color(112, 128, 144, 255);\n    public static readonly DARK_GRAY: Color = new Color(19, 19, 20, 255);\n    public static readonly ORANGE: Color = new Color(255, 160, 122);\n\n    constructor(public r: number = 0, public g: number = 0, public b: number = 0, public a: number = 255) {\n    }\n\n    public toPackedFormat(): number {\n        return this.r | this.g << 8 | this.b << 16 | this.a << 24;\n    }\n\n    public sub(color: Color): Color {\n        return new Color(this.r - color.r, this.g - color.g, this.b - color.b, 255);\n    }\n\n    public add(color: Color): Color {\n        return new Color(this.r + color.r, this.g + color.g, this.b + color.b, 255);\n    }\n\n    public div(num: number): Color {\n        return new Color(this.r / num, this.g / num, this.b / num, 255);\n    }\n\n    public mul(num: number): Color {\n        return new Color(this.r * num, this.g * num, this.b * num, 255);\n    }\n\n}\n","export enum CullFace {\n    FRONT = 0,\n    BACK = 1,\n    DISABLED\n}\n","export class Vector4f {\n\n    public x: number;\n    public y: number;\n    public z: number;\n    public w: number;\n\n    constructor(x: number, y: number, z: number, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    public sub(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x - vec.x, this.y - vec.y, this.z - vec.z, this.w - vec.w);\n    }\n\n    public add(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x + vec.x, this.y + vec.y, this.z + vec.z, this.w + vec.w);\n    }\n\n    public cross(vec: Vector4f): Vector4f {\n        return new Vector4f(this.y * vec.z - this.z * vec.y,\n            this.z * vec.x - this.x * vec.z,\n            this.x * vec.y - this.y * vec.x, 0.0);\n    }\n\n    public normalize(): Vector4f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n\n    public sub2(vec1: Vector4f, vec2: Vector4f): void {\n        this.x = vec1.x - vec2.x;\n        this.y = vec1.y - vec2.y;\n        this.z = vec1.z - vec2.z;\n    }\n\n    public add2(vec: Vector4f, vec2: Vector4f): void {\n        this.x = vec.x + vec2.x;\n        this.y = vec.y + vec2.y;\n        this.z = vec.z + vec2.z;\n    }\n\n\n    public mul(scal: number): Vector4f {\n        return new Vector4f(this.x * scal, this.y * scal, this.z * scal, this.w);\n    }\n\n    public componentWiseMul(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x * vec.x, this.y * vec.y, this.z * vec.z, this.w * vec.w);\n    }\n\n    public dot(vec: Vector4f): number {\n        return this.x * vec.x + this.y * vec.y + this.z * vec.z;\n    }\n\n    public cross2(vec1: Vector4f, vec2: Vector4f): void {\n        this.x = vec1.y * vec2.z - vec1.z * vec2.y;\n        this.y = vec1.z * vec2.x - vec1.x * vec2.z;\n        this.z = vec1.x * vec2.y - vec1.y * vec2.x;\n    }\n\n    public normalize2(): void {\n        const reci: number = 1.0 / this.length();\n        this.x *= reci;\n        this.y *= reci;\n        this.z *= reci;\n    }\n\n\n}\n","import { Vector4f } from '../math/index';\nimport { FlatShadedFace } from './FlatShadedFace';\nimport { FlatshadedMesh } from './FlatshadedMesh';\n\nexport class AbstractGeometricObject {\n\n    protected mesh: FlatshadedMesh;\n    protected inverse: boolean;\n\n    protected buildMesh(points: Array<Vector4f>, index: Array<number>, inverse: boolean = false): void {\n        this.inverse = inverse;\n        const normals: Array<Vector4f> = new Array<Vector4f>();\n\n        // todo use index array for normals to have less normal objects\n        // compute normal and check wheter the normal already exists. then reuse inded\n        // maybe have a similarity faktor to reuse similar normals\n        for (let i = 0; i < index.length; i += 3) {\n            const normal = points[index[i + 1]].sub(points[index[i]]).cross(points[index[i + 2]].sub(points[index[i]]));\n            normals.push(this.inverse ? normal.normalize().mul(-1) : normal.normalize()); // normalize?\n        }\n\n\n        const faces: Array<FlatShadedFace> = new Array<FlatShadedFace>();\n\n        for (let i = 0; i < index.length; i += 3) {\n\n            faces.push({\n                n1: i / 3,\n                n2: i / 3,\n                n3: i / 3,\n                v1: index[0 + i],\n                v2: index[1 + i],\n                v3: index[2 + i],\n            });\n        }\n\n        // Create class for objects\n        this.mesh = {\n            points,\n            normals,\n            faces,\n            transformedPoints: points.map(() => new Vector4f(0, 0, 0, 0)),\n            transformedNormals: normals.map(() => new Vector4f(0, 0, 0, 0))\n        };\n    }\n\n    public getMesh(): FlatshadedMesh {\n        return this.mesh;\n    }\n\n}\n","export class Vector3f {\n\n    public x: number;\n    public y: number;\n    public z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    public mult(scale: number): Vector3f {\n        return new Vector3f(this.x * scale, this.y * scale, this.z * scale);\n    }\n\n    public sub(vec: Vector3f): Vector3f {\n        return new Vector3f(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n    }\n\n    public sub2(vec1: Vector3f, vec2: Vector3f): void {\n        this.x = vec1.x - vec2.x;\n        this.y = vec1.y - vec2.y;\n        this.z = vec1.z - vec2.z;\n    }\n\n    public mul(scal: number): Vector3f {\n        return new Vector3f(this.x * scal, this.y * scal, this.z * scal);\n    }\n\n    public add(vec: Vector3f): Vector3f {\n        return new Vector3f(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n    }\n\n    public add2(vec: Vector3f, vec2: Vector3f): void {\n        this.x = vec.x + vec2.x;\n        this.y = vec.y + vec2.y;\n        this.z = vec.z + vec2.z;\n    }\n\n    public cross(vec: Vector3f): Vector3f {\n        return new Vector3f(this.y * vec.z - this.z * vec.y,\n            this.z * vec.x - this.x * vec.z,\n            this.x * vec.y - this.y * vec.x);\n    }\n\n    public cross2(vec1: Vector3f, vec2: Vector3f): void {\n        this.x = vec1.y * vec2.z - vec1.z * vec2.y;\n        this.y = vec1.z * vec2.x - vec1.x * vec2.z;\n        this.z = vec1.x * vec2.y - vec1.y * vec2.x;\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    public normalize(): Vector3f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public normalize2(): void {\n        const reci: number = 1.0 / this.length();\n        this.x *= reci;\n        this.y *= reci;\n        this.z *= reci;\n    }\n\n    public dot(vec: Vector3f): number {\n        return this.x * vec.x + this.y * vec.y + this.z * vec.z;\n    }\n\n}\n","import { Vector4f } from '../math/Vector4f';\nimport { AbstractGeometricObject } from './AbstractGeometricObject';\nimport { Vector3f } from '../math/Vector3f';\n\nexport class Torus extends AbstractGeometricObject {\n\n    public constructor(invert: boolean = false) {\n        super();\n\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 15;\n        const STEPS2 = 12;\n        // find a better solution for inversion\n        // maybe configuration by constructor of base class and construction of geometry\n        // in template method pattern method\n        this.inverse = invert;\n\n        for (let i = 0; i < STEPS; i++) {\n            const frame = this.torusFunction(i * 2 * Math.PI / STEPS);\n            const frame2 = this.torusFunction(i * 2 * Math.PI / STEPS + 0.1);\n            const up = new Vector3f(0.0, 4.0, 0);\n            const right = frame2.sub(frame).cross(up);\n\n            for (let r = 0; r < STEPS2; r++) {\n                const pos = up.mul(Math.sin(r * 2 * Math.PI / STEPS2)).add(right.mul(Math.cos(r * 2 * Math.PI / STEPS2))).add(frame);\n                points.push(new Vector4f(pos.x, pos.y, pos.z, 1.0));\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2) % points.length);\n            }\n        }\n\n        this.buildMesh(points, index);\n    }\n\n    public torusFunction(alpha: number): Vector3f {\n        return new Vector3f(Math.sin(alpha) * 10, 0, Math.cos(alpha) * 10);\n    }\n\n}\n","\nexport class Vector2f {\n\n    constructor(public x: number, public y: number) {\n\n    }\n\n    public perp(): Vector2f {\n        return new Vector2f(-this.y, this.x);\n    }\n\n    public sub(vec: Vector2f): Vector2f {\n        return new Vector2f(this.x - vec.x, this.y - vec.y);\n    }\n\n    public mul(scal: number): Vector2f {\n        return new Vector2f(this.x * scal, this.y * scal);\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    public normalize(): Vector2f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public dot(vec: Vector2f): number {\n        return this.x * vec.x + this.y * vec.y;\n    }\n\n}\n","/**\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_00_introduction.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_00_research.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_01_pipeline.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_02_transformations.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_03_projections.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_04_lighting.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_05_rasterization.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_06_texturing.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_07_shadows.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_08_transparencyReflection.pdf\n * https://cg.informatik.uni-freiburg.de/teaching.htm\n * @author Johannes Diemke\n * @since 2017-05-07\n */\n\nimport { Vector3f } from './Vector3f';\nimport { Vector4f } from './Vector4f';\n\nexport class Matrix4f {\n\n    public m11: number;\n    public m12: number;\n    public m13: number;\n    public m14: number;\n\n    public m21: number;\n    public m22: number;\n    public m23: number;\n    public m24: number;\n\n    public m31: number;\n    public m32: number;\n    public m33: number;\n    public m34: number;\n\n    public m41: number;\n    public m42: number;\n    public m43: number;\n    public m44: number;\n\n    static constructIdentityMatrix(): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n\n    public setIdentityMatrix(): void {\n\n\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public transpose(): Matrix4f {\n        const transpose: Matrix4f = new Matrix4f();\n\n        transpose.m11 = this.m11;\n        transpose.m12 = this.m21;\n        transpose.m13 = this.m31;\n        transpose.m14 = this.m41;\n\n        transpose.m21 = this.m12;\n        transpose.m22 = this.m22;\n        transpose.m23 = this.m32;\n        transpose.m24 = this.m42;\n\n        transpose.m31 = this.m13;\n        transpose.m32 = this.m23;\n        transpose.m33 = this.m33;\n        transpose.m34 = this.m43;\n\n        transpose.m41 = this.m14;\n        transpose.m42 = this.m24;\n        transpose.m43 = this.m34;\n        transpose.m44 = this.m44;\n\n        return transpose;\n    }\n\n    public computeNormalMatrix(): Matrix4f {\n        // http://www.lighthouse3d.com/tutorials/glsl-12-tutorial/the-normal-matrix/\n        // https://www.gamedev.net/forums/topic/443040-inverse-of-modelview-matrix/\n        // https://computergraphics.stackexchange.com/questions/1502/why-is-the-transposed-inverse-of-the-model-view-matrix-used-to-transform-the-nor\n        return this.inverse().transpose();\n    }\n\n    public inverse(): Matrix4f {\n        // Inverse hack\n        // - only works when the MV matrix only contains\n        // translation and rotation and scaling that is the same in all directions\n\n        const inverseTranslation: Matrix4f = Matrix4f.constructIdentityMatrix();\n        inverseTranslation.m14 = -this.m14;\n        inverseTranslation.m24 = -this.m24;\n        inverseTranslation.m34 = -this.m34;\n\n        const scale1 = 1.0 / Math.sqrt(this.m11 * this.m11 + this.m12 * this.m12 + this.m13 * this.m13);\n        const scale2 = 1.0 / Math.sqrt(this.m21 * this.m21 + this.m22 * this.m22 + this.m23 * this.m23);\n        const scale3 = 1.0 / Math.sqrt(this.m31 * this.m31 + this.m32 * this.m32 + this.m33 * this.m33);\n        const inverseRotation: Matrix4f = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11 * scale1;\n        inverseRotation.m21 = this.m12 * scale1;\n        inverseRotation.m31 = this.m13 * scale1;\n\n        inverseRotation.m12 = this.m21 * scale2;\n        inverseRotation.m22 = this.m22 * scale2;\n        inverseRotation.m32 = this.m23 * scale2;\n\n        inverseRotation.m13 = this.m31 * scale3;\n        inverseRotation.m23 = this.m32 * scale3;\n        inverseRotation.m33 = this.m33 * scale3;\n\n        return inverseRotation.multiplyMatrix(inverseTranslation);\n    }\n\n    public getInverseRotation(): Matrix4f {\n        const scale = 1.0;\n        const inverseRotation = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11 * scale;\n        inverseRotation.m21 = this.m12 * scale;\n        inverseRotation.m31 = this.m13 * scale;\n\n        inverseRotation.m12 = this.m21 * scale;\n        inverseRotation.m22 = this.m22 * scale;\n        inverseRotation.m32 = this.m23 * scale;\n\n        inverseRotation.m13 = this.m31 * scale;\n        inverseRotation.m23 = this.m32 * scale;\n        inverseRotation.m33 = this.m33 * scale;\n\n        return inverseRotation;\n    }\n\n    public getRotation(): Matrix4f {\n\n        const inverseRotation = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11;\n        inverseRotation.m21 = this.m21;\n        inverseRotation.m31 = this.m31;\n\n        inverseRotation.m12 = this.m12;\n        inverseRotation.m22 = this.m22;\n        inverseRotation.m32 = this.m32;\n\n        inverseRotation.m13 = this.m13;\n        inverseRotation.m23 = this.m23;\n        inverseRotation.m33 = this.m33;\n\n        return inverseRotation;\n    }\n\n    static constructShadowMatrix(): Matrix4f {\n        const planePoint: Vector3f = new Vector3f(0, -1.5, 0);\n        const planeNormal: Vector3f = new Vector3f(0, 1, 0);\n        const lightPosition: Vector3f = new Vector3f(0, 11, 0);\n\n        const d = -planePoint.dot(planeNormal);\n        const NdotL = planeNormal.x * lightPosition.x +\n            planeNormal.y * lightPosition.y +\n            planeNormal.z * lightPosition.z;\n\n        const shadowMatrix: Matrix4f = new Matrix4f();\n\n        shadowMatrix.m11 = NdotL + d - lightPosition.x * planeNormal.x;\n        shadowMatrix.m12 = - lightPosition.x * planeNormal.y;\n        shadowMatrix.m13 = - lightPosition.x * planeNormal.z;\n        shadowMatrix.m14 = - lightPosition.x * d;\n\n        shadowMatrix.m21 = - lightPosition.y * planeNormal.x;\n        shadowMatrix.m22 = NdotL + d - lightPosition.y * planeNormal.y;\n        shadowMatrix.m23 = - lightPosition.y * planeNormal.z;\n        shadowMatrix.m24 = - lightPosition.y * d;\n\n        shadowMatrix.m31 = - lightPosition.z * planeNormal.x;\n        shadowMatrix.m32 = - lightPosition.z * planeNormal.y;\n        shadowMatrix.m33 = NdotL + d - lightPosition.z * planeNormal.z;\n        shadowMatrix.m34 = - lightPosition.z * d;\n\n        shadowMatrix.m41 = - planeNormal.x;\n        shadowMatrix.m42 = - planeNormal.y;\n        shadowMatrix.m43 = - planeNormal.z;\n        shadowMatrix.m44 = NdotL;\n\n        return shadowMatrix;\n\n    }\n\n    static constructTranslationMatrix(tx: number, ty: number, tz: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = tx;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = ty;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = tz;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public setTranslationMatrix(tx: number, ty: number, tz: number): void {\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = tx;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = ty;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = tz;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    static constructXRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = Math.cos(alpha);\n        matrix.m23 = -Math.sin(alpha);\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = Math.sin(alpha);\n        matrix.m33 = Math.cos(alpha);\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public setXRotationMatrix(alpha: number): void {\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = Math.cos(alpha);\n        this.m23 = -Math.sin(alpha);\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = Math.sin(alpha);\n        this.m33 = Math.cos(alpha);\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setZRotationMatrix(alpha: number): void {\n        this.m11 = Math.cos(alpha);\n        this.m12 = -Math.sin(alpha);\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = Math.sin(alpha);\n        this.m22 = Math.cos(alpha);\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setScaleMatrix(sx: number, sy: number, sz: number): void {\n        this.m11 = sx;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = sy;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = sz;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setYRotationMatrix(alpha: number): void {\n        this.m11 = Math.cos(alpha);\n        this.m12 = 0.0;\n        this.m13 = Math.sin(alpha);\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = -Math.sin(alpha);\n        this.m32 = 0.0;\n        this.m33 = Math.cos(alpha);\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n\n    public setRotationMatrix(x: number,y: number,z: number, alpha: number): void {\n        const c = Math.cos(Math.PI * 2 *alpha / 360 );\n        const s = Math.sin(Math.PI * 2 *alpha / 360 );\n        const vector = new Vector3f(x,y,z);\n        vector.normalize2();\n\n        this.m11 = (1.0 - c) * vector.x * vector.x + c;\n        this.m12 = (1.0 - c) * vector.x * vector.y - s * vector.z;\n        this.m13 = (1.0 - c) * vector.x * vector.z + s * vector.y;\n        this.m14 = 0.0;\n\n        this.m21 = (1.0 - c) * vector.x * vector.y + s * vector.z;\n        this.m22 = (1.0 - c) * vector.y * vector.y + c;\n        this.m23 = (1.0 - c) * vector.y * vector.z - s * vector.x;\n        this.m24 = 0.0;\n\n        this.m31 = (1.0 - c) * vector.x * vector.z - s * vector.y;\n        this.m32 = (1.0 - c) * vector.y * vector.z + s * vector.x;\n        this.m33 = (1.0 - c) * vector.z * vector.z + c;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    static constructYRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = Math.cos(alpha);\n        matrix.m12 = 0.0;\n        matrix.m13 = Math.sin(alpha);\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = -Math.sin(alpha);\n        matrix.m32 = 0.0;\n        matrix.m33 = Math.cos(alpha);\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    static constructZRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = Math.cos(alpha);\n        matrix.m12 = -Math.sin(alpha);\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = Math.sin(alpha);\n        matrix.m22 = Math.cos(alpha);\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    static constructScaleMatrix(sx: number, sy: number = sx, sz: number = sy): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = sx;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = sy;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = sz;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public multiplyMatrix(matrix: Matrix4f): Matrix4f {\n        const result = new Matrix4f();\n\n        result.m11 = this.m11 * matrix.m11 + this.m12 * matrix.m21 + this.m13 * matrix.m31 + this.m14 * matrix.m41;\n        result.m21 = this.m21 * matrix.m11 + this.m22 * matrix.m21 + this.m23 * matrix.m31 + this.m24 * matrix.m41;\n        result.m31 = this.m31 * matrix.m11 + this.m32 * matrix.m21 + this.m33 * matrix.m31 + this.m34 * matrix.m41;\n        result.m41 = this.m41 * matrix.m11 + this.m42 * matrix.m21 + this.m43 * matrix.m31 + this.m44 * matrix.m41;\n\n        result.m12 = this.m11 * matrix.m12 + this.m12 * matrix.m22 + this.m13 * matrix.m32 + this.m14 * matrix.m42;\n        result.m22 = this.m21 * matrix.m12 + this.m22 * matrix.m22 + this.m23 * matrix.m32 + this.m24 * matrix.m42;\n        result.m32 = this.m31 * matrix.m12 + this.m32 * matrix.m22 + this.m33 * matrix.m32 + this.m34 * matrix.m42;\n        result.m42 = this.m41 * matrix.m12 + this.m42 * matrix.m22 + this.m43 * matrix.m32 + this.m44 * matrix.m42;\n\n        result.m13 = this.m11 * matrix.m13 + this.m12 * matrix.m23 + this.m13 * matrix.m33 + this.m14 * matrix.m43;\n        result.m23 = this.m21 * matrix.m13 + this.m22 * matrix.m23 + this.m23 * matrix.m33 + this.m24 * matrix.m43;\n        result.m33 = this.m31 * matrix.m13 + this.m32 * matrix.m23 + this.m33 * matrix.m33 + this.m34 * matrix.m43;\n        result.m43 = this.m41 * matrix.m13 + this.m42 * matrix.m23 + this.m43 * matrix.m33 + this.m44 * matrix.m43;\n\n        result.m14 = this.m11 * matrix.m14 + this.m12 * matrix.m24 + this.m13 * matrix.m34 + this.m14 * matrix.m44;\n        result.m24 = this.m21 * matrix.m14 + this.m22 * matrix.m24 + this.m23 * matrix.m34 + this.m24 * matrix.m44;\n        result.m34 = this.m31 * matrix.m14 + this.m32 * matrix.m24 + this.m33 * matrix.m34 + this.m34 * matrix.m44;\n        result.m44 = this.m41 * matrix.m14 + this.m42 * matrix.m24 + this.m43 * matrix.m34 + this.m44 * matrix.m44;\n\n        return result;\n    }\n\n    public multiply2(matrix: Matrix4f, matrix2: Matrix4f): void {\n        this.m11 = matrix.m11 * matrix2.m11 + matrix.m12 * matrix2.m21 + matrix.m13 * matrix2.m31 + matrix.m14 * matrix2.m41;\n        this.m21 = matrix.m21 * matrix2.m11 + matrix.m22 * matrix2.m21 + matrix.m23 * matrix2.m31 + matrix.m24 * matrix2.m41;\n        this.m31 = matrix.m31 * matrix2.m11 + matrix.m32 * matrix2.m21 + matrix.m33 * matrix2.m31 + matrix.m34 * matrix2.m41;\n        this.m41 = matrix.m41 * matrix2.m11 + matrix.m42 * matrix2.m21 + matrix.m43 * matrix2.m31 + matrix.m44 * matrix2.m41;\n\n        this.m12 = matrix.m11 * matrix2.m12 + matrix.m12 * matrix2.m22 + matrix.m13 * matrix2.m32 + matrix.m14 * matrix2.m42;\n        this.m22 = matrix.m21 * matrix2.m12 + matrix.m22 * matrix2.m22 + matrix.m23 * matrix2.m32 + matrix.m24 * matrix2.m42;\n        this.m32 = matrix.m31 * matrix2.m12 + matrix.m32 * matrix2.m22 + matrix.m33 * matrix2.m32 + matrix.m34 * matrix2.m42;\n        this.m42 = matrix.m41 * matrix2.m12 + matrix.m42 * matrix2.m22 + matrix.m43 * matrix2.m32 + matrix.m44 * matrix2.m42;\n\n        this.m13 = matrix.m11 * matrix2.m13 + matrix.m12 * matrix2.m23 + matrix.m13 * matrix2.m33 + matrix.m14 * matrix2.m43;\n        this.m23 = matrix.m21 * matrix2.m13 + matrix.m22 * matrix2.m23 + matrix.m23 * matrix2.m33 + matrix.m24 * matrix2.m43;\n        this.m33 = matrix.m31 * matrix2.m13 + matrix.m32 * matrix2.m23 + matrix.m33 * matrix2.m33 + matrix.m34 * matrix2.m43;\n        this.m43 = matrix.m41 * matrix2.m13 + matrix.m42 * matrix2.m23 + matrix.m43 * matrix2.m33 + matrix.m44 * matrix2.m43;\n\n        this.m14 = matrix.m11 * matrix2.m14 + matrix.m12 * matrix2.m24 + matrix.m13 * matrix2.m34 + matrix.m14 * matrix2.m44;\n        this.m24 = matrix.m21 * matrix2.m14 + matrix.m22 * matrix2.m24 + matrix.m23 * matrix2.m34 + matrix.m24 * matrix2.m44;\n        this.m34 = matrix.m31 * matrix2.m14 + matrix.m32 * matrix2.m24 + matrix.m33 * matrix2.m34 + matrix.m34 * matrix2.m44;\n        this.m44 = matrix.m41 * matrix2.m14 + matrix.m42 * matrix2.m24 + matrix.m43 * matrix2.m34 + matrix.m44 * matrix2.m44;\n    }\n\n    public multiply(vector: Vector3f): Vector3f {\n        return new Vector3f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34);\n    }\n\n    public multiplyHom(vector: Vector4f): Vector4f {\n        return new Vector4f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w,\n            this.m41 * vector.x + this.m42 * vector.y + this.m43 * vector.z + this.m44 * vector.w);\n    }\n\n    public multiplyHomArr(vector: Vector4f, result: Vector4f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w;\n    }\n\n    public multiplyHomArr2(vector: Vector4f, result: Vector4f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w;\n        result.w = this.m41 * vector.x + this.m42 * vector.y + this.m43 * vector.z + this.m44 * vector.w;\n        result.x /= result.w;\n        result.y /= result.w;\n        result.z /= result.w;\n    }\n\n    public multiplyArr(vector: Vector3f, result: Vector3f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34;\n    }\n\n}\n","import { Vector3f } from './Vector3f';\n\nexport class Matrix3f {\n\n    public m11: number;\n    public m12: number;\n    public m13: number;\n\n    public m21: number;\n    public m22: number;\n    public m23: number;\n\n    public m31: number;\n    public m32: number;\n    public m33: number;\n\n    static constructXRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = cos;\n        matrix.m23 = -sin;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = sin;\n        matrix.m33 = cos;\n\n        return matrix;\n    }\n\n    static constructYRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = Math.cos(angle);\n        matrix.m12 = 0.0;\n        matrix.m13 = Math.sin(angle);\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n\n        matrix.m31 = -Math.sin(angle);\n        matrix.m32 = 0.0;\n        matrix.m33 = Math.cos(angle);\n\n        return matrix;\n    }\n\n    static constructZRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = Math.cos(angle);\n        matrix.m12 = -Math.sin(angle);\n        matrix.m13 = 0.0;\n\n        matrix.m21 = Math.sin(angle);\n        matrix.m22 = Math.cos(angle);\n        matrix.m23 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n\n        return matrix;\n    }\n\n    static constructScaleMatrix(xScale: number, yScale: number, zScale: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = xScale;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = yScale;\n        matrix.m23 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = zScale;\n\n        return matrix;\n    }\n\n    public multiplyMatrix(matrix: Matrix3f): Matrix3f {\n        const result = new Matrix3f();\n\n        result.m11 = this.m11 * matrix.m11 + this.m12 * matrix.m21 + this.m13 * matrix.m31;\n        result.m21 = this.m21 * matrix.m11 + this.m22 * matrix.m21 + this.m23 * matrix.m31;\n        result.m31 = this.m31 * matrix.m11 + this.m32 * matrix.m21 + this.m33 * matrix.m31;\n\n        result.m12 = this.m11 * matrix.m12 + this.m12 * matrix.m22 + this.m13 * matrix.m32;\n        result.m22 = this.m21 * matrix.m12 + this.m22 * matrix.m22 + this.m23 * matrix.m32;\n        result.m32 = this.m31 * matrix.m12 + this.m32 * matrix.m22 + this.m33 * matrix.m32;\n\n        result.m13 = this.m11 * matrix.m13 + this.m12 * matrix.m23 + this.m13 * matrix.m33;\n        result.m23 = this.m21 * matrix.m13 + this.m22 * matrix.m23 + this.m23 * matrix.m33;\n        result.m33 = this.m31 * matrix.m13 + this.m32 * matrix.m23 + this.m33 * matrix.m33;\n\n        return result;\n\n    }\n\n    public multiply(vector: Vector3f): Vector3f {\n        return new Vector3f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z);\n    }\n}","export class Interpolator {\n\n    public static interpolate(start: number, end: number, current: number): number {\n        if (current <= start) {\n            return 0;\n        }\n        if (current >= end) {\n            return 1;\n        }\n        return (current - start) / (end - start);\n    }\n\n    public static cosineInterpolate(y1: number, y2: number, mu: number): number {\n        if (mu <= y1) { return 0; }\n        if (mu >= y2) { return 1; }\n        const mu2 = (mu - y1) / (y2 - y1);\n        return (1 - Math.cos(mu2 * Math.PI)) / 2;\n    }\n\n}\n","export default class RandomNumberGenerator {\n\n    private seed: number;\n\n    public constructor() {\n        this.seed = 6;\n    }\n\n    public getFloat(): number {\n        this.seed = (this.seed * 9301 + 49297) % 233280;\n        return this.seed / 233280;\n    }\n\n    public setSeed(seed: number): void {\n        this.seed = seed;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\n\nexport abstract class AbstractTriangleRasterizer {\n\n    public abstract drawTriangleDDA(framebuffer: Framebuffer, p1: Vertex, p2: Vertex, p3: Vertex): void;\n\n}\n","import { Framebuffer } from \"../Framebuffer\";\nimport { Vertex } from \"../Vertex\";\nimport { AbstractTriangleRasterizer } from \"./AbstractTriangleRasterizer\";\n\nexport abstract class AbstractScannlineTriangleRasterizer extends AbstractTriangleRasterizer {\n\n    private temp: Vertex = null;\n    \n    /**\n     * Triangle rasterization using edge-walking strategy for scan-conversion.\n     * Internally DDA is used for edge-walking.\n     */\n    public drawTriangleDDA(framebuffer: Framebuffer, p1: Vertex, p2: Vertex, p3: Vertex): void {\n\n        if (p1.projection.y > p3.projection.y) {\n            this.temp = p1;\n            p1 = p3;\n            p3 = this.temp;\n        }\n\n        if (p1.projection.y > p2.projection.y) {\n            this.temp = p1;\n            p1 = p2;\n            p2 = this.temp;\n        }\n\n        if (p2.projection.y > p3.projection.y) {\n            this.temp = p2;\n            p2 = p3;\n            p3 = this.temp;\n        }\n\n        if (p1.projection.y === p3.projection.y) {\n            return;\n        } else {\n            const x: number = (p3.projection.x - p1.projection.x) * (p2.projection.y - p1.projection.y) /\n                (p3.projection.y - p1.projection.y) + p1.projection.x;\n            if (x > p2.projection.x) {\n                this.fillLongRightTriangle(framebuffer, p1, p2, p3);\n            } else {\n                this.fillLongLeftTriangle(framebuffer,p1,p2,p3);\n            }\n        }\n    }\n\n    protected abstract fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void;\n    protected abstract fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void;\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class FlatShadingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n    private slope1: number;\n    private slope2: number;\n    private zslope1: number;\n    private zslope2: number;\n    private curz1: number;\n    private curz2: number;\n    private xPosition: number;\n    private xPosition2: number;\n    private yPosition: number;\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        const color: number = v1.color.toPackedFormat();\n\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n\n        this.slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        this.slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n\n        this.zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        this.zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n\n        this.curz1 = 1.0 / v1.projection.z;\n        this.curz2 = 1.0 / v1.projection.z;\n\n        this.xPosition = v1.projection.x;\n        this.xPosition2 = v1.projection.x;\n        this.yPosition = v1.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceLeft, color);\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n        this.slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        this.zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n\n        this.xPosition = v2.projection.x;\n        this.yPosition = v2.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceLeft, color);\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        const color: number = v1.color.toPackedFormat();\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        this.slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        this.slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        this.zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        this.zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        this.curz1 = 1.0 / v1.projection.z;\n        this.curz2 = 1.0 / v1.projection.z;\n\n        this.xPosition = v1.projection.x;\n        this.xPosition2 = v1.projection.x;\n        this.yPosition = v1.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceRight, color);\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        this.slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        this.zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        this.curz2 = 1.0 / v2.projection.z;\n        this.xPosition2 = v2.projection.x;\n        this.yPosition = v2.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceRight, color);\n    }\n\n    drawSpan(framebuffer: Framebuffer, distance: number, color: number) {\n        for (let i = 0; i < distance; i++) {\n            const length = (this.xPosition2) - (this.xPosition);\n            const spanzStep = Math.round(this.curz2 - this.curz1) / length;\n            let wStart = this.curz1;\n            for (let j = 0; j < length; j++) {\n                const framebufferIndex = Math.round(this.yPosition) * framebuffer.width + Math.round(this.xPosition + j);\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    framebuffer.framebuffer[framebufferIndex] = color;\n                }\n                wStart += spanzStep;\n            }\n            this.xPosition += this.slope1;\n            this.xPosition2 += this.slope2;\n            this.yPosition++;\n            this.curz1 += this.zslope1;\n            this.curz2 += this.zslope2;\n        }\n    }\n\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { Vector3f } from '../../math';\n\n/**\n * digital differential analyser line drawing algorithm\n * using fixed point math.\n * renders approx 1400 lines per millisecond on my machine\n */\nexport class LineRasterizerDda {\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public drawLineDDA(start: Vector3f, end: Vector3f, color: number): void {\n        const xDistance: number = end.x - start.x;\n        const yDistance: number = end.y - start.y;\n\n        let dx: number;\n        let dy: number;\n        let length: number;\n\n        if (Math.abs(xDistance) > Math.abs(yDistance)) {\n            dx = Math.sign(xDistance);\n            dy = yDistance / Math.abs(xDistance);\n            length = Math.abs(xDistance);\n        } else {\n            dx = xDistance / Math.abs(yDistance);\n            dy = Math.sign(yDistance);\n            length = Math.abs(yDistance);\n        }\n\n        let xPosition: number = start.x;\n        let yPosition: number = start.y;\n\n        // w=1/z interpolation for z-buffer\n        let wStart = 1 / (start.z);\n        const wDelta = (1 / end.z - 1 / start.z) / length;\n\n        for (let i = 0; i <= length; i++) {\n            if (wStart < this.framebuffer.wBuffer[Math.round(xPosition) + Math.round(yPosition) * this.framebuffer.width]) {\n                this.framebuffer.wBuffer[Math.round(xPosition) + Math.round(yPosition) * this.framebuffer.width] = wStart;\n                this.framebuffer.drawPixel(Math.round(xPosition), Math.round(yPosition), color);\n            }\n            xPosition += dx;\n            yPosition += dy;\n            wStart += wDelta;\n        }\n    }\n\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { Vector3f } from '../../math';\n\nexport class LineRasterizerNoZ {\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public drawLineDDANoZ(start: Vector3f, end: Vector3f, color: number): void {\n        const xDistance: number = end.x - start.x;\n        const yDistance: number = end.y - start.y;\n\n        let dx: number;\n        let dy: number;\n        let length: number;\n\n        if (Math.abs(xDistance) > Math.abs(yDistance)) {\n            dx = Math.sign(xDistance);\n            dy = yDistance / Math.abs(xDistance);\n            length = Math.abs(xDistance);\n        } else {\n            dx = xDistance / Math.abs(yDistance);\n            dy = Math.sign(yDistance);\n            length = Math.abs(yDistance);\n        }\n\n        let xPosition: number = start.x;\n        let yPosition: number = start.y;\n\n        for (let i = 0; i <= length; i++) {\n\n            this.framebuffer.drawPixel(Math.round(xPosition), Math.round(yPosition), color);\n\n            xPosition += dx;\n            yPosition += dy;\n\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class TexturedTriangleRasterizer extends AbstractScannlineTriangleRasterizer{\n\n    // requires\n    // bob und wbuffer\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        // left slope\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n        let slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        let tslope1u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope1v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        let zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        let curz1 = 1.0 / v1.projection.z;\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let xPosition = v1.projection.x;\n\n        // right slope\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n        const slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n        const tslope2u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n        const tslope2v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n        const zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        let curz2 = 1.0 / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n        let xPosition2 = v1.projection.x;\n\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   //color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n\n        if (yDistanceLeft === 0) {\n            return;\n        }\n\n        slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n        tslope1u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceLeft;\n        tslope1v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceLeft;\n\n        curz1 = 1.0 / v2.projection.z;\n        curu1 = v2.textureCoordinate.u / v2.projection.z;\n        curv1 = v2.textureCoordinate.v / v2.projection.z;\n        xPosition = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   //color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        let slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        const slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        const tslope1u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope2u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        const tslope1v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        let tslope2v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n\n\n        let zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        const zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   //color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        tslope2u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceRight;\n        tslope2v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceRight;\n\n        curz2 = 1.0 / v2.projection.z;\n\n        curu2 = v2.textureCoordinate.u / v2.projection.z;\n        curv2 = v2.textureCoordinate.v / v2.projection.z;\n\n        xPosition2 = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                  // color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { AbstractRenderingPipeline } from '../rendering-pipelines/AbstractRenderingPipeline';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class TexturedAlphaBlendingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n\n\n    // requires\n    // bob und wbuffer\n    constructor(private framebuffer: Framebuffer, private pipeline: AbstractRenderingPipeline) {\n        super();\n    }\n\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n\n\n\n\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n\n        let slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        const slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n\n        let tslope1u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        const tslope2u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        let tslope1v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        const tslope2v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n\n        let zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        const zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                const currentColor = this.framebuffer.framebuffer[framebufferIndex];\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n\n                    // TODO: move out of loops!\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (currentColor >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (currentColor >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (currentColor >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n\n        if (yDistanceLeft === 0) {\n            return;\n        }\n\n        slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n        tslope1u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceLeft;\n        tslope1v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceLeft;\n\n        curz1 = 1.0 / v2.projection.z;\n        curu1 = v2.textureCoordinate.u / v2.projection.z;\n        curv1 = v2.textureCoordinate.v / v2.projection.z;\n        xPosition = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer,  v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        let slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        const slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        const tslope1u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope2u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        const tslope1v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v  / v1.projection.z) / yDistanceLeft;\n        let tslope2v = (v2.textureCoordinate.v  / v2.projection.z - v1.textureCoordinate.v  / v1.projection.z) / yDistanceRight;\n\n\n        let zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        const zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        tslope2u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceRight;\n        tslope2v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceRight;\n\n        curz2 = 1.0 / v2.projection.z;\n\n        curu2 = v2.textureCoordinate.u / v2.projection.z;\n        curv2 = v2.textureCoordinate.v / v2.projection.z;\n\n        xPosition2 = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n}\n","export class TextureCoordinate {\n    public u: number;\n    public v: number;\n\n    constructor(u?: number, v?: number) {\n        this.u = u;\n        this.v = v;\n    }\n}\n","import { Color } from './core/Color';\nimport { Vector4f } from './math/index';\nimport { TextureCoordinate } from './TextureCoordinate';\n\nexport class Vertex {\n    public position: Vector4f;\n    public projection: Vector4f = new Vector4f(0,0,0);\n    public normal: Vector4f;\n    public color: Color;\n    public textureCoordinate: TextureCoordinate = new TextureCoordinate();\n}\n","import { CullFace } from '../CullFace';\nimport { Framebuffer } from '../Framebuffer';\n\nexport class AbstractRenderingPipeline {\n\n    public NEAR_PLANE_Z: number = -1.7;\n    public alpha: number;\n    private cullMode: CullFace = CullFace.BACK;\n\n    constructor(protected framebuffer: Framebuffer) { }\n\n    public setCullFace(face: CullFace): void {\n        this.cullMode = face;\n    }\n\n    public setAlpha(alpha: number): void {\n        this.alpha = Math.max(Math.min(alpha, 1.0), 0.0);\n    }\n\n    public isInFrontOfNearPlane(p: { x: number; y: number; z: number }): boolean {\n        return p.z < this.NEAR_PLANE_Z;\n    }\n\n    /**\n     * based on signed polygon area computation:\n     * http://www.faqs.org/faqs/graphics/algorithms-faq/\n     * https://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-points-are-in-clockwise-order\n     * http://csharphelper.com/blog/2014/07/calculate-the-area-of-a-polygon-in-c/\n     * http://mathworld.wolfram.com/PolygonArea.html\n     *\n     * @private\n     * @param {{ x: number, y: number, z: number }} v1\n     * @param {{ x: number, y: number, z: number }} v2\n     * @param {{ x: number, y: number, z: number }} v3\n     * @returns {boolean}\n     * @memberof Framebuffer\n     *\n     */\n    public isTriangleCCW(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number }): boolean {\n        if (this.cullMode == CullFace.DISABLED) {\n            return true;\n        }\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v1.y - v1.x * v3.y;\n        if (this.cullMode == CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n    public isTriangleCCW2(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number },\n        v4: { x: number, y: number, z: number }): boolean {\n            if (this.cullMode == CullFace.DISABLED) {\n                return true;\n            }\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v4.y - v4.x * v3.y +\n            v4.x * v1.y - v1.x * v4.y;\n        if (this.cullMode === CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Matrix4f } from '../math/Matrix4f';\nimport { Vector4f } from '../math/Vector4f';\nimport { AbstractTriangleRasterizer } from '../rasterizer/AbstractTriangleRasterizer';\nimport { TexturedAlphaBlendingTriangleRasterizer } from '../rasterizer/TexturedAlphaBlendingTriangleRasterizer';\nimport { TexturedTriangleRasterizer } from '../rasterizer/TexturedTriangleRasterizer';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractRenderingPipeline } from './AbstractRenderingPipeline';\nimport { TexturedMesh } from './TexturedMesh';\n\nexport class TexturingRenderingPipeline extends AbstractRenderingPipeline {\n\n    private sphereMapping: boolean = false;\n    public triangleRasterizer: AbstractTriangleRasterizer = null;\n\n    private vertexArray: Array<Vertex> = new Array<Vertex>(\n        new Vertex(), new Vertex(), new Vertex()\n    );\n    setSphereMapping(sphereMapping: boolean) {\n        this.sphereMapping = sphereMapping;\n    }\n\n    private modelViewMatrix: Matrix4f;\n\n    private projectedVertices: Array<Vector4f> = new Array<Vector4f>(\n        new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1)\n    );\n\n    constructor(framebuffer: Framebuffer) {\n        super(framebuffer);\n        this.setAlpha(1.0);\n        this.triangleRasterizer = new TexturedTriangleRasterizer(framebuffer);\n    }\n\n    public setFramebuffer(framebuffer: Framebuffer) {\n        this.framebuffer = framebuffer;\n    }\n\n    public enableAlphaBlending(): void {\n        this.triangleRasterizer = new TexturedAlphaBlendingTriangleRasterizer(this.framebuffer, this);\n    }\n\n    public disableAlphaBlending(): void {\n        this.triangleRasterizer = new TexturedTriangleRasterizer(this.framebuffer);\n    }\n\n    public setModelViewMatrix(matrix: Matrix4f): void {\n        this.modelViewMatrix = matrix;\n    }\n\n    public drawMeshArray(framebuffer: Framebuffer, meshes: Array<TexturedMesh>): void {\n        for (let j: number = 0; j < meshes.length; j++) {\n            const model: TexturedMesh = meshes[j];\n            this.draw(framebuffer, model);\n        }\n    }\n\n    public draw(framebuffer: Framebuffer, mesh: TexturedMesh): void {\n        if (mesh.normals) {\n            const normalMatrix: Matrix4f = this.modelViewMatrix.computeNormalMatrix();\n\n            for (let i: number = 0; i < mesh.normals.length; i++) {\n                normalMatrix.multiplyHomArr(mesh.normals[i], mesh.normals2[i]);\n            }\n        }\n\n        for (let i: number = 0; i < mesh.points.length; i++) {\n            this.modelViewMatrix.multiplyHomArr(mesh.points[i], mesh.points2[i]);\n        }\n\n        for (let i: number = 0; i < mesh.faces.length; i++) {\n            const v1: Vector4f = mesh.points2[mesh.faces[i].vertices[0]];\n            const v2: Vector4f = mesh.points2[mesh.faces[i].vertices[1]];\n            const v3: Vector4f = mesh.points2[mesh.faces[i].vertices[2]];\n\n            if (this.isInFrontOfNearPlane(v1) &&\n                this.isInFrontOfNearPlane(v2) &&\n                this.isInFrontOfNearPlane(v3)) {\n\n                this.project2(v1, this.projectedVertices[0]);\n                this.project2(v2, this.projectedVertices[1]);\n                this.project2(v3, this.projectedVertices[2]);\n\n                if (this.isTriangleCCW(\n                    this.projectedVertices[0],\n                    this.projectedVertices[1],\n                    this.projectedVertices[2])) {\n\n                    this.vertexArray[0].projection = this.projectedVertices[0]; // p1 is Vector3f\n                    this.vertexArray[1].projection = this.projectedVertices[1];\n                    this.vertexArray[2].projection = this.projectedVertices[2];\n\n                    if (this.sphereMapping) {\n                        const n1: Vector4f = mesh.normals2[mesh.faces[i].normals[0]];\n                        const n2: Vector4f = mesh.normals2[mesh.faces[i].normals[1]];\n                        const n3: Vector4f = mesh.normals2[mesh.faces[i].normals[2]];\n                        framebuffer.fakeSphere(n1, this.vertexArray[0]);\n                        framebuffer.fakeSphere(n2, this.vertexArray[1]);\n                        framebuffer.fakeSphere(n3, this.vertexArray[2]);\n                    } else {\n                        this.vertexArray[0].textureCoordinate = mesh.uv[mesh.faces[i].uv[0]];\n                        this.vertexArray[1].textureCoordinate = mesh.uv[mesh.faces[i].uv[1]];\n                        this.vertexArray[2].textureCoordinate = mesh.uv[mesh.faces[i].uv[2]];\n                    }\n\n                    this.clipConvexPolygon(framebuffer, this.vertexArray);\n                }\n            } else if (!this.isInFrontOfNearPlane(v1) &&\n                !this.isInFrontOfNearPlane(v2) &&\n                !this.isInFrontOfNearPlane(v3)) {\n                continue;\n            } else {\n                this.vertexArray[0].position = v1; // v1 is Vector4f\n                this.vertexArray[0].textureCoordinate = mesh.uv[mesh.faces[i].uv[0]];\n\n                this.vertexArray[1].position = v2;\n                this.vertexArray[1].textureCoordinate = mesh.uv[mesh.faces[i].uv[1]];\n\n                this.vertexArray[2].position = v3;\n                this.vertexArray[2].textureCoordinate = mesh.uv[mesh.faces[i].uv[2]];\n\n                this.zClipTriangle(framebuffer, this.vertexArray);\n            }\n        }\n    }\n\n    public project2(t1: { x: number, y: number, z: number }, result: Vector4f): void {\n        result.x = Math.round((this.framebuffer.width / 2) + (292 * t1.x / (-t1.z)));\n        result.y = Math.round((this.framebuffer.height / 2) - (t1.y * 292 / (-t1.z)));\n        result.z = t1.z;\n    }\n\n    public computeNearPlaneIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const ratio: number = (this.NEAR_PLANE_Z - p1.position.z) / (p2.position.z - p1.position.z);\n        const vertex: Vertex = new Vertex();\n\n        vertex.position = new Vector4f(\n            ratio * (p2.position.x - p1.position.x) + p1.position.x,\n            ratio * (p2.position.y - p1.position.y) + p1.position.y,\n            this.NEAR_PLANE_Z\n        );\n\n        vertex.textureCoordinate = new TextureCoordinate(\n            ratio * (p2.textureCoordinate.u - p1.textureCoordinate.u) + p1.textureCoordinate.u,\n            ratio * (p2.textureCoordinate.v - p1.textureCoordinate.v) + p1.textureCoordinate.v\n        );\n\n        return vertex;\n    }\n\n    public zClipTriangle(framebuffer: Framebuffer, subject: Array<Vertex>): void {\n        const input: Array<Vertex> = subject;\n        const output: Array<Vertex> = new Array<Vertex>();\n        let S: Vertex = input[input.length - 1];\n\n        for (let i: number = 0; i < input.length; i++) {\n            const point: Vertex = input[i];\n            if (this.isInFrontOfNearPlane(point.position)) {\n                if (!this.isInFrontOfNearPlane(S.position)) {\n                    output.push(this.computeNearPlaneIntersection(S, point));\n                }\n                output.push(point);\n            } else if (this.isInFrontOfNearPlane(S.position)) {\n                output.push(this.computeNearPlaneIntersection(S, point));\n            }\n            S = point;\n        }\n\n        if (output.length < 3) {\n            return;\n        }\n\n        for (let j: number = 0; j < output.length; j++) {\n            this.project2(output[j].position, output[j].projection);\n        }\n\n        if (output.length === 3 &&\n            !this.isTriangleCCW(output[0].projection, output[1].projection, output[2].projection)) {\n            return;\n        }\n\n        if (output.length === 4 &&\n            !this.isTriangleCCW2(\n                output[0].projection,\n                output[1].projection,\n                output[2].projection,\n                output[3].projection\n            )) {\n            return;\n        }\n\n        this.clipConvexPolygon(framebuffer, output);\n    }\n\n\n    public clipConvexPolygon(framebuffer: Framebuffer, subject: Array<Vertex>): void {\n\n        let output = subject;\n\n        for (let j = 0; j < framebuffer.clipRegion.length; j++) {\n            const edge = framebuffer.clipRegion[j];\n            const input = output;\n            output = new Array<Vertex>();\n            let S = input[input.length - 1];\n\n            for (let i = 0; i < input.length; i++) {\n                const point = input[i];\n                if (edge.isInside2(point)) {\n                    if (!edge.isInside2(S)) {\n                        output.push(edge.computeIntersection2(S, point));\n                    }\n                    output.push(point);\n                } else if (edge.isInside2(S)) {\n                    output.push(edge.computeIntersection2(S, point));\n                }\n                S = point;\n            }\n        }\n\n        if (output.length < 3) {\n            return;\n        }\n\n        // triangulate new point set\n        for (let i = 0; i < output.length - 2; i++) {\n            this.triangleRasterizer.drawTriangleDDA(framebuffer, output[0], output[1 + i], output[2 + i]);\n        }\n    }\n\n}\n","import { Vertex } from '../Vertex';\n\n// TODO:\n// - use polymorphism in order to have different intersection methods\n// - one for plain clipping / one for tex coords / one for multitexturing / gouraud shading etc\nexport abstract class AbstractClipEdge {\n\n    public abstract isInside(p: Vertex): boolean;\n    public abstract isInside2(p: Vertex): boolean;\n    public abstract computeIntersection(p1: Vertex, p2: Vertex): Vertex;\n    public abstract computeIntersection2(p1: Vertex, p2: Vertex): Vertex;\n    public abstract computeIntersection3(p1: Vertex, p2: Vertex): Vertex;\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\n\nexport class BottomClipEdge extends AbstractClipEdge {\n\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.y >= this.framebuffer.minWindow.y;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.y >= this.framebuffer.minWindow.y;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        // since this is for flat shading no interpolation is required\n        const factor: number = (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(\n            Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * factor),\n            this.framebuffer.minWindow.y,\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.minWindow.y,\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)));\n\n        const textCoord: TextureCoordinate = new TextureCoordinate();\n        const z: number = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n    public computeIntersection3(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.minWindow.y,\n                0);\n\n        const textCoord: TextureCoordinate = new TextureCoordinate();\n\n        textCoord.u = (p1.textureCoordinate.u  + (p2.textureCoordinate.u  - p1.textureCoordinate.u ) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y));\n        textCoord.v = (p1.textureCoordinate.v  + (p2.textureCoordinate.v  - p1.textureCoordinate.v ) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y));\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector3f } from '../math/Vector3f';\n\nexport class CohenSutherlandLineClipper {\n\n    public static REGION_CODE_CENTER = 0b0000;\n    public static REGION_CODE_LEFT = 0b0001;\n    public static REGION_CODE_RIGHT = 0b0010;\n    public static REGION_CODE_BOTTOM = 0b0100;\n    public static REGION_CODE_TOP = 0b1000;\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public cohenSutherlandLineClipper(start: Vector3f, end: Vector3f, col: number) {\n        let p1: Vector3f = new Vector3f(start.x, start.y, start.z);\n        let p2: Vector3f = new Vector3f(end.x, end.y, end.z);\n\n        let code1: number = this.computeRegionCode(p1);\n        let code2: number = this.computeRegionCode(p2);\n\n        let accept: boolean = false;\n        let done: boolean = false;\n\n        while (!done) {\n\n            if (this.isTrivialAccept(code1, code2)) {\n                accept = true;\n                done = true;\n            } else if (this.isTrivialReject(code1, code2)) {\n                done = true;\n            } else {\n\n                if (code1 === CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    const tempCode: number = code1;\n                    code1 = code2;\n                    code2 = tempCode;\n\n                    const tempPoint: Vector3f = p1;\n                    p1 = p2;\n                    p2 = tempPoint;\n                }\n\n                if ((code1 & CohenSutherlandLineClipper.REGION_CODE_TOP) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.x = (p1.x + (p2.x - p1.x) * (this.framebuffer.maxWindow.y - p1.y) / (p2.y - p1.y));\n                    p1.y = this.framebuffer.maxWindow.y;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_BOTTOM) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.x = (p1.x + (p2.x - p1.x) * (this.framebuffer.minWindow.y - p1.y) / (p2.y - p1.y));\n                    p1.y = this.framebuffer.minWindow.y;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_RIGHT) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.y = (p1.y + (p2.y - p1.y) * (this.framebuffer.maxWindow.x - p1.x) / (p2.x - p1.x));\n                    p1.x = this.framebuffer.maxWindow.x;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_LEFT) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.y = (p1.y + (p2.y - p1.y) * (this.framebuffer.minWindow.x - p1.x) / (p2.x - p1.x));\n                    p1.x = this.framebuffer.minWindow.x;\n                }\n\n                code1 = this.computeRegionCode(p1);\n            }\n        }\n\n        if (accept) {\n            this.framebuffer.drawLineDDA(p1, p2, col);\n        }\n    }\n\n    public isTrivialAccept(code1: number, code2: number): boolean {\n        return (code1 | code2) === CohenSutherlandLineClipper.REGION_CODE_CENTER;\n    }\n\n    public isTrivialReject(code1: number, code2: number): boolean {\n        return (code1 & code2) !== CohenSutherlandLineClipper.REGION_CODE_CENTER;\n    }\n\n    public computeRegionCode(point: Vector3f): number {\n        let regionCode: number = CohenSutherlandLineClipper.REGION_CODE_CENTER;\n\n        if (point.x < this.framebuffer.minWindow.x) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_LEFT;\n        } else if (point.x > this.framebuffer.maxWindow.x) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_RIGHT;\n        }\n\n        if (point.y < this.framebuffer.minWindow.y) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_BOTTOM;\n        } else if (point.y > this.framebuffer.maxWindow.y) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_TOP;\n        }\n\n        return regionCode;\n    }\n\n}\n","import { AbstractClipEdge } from './AbstractClipEdge';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math/Vector4f';\n\nexport class LeftClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.x >= 0;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.x >= 0;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(this.framebuffer.minWindow.x,\n            Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * factor),\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.minWindow.x,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n    public computeIntersection3(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.minWindow.x,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n               0);\n\n        const textCoord = new TextureCoordinate();\n\n        textCoord.u = (p1.textureCoordinate.u  + (p2.textureCoordinate.u - p1.textureCoordinate.u) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) ;\n        textCoord.v = (p1.textureCoordinate.v  + (p2.textureCoordinate.v  - p1.textureCoordinate.v) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) ;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\nimport { Vector4f } from '../math/Vector4f';\n\nexport class RightClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.x < this.framebuffer.width;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.x < this.framebuffer.width;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(this.framebuffer.maxWindow.x + 1,\n            Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * factor),\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.maxWindow.x + 1,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n    // no 3d clipping\n    public computeIntersection3(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.maxWindow.x + 1,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                0);\n\n        const textCoord = new TextureCoordinate();\n        textCoord.u = (p1.textureCoordinate.u + (p2.textureCoordinate.u - p1.textureCoordinate.u) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x));\n        textCoord.v = (p1.textureCoordinate.v + (p2.textureCoordinate.v - p1.textureCoordinate.v) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x));\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\n\nexport class TopClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.y < this.framebuffer.maxWindow.y + 1;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.y < this.framebuffer.maxWindow.y + 1;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y);\n        // this interpolation is not perspective correct but linear!!\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(\n            Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * factor),\n            this.framebuffer.maxWindow.y + 1,\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.maxWindow.y + 1,\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n    public computeIntersection3(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.maxWindow.y + 1,\n                0);\n\n        const textCoord = new TextureCoordinate();\n        textCoord.u = (p1.textureCoordinate.u  + (p2.textureCoordinate.u  - p1.textureCoordinate.u ) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) ;\n        textCoord.v = (p1.textureCoordinate.v  + (p2.textureCoordinate.v  - p1.textureCoordinate.v ) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y));\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n\n}\n","export class Texture {\n\n\n    public texture: Uint32Array;\n    public width: number;\n    public height: number;\n    public maxWidth: number;\n    public maxHeight: number;\n    private clamp: boolean = false;\n\n    setClamp(clamp: boolean) {\n        this.clamp = clamp;\n    }\n    constructor(texture?: Uint32Array, width?: number, height?: number) {\n        this.texture = texture;\n        this.width = width;\n        this.height = height;\n        this.maxHeight = (height-1) |0;\n        this.maxWidth = (width-1)|0;\n    }\n\n    public getPixel(texture: Texture, x: number, y: number): number {\n        return texture.texture[(x & 0xff) + (y & 0xff) * 256];\n    }\n\n    public getBilinearFilteredPixel(x: number, y: number): number {\n        const x0 = (((x | 0) % 256) + 256) % 256;\n        const x1 = ((((x + 1) | 0) % 256) + 256) % 256;\n        const y0 = (((y | 0) % 256) + 256) % 256;\n        const y1 = ((((y + 1) | 0) % 256) + 256) % 256;\n\n        const x0y0 = this.getPixel(this, x0, y0) & 0xff;\n        const x1y0 = this.getPixel(this, x1, y0) & 0xff;\n        const x0y1 = this.getPixel(this, x0, y1) & 0xff;\n        const x1y1 = this.getPixel(this, x1, y1) & 0xff;\n\n        const col1 = x0y0 * (1 - (x - Math.floor(x))) + (x1y0 * ((x - Math.floor(x))));\n        const col2 = x0y1 * (1 - (x - Math.floor(x))) + (x1y1 * ((x - Math.floor(x))));\n        const col = col1 * (1 - (y - Math.floor(y))) + (col2 * ((y - Math.floor(y))));\n\n        return col;\n    }\n\n    public getBilinearFilteredPixel2(x: number, y: number) {\n\n        let x0;\n        let  x1 ;\n        let  y0;\n        let y1 ;\n\n        if (this.clamp) {\n            x = Math.max(Math.min(x, this.width - 1), 0);\n            y = Math.max(Math.min(y, this.height - 1), 0);\n\n            //x= ((x%this.width)+ this.width) % this.width;\n            //y= ((y%this.height)+ this.height) % this.height;\n\n\n            x0 = Math.floor(x);\n            x1 =  Math.max(Math.min(x0+1, this.width - 1), 0);\n              y0 = Math.floor(y);\n             y1 =Math.max(Math.min(y0+1, this.height - 1), 0);\n        } else {\n            x= ((x%this.width)+ this.width) % this.width;\n            y= ((y%this.height)+ this.height) % this.height;\n\n\n        x0 = x | 0;\n        x1 = (x+ 1 | 0)%this.width ;\n          y0 = y | 0;\n         y1 = (y+ 1 | 0)%this.height ;\n        }\n\n\n\n        const x0y0 = this.getPixel2(this, x0, y0);\n        const x1y0 = this.getPixel2(this, x1, y0);\n        const x0y1 = this.getPixel2(this, x0, y1);\n        const x1y1 = this.getPixel2(this, x1, y1);\n\n        return this.interpolateComp(x, y, x0y0, x1y0 , x0y1, x1y1 );\n    }\n\n    public getPixel2(texture: Texture, x: number, y: number): number {\n        return this.texture[x + y * this.width];\n    }\n\n    /**\n     * highly optimized version only for power of 2 textures\n     */\n    public getBilinearFilteredPixelRasterizer(x: number, y: number) {\n        let x0 = x | 0;\n        let x1 = (x | 0) + 1;\n        let y0 = y | 0;\n        let y1 = (y | 0) + 1;\n\n        let x0y0: number;\n        let x1y0: number;\n        let x0y1: number;\n        let x1y1: number;\n\n        if (this.clamp) {\n             x0 = Math.max(Math.min(x0, this.width - 1), 0);\n             x1 = Math.max(Math.min(x1, this.width - 1), 0);\n             y0 = Math.max(Math.min(y0, this.height - 1), 0);\n             y1 = Math.max(Math.min(y1, this.height - 1), 0);\n\n             x0y0 = this.getPixel2(this, x0, y0);\n             x1y0 = this.getPixel2(this, x1, y0);\n             x0y1 = this.getPixel2(this, x0, y1);\n             x1y1 = this.getPixel2(this, x1, y1);\n        } else {\n            x0y0 = this.getPixelRasterizer(this, x0, y0);\n            x1y0 = this.getPixelRasterizer(this, x1, y0);\n            x0y1 = this.getPixelRasterizer(this, x0, y1);\n            x1y1 = this.getPixelRasterizer(this, x1, y1);\n        }\n        return this.interpolateComp(x, y, x0y0, x1y0, x0y1, x1y1);\n    }\n\n    public getPixelRasterizer(texture: Texture, x: number, y: number): number {\n        return this.texture[(x & (this.width-1)) + (y&(this.height-1)) * this.width];\n    }\n\n    public getPixel3(texture: Texture, x: number, y: number): number {\n        return this.texture[\n            (((x % this.width) + this.width) % this.width) +\n            (((y % this.height) + this.height) % this.height) * this.width];\n    }\n\n    private interpolateComp(x, y, x0y0, x1y0, x0y1, x1y1): number {\n        // reuse these values for all color components\n        const xFrac = x - (x | 0);\n        const yFrac = y - (y | 0);\n        const oneMinusXfrac = 1 - xFrac;\n        const oneMinusYfrac = 1 - yFrac;\n\n        const x0y0_r = x0y0 & 0xff;\n        const x1y0_r = x1y0 & 0xff;\n        const x0y1_r = x0y1 & 0xff;\n        const x1y1_r = x1y1 & 0xff;\n\n        const col1_r = x0y0_r * oneMinusXfrac + x1y0_r * xFrac;\n        const col2_r = x0y1_r * oneMinusXfrac + x1y1_r * xFrac;\n        const col_r = col1_r * oneMinusYfrac + (col2_r * yFrac);\n\n        const x0y0_g = x0y0 >> 8 & 0xff;\n        const x1y0_g = x1y0 >> 8 & 0xff;\n        const x0y1_g = x0y1 >> 8 & 0xff;\n        const x1y1_g = x1y1 >> 8 & 0xff;\n\n        const col1_g = x0y0_g * oneMinusXfrac + x1y0_g * xFrac;\n        const col2_g = x0y1_g * oneMinusXfrac + x1y1_g * xFrac;\n        const col_g = col1_g * oneMinusYfrac + (col2_g * yFrac);\n\n        const x0y0_b = x0y0 >> 16 & 0xff;\n        const x1y0_b = x1y0 >> 16 & 0xff;\n        const x0y1_b = x0y1 >> 16 & 0xff;\n        const x1y1_b = x1y1 >> 16 & 0xff;\n\n        const col1_b = x0y0_b * oneMinusXfrac + x1y0_b * xFrac;\n        const col2_b = x0y1_b * oneMinusXfrac + x1y1_b * xFrac;\n        const col_b = col1_b * oneMinusYfrac + (col2_b * yFrac);\n\n        const x0y0_a = x0y0 >> 24 & 0xff;\n        const x1y0_a = x1y0 >> 24 & 0xff;\n        const x0y1_a = x0y1 >> 24 & 0xff;\n        const x1y1_a = x1y1 >> 24 & 0xff;\n\n        const col1_a = x0y0_a * oneMinusXfrac + x1y0_a * xFrac;\n        const col2_a = x0y1_a * oneMinusXfrac + x1y1_a * xFrac;\n        const col_a = col1_a * oneMinusYfrac + (col2_a * yFrac);\n\n        return col_r | col_g << 8 | col_b << 16 | col_a << 24;\n    }\n\n}\n","\nimport { ScaleClipBlitter } from './blitter/ScaleClipBlitter';\nimport { ControllableCamera } from './camera';\nimport { Color } from './core/Color';\nimport { CullFace } from './CullFace';\nimport { Torus } from './geometrical-objects/Torus';\nimport { Matrix3f, Matrix4f, Vector2f, Vector3f, Vector4f } from './math';\nimport { Interpolator } from './math/Interpolator';\nimport { Sphere } from './math/Sphere';\nimport RandomNumberGenerator from './RandomNumberGenerator';\nimport { FlatShadingTriangleRasterizer } from './rasterizer/FlatShadingTriangleRasterizer';\nimport { LineRasterizerDda } from './rasterizer/line/LineRasterizer';\nimport { LineRasterizerNoZ } from './rasterizer/line/LineRasterizerNoZ';\nimport { TexturedAlphaBlendingTriangleRasterizer } from './rasterizer/TexturedAlphaBlendingTriangleRasterizer';\nimport { TexturedTriangleRasterizer } from './rasterizer/TexturedTriangleRasterizer';\nimport { TexturingRenderingPipeline } from './rendering-pipelines/TexturingRenderingPipeline';\nimport { AbstractClipEdge } from './screen-space-clipping/AbstractClipEdge';\nimport { BottomClipEdge } from './screen-space-clipping/BottomClipEdge';\nimport { CohenSutherlandLineClipper } from './screen-space-clipping/CohenSutherlandLineClipper';\nimport { LeftClipEdge } from './screen-space-clipping/LeftClipEdge';\nimport { RightClipEdge } from './screen-space-clipping/RightClipEdge';\nimport { TopClipEdge } from './screen-space-clipping/TopClipEdge';\nimport { Texture } from './texture/Texture';\nimport { TextureCoordinate } from './TextureCoordinate';\nimport { Vertex } from './Vertex';\n\n/*\nimport { FlatShadingRenderingPipeline } from './rendering-pipelines/FlatShadingRenderingPipeline';\nimport { TexturingRenderingPipeline } from './rendering-pipelines/TexturingRenderingPipeline';\nimport { BlenderJsonParser } from './blender/BlenderJsonParser';\nimport { Material } from './shading/material/Material';\nimport { PointLight } from './shading/light/PointLight';\n*/\n\n\n// let labJson2 = <any>require('@assets/lab2.json');\n// let bakedJson = <any>require('@assets/abstract.json');\n\nexport class Framebuffer {\n\n    public static PIXEL_SIZE_IN_BYTES = 4;\n\n    public minWindow: Vector2f;\n    public maxWindow: Vector2f;\n\n\n    public framebuffer: Uint32Array;\n    public wBuffer: Float32Array;\n\n    public cullMode: CullFace = CullFace.BACK;\n\n    public camera: ControllableCamera;\n    public bob: Texture;\n    public triangleRasterizer = new FlatShadingTriangleRasterizer(this);\n    public texturedTriangleRasterizer = new TexturedTriangleRasterizer(this);\n   \n    public scaleClipBlitter = new ScaleClipBlitter(this);\n    // public renderingPipeline: FlatShadingRenderingPipeline;\n     public texturedRenderingPipeline: TexturingRenderingPipeline;\n    public lineRasterizer = new LineRasterizerDda(this);\n    public lineRasterizerNo = new LineRasterizerNoZ(this);\n    public tmpGlitch: Uint32Array;\n\n    public lensFlareVisible: boolean = false;\n    public lensFlareStart = 0;\n    public lensFlareEnd = 0;\n\n    public width: number;\n    public height: number;\n    private imageData: ImageData;\n    private unsignedIntArray: Uint8ClampedArray;\n\n    private torus = new Torus();\n\n    private plane: {\n        points: Vector4f[];\n        points2: Vector4f[];\n        normals: Vector4f[];\n        normals2: Vector4f[];\n        index:Array<number>;\n    };\n\n    private cylinder2: {\n        points: Vector4f[];\n        points2: Vector4f[];\n        normals: Vector4f[];\n        normals2: Vector4f[];\n        index:Array<number>;\n    };\n\n    private linerClipper = new CohenSutherlandLineClipper(this);\n    public clipRegion = Array<AbstractClipEdge>();\n    private texture = new Texture();\n\n    constructor(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n\n        this.imageData = new ImageData(width, height);\n        this.wBuffer = new Float32Array(width * height);\n        const arrayBuffer = new ArrayBuffer(this.width * this.height * Framebuffer.PIXEL_SIZE_IN_BYTES);\n        this.unsignedIntArray = new Uint8ClampedArray(arrayBuffer);\n        this.framebuffer = new Uint32Array(arrayBuffer);\n        this.tmpGlitch = new Uint32Array(width * height);\n        // this.renderingPipeline = new FlatShadingRenderingPipeline(this);\n     this.texturedRenderingPipeline = new TexturingRenderingPipeline(this);\n        this.minWindow = new Vector2f(0, 0);\n        this.maxWindow = new Vector2f(width - 1, height - 1);\n\n        this.clipRegion = new Array<AbstractClipEdge>(\n            new RightClipEdge(this),\n            new LeftClipEdge(this),\n            new BottomClipEdge(this),\n            new TopClipEdge(this)\n        );\n    }\n\n    public setCullFace(face: CullFace): void {\n        this.cullMode = face;\n    }\n\n    public setTexture(texture: Texture): void {\n        this.bob = texture;\n    }\n\n    /*\n    public precompute(texture: Texture): void {\n        // this.blengetBlenderScene(hoodlumJson, false);\n\n         //this.cylinder = this.createCylinder();\n\n        // this.sphereDisp = this.createSphereDistplaced(texture);\n    }\n    */\n\n    public getImageData(): ImageData {\n        this.imageData.data.set(this.unsignedIntArray);\n        return this.imageData;\n    }\n\n    public clear() {\n        const color: number = Color.BLACK.toPackedFormat();\n        const count: number = this.width * this.height;\n        for (let i = 0; i < count; i++) {\n            this.framebuffer[i] = color;\n        }\n    }\n\n    public clearColorBuffer(color: number) {\n        this.framebuffer.fill(color);\n    }\n\n    public drawPixel(x: number, y: number, color: number) {\n        this.framebuffer[x + y * this.width] = color;\n\n    }\n    public drawPixel4(x: number, y: number, color: number, alpha: number) {\n        const index: number = x + y * this.width;\n        const inverseAlpha = 1 - alpha;\n        const r = (((this.framebuffer[index] >> 0) & 0xff) * (inverseAlpha)\n            + ((color >> 0) & 0xff) * (alpha)) | 0;\n        const g = (((this.framebuffer[index] >> 8) & 0xff) * (inverseAlpha) +\n            ((color >> 8) & 0xff) * (alpha)) | 0;\n        const b = (((this.framebuffer[index] >> 16) & 0xff) * (inverseAlpha) +\n            ((color >> 16) & 0xff) * (alpha)) | 0;\n        this.framebuffer[x + y * this.width] = r | (g << 8) | (b << 16) | (255 << 24);\n\n    }\n\n    public drawPixel3(x: number, y: number, color: number, alpha2: number) {\n\n        const index: number = x + y * this.width;\n        const alpha = ((color >> 24) & 0xff) / 255 * alpha2;\n        const inverseAlpha = 1 - alpha;\n\n        const r = (((this.framebuffer[index] >> 0) & 0xff) * (inverseAlpha)\n            + ((color >> 0) & 0xff) * (alpha)) | 0;\n        const g = (((this.framebuffer[index] >> 8) & 0xff) * (inverseAlpha) +\n            ((color >> 8) & 0xff) * (alpha)) | 0;\n        const b = (((this.framebuffer[index] >> 16) & 0xff) * (inverseAlpha) +\n            ((color >> 16) & 0xff) * (alpha)) | 0;\n\n        this.framebuffer[index] = r | (g << 8) | (b << 16) | (255 << 24);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * blended with the framebuffer background\n     *\n     * @param  {x} number                 this can be a float\n     * @param  {y} number                 this can be a float\n     * @param  {color} number             color to blend into framebuffer\n     */\n    drawPixelAntiAliased(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        const roundedX = Math.floor(x);\n        const roundedY = Math.floor(y);\n        const percentX = 1 - Math.abs(x - roundedX);\n        const percentY = 1 - Math.abs(y - roundedY);\n        const percent = percentX * percentY;\n        this.drawPixel3(roundedX, roundedY, color, percent);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * to the framebuffer background\n     */\n    drawPixelAliased(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        const roundedX = Math.round(x);\n        const roundedY = Math.round(y)\n        this.drawPixel(roundedX, roundedY, color);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * blended with the framebuffer background in a 4x4 matrix\n     * https://en.wikipedia.org/wiki/Spatial_anti-aliasing\n     */\n    drawPixelAntiAliasedSpacial(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        for (let roundedX = Math.floor(x); roundedX <= Math.ceil(x); roundedX++) {\n            for (let roundedY = Math.floor(y); roundedY <= Math.ceil(y); roundedY++) {\n                const percentX = 1 - Math.abs(x - roundedX);\n                const percentY = 1 - Math.abs(y - roundedY);\n                const percent = percentX * percentY;\n                this.drawPixel4(roundedX, roundedY, color, percent);\n            }\n        }\n    }\n\n    public readPixel(x: number, y: number): number {\n        return this.framebuffer[x + y * this.width];\n    }\n\n    public drawRect(x, y, width, color) {\n        let start = x + y * this.width;\n\n        for (let i = 0; i < width; i++) {\n            this.framebuffer[start++] = color;\n        }\n    }\n\n    public drawRect2(x: number, y: number, width: number, height: number, color: number) {\n        let start = x + y * this.width;\n        for (let j = 0; j < height; j++) {\n            for (let i = 0; i < width; i++) {\n\n                this.framebuffer[start++] = color;\n\n            }\n            start += this.width - width;\n        }\n    }\n\n    public drawText(x: number, y: number, text: string, texture: Texture): void {\n        let xpos = x;\n        const firstIndex = ' '.charCodeAt(0);\n        for (let i = 0; i < text.length; i++) {\n            const index = text.charCodeAt(i) - firstIndex;\n            const tx = Math.floor(index % 32) * 8;\n            const ty = Math.floor(index / 32) * 8;\n            this.drawTextureRectFastAlpha(xpos, y, tx, ty, 8, 8, texture);\n            xpos += 8;\n        }\n    }\n\n    public addReflections() {\n        const start = 150;\n        for (let i = 0; i < 50; i++) {\n            for (let x = 0; x < this.width; x++) {\n                this.framebuffer[(start + i) * this.width + x] = this.framebuffer[(start - i * 3 - 1) * this.width + x +\n                    Interpolator.interpolate(0, 50, i) * (Math.sin(Date.now() * 0.002 + i * 0.2) * 14) | 0];\n            }\n        }\n    }\n\n    public drawTextureRect2(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture, alpha2: number): void {\n        for (let w = 0; w < width; w++) {\n            for (let h = 0; h < height; h++) {\n                const texIndex = (xt + w) + ((yt + h) * texture.width);\n                const frIndex = (xs + w) + ((ys + h) * this.width);\n                const alpha = ((texture.texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (((this.framebuffer[frIndex] >> 0) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 0) & 0xff) * (alpha)) | 0;\n                const g = (((this.framebuffer[frIndex] >> 8) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 8) & 0xff) * (alpha)) | 0;\n                const b = (((this.framebuffer[frIndex] >> 16) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 16) & 0xff) * (alpha)) | 0;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n            }\n        }\n    }\n\n    public drawTextureRectFastAlpha(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const color = texture.texture[texIndex];\n                if (color & 0xff000000) {\n                    this.framebuffer[frIndex] = color;\n                }\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n\n    public drawTextureColorized(x: number, y: number, texture: Texture, color: Color): void {\n\n        let frIndex = x + y * this.width;\n        let texIndex = 0;\n\n        for (let h = 0; h < texture.height; h++) {\n            for (let w = 0; w < texture.width; w++) {\n                const txPixel = texture.texture[texIndex];\n\n\n                const r = (txPixel >> 0 & 0xff) * color.r / 255;\n                const g = (txPixel >> 8 & 0xff) * color.g / 255;\n                const b = (txPixel >> 16 & 0xff) * color.b / 255;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                texIndex++;\n                frIndex++;\n            }\n\n            frIndex += this.width - texture.width;\n        }\n    }\n\n    public drawTextureRectNoAlpha(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                this.framebuffer[frIndex] = texture.texture[texIndex];\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    /**\n     * Transitions from one pixel to another using alpha\n     *\n     * @param  {number} c1\n     * @param  {number} c2\n     * @param  {number} alpha number ranging from 0-255\n     * @return {number}     color blended difference between c1 and c2\n     */\n    public static blend(c1: number, c2: number, nAlpha: number): number {\n\n        if (0 === nAlpha) {\n            return c1;\n        }\n\n        if (255 === nAlpha) {\n            return c2;\n        }\n\n        const nInvAlpha: number = 255 - nAlpha;\n\n        const r1: number = (c1 & 0x00FF0000) >> 16;\n        const r2: number = (c2 & 0x00FF0000) >> 16;\n        const r: number = (r2 * nAlpha + r1 * nInvAlpha) >> 8;\n\n        const g1: number = (c1 & 0x0000FF00) >> 8;\n        const g2: number = (c2 & 0x0000FF00) >> 8;\n        const g: number = (g2 * nAlpha + g1 * nInvAlpha) >> 8;\n\n        const b1: number = (c1 & 0x000000FF);\n        const b2: number = (c2 & 0x000000FF);\n        const b: number = (b2 * nAlpha + b1 * nInvAlpha) >> 8;\n\n        return 0xff000000 | r << 16 | g << 8 | b;\n    }\n\n\n    public static addColor(c1: number, c2: number) {\n        //int a1 = (c1 >> 24) & 0xff;\n        const r1 = (c1 >> 16) & 0xFF;\n        const g1 = (c1 >>  8) & 0xFF;\n        const b1 =  c1        & 0xFF;\n\n        const r2 = (c2 >> 16) & 0xFF;\n        const g2 = (c2 >>  8) & 0xFF;\n        const b2 =  c2        & 0xFF;\n\n        const r = r1 + r2 < 0xFF ? r1 + r2 : 0xFF;\n        const g = g1 + g2 < 0xFF ? g1 + g2 : 0xFF;\n        const b = b1 + b2 < 0xFF ? b1 + b2 : 0xFF;\n\n        return (0xFF << 24 | r << 16 | g << 8 | b);\n      }\n\n    public drawTextureRect(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Uint32Array, pixelWidth: number, alpha2: number): void {\n        let texIndex = xt + yt * pixelWidth;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const alpha = ((texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n                const inverseAlpha = 1 - alpha;\n\n                const fbPixel = this.framebuffer[frIndex];\n                const txPixel = texture[texIndex];\n\n                const r = (fbPixel >> 0 & 0xff) * inverseAlpha + (txPixel >> 0 & 0xff) * alpha;\n                const g = (fbPixel >> 8 & 0xff) * inverseAlpha + (txPixel >> 8 & 0xff) * alpha;\n                const b = (fbPixel >> 16 & 0xff) * inverseAlpha + (txPixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += pixelWidth - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    public drawTextureRectAdd(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture, alpha2: number): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const alpha = ((texture.texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n\n                const fbPixel = this.framebuffer[frIndex];\n                const txPixel = texture.texture[texIndex];\n\n                const r = Math.min(255, (fbPixel >> 0 & 0xff) + (txPixel >> 0 & 0xff) * alpha);\n                const g = Math.min(255, (fbPixel >> 8 & 0xff) + (txPixel >> 8 & 0xff) * alpha);\n                const b = Math.min(255, (fbPixel >> 16 & 0xff) + (txPixel >> 16 & 0xff) * alpha);\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    public pixelate() {\n        const xoff = 200;\n        const yoff = 50;\n\n        for (let x = 0; x < 10; x++) {\n            for (let y = 0; y < 10; y++) {\n                this.drawBox2(x * 10 + xoff, y * 10 + yoff, 10, 10, this.readPixel(x * 10 + xoff, y * 10 + yoff));\n            }\n        }\n        this.drawLineDDA(new Vector3f(xoff, yoff, -0.3), new Vector3f(xoff + 20 * 5, yoff, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff, yoff + 20 * 5, -0.3), new Vector3f(xoff + 20 * 5, yoff + 20 * 5, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff, yoff, -0.3), new Vector3f(xoff, yoff + 20 * 5, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff + 20 * 5, yoff, -0.3), new Vector3f(xoff + 20 * 5, yoff + 20 * 5, -0.3), 0xffffffff);\n    }\n\n    public fastFramebufferCopyOffset(src: Uint32Array, dest: Uint32Array, offset = 0) {\n        let i = this.width * this.height / 32 + 1;\n        let k = this.width * this.height;\n        let l = this.width * (this.height - offset);\n        while (--i) {\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n        }\n    }\n\n    // 6 times faster than the slow method that clips and does alpha blending\n    public fastFramebufferCopy(dest: Uint32Array, src: Uint32Array) {\n        dest.set(src);\n    }\n\n    public noise(elapsedTime: number, texture: Texture, scale: number = 0.07): void {\n        const rng = new RandomNumberGenerator();\n        rng.setSeed(elapsedTime);\n        for (let y = 0; y < this.height; y++) {\n            this.drawTextureRect(0, y, Math.floor(rng.getFloat() * (texture.texture.length - this.width)), 0, this.width, 1, texture.texture, texture.width, scale);\n        }\n    }\n\n    public drawTexturedBillboard(xp: number, yp: number, width: number, height: number, texture: Texture, z: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n                    this.wBuffer[index2] = z;\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const r = (this.framebuffer[index2] >> 0 & 0xff) + (texture.texture[textureIndex] >> 0 & 0xff);\n                    const g = (this.framebuffer[index2] >> 8 & 0xff) + (texture.texture[textureIndex] >> 8 & 0xff);\n                    const b = (this.framebuffer[index2] >> 16 & 0xff) + (texture.texture[textureIndex] >> 16 & 0xff);\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += yStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle(xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle2(\n        xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number,\n        imgNum: number = 0, spritH: number): void {\n        const xStep = texture.width / width;\n        const yStep = spritH / height;\n        let xx = 0;\n        let yy = 0;\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n        let xTextureStart: number;\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, spritH - 1) * texture.width +\n                        spritH * texture.width * imgNum;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle2Sub(\n        xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number,\n        imgNum: number = 0, spritH: number, rr:number=1,gg:number=1,bb:number=1) : void {\n        const xStep = texture.width / width;\n        const yStep = spritH / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > this.height - 1 ||\n            xp + width < 0 ||\n            xp > this.width - 1) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - (this.height), 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - (this.height - 1), 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = Math.ceil((width + xp) - Math.max(xp + width - (this.width), 0));\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = Math.ceil(width - Math.max(xp + width - (this.width - 1), 0));\n        }\n\n        const sub: number = Math.ceil(xp) - xp;\n        const suby: number = Math.ceil(yp) - yp;\n        xTextureStart += sub * xStep;\n        yy += suby * yStep;\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = Math.ceil(xStart) + Math.ceil(yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(Math.round(xx) | 0, texture.width - 1) +\n                        Math.min(Math.round(yy) | 0, spritH - 1) * texture.width +\n                        spritH * texture.width * imgNum;\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha*rr;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha*gg;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha*bb;\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticleNoDepth(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > this.height - 1 ||\n            xp + width < 0 ||\n            xp > this.width - 1) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n\n                const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                const inverseAlpha = 1 - alpha;\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawSoftParticle(xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n                    // float scale = 0.2f;\n                    // float fade = clamp((depthMapDepth.x-depth)*scale, 0.0, 1.0);\n                    const zDist = Math.min(Math.max(((1 / z - 1 / this.wBuffer[index2])), 0.0), 1.0);\n                    // this.wBuffer[index2] = z;\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale * zDist;\n                    const inverseAlpha = 1 - alpha;\n\n                    const r = (this.framebuffer[index2] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer[index2] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer[index2] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawFog(color: Color, fogScale: number, fogOffset: number): void {\n        const videoMemorySize: number = this.width * this.height;\n        const wBufferScale: number = -fogScale;\n\n        for (let index: number = 0; index < videoMemorySize; index++) {\n            const alpha = Math.max(Math.min(wBufferScale * (1 / this.wBuffer[index] + fogOffset), 1.0), 0.0);\n            const inverseAlpha = 1.0 - alpha;\n\n            const r = (this.framebuffer[index] >> 0 & 0xff) * inverseAlpha + color.r * alpha;\n            const g = (this.framebuffer[index] >> 8 & 0xff) * inverseAlpha + color.g * alpha;\n            const b = (this.framebuffer[index] >> 16 & 0xff) * inverseAlpha + color.b * alpha;\n\n            this.framebuffer[index] = r | (g << 8) | (b << 16) | (255 << 24);\n        }\n    }\n\n    public drawScaledTextureClipBi(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n               // console.log(xx, yy);\n                // let textureIndex = //Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n                const color = texture.getBilinearFilteredPixel2(xx, yy);\n\n                const alpha = 255 * alphaScale;\n                const inverseAlpha = 1 - alpha;\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = color;\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawScaledTextureClipBiAdd(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                // let textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n                const color = texture.getBilinearFilteredPixel2(xx, yy);\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = color;\n\n                const r = Math.min((framebufferPixel >> 0 & 0xff) + (texturePixel >> 0 & 0xff) * alphaBlend, 255);\n                const g = Math.min((framebufferPixel >> 8 & 0xff) + (texturePixel >> 8 & 0xff) * alphaBlend, 255);\n                const b = Math.min((framebufferPixel >> 16 & 0xff) + (texturePixel >> 16 & 0xff) * alphaBlend, 255);\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawScaledTextureClipAdd(xp: number, yp: number, width: number, height: number, texture: Texture, alpha: number = 1.0): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = Math.min((framebufferPixel >> 0 & 0xff) + (texturePixel >> 0 & 0xff) * alpha, 255);\n                const g = Math.min((framebufferPixel >> 8 & 0xff) + (texturePixel >> 8 & 0xff) * alpha, 255);\n                const b = Math.min((framebufferPixel >> 16 & 0xff) + (texturePixel >> 16 & 0xff) * alpha, 255);\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawTexture(x: number, y: number, texture: Texture, alpha2: number) {\n        const SCREEN_WIDTH = this.width;\n        const SCREEN_HEIGHT = this.height;\n\n        let framebufferIndex: number = Math.max(x, 0) + Math.max(y, 0) * this.width;\n        let textureIndex: number = Math.max(0, 0 - x) + Math.max(0, 0 - y) * texture.width;\n\n        const width: number = Math.min(texture.width, SCREEN_WIDTH - x) - Math.max(0, 0 - x);\n        const height: number = Math.min(texture.height, SCREEN_HEIGHT - y) - Math.max(0, 0 - y);\n\n        const textureRowOffset = texture.width - width;\n        const framebufferRowOffset = this.width - width;\n\n        const div = 1 / 255 * alpha2;\n\n        for (let yHeight: number = 0; yHeight < height; yHeight++) {\n            for (let xWidth: number = 0; xWidth < width; xWidth++) {\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * div;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            textureIndex += textureRowOffset;\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n    public drawTextureFullscreen(texture: Texture, alpha2: number) {\n\n        let framebufferIndex: number = 0;\n        const inverseAlpha = 1 - alpha2;\n        for (let y: number = 0; y < this.width * this.height; y++) {\n\n            const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 0 & 0xff) * alpha2;\n            const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 8 & 0xff) * alpha2;\n            const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 16 & 0xff) * alpha2;\n\n            this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n            framebufferIndex++;\n        }\n    }\n\n    public drawTexture3(x: number, y: number, texture: Texture, alpha2: number, time: number) {\n        const SCREEN_WIDTH = this.width;\n        const SCREEN_HEIGHT = this.height;\n\n        let framebufferIndex: number = Math.max(x, 0) + Math.max(y, 0) * this.width;\n        let textureIndex: number = Math.max(0, 0 - x) + Math.max(0, 0 - y) * texture.width;\n\n        const width: number = Math.min(texture.width, SCREEN_WIDTH - x) - Math.max(0, 0 - x);\n        const height: number = Math.min(texture.height, SCREEN_HEIGHT - y) - Math.max(0, 0 - y);\n\n        const textureRowOffset = texture.width - width;\n        const framebufferRowOffset = this.width - width;\n\n        const div = 1 / 255 * alpha2;\n\n        const mHeight = Math.floor(height * Math.max(Math.min(1, time), 0));\n\n        for (let yHeight: number = 0; yHeight < mHeight; yHeight++) {\n            for (let xWidth: number = 0; xWidth < width; xWidth++) {\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * div;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            textureIndex += textureRowOffset;\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n    public drawTextureNoClipAlpha(x: number, y: number, texture: Texture): void {\n        let framebufferIndex: number = x + y * this.width;\n        let textureIndex: number = 0;\n\n        const framebufferRowOffset = this.width - texture.width;\n\n        for (let yHeight = 0; yHeight < texture.height; yHeight++) {\n            for (let xWidth = 0; xWidth < texture.width; xWidth++) {\n                const color = texture.texture[textureIndex];\n\n                if (color & 0xff000000) {\n                    this.framebuffer[framebufferIndex] = color;\n                }\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n     // https://math.stackexchange.com/questions/859454/maximum-number-of-vertices-in-intersection-of-triangle-with-box/\n     public nearPlaneClipping(t1: Vector3f, t2: Vector3f, color: number): void {\n        const NEAR_PLANE_Z = -1.7;\n\n        if (t1.z < NEAR_PLANE_Z && t2.z < NEAR_PLANE_Z) {\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t1), this.project(t2), color);\n        } else if (t1.z > NEAR_PLANE_Z && t2.z > NEAR_PLANE_Z) {\n            return;\n        } else if (t1.z < NEAR_PLANE_Z) {\n            const ratio = (NEAR_PLANE_Z - t1.z) / (t2.z - t1.z);\n            const t3 = new Vector3f(ratio * (t2.x - t1.x) + t1.x, ratio * (t2.y - t1.y) + t1.y, NEAR_PLANE_Z);\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t1), this.project(t3), color);\n        } else if (t2.z < NEAR_PLANE_Z) {\n            const ratio = (NEAR_PLANE_Z - t2.z) / (t1.z - t2.z);\n            const t3 = new Vector3f(ratio * (t1.x - t2.x) + t2.x, ratio * (t1.y - t2.y) + t2.y, NEAR_PLANE_Z);\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t2), this.project(t3), color);\n        }\n    }\n\n    public project(t1: { x: number, y: number, z: number }): Vector3f {\n        return new Vector3f(Math.round((this.width / 2) + (292 * t1.x / (-t1.z))),\n            Math.round((this.height / 2) - (t1.y * 292 / (-t1.z))),\n            t1.z);\n    }\n\n    public clearDepthBuffer(): void {\n        this.wBuffer.fill(-1 / 900);\n    }\n\n    public drawBox() {\n        const height = this.maxWindow.y - this.minWindow.y + 1;\n        const width = this.maxWindow.x - this.minWindow.x + 1;\n        let index = this.minWindow.y * this.width + this.minWindow.x;\n        for (let i = 0; i < height; i++) {\n            this.framebuffer.fill(255 << 24 | 55 << 16 | 55 << 8 | 55, index, index + width);\n            index += this.width;\n        }\n    }\n\n    public drawBox2(x1: number, y1: number, width: number, height: number, color: number) {\n\n        let index = y1 * this.width + x1;\n        for (let i = 0; i < height; i++) {\n            this.framebuffer.fill(color, index, index + width);\n            index += this.width;\n        }\n    }\n\n    // TODO: implement subpixel accuracy\n    // https://github.com/specht/cruiser\n    public wireFrameSphereClipping(elapsedTime: number): void {\n\n        this.wBuffer.fill(100);\n\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 16;\n        const STEPS2 = 16;\n\n        // TODO: move into setup method\n        for (let i = 0; i <= STEPS; i++) {\n            for (let r = 0; r < STEPS2; r++) {\n                points.push(this.sphereFunction2(-i * Math.PI / STEPS - Math.PI / 2, -r * 2 * Math.PI / STEPS2));\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2)); // 2\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 1\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2)); // 4\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 5\n            }\n        }\n\n        // Create MV Matrix\n        const scale = 10.8 + 5 * (Math.sin(elapsedTime * 0.16) + 1) / 2;\n        let modelViewMartrix = Matrix4f.constructScaleMatrix(scale, scale, scale).multiplyMatrix(Matrix4f.constructYRotationMatrix(elapsedTime * 0.08));\n        modelViewMartrix = modelViewMartrix.multiplyMatrix(Matrix4f.constructXRotationMatrix(elapsedTime * 0.08));\n        modelViewMartrix = Matrix4f.constructTranslationMatrix(0 + 20 * Math.sin(elapsedTime * 0.04), 5 * Math.sin(elapsedTime * 0.06), -22).multiplyMatrix(modelViewMartrix);\n\n        const points2: Array<Vector3f> = new Array<Vector3f>();\n\n        for (let p = 0; p < points.length; p++) {\n            const transformed = modelViewMartrix.multiplyHom(points[p]);\n\n            const x = transformed.x;\n            const y = transformed.y;\n            const z = transformed.z;\n\n            const xx = (this.width * 0.5) + (x / (-z * 0.0078));\n            const yy = (this.height * 0.5) + (y / (-z * 0.0078));\n\n            points2.push(new Vector3f(xx, yy, z));\n        }\n\n        // draw clip region\n        const colred = 255 << 24 | 230 << 16 | this.height << 16 | this.height;\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.minWindow.y - 1, 0), new Vector3f(this.minWindow.x - 1, this.maxWindow.y + 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.maxWindow.x + 1, this.minWindow.y - 1, 0), new Vector3f(this.maxWindow.x + 1, this.maxWindow.y + 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.minWindow.y - 1, 0), new Vector3f(this.maxWindow.x + 1, this.minWindow.y - 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.maxWindow.y + 1, 0), new Vector3f(this.maxWindow.x + 2, this.maxWindow.y + 1, 0), colred);\n\n        this.drawBox();\n\n        for (let i = 0; i < index.length; i += 3) {\n            const v1 = points2[index[i]];\n            const v2 = points2[index[i + 1]];\n            const v3 = points2[index[i + 2]];\n\n            const colLine = 255 << 24 | 255 << 16 | 255 << 8 | 255;\n            if (this.isTriangleCCW(v1, v2, v3)) {\n                this.linerClipper.cohenSutherlandLineClipper(v1, v2, colLine);\n                this.linerClipper.cohenSutherlandLineClipper(v1, v3, colLine);\n                this.linerClipper.cohenSutherlandLineClipper(v3, v2, colLine);\n            }\n        }\n    }\n\n    public isTriangleCCW(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number }): boolean {\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v1.y - v1.x * v3.y;\n        if (this.cullMode === CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n        public wireFrameTerrain(elapsedTime: number, heightmap: Texture): void {\n\n            this.clearDepthBuffer();\n\n            const index: Array<number> = [\n            ];\n\n            const points: Array<Vector3f> = [];\n            for (let y = 0; y < 256; y++) {\n                for (let x = 0; x < 256; x++) {\n                    points.push(new Vector3f((x - 128) * 20.0, (heightmap.texture[x + y * 256] & 0x000000ff) * 128 / 256 - 70, (y - 128) * 20.0));\n                }\n            }\n\n            for (let y = 0; y < 256; y += 1) {\n                for (let x = 0; x < 256 - 1; x += 1) {\n                    index.push(0 + x + (y * 256));\n                    index.push(1 + x + (y * 256));\n                }\n            }\n\n            for (let x = 0; x < 256; x += 1) {\n                for (let y = 0; y < 256 - 1; y += 1) {\n\n                    index.push(x + ((y + 0) * 256));\n                    index.push(x + ((y + 1) * 256));\n                }\n            }\n\n            const modelViewMartrix = Matrix3f.constructYRotationMatrix(elapsedTime * 0.003);\n\n            const points2: Array<Vector3f> = new Array<Vector3f>();\n\n            const xOff = + Math.cos(elapsedTime * 0.000001) * 128 * 20;\n            const zOff = Math.sin(elapsedTime * 0.000001) * 128 * 20;\n            points.forEach(element => {\n                const transformed = modelViewMartrix.multiply(element);\n\n                const x = transformed.x + xOff;\n                const y = transformed.y;\n                const z = transformed.z + zOff; // TODO: use translation matrix!\n\n                points2.push(new Vector3f(x, y, z));\n            });\n\n            for (let i = 0; i < index.length; i += 2) {\n                const scale = (1 - Math.min(255, -points2[index[i]].z * 0.9) / 255);\n                const color = (255 * scale) << 8 | 100 * scale | (this.height * scale) << 16 | 255 << 24;\n                this.nearPlaneClipping(points2[index[i]], points2[index[i + 1]], color);\n            }\n        }\n\n    public drawBoundingSphere(sphere: Sphere, matrix: Matrix4f, color: number): void {\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 8;\n        const STEPS2 = 8;\n\n        // TODO: move into setup method\n        for (let i = 0; i <= STEPS; i++) {\n            for (let r = 0; r < STEPS2; r++) {\n\n                const pos = this.sphereFunction2(-i * Math.PI / STEPS - Math.PI / 2, -r * 2 * Math.PI / STEPS2).mul(sphere.getRadius() + 0.01).add(sphere.getCenter());\n                pos.w = 1;\n\n                points.push(pos);\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2)); // 2\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 1\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2)); // 4\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 5\n            }\n        }\n\n        const modelViewMartrix = matrix;\n\n        const points2: Array<Vector3f> = new Array<Vector3f>();\n\n        for (let p = 0; p < points.length; p++) {\n            const transformed = modelViewMartrix.multiplyHom(points[p]);\n            points2.push(new Vector3f(transformed.x, transformed.y, transformed.z));\n        }\n\n        for (let i = 0; i < index.length; i += 3) {\n\n            const v1 = points2[index[i]];\n            const v2 = points2[index[i + 1]];\n            const v3 = points2[index[i + 2]];\n\n            this.nearPlaneClipping(v1, v2, color);\n            this.nearPlaneClipping(v1, v3, color);\n            this.nearPlaneClipping(v3, v2, color);\n\n        }\n    }\n    public drawPlanedeformationTunnelAnim(elapsedTime: number, texture: Texture) {\n\n        let i = 0;\n        for (let y = 0; y < this.height; y++) {\n            for (let x = 0; x < this.width; x++) {\n                const xdist = (x - this.width / 2);\n                const ydist = (y - this.height / 2);\n                const dist = 256 * 0.2 / Math.max(1.0, Math.sqrt(xdist * xdist + ydist * ydist));\n                const dist2 = dist + elapsedTime * 0.002;\n                const angle = (Math.atan2(xdist, ydist) / Math.PI + 1.0) * 16 + elapsedTime * 0.00069;\n\n                const color1 = texture.texture[(dist2 & 0x1f) + (angle & 0x1f) * 32];\n                // darkening can be done with alpha blended texture\n                const scale = 1 - Interpolator.cosineInterpolate(1.0, 6.0, dist);\n                const r = ((color1 >> 0) & 0xff) * scale;\n                const g = ((color1 >> 8) & 0xff) * scale;\n                const b = ((color1 >> 16) & 0xff) * scale;\n                const final = r | g << 8 | b << 16;\n\n                this.framebuffer[i++] = final;\n            }\n        }\n    }\n\n    public drawPlaneDeformation(elapsedTime: number, texture: Texture): void {\n        // optimize\n        // power of two modulo with &\n        // this.framebuffer.clearColor(new Color());\n        // precompute LUD + render to half size backbuffer\n        const IMG_WIDTH = texture.width;\n        const IMG_HEIGHT = texture.height;\n\n        let framebufferIndex = 0;\n\n        for (let y = 0; y < this.height; y++) {\n            const yy = (-1.00 + 2.00 * y / this.height);\n\n            for (let x = 0; x < this.width; x++) {\n\n                const xx = (-1.00 + 2.00 * x / this.width);\n\n                // magic formulas here\n                const u = ((xx / Math.abs(yy)) * IMG_WIDTH * 0.05) | 0;\n                const v = (1.0 / Math.abs(yy) * IMG_HEIGHT * 0.05 + elapsedTime * 0.008) | 0;\n\n                const scale = 1 - Math.max(Math.min(1 / Math.abs(yy) * 0.2, 1), 0);\n                let color = texture.texture[(u & 0xff) + (v & 0xff) * IMG_WIDTH];\n                const r = ((color >> 0) & 0xff) * scale;\n                const g = ((color >> 8) & 0xff) * scale;\n                const b = ((color >> 16) & 0xff) * scale;\n                color = (255 << 24) | (b << 16) | (g << 8) | (r << 0);\n\n                this.framebuffer[framebufferIndex++] = color;\n            }\n        }\n    }\n\n    public torusFunction(alpha: number): Vector3f {\n        return new Vector3f(Math.sin(alpha) * 10, 0, Math.cos(alpha) * 10);\n    }\n\n    public fakeSphere(normal: Vector4f, vertex: Vertex): void {\n        // https://www.mvps.org/directx/articles/spheremap.htm\n        // vertex.textureCoordinate.u = 0.5 + normal.x * 0.5;\n        // vertex.textureCoordinate.v = 0.5 - normal.y * 0.5;\n        vertex.textureCoordinate.u = 0.5 + Math.asin(normal.x) / Math.PI;\n        vertex.textureCoordinate.v = 0.5 - Math.asin(normal.y) / Math.PI;\n    }\n\n    public fakeSphere2(normal: Vector3f, tex: TextureCoordinate): void {\n        tex.u = 0.5 + Math.asin(normal.x) / Math.PI;\n        tex.v = 0.5 - Math.asin(normal.y) / Math.PI;\n    }\n\n    public drawLineDDA(start: Vector3f, end: Vector3f, color: number): void {\n        this.lineRasterizer.drawLineDDA(start, end, color);\n    }\n\n    public drawLineDDANoZ(start: Vector3f, end: Vector3f, color: number): void {\n        this.lineRasterizerNo.drawLineDDANoZ(start, end, color);\n    }\n\n    private sphereFunction2(theta: number, phi: number): Vector4f {\n        const pos = new Vector4f(Math.cos(theta) * Math.cos(phi),\n            Math.cos(theta) * Math.sin(phi),\n            Math.sin(theta), 1.0);\n\n        return pos;\n    }\n\n}\n","export class FullscreenUtils {\n\n    public static toggleFullscreen(element: Element): void {\n        if (!this.fullscreen) {\n            FullscreenUtils.enterFullscreen(element);\n            this.fullscreen = true;\n            this.setStyle(element, 'cursor: none');\n        } else {\n            FullscreenUtils.exitFullscreen();\n            this.fullscreen = false;\n            this.setStyle(element, 'cursor: zoom-in');\n        }\n    }\n\n    private static setStyle(el, css) {\n        el.setAttribute('style', el.getAttribute('style') + ';' + css);\n    }\n\n    public static enterFullscreen(element: Element): void {\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.mozRequestFullScreen) {\n            element.mozRequestFullScreen();\n        } else if (element.msRequestFullscreen) {\n            element.msRequestFullscreen();\n        } else if (element.webkitRequestFullScreen) {\n            element.webkitRequestFullScreen();\n        }\n    }\n\n    public static exitFullscreen(): void {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    }\n\n    private static fullscreen: boolean = false;\n\n}\n","import { Framebuffer } from './Framebuffer';\nimport { FullscreenUtils } from './fullscreen/FullscreenUtils';\nimport { AbstractScene } from './scenes/AbstractScene';\n\nexport class Canvas {\n\n    public framebuffer: Framebuffer;\n    private canvas: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D;\n    private startTime: number;\n    private boundRenderLoop: FrameRequestCallback;\n\n    constructor(width: number, height: number, private scene: AbstractScene) {\n        this.canvas = document.createElement('canvas');\n\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.canvas.id = 'aisa-canvas';\n\n        this.canvas.style.cssText = 'image-rendering: optimizeSpeed;' + // FireFox < 6.0\n            'image-rendering: -moz-crisp-edges;' + // FireFox\n            'image-rendering: -o-crisp-edges;' +  // Opera\n            'image-rendering: -webkit-crisp-edges;' + // Chrome\n            'image-rendering: crisp-edges;' + // Chrome\n            'image-rendering: -webkit-optimize-contrast;' + // Safari\n            'image-rendering: pixelated; ' + // Future browsers\n            '-ms-interpolation-mode: nearest-neighbor;'; // IE\n\n        this.canvas.style.width = `${width * 2}px`;\n        this.canvas.style.height = `${height * 2}px`;\n\n        this.context = this.canvas.getContext('2d');\n\n        // FIXME: make this cross browser compatible!\n        (this.context as any).oImageSmoothingEnabled = false;\n        this.context.imageSmoothingEnabled = false;\n        (this.context as any).webkitImageSmoothingEnabled = false;\n\n        this.framebuffer = new Framebuffer(width, height);\n        this.boundRenderLoop = this.renderLoop.bind(this);\n    }\n\n    public init(): void {\n        // add canvas element to target element\n        this.appendTo(document.getElementById('aisa'));\n\n        // Add fullscreen toggle on click\n        this.canvas.addEventListener('click', (event: MouseEvent) => {\n            event.preventDefault();\n            FullscreenUtils.toggleFullscreen(this.canvas);\n        });\n\n        // Init scene and start rendering\n        this.scene.init(this.framebuffer).then(\n            () => {\n                this.scene.onInit();\n                this.startTime = Date.now();\n                this.renderLoop();\n            }\n        );\n    }\n\n    public renderLoop(): void {\n        this.scene.render(this.framebuffer, Date.now() - this.startTime);\n        this.flipBackbuffer();\n        requestAnimationFrame(this.boundRenderLoop);\n    }\n\n    public flipBackbuffer(): void {\n        this.context.putImageData(this.framebuffer.getImageData(), 0, 0);\n    }\n\n    public appendTo(element: HTMLElement): void {\n        element.appendChild(this.canvas);\n    }\n\n}\n","import { Framebuffer } from './../Framebuffer';\n\nexport abstract class AbstractScene {\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public init(framebuffer: Framebuffer): Promise<any> {\n        return Promise.all([]);\n    }\n\n    public onInit(): void {\n\n    }\n\n    public abstract render(framebuffer: Framebuffer, time: number): void;\n\n}\n","import RandomNumberGenerator from '../RandomNumberGenerator';\nimport { Texture } from './Texture';\n\nexport class TextureUtils {\n\n    public static generateProceduralNoise(): Promise<Texture> {\n        return new Promise<Texture>((resolve: (value?: Texture) => void): void => {\n            const texture: Texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng: RandomNumberGenerator = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let i: number = 0; i < 256 * 256; i++) {\n                const scale: number = rng.getFloat();\n                texture.texture[i] = 200 * scale | 255 * scale << 8 | 205 * scale << 16 | 255 << 24;\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static generateProceduralParticleTexture(): Promise<Texture> {\n        return new Promise((resolve: (value?: Texture) => void): void => {\n            const texture: Texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng: RandomNumberGenerator = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let y: number = 0; y < 256; y++) {\n                for (let x: number = 0; x < 256; x++) {\n                    const dx: number = 127 - x;\n                    const dy: number = 127 - y;\n                    const r: number = Math.sqrt(dx * dx + dy * dy) / 127;\n                    let c: number = 1 - r;\n                    c = c * c * c;\n                    if (r > 1) {\n                        c = 0;\n                    }\n                    c = Math.min(1, c * 2.9);\n\n                    texture.texture[x + y * 256] = 235 | 255 << 8 | 235 << 16 | (c * 255) << 24;\n                }\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static generateProceduralParticleTexture2(): Promise<Texture> {\n        return new Promise((resolve) => {\n            const texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let y = 0; y < 256; y++) {\n                for (let x = 0; x < 256; x++) {\n                    const dx = 127 - x;\n                    const dy = 127 - y;\n                    const r = Math.sqrt(dx * dx + dy * dy) / 127;\n                    let c = 1 - r;\n                    c = c * c;\n                    if (r > 1) { c = 0; }\n                    c = Math.min(1, c * 40);\n                    texture.texture[x + y * 256] = 255 | 205 << 8 | 255 << 16 | (c * 255) << 24;\n                }\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static load(filename: string, transparency: boolean): Promise<Texture> {\n        return new Promise<Texture>((resolve: (texture?: Texture) => void): void => {\n            const image: HTMLImageElement = new Image();\n            image.onload = (): void => {\n                const texture: Texture = new Texture();\n                texture.texture = this.getImageData(image, transparency);\n                texture.width = image.width;\n                texture.height = image.height;\n                resolve(texture);\n            };\n            image.onerror = (): void => resolve();\n            image.src = filename;\n        });\n    }\n\n    private static getImageData(image: HTMLImageElement, withAlpha: boolean = false): Uint32Array {\n        const canvas: HTMLCanvasElement = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const context: CanvasRenderingContext2D = canvas.getContext('2d');\n        context.drawImage(image, 0, 0);\n        const data: Uint8ClampedArray = context.getImageData(0, 0, image.width, image.height).data;\n        const conv: Uint32Array = new Uint32Array(data.length / 4);\n        let c: number = 0;\n        for (let i: number = 0; i < data.length; i += 4) {\n            if (withAlpha) {\n                conv[c] = (data[i + 3] << 24) | (data[i + 2] << 16) | (data[i + 1] << 8) | data[i + 0];\n            } else {\n                conv[c] = (255 << 24) | (data[i + 2] << 16) | (data[i + 1] << 8) | data[i + 0];\n            }\n\n            c++;\n        }\n        return conv;\n    }\n\n}\n","\nimport { AbstractClipEdge } from './AbstractClipEdge';\nimport { RightClipEdge } from './RightClipEdge';\nimport { LeftClipEdge } from './LeftClipEdge';\nimport { BottomClipEdge } from './BottomClipEdge';\nimport { TopClipEdge } from './TopClipEdge';\nimport { Vertex } from '../Vertex';\nimport { Framebuffer } from '../Framebuffer';\n\nexport class SutherlandHodgman2DClipper {\n\n\n    private clipRegion: Array<AbstractClipEdge>;\n\n    constructor(private framebuffer: Framebuffer) {\n        this.clipRegion = new Array<AbstractClipEdge>(\n            new RightClipEdge(framebuffer),\n            new LeftClipEdge(framebuffer),\n            new BottomClipEdge(framebuffer),\n            new TopClipEdge(framebuffer)\n        );\n\n    }\n\n    /**\n     * FIXME: optimize by minimizing creation of new arrays\n     *\n     * @param {Array<Vertex>} subject\n     * @return {Array<Vertex>}\n     */\n    public clipConvexPolygon(subject: Array<Vertex>): Array<Vertex> {\n\n        let output = subject;\n\n        for (let j = 0; j < this.clipRegion.length; j++) {\n            const edge: AbstractClipEdge = this.clipRegion[j];\n            const input = output;\n            output = new Array<Vertex>();\n            let S = input[input.length - 1];\n\n            for (let i = 0; i < input.length; i++) {\n                const point = input[i];\n                if (edge.isInside(point)) {\n                    if (!edge.isInside(S)) {\n                        output.push(edge.computeIntersection(S, point));\n                    }\n                    output.push(point);\n                } else if (edge.isInside(S)) {\n                    output.push(edge.computeIntersection(S, point));\n                }\n                S = point;\n            }\n        }\n\n        return output;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class TexturedTriangleRasterizer2D extends AbstractScannlineTriangleRasterizer{\n\n    // requires\n    // bob und wbuffer\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        // left slope\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n        let slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        let tslope1u = (v2.textureCoordinate.u  - v1.textureCoordinate.u ) / yDistanceLeft;\n        let tslope1v = (v2.textureCoordinate.v  - v1.textureCoordinate.v ) / yDistanceLeft;\n       \n    \n        let curu1 = v1.textureCoordinate.u;\n        let curv1 = v1.textureCoordinate.v ;\n        let xPosition = v1.projection.x;\n\n        // right slope\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n        const slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n        const tslope2u = (v3.textureCoordinate.u  - v1.textureCoordinate.u) / yDistanceRight;\n        const tslope2v = (v3.textureCoordinate.v  - v1.textureCoordinate.v) / yDistanceRight;\n       \n    \n        let curu2 = v1.textureCoordinate.u ;\n        let curv2 = v1.textureCoordinate.v ;\n        let xPosition2 = v1.projection.x;\n\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n               \n                  \n\n                    let u = Math.max(Math.min((uStart * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n            \n                framebufferIndex++;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n\n        if (yDistanceLeft === 0) {\n            return;\n        }\n\n        slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n       \n        tslope1u = (v3.textureCoordinate.u  - v2.textureCoordinate.u ) / yDistanceLeft;\n        tslope1v = (v3.textureCoordinate.v - v2.textureCoordinate.v) / yDistanceLeft;\n\n       \n        curu1 = v2.textureCoordinate.u ;\n        curv1 = v2.textureCoordinate.v ;\n        xPosition = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n           \n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            \n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n               \n\n\n                    let u = Math.max(Math.min((uStart  * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart  * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                  \n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                \n                framebufferIndex++;\n             \n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        let slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        const slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        const tslope1u = (v3.textureCoordinate.u  - v1.textureCoordinate.u ) / yDistanceLeft;\n        let tslope2u = (v2.textureCoordinate.u  - v1.textureCoordinate.u ) / yDistanceRight;\n\n        const tslope1v = (v3.textureCoordinate.v  - v1.textureCoordinate.v ) / yDistanceLeft;\n        let tslope2v = (v2.textureCoordinate.v  - v1.textureCoordinate.v ) / yDistanceRight;\n\n\n\n\n        let curu1 = v1.textureCoordinate.u ;\n        let curv1 = v1.textureCoordinate.v ;\n        let curu2 = v1.textureCoordinate.u ;\n        let curv2 = v1.textureCoordinate.v ;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n  \n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n          \n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n              \n\n\n                    let u = Math.max(Math.min((uStart  * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart  * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n\n\n                 \n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n               \n                framebufferIndex++;\n               \n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n       \n\n        tslope2u = (v3.textureCoordinate.u  - v2.textureCoordinate.u ) / yDistanceRight;\n        tslope2v = (v3.textureCoordinate.v  - v2.textureCoordinate.v ) / yDistanceRight;\n\n       \n\n        curu2 = v2.textureCoordinate.u ;\n        curv2 = v2.textureCoordinate.v;\n\n        xPosition2 = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n\n            \n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            \n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n               \n\n                    let u = Math.max(Math.min((uStart  * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart  * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                  \n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n               \n                framebufferIndex++;\n               \n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n           \n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n}\n","import { Color } from '../../core/Color';\nimport { Framebuffer } from '../../Framebuffer';\nimport { AbstractScene } from '../../scenes/AbstractScene';\nimport { Texture } from '../../texture/Texture';\nimport { TextureUtils } from '../../texture/TextureUtils';\n\ninterface ParallaxLayer {\n    image: Texture;\n    layerWidth: number;\n    positionY: number;\n    positionX: number;\n    speed: number;\n}\n\nexport class ParallaxScrollingScene extends AbstractScene {\n\n    // Background Textures\n    private BG_sky: Texture;\n    private BG_city: Texture;\n    private BG_dirt1: Texture;\n    private BG_dirt2: Texture;\n    private BG_dirt3: Texture;\n    private BG_road: Texture;\n\n    // Trees & Lamp\n    private PR_tree1: Texture;\n    private PR_tree2: Texture;\n    private PR_lamp: Texture;\n\n    // Buildings\n    private AR_oldhouse: Texture;\n    private AR_grill: Texture;\n    private AR_haneu: Texture;\n\n    // Layer Definition\n    private parallaxLayers: Array<ParallaxLayer>;\n\n    public init(): Promise<any> {\n        return Promise.all([\n            TextureUtils.load(require('@assets/xenusion/BG_sky.png'), true).then(\n                (texture: Texture) => this.BG_sky = texture\n            ),\n            TextureUtils.load(require('@assets/xenusion/BG_city.png'), true).then(\n                (texture: Texture) => this.BG_city = texture\n            ),\n            TextureUtils.load(require('@assets/xenusion/BG_dirt1.png'), true).then(\n                (texture: Texture) => this.BG_dirt1 = texture\n            ),\n            TextureUtils.load(require('@assets/xenusion/BG_dirt2.png'), true).then(\n                (texture: Texture) => this.BG_dirt2 = texture\n            ),\n            TextureUtils.load(require('@assets/xenusion/BG_dirt3.png'), true).then(\n                (texture: Texture) => this.BG_dirt3 = texture\n            ),\n            TextureUtils.load(require('@assets/xenusion/BG_road.png'), true).then(\n                (texture: Texture) => this.BG_road = texture\n            ),\n            TextureUtils.load(require('@assets/xenusion/AR_oldhouse.png'), true).then(\n                (texture: Texture) => this.AR_oldhouse = texture\n            ),\n            TextureUtils.load(require('@assets/xenusion/AR_grill.png'), true).then(\n                (texture: Texture) => this.AR_grill = texture\n            ),\n            TextureUtils.load(require('@assets/xenusion/PR_tree1.png'), true).then(\n                (texture: Texture) => this.PR_tree1 = texture\n            ),\n            TextureUtils.load(require('@assets/xenusion/PR_tree2.png'), true).then(\n                (texture: Texture) => this.PR_tree2 = texture\n            ),\n            TextureUtils.load(require('@assets/xenusion/PR_lamp.png'), true).then(\n                (texture: Texture) => this.PR_lamp = texture\n            ),\n            TextureUtils.load(require('@assets/xenusion/AR_haneu.png'), true).then(\n                (texture: Texture) => this.AR_haneu = texture\n            ),\n        ]);\n    }\n\n    public onInit(): void {\n        this.parallaxLayers = this.createParallaxLayers();\n    }\n\n    public render(framebuffer: Framebuffer, time: number): void {\n        framebuffer.clearColorBuffer(Color.RED.toPackedFormat());\n\n        this.parallaxLayers.forEach(layer => {\n            const disp = (time * layer.speed) | 0;\n            framebuffer.drawTexture((0 - (disp % layer.layerWidth)+layer.positionX)|0,layer.positionY, layer.image, 1);\n            framebuffer.drawTexture((layer.layerWidth - (disp % layer.layerWidth)+layer.positionX)|0, layer.positionY, layer.image, 1);\n        });\n    }\n\n    private createParallaxLayers(): Array<ParallaxLayer> {\n        const mySpeed = 0.24*0.7;\n\n        return [\n            {\n                image: this.BG_sky,\n                layerWidth: 600,\n                positionY: 0,\n                positionX: 0,\n                speed: mySpeed * 0.8 * 0.8 *0.8 * 0.8 * 0.8 * 0.8,\n            },\n            {\n                image: this.BG_city,\n                layerWidth: 600,\n                positionY: 109 - this.BG_city.height,\n                positionX: 0,\n                speed:  mySpeed * 0.8 * 0.8 *0.8 * 0.8 * 0.8,\n            },\n            {\n                image: this.BG_dirt1,\n                layerWidth: 600,\n                positionY: 137 - this.BG_dirt1.height,\n                positionX: 0,\n                speed:  mySpeed * 0.8 * 0.8 *0.8 * 0.8,\n            },\n            {\n                image: this.BG_dirt2,\n                layerWidth: 600,\n                positionY: 155 - this.BG_dirt2.height,\n                positionX: 0,\n                speed:  mySpeed * 0.8 * 0.8 * 0.8,\n            },\n            {\n                image: this.BG_dirt3,\n                layerWidth: 600,\n                positionY: 177 - this.BG_dirt3.height,\n                positionX: 0,\n                speed:  mySpeed * 0.8 * 0.8,\n            },\n            {\n                image: this.BG_road,\n                layerWidth: 600,\n                positionY: 200 - this.BG_road.height,\n                positionX: 0,\n                speed: mySpeed * 0.8,\n            },\n            {\n                image: this.PR_tree1,\n                layerWidth: 1200,\n                positionY: 163 - this.PR_tree1.height,\n                positionX: 253,\n                speed: mySpeed * 0.8 * 0.8,\n            },\n            {\n                image: this.PR_tree2,\n                layerWidth: 1200,\n                positionY: 161 - this.PR_tree2.height,\n                positionX: 7,\n                speed: mySpeed * 0.8 * 0.8,\n            },\n            {\n                image: this.PR_tree2,\n                layerWidth: 1200,\n                positionY: 158 - this.PR_tree2.height,\n                positionX: 245,\n                speed: mySpeed * 0.8 * 0.8,\n            },\n            {\n                image: this.PR_tree2,\n                layerWidth: 1200,\n                positionY: 158 - this.PR_tree2.height,\n                positionX: 347,\n                speed: mySpeed * 0.8 * 0.8,\n            },\n            {\n                image: this.PR_tree1,\n                layerWidth: 1200,\n                positionY: 163 - this.PR_tree1.height,\n                positionX: 600+153,\n                speed: mySpeed * 0.8 * 0.8,\n            },\n            {\n                image: this.PR_tree1,\n                layerWidth: 1200,\n                positionY: 158 - this.PR_tree1.height,\n                positionX: 600+265,\n                speed: mySpeed * 0.8 * 0.8,\n            },\n            {\n                image: this.PR_tree2,\n                layerWidth: 1200,\n                positionY: 162 - this.PR_tree2.height,\n                positionX: 600 +25,\n                speed: mySpeed * 0.8 * 0.8,\n            },\n            {\n                image: this.PR_tree2,\n                layerWidth: 1200,\n                positionY: 158 - this.PR_tree2.height,\n                positionX: 600+96,\n                speed: mySpeed * 0.8 * 0.8,\n            },\n            {\n                image: this.AR_oldhouse,\n                layerWidth: 1200,\n                positionY: 177 - this.AR_oldhouse.height,\n                positionX: 52,\n                speed: mySpeed * 0.8 * 0.8,\n            },\n            {\n                image: this.AR_haneu,\n                layerWidth: 1200,\n                positionY: 177 - this.AR_haneu.height,\n                positionX: 900,\n                speed: mySpeed * 0.8 * 0.8,\n            },\n            {\n                image: this.AR_grill,\n                layerWidth: 1200,\n                positionY: 177 - this.AR_grill.height,\n                positionX: 312,\n                speed: mySpeed * 0.8 * 0.8,\n            },\n            {\n                image: this.PR_lamp,\n                layerWidth: 228,\n                positionY: 177 - this.PR_lamp.height,\n                positionX: 7,\n                speed: mySpeed * 0.8 ,\n            },\n            {\n                image: this.PR_lamp,\n                layerWidth: 228,\n                positionY: 177 - this.PR_lamp.height,\n                positionX: 235,\n                speed: mySpeed * 0.8 ,\n            }\n        ];\n    }\n\n}\n","import * as Matter from 'matter-js';\nimport { Framebuffer } from '../../Framebuffer';\nimport { AbstractScene } from '../../scenes/AbstractScene';\nimport { Vector3f, Vector4f } from '../../math';\nimport { Color } from '../../core/Color';\nimport { TexturedTriangleRasterizer } from '../../rasterizer/TexturedTriangleRasterizer';\nimport { Vertex } from '../../Vertex';\nimport { TextureCoordinate } from '../../TextureCoordinate';\nimport { Texture, TextureUtils } from '../../texture';\nimport { TexturingRenderingPipeline } from '../../rendering-pipelines/TexturingRenderingPipeline';\nimport { SutherlandHodgmanClipper } from '../../portal-system';\nimport { SutherlandHodgman2DClipper } from '../../screen-space-clipping/SutherlandHodgman2DClipper';\nimport { TexturedTriangleRasterizer2D } from '../../rasterizer/TexturedTriangleRasterizer2D';\nimport { ParallaxScrollingScene } from '../xenusion/ParallaxScrollingScene';\n\n// TODO:\n// * write custom triangle rasterizer without bilinear filter, zbuffer support and perspective correct interpolation\n// * write 2d clipper code without perspective\nexport class MatterScene extends AbstractScene {\n\n    private engine: Matter.Engine;\n    private lastTime: number = undefined;\n\n    private rasterizer: TexturedTriangleRasterizer2D;\n    texture: Texture;\n    hoodlumLogo: Texture;\n    texturingRenderingPipeline: TexturingRenderingPipeline;\n    clipper: SutherlandHodgman2DClipper;\n    logoB;\n    scene: ParallaxScrollingScene;\n    public init(framebuffer: Framebuffer): Promise<any> {\n        this.texturingRenderingPipeline = new TexturingRenderingPipeline(framebuffer);\n        this.clipper = new SutherlandHodgman2DClipper(framebuffer);\n        this.rasterizer = new TexturedTriangleRasterizer2D(framebuffer);\n        // create an engine\n        this.engine = Matter.Engine.create();\n        this.scene = new ParallaxScrollingScene();\n\n        // create two boxes and a ground\n        var boxA = Matter.Bodies.rectangle(400, 200 - 1900, 90, 90, { angle: Math.random() * Math.PI, velocity: { x: 1, y: 0.2 } });\n        var boxB = Matter.Bodies.rectangle(450, 50 - 900, 80, 120, { angle: Math.random() * 2 * Math.PI });\n        var boxC = Matter.Bodies.rectangle(365, -80 - 990, 200, 200, { angle: Math.random() * Math.PI });\n        var boxD = Matter.Bodies.rectangle(498, -190 - 900, 83, 110, { angle: Math.random() * 2 * Math.PI });\n        var ground = Matter.Bodies.rectangle(400, 608, 810, 60, { isStatic: true });\n\n\n        // add all of the bodies to the world\n        Matter.Composite.add(this.engine.world, [boxA, boxB, boxC, boxD, ground]);\n\n        setInterval(() => {\n            let body = Matter.Bodies.rectangle(400, 50 - 900, 80, 80, { angle: Math.random() * 2 * Math.PI });\n            Matter.Body.applyForce(body, body.position, { x: 0.1 * Math.sin(Math.random() * Math.PI * 2), y: 0.2 });\n            Matter.Composite.add(this.engine.world, [body]);\n        }, 400);\n\n        return Promise.all([\n            this.scene.init(),\n            TextureUtils.load(require('@assets/box.png'), true).then(\n                (texture: Texture) => this.texture = texture\n            ),\n            TextureUtils.load(require('@assets/hoodlumLogo.png'), true).then(\n                (texture: Texture) => this.hoodlumLogo = texture\n            ),\n        ]);\n    }\n\n    public onInit(): void {\n        this.scene.onInit();\n    }\n\n    public render(framebuffer: Framebuffer, time: number) {\n        const deltaTimeMs: number = this.getDeltaTime(time);\n        Matter.Engine.update(this.engine, deltaTimeMs * 1);\n\n        //framebuffer.clearColorBuffer(Color.DARK_GRAY.toPackedFormat());\n        this.scene.render(framebuffer, time);\n      \n\n        const bodies = Matter.Composite.allBodies(this.engine.world);\n\n        const v1 = new Vertex();\n        const v2 = new Vertex();\n        const v3 = new Vertex();\n        const v4 = new Vertex();\n\n        framebuffer.setTexture(this.texture)\n\n        for (let i = 0; i < bodies.length; i++) {\n          \n            if (bodies[i].position.x < -100 ||\n                bodies[i].position.x > 850 ||\n                bodies[i].position.y > 700\n            ) {\n                Matter.Composite.remove(this.engine.world, [bodies[i]]);\n                continue;\n            }\n            const vertices = bodies[i].vertices;\n\n           /* \n          for (let j = 0; j < vertices.length; j++) {\n            \n              framebuffer.drawLineDDANoZ(\n                  new Vector3f(vertices[j].x, vertices[j].y, 0).mul(0.4).add(new Vector3f(30, -31, 0)),\n                  new Vector3f(vertices[(j + 1) % (vertices.length)].x, vertices[(j + 1) % (vertices.length)].y, 0).mul(0.4).add(new Vector3f(30, -31, 0)),\n                  Color.CYAN.toPackedFormat()\n              );\n          }*/\n\n\n            v1.projection = this.toInteger(new Vector4f(vertices[0].x, vertices[0].y, -10).mul(0.4).add(new Vector4f(30, -31, 0, 0)));\n            v1.textureCoordinate = new TextureCoordinate(0, 0);\n\n            v2.projection = this.toInteger(new Vector4f(vertices[1].x, vertices[1].y, -10).mul(0.4).add(new Vector4f(30, -31, 0, 0)));\n            v2.textureCoordinate = new TextureCoordinate(1, 0);\n\n            v3.projection = this.toInteger(new Vector4f(vertices[2].x, vertices[2].y, -10).mul(0.4).add(new Vector4f(30, -31, 0, 0)));\n            v3.textureCoordinate = new TextureCoordinate(1, 1);\n\n            v4.projection = this.toInteger(new Vector4f(vertices[3].x, vertices[3].y, -10).mul(0.4).add(new Vector4f(30, -31, 0, 0)));\n            v4.textureCoordinate = new TextureCoordinate(0, 1);\n\n            this.clipConvexPolygon(framebuffer, [v1, v2, v3, v4]);\n        }\n        framebuffer.drawTexture(0, 0, this.hoodlumLogo, 1);\n    }\n\n    public clipConvexPolygon(framebuffer: Framebuffer, subject: Array<Vertex>): void {\n\n        let output = subject;\n\n        for (let j = 0; j < framebuffer.clipRegion.length; j++) {\n            const edge = framebuffer.clipRegion[j];\n            const input = output;\n            output = new Array<Vertex>();\n            let S = input[input.length - 1];\n\n            for (let i = 0; i < input.length; i++) {\n                const point = input[i];\n                if (edge.isInside2(point)) {\n                    if (!edge.isInside2(S)) {\n                        output.push(edge.computeIntersection3(S, point));\n                    }\n                    output.push(point);\n                } else if (edge.isInside2(S)) {\n                    output.push(edge.computeIntersection3(S, point));\n                }\n                S = point;\n            }\n        }\n\n        if (output.length < 3) {\n            return;\n        }\n\n        // triangulate new point set\n        for (let i = 0; i < output.length - 2; i++) {\n           this.rasterizer.drawTriangleDDA(framebuffer, output[0], output[1 + i], output[2 + i]);\n        }\n    }\n\n    private toInteger(vec: Vector4f): Vector4f {\n        return new Vector4f(vec.x | 0, vec.y | 0, vec.z | 0);\n    }\n\n    private getDeltaTime(time: number): number {\n        if (!this.lastTime) {\n            this.lastTime = time;\n        }\n\n        const delta = time - this.lastTime;\n        this.lastTime = time;\n        return delta;\n    }\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./default-style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./default-style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Canvas } from '../../Canvas';\nimport { MatterScene } from './MatterScene';\n\nimport './../../default-style.css';\n\nclass Application {\n\n    public static main(): void {\n        const canvas: Canvas = new Canvas(320, 200, new MatterScene());\n        canvas.init();\n    }\n\n}\n\nApplication.main();\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","factory","installedModules","moduleId","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Common","_baseDelta","_nextId","_seed","_nowStartTime","Date","_warnedOnce","_decomp","extend","obj","deep","argsStart","deepClone","arguments","source","prop","constructor","clone","keys","values","path","begin","end","split","slice","set","val","parts","shuffle","array","j","Math","floor","random","temp","choose","choices","isElement","HTMLElement","nodeType","nodeName","isArray","isFunction","isPlainObject","isString","clamp","min","max","sign","now","window","performance","webkitNow","_seededRandom","colorToNumber","colorString","replace","charAt","parseInt","logLevel","log","console","apply","Array","info","warn","warnOnce","message","deprecated","warning","chain","nextId","indexOf","haystack","needle","func","mapped","topologicalSort","graph","result","visited","node","_topologicalSort","neighbors","neighbor","funcs","_chained","lastResult","args","chainPathBefore","base","chainPathAfter","setDecomp","decomp","getDecomp","g","e","Bounds","vertices","bounds","x","y","update","velocity","Infinity","vertex","contains","point","overlaps","boundsA","boundsB","translate","vector","shift","position","deltaX","deltaY","Vector","magnitude","sqrt","magnitudeSquared","rotate","angle","output","cos","sin","rotateAbout","normalise","dot","vectorA","vectorB","cross","cross3","vectorC","add","sub","mult","scalar","div","perp","negate","neg","atan2","_temp","Vertices","points","body","index","isInternal","fromPath","match","parseFloat","centre","area","mean","average","signed","abs","inertia","mass","numerator","denominator","v","verticesLength","translateX","translateY","dx","dy","pointX","pointY","nextVertex","scale","scaleX","scaleY","delta","chamfer","radius","quality","qualityMin","qualityMax","newVertices","prevVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","pow","radiusVector","midNormal","scaledVertex","precision","theta","acos","clockwiseSort","sort","vertexA","vertexB","isConvex","z","flag","hull","upper","lower","pop","Body","Sleeping","Axes","_timeCorrection","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","options","defaults","type","label","plugin","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","angularVelocity","isSensor","isStatic","isSleeping","motion","sleepThreshold","density","restitution","friction","frictionStatic","frictionAir","collisionFilter","category","mask","group","slop","timeScale","render","visible","opacity","strokeStyle","fillStyle","lineWidth","sprite","xScale","yScale","xOffset","yOffset","events","circleRadius","positionPrev","anglePrev","parent","axes","deltaTime","_original","_initProperties","nextGroup","isNonColliding","nextCategory","defaultFillStyle","defaultStrokeStyle","defaultLineWidth","settings","setStatic","setMass","setDensity","setInertia","setVertices","setPosition","setAngle","setVelocity","setAngularVelocity","setSpeed","setAngularSpeed","setParts","setCentre","part","inverseMass","inverseInertia","moment","fromVertices","autoHull","hullCentre","total","_totalProperties","relative","updateVelocity","getVelocity","getSpeed","getAngularVelocity","getAngularSpeed","translation","rotation","totalArea","totalInertia","deltaTimeSquared","correction","velocityPrevX","velocityPrevY","updateVelocities","bodyVelocity","applyForce","offset","properties","Events","on","eventNames","callback","names","off","callbacks","newCallbacks","trigger","event","eventClone","Composite","isModified","bodies","constraints","composites","cache","allBodies","allConstraints","allComposites","setModified","composite","updateParents","updateChildren","childComposite","objects","addBody","addConstraint","addComposite","constraint","remove","removeBody","removeConstraint","removeComposite","compositeA","compositeB","removeCompositeAt","sleepCounter","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","move","rebase","recursive","_motionWakeThreshold","_motionSleepThreshold","_minBias","motionSleepThreshold","minMotion","maxMotion","afterCollisions","pairs","pair","isActive","collision","bodyA","bodyB","sleepingBody","movingBody","wasSleeping","Collision","_supports","_overlapAB","_overlapBA","Pair","overlap","axis","collided","parentA","parentB","depth","normal","tangent","penetration","supportCount","collides","_overlapAxes","minOverlap","table","minAxis","normalX","normalY","supportsB","_findSupports","supportsA","verticesA","verticesB","overlapAB","overlapBA","verticesALength","verticesBLength","verticesAX","verticesAY","verticesBX","verticesBY","axesLength","overlapMin","Number","MAX_VALUE","overlapAxisNumber","axisX","axisY","minA","minB","maxA","maxB","direction","vertexC","distance","bodyAPositionX","bodyAPositionY","nearestDistance","Contact","timestamp","contacts","contactCount","separation","timeCreated","timeUpdated","supportA","contactA","supportB","contactB","setActive","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","impulse","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","share","normalVelocity","relativeVelocity","difference","massTotal","resistanceTotal","zero","postSolveAll","pointAX","pointAY","gradient","toFixed","xx","Bodies","rectangle","width","height","trapezoid","slope","verticesPath","x1","x2","x3","circle","maxSides","sides","ceil","polygon","PI","yy","vertexSets","flagInternal","removeCollinear","minimumArea","removeDuplicatePoints","canDecomp","Boolean","quickDecomp","concave","makeCCW","removeCollinearPoints","decomposed","chunkVertices","partA","partB","pav","pbv","da","db","Detector","collisions","setBodies","detector","bodiesLength","canCollide","collisionIndex","_compareBoundsX","boundXMax","boundYMax","boundYMin","bodyAStatic","partsALength","partsASingle","partsBLength","partsBStart","filterA","filterB","Mouse","element","mouse","document","absolute","mousedownPosition","mouseupPosition","wheelDelta","button","pixelRatio","getAttribute","sourceEvents","mousemove","mousedown","mouseup","mousewheel","_getRelativeMousePosition","changedTouches","preventDefault","detail","setElement","addEventListener","passive","clearSourceEvents","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","documentElement","parentNode","scrollX","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","touches","pageX","left","pageY","top","clientWidth","clientHeight","Plugin","_registry","register","isPlugin","registered","pluginVersion","versionParse","version","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","used","isFor","parsed","for","versionSatisfies","use","plugins","uses","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","test","pattern","exec","major","minor","patch","isRange","operator","prerelease","normalImpulse","tangentImpulse","Engine","Resolver","Pairs","_deltaMax","engine","positionIterations","velocityIterations","constraintIterations","enableSleeping","gravity","timing","lastDelta","lastElapsed","lastUpdatesPerFrame","world","grid","buckets","broadphase","metrics","startTime","_bodiesApplyGravity","_bodiesUpdate","collisionStart","positionDamping","preSolvePosition","solvePosition","postSolvePosition","preSolveVelocity","solveVelocity","_bodiesUpdateVelocities","collisionActive","collisionEnd","_bodiesClearForces","merge","engineA","engineB","gravityScale","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","_frictionMaxStatic","pairsLength","contactShare","positionDampen","slopDampen","positionWarming","verticesTranslate","boundsUpdate","positionImpulseX","positionImpulseY","contact","contactVertex","impulseX","impulseY","maxFriction","timeScaleCubed","restingThresh","restingThreshTangent","frictionNormalMultiplier","frictionMaxStatic","tangentX","tangentY","inverseMassTotal","bodyAVelocityX","bodyAVelocityY","bodyAAngularVelocity","bodyBVelocityX","bodyBVelocityY","bodyBAngularVelocity","offsetAX","offsetAY","offsetBX","offsetBY","relativeVelocityX","relativeVelocityY","tangentVelocity","normalOverlap","normalForce","frictionLimit","oAcN","oBcN","contactNormalImpulse","contactTangentImpulse","pairUpdate","pairCreate","pairSetActive","pairsTable","pairsList","pairsListLength","pairsListIndex","collisionsLength","collisionStartIndex","collisionEndIndex","collisionActiveIndex","Matter","Composites","Grid","MouseConstraint","Query","Render","Runner","SAT","Svg","World","run","before","after","stack","columns","rows","columnGap","rowGap","lastBody","currentX","currentY","row","maxHeight","column","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","mesh","crossBrace","col","bodyC","pyramid","stackX","stackY","actualRows","lastBodyWidth","newtonsCradle","size","car","wheelSize","wheelAOffset","wheelBOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","bucketWidth","bucketHeight","forceUpdate","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","gridPairs","pairId","bucketLength","pairKeys","pairKeysLength","canvas","mouseConstraint","_triggerEvents","mouseEvents","partsAStart","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","outside","_requestAnimationFrame","_cancelAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_goodFps","_goodDelta","frameRequestId","historySize","deltaHistory","lastTime","lastTimestamp","timestampElapsed","timestampElapsedHistory","engineDeltaHistory","engineElapsedHistory","engineUpdatesHistory","elapsedHistory","background","wireframeBackground","wireframeStrokeStyle","hasBounds","enabled","wireframes","showSleeping","showDebug","showStats","showPerformance","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","controller","showBroadphase","setPixelRatio","appendChild","loop","time","_updateTiming","setTransform","stats","stop","_getPixelRatio","setAttribute","style","setSize","lookAt","padding","center","viewHeight","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","endViewTransform","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyIds","separations","vertexNumbers","mousePosition","sections","font","textBaseline","textAlign","section","fillText","lastEngineUpdatesPerFrame","lastEngineDelta","deltaMean","_mean","elapsedMean","engineDeltaMean","engineUpdatesMean","engineElapsedMean","rateMean","neededUpdatesPerFrame","round","fps","gap","count","indicator","plotY","beginPath","moveTo","lineTo","stroke","start","arc","closePath","coils","fill","globalAlpha","texture","_getTexture","drawImage","rect","normalPosX","normalPosY","inspector","selected","setLineDash","selectStart","selectBounds","unshift","createElement","oncontextmenu","onselectstart","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","imagePath","image","Image","src","cssBackground","backgroundSize","_maxFrameDelta","_frameDeltaFallback","_timeBufferMargin","_elapsedNextEstimate","_smoothingLowerBound","_smoothingUpperBound","runner","frameDelta","frameDeltaSmoothing","frameDeltaSnapping","frameDeltaHistory","frameDeltaHistorySize","timeBuffer","timeLastTick","maxUpdates","maxFrameTime","lastUpdatesDeferred","onFrame","_onNextFrame","tick","tickStartTime","engineDelta","updateCount","deltaHistorySorted","deltaHistoryWindow","updateStartTime","elapsedTimeTotal","elapsedTimeUpdates","elapsedNextEstimate","isFixed","deltaMin","deltaMax","_cancelNextFrame","Error","valuesLength","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","stylesInDOM","getIndexByIdentifier","identifier","modulesToDom","idCountMap","identifiers","indexByIdentifier","css","sourceMap","references","updater","addElementStyle","byIndex","api","domAPI","newObj","lastIdentifiers","newList","newLastIdentifiers","_i","_index","memo","insert","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","getTarget","setAttributes","attributes","styleElement","nonce","insertStyleElement","styleTagTransform","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","cachedModule","__webpack_modules__","a","definition","globalThis","Function","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","nc","ScaleClipBlitter","framebuffer","drawScaledTextureClip","xp","yp","alphaBlend","xStep","yStep","newHeight","newWidth","yStart","xStart","xTextureStart","alphaScale","index2","textureIndex","alpha","inverseAlpha","framebufferPixel","texturePixel","b","Color","static","toPackedFormat","color","num","mul","CullFace","Vector4f","w","vec","normalize","reci","sub2","vec1","vec2","add2","scal","componentWiseMul","cross2","normalize2","AbstractGeometricObject","inverse","buildMesh","normals","faces","n1","n2","n3","v1","v2","v3","transformedPoints","transformedNormals","getMesh","Vector3f","Torus","invert","super","STEPS2","frame","torusFunction","frame2","up","right","pos","Vector2f","Matrix4f","m11","m12","m13","m14","m21","m22","m23","m24","m31","m32","m33","m34","m41","m42","m43","m44","constructIdentityMatrix","matrix","setIdentityMatrix","transpose","computeNormalMatrix","inverseTranslation","scale1","scale2","scale3","inverseRotation","multiplyMatrix","getInverseRotation","getRotation","constructShadowMatrix","planePoint","planeNormal","lightPosition","NdotL","shadowMatrix","constructTranslationMatrix","tx","ty","tz","setTranslationMatrix","constructXRotationMatrix","setXRotationMatrix","setZRotationMatrix","setScaleMatrix","sx","sy","sz","setYRotationMatrix","setRotationMatrix","constructYRotationMatrix","constructZRotationMatrix","constructScaleMatrix","multiply2","matrix2","multiply","multiplyHom","multiplyHomArr","multiplyHomArr2","multiplyArr","Matrix3f","zScale","Interpolator","interpolate","current","cosineInterpolate","mu","mu2","RandomNumberGenerator","seed","getFloat","setSeed","AbstractTriangleRasterizer","AbstractScannlineTriangleRasterizer","drawTriangleDDA","p1","p2","p3","projection","fillLongRightTriangle","fillLongLeftTriangle","FlatShadingTriangleRasterizer","slope1","slope2","zslope1","zslope2","curz1","curz2","xPosition","xPosition2","yPosition","yDistanceLeft","yDistanceRight","drawSpan","spanzStep","wStart","framebufferIndex","wBuffer","LineRasterizerDda","drawLineDDA","xDistance","yDistance","wDelta","drawPixel","LineRasterizerNoZ","drawLineDDANoZ","TexturedTriangleRasterizer","tslope1u","textureCoordinate","u","tslope1v","curu1","curv1","tslope2u","tslope2v","curu2","curv2","spanuStep","spanvStep","uStart","vStart","bob","color2","TexturedAlphaBlendingTriangleRasterizer","pipeline","currentColor","getBilinearFilteredPixelRasterizer","TextureCoordinate","Vertex","AbstractRenderingPipeline","NEAR_PLANE_Z","cullMode","BACK","setCullFace","face","setAlpha","isInFrontOfNearPlane","isTriangleCCW","DISABLED","det","isTriangleCCW2","v4","TexturingRenderingPipeline","sphereMapping","triangleRasterizer","vertexArray","setSphereMapping","modelViewMatrix","projectedVertices","setFramebuffer","enableAlphaBlending","disableAlphaBlending","setModelViewMatrix","drawMeshArray","meshes","model","draw","normalMatrix","normals2","points2","project2","fakeSphere","uv","clipConvexPolygon","zClipTriangle","t1","computeNearPlaneIntersection","ratio","subject","input","S","clipRegion","edge","isInside2","computeIntersection2","AbstractClipEdge","BottomClipEdge","isInside","minWindow","computeIntersection","factor","textCoord","computeIntersection3","CohenSutherlandLineClipper","cohenSutherlandLineClipper","code1","computeRegionCode","code2","accept","done","isTrivialAccept","isTrivialReject","REGION_CODE_CENTER","tempCode","tempPoint","REGION_CODE_TOP","maxWindow","REGION_CODE_BOTTOM","REGION_CODE_RIGHT","REGION_CODE_LEFT","regionCode","LeftClipEdge","RightClipEdge","TopClipEdge","Texture","maxWidth","setClamp","getPixel","getBilinearFilteredPixel","x0y0","x1y0","x0y1","x1y1","col1","col2","getBilinearFilteredPixel2","getPixel2","interpolateComp","getPixelRasterizer","getPixel3","xFrac","yFrac","oneMinusXfrac","oneMinusYfrac","Framebuffer","camera","texturedTriangleRasterizer","scaleClipBlitter","texturedRenderingPipeline","lineRasterizer","lineRasterizerNo","tmpGlitch","lensFlareVisible","lensFlareStart","lensFlareEnd","imageData","unsignedIntArray","torus","plane","cylinder2","linerClipper","ImageData","Float32Array","arrayBuffer","ArrayBuffer","PIXEL_SIZE_IN_BYTES","Uint8ClampedArray","Uint32Array","setTexture","getImageData","BLACK","clearColorBuffer","drawPixel4","drawPixel3","alpha2","drawPixelAntiAliased","roundedX","roundedY","percent","drawPixelAliased","drawPixelAntiAliasedSpacial","readPixel","drawRect","drawRect2","drawText","text","xpos","firstIndex","charCodeAt","drawTextureRectFastAlpha","addReflections","drawTextureRect2","xs","ys","xt","yt","h","texIndex","frIndex","drawTextureColorized","txPixel","drawTextureRectNoAlpha","blend","c1","c2","nAlpha","nInvAlpha","addColor","g1","b1","g2","b2","drawTextureRect","pixelWidth","fbPixel","drawTextureRectAdd","pixelate","xoff","yoff","drawBox2","fastFramebufferCopyOffset","dest","fastFramebufferCopy","noise","elapsedTime","rng","drawTexturedBillboard","drawParticle","drawParticle2","imgNum","spritH","drawParticle2Sub","rr","gg","bb","drawParticleNoDepth","drawSoftParticle","zDist","drawFog","fogScale","fogOffset","videoMemorySize","wBufferScale","drawScaledTextureClipBi","drawScaledTextureClipBiAdd","drawScaledTextureClipAdd","drawTexture","SCREEN_WIDTH","SCREEN_HEIGHT","textureRowOffset","framebufferRowOffset","yHeight","xWidth","drawTextureFullscreen","drawTexture3","mHeight","drawTextureNoClipAlpha","nearPlaneClipping","t2","project","t3","clearDepthBuffer","drawBox","wireFrameSphereClipping","sphereFunction2","modelViewMartrix","transformed","colred","colLine","wireFrameTerrain","heightmap","xOff","zOff","forEach","drawBoundingSphere","sphere","getRadius","getCenter","drawPlanedeformationTunnelAnim","xdist","ydist","dist","dist2","color1","final","drawPlaneDeformation","IMG_WIDTH","IMG_HEIGHT","asin","fakeSphere2","tex","phi","FullscreenUtils","toggleFullscreen","fullscreen","exitFullscreen","setStyle","enterFullscreen","el","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullScreen","mozCancelFullScreen","webkitExitFullscreen","Canvas","scene","boundRenderLoop","oImageSmoothingEnabled","imageSmoothingEnabled","webkitImageSmoothingEnabled","renderLoop","init","appendTo","getElementById","then","onInit","flipBackbuffer","putImageData","AbstractScene","Promise","all","TextureUtils","generateProceduralNoise","generateProceduralParticleTexture","generateProceduralParticleTexture2","load","filename","transparency","onload","onerror","withAlpha","conv","SutherlandHodgman2DClipper","TexturedTriangleRasterizer2D","ParallaxScrollingScene","BG_sky","BG_city","BG_dirt1","BG_dirt2","BG_dirt3","BG_road","PR_tree1","PR_tree2","PR_lamp","AR_oldhouse","AR_grill","AR_haneu","parallaxLayers","createParallaxLayers","RED","disp","layerWidth","positionX","positionY","mySpeed","MatterScene","rasterizer","hoodlumLogo","texturingRenderingPipeline","clipper","logoB","boxA","boxB","boxC","boxD","ground","setInterval","deltaTimeMs","getDeltaTime","toInteger","locals","main"],"sourceRoot":""}