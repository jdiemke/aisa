{"version":3,"file":"demo.js","mappings":"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nB,EAAM9nB,QAAQlD,KAChF+8B,EAAoB,IAAIrzB,YAAY1J,EAAKnB,OAAS,GACxD,IAAIwB,EAAY,EAChB,IAAK,IAAItB,EAAY,EAAGA,EAAIiB,EAAKnB,OAAQE,GAAK,EAEtCg+B,EAAK18B,GADLy8B,EACW98B,EAAKjB,EAAI,IAAM,GAAOiB,EAAKjB,EAAI,IAAM,GAAOiB,EAAKjB,EAAI,IAAM,EAAKiB,EAAKjB,EAAI,GAEzE,KAAO,GAAOiB,EAAKjB,EAAI,IAAM,GAAOiB,EAAKjB,EAAI,IAAM,EAAKiB,EAAKjB,EAAI,GAGhFsB,IAEJ,OAAO08B,CACX,E,iBCnHJ,IAAIv+B,EAAM,CACT,gBAAiB,CAChB,MAED,mBAAoB,CACnB,MAED,cAAe,CACd,MAED,iBAAkB,CACjB,MAED,kBAAmB,CAClB,KAED,qBAAsB,CACrB,KAED,uBAAwB,CACvB,MAED,0BAA2B,CAC1B,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,kBAAmB,CAClB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,kBAAmB,CAClB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,kBAAmB,CAClB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,kBAAmB,CAClB,KACA,KACA,MAED,qBAAsB,CACrB,KACA,KACA,MAED,kBAAmB,CAClB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,kBAAmB,CAClB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,kBAAmB,CAClB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,kBAAmB,CAClB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,kBAAmB,CAClB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,kBAAmB,CAClB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oB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","sources":["webpack://aisa/webpack/runtime/load script","webpack://aisa/./src/demo-style.css","webpack://aisa/./node_modules/css-loader/dist/runtime/api.js","webpack://aisa/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://aisa/./node_modules/stats.js/build/stats.min.js","webpack://aisa/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://aisa/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://aisa/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://aisa/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://aisa/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://aisa/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://aisa/./src/CullFace.ts","webpack://aisa/./src/Framebuffer.ts","webpack://aisa/./src/RandomNumberGenerator.ts","webpack://aisa/./src/TextureCoordinate.ts","webpack://aisa/./src/Vertex.ts","webpack://aisa/./src/blitter/ScaleClipBlitter.ts","webpack://aisa/./src/core/Color.ts","webpack://aisa/./src/core/Utils.ts","webpack://aisa/./src/fullscreen/FullscreenUtils.ts","webpack://aisa/./src/Canvas.ts","webpack://aisa/./src/demo-style.css?5811","webpack://aisa/./src/examples/demo/Application.ts","webpack://aisa/./src/sound/MusicProperties.ts","webpack://aisa/./src/sound/SoundManager.ts","webpack://aisa/./src/examples/block-fade/TransitionMethods.ts","webpack://aisa/./src/examples/block-fade/Particle.ts","webpack://aisa/./src/examples/block-fade/BlockFade.ts","webpack://aisa/./src/core/LinkedList.ts","webpack://aisa/./src/core/Node.ts","webpack://aisa/./src/examples/demo/DemoScene.ts","webpack://aisa/./src/examples/demo/canvas-record.ts","webpack://aisa/./src/examples/demo/parts/LoadingScene.ts","webpack://aisa/./src/geometrical-objects/AbstractGeometricObject.ts","webpack://aisa/./src/geometrical-objects/Torus.ts","webpack://aisa/./src/math/Interpolator.ts","webpack://aisa/./src/math/Matrix3.ts","webpack://aisa/./src/math/Matrix4f.ts","webpack://aisa/./src/math/Vector2f.ts","webpack://aisa/./src/math/Vector3f.ts","webpack://aisa/./src/math/Vector4f.ts","webpack://aisa/./src/rasterizer/AbstractScanlineTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/AbstractTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/FlatShadingTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/TexturedAlphaBlendingTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/TexturedTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/line/LineRasterizer.ts","webpack://aisa/./src/rasterizer/line/LineRasterizerNoZ.ts","webpack://aisa/./src/rendering-pipelines/AbstractRenderingPipeline.ts","webpack://aisa/./src/rendering-pipelines/TexturingRenderingPipeline.ts","webpack://aisa/./src/scenes/AbstractScene.ts","webpack://aisa/./src/screen-space-clipping/AbstractClipEdge.ts","webpack://aisa/./src/screen-space-clipping/BottomClipEdge.ts","webpack://aisa/./src/screen-space-clipping/CohenSutherlandLineClipper.ts","webpack://aisa/./src/screen-space-clipping/LeftClipEdge.ts","webpack://aisa/./src/screen-space-clipping/RightClipEdge.ts","webpack://aisa/./src/screen-space-clipping/TopClipEdge.ts","webpack://aisa/./src/texture/Texture.ts","webpack://aisa/./src/texture/TextureUtils.ts","webpack://aisa/./src/examples/demo/ lazy ^.*$ namespace object","webpack://aisa/./src/sound/JSRocket.js","webpack://aisa/./src/sound/cowbell/audio_player.js","webpack://aisa/./src/sound/cowbell/cowbell.js","webpack://aisa/./src/sound/cowbell/openmpt/openmpt_player.js","webpack://aisa/./src/sound/cowbell/web_audio_player.js","webpack://aisa/webpack/bootstrap","webpack://aisa/webpack/runtime/compat get default export","webpack://aisa/webpack/runtime/define property getters","webpack://aisa/webpack/runtime/ensure chunk","webpack://aisa/webpack/runtime/get javascript chunk filename","webpack://aisa/webpack/runtime/global","webpack://aisa/webpack/runtime/hasOwnProperty shorthand","webpack://aisa/webpack/runtime/make namespace object","webpack://aisa/webpack/runtime/publicPath","webpack://aisa/webpack/runtime/jsonp chunk loading","webpack://aisa/webpack/runtime/nonce","webpack://aisa/webpack/startup"],"sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"aisa:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n    padding: 0;\n    margin: 0;\n    color: white;\n    background-color: #000;\n    font-family: 'Play', sans-serif;\n    font-size: 100%;\n}\n\n#aisa {\n    cursor: zoom-in;\n}\n\n/* debugging */\n#debug {\n    bottom: 0;\n    height: 24px;\n    width: 640px;\n    background-color: black;\n    display: none;\n}\n\n#ticker_controls {\n    padding: 10px 0 10px 0;\n    -moz-user-select: -moz-none;\n    -khtml-user-select: none;\n    -webkit-user-select: none;\n}\n\n#ticker_controls .fa {\n    cursor: pointer;\n    color: white;\n    padding-left: 8px;\n    padding-right: 8px;\n    width: 16px;\n}\n\n#timeline {\n    -webkit-appearance: none;\n    width: 100%;\n    height: 25px;\n    background: #fff;\n    outline: none;\n    -webkit-transition: .2s;\n    transition: opacity .2s;\n}\n\n#timeline::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 20px;\n    height: 25px;\n    background: rgb(10, 28, 109);\n    cursor: pointer;\n}\n\n#timeline::-moz-range-thumb {\n    width: 20px;\n    height: 25px;\n    background: #000;\n    cursor: pointer;\n}\n\n#scene, #time {\n    font-weight: bold;\n    padding-right: 10px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/demo-style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,UAAU;IACV,SAAS;IACT,YAAY;IACZ,sBAAsB;IACtB,+BAA+B;IAC/B,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA,cAAc;AACd;IACI,SAAS;IACT,YAAY;IACZ,YAAY;IACZ,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,sBAAsB;IACtB,2BAA2B;IAC3B,wBAAwB;IACxB,yBAAyB;AAC7B;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,wBAAwB;IACxB,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,uBAAuB;AAC3B;;AAEA;IACI,wBAAwB;IACxB,gBAAgB;IAChB,WAAW;IACX,YAAY;IACZ,4BAA4B;IAC5B,eAAe;AACnB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;AACvB\",\"sourcesContent\":[\"body {\\n    padding: 0;\\n    margin: 0;\\n    color: white;\\n    background-color: #000;\\n    font-family: 'Play', sans-serif;\\n    font-size: 100%;\\n}\\n\\n#aisa {\\n    cursor: zoom-in;\\n}\\n\\n/* debugging */\\n#debug {\\n    bottom: 0;\\n    height: 24px;\\n    width: 640px;\\n    background-color: black;\\n    display: none;\\n}\\n\\n#ticker_controls {\\n    padding: 10px 0 10px 0;\\n    -moz-user-select: -moz-none;\\n    -khtml-user-select: none;\\n    -webkit-user-select: none;\\n}\\n\\n#ticker_controls .fa {\\n    cursor: pointer;\\n    color: white;\\n    padding-left: 8px;\\n    padding-right: 8px;\\n    width: 16px;\\n}\\n\\n#timeline {\\n    -webkit-appearance: none;\\n    width: 100%;\\n    height: 25px;\\n    background: #fff;\\n    outline: none;\\n    -webkit-transition: .2s;\\n    transition: opacity .2s;\\n}\\n\\n#timeline::-webkit-slider-thumb {\\n    -webkit-appearance: none;\\n    appearance: none;\\n    width: 20px;\\n    height: 25px;\\n    background: rgb(10, 28, 109);\\n    cursor: pointer;\\n}\\n\\n#timeline::-moz-range-thumb {\\n    width: 20px;\\n    height: 25px;\\n    background: #000;\\n    cursor: pointer;\\n}\\n\\n#scene, #time {\\n    font-weight: bold;\\n    padding-right: 10px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","export enum CullFace {\n    FRONT = 0,\n    BACK = 1,\n    DISABLED\n}\n","\nimport { ScaleClipBlitter } from './blitter/ScaleClipBlitter';\nimport { ControllableCamera } from './camera';\nimport { Color } from './core/Color';\nimport { CullFace } from './CullFace';\nimport { Torus } from './geometrical-objects/Torus';\nimport { Matrix3f, Matrix4f, Vector2f, Vector3f, Vector4f } from './math';\nimport { Interpolator } from './math/Interpolator';\nimport { Sphere } from './math/Sphere';\nimport RandomNumberGenerator from './RandomNumberGenerator';\nimport { FlatShadingTriangleRasterizer } from './rasterizer/FlatShadingTriangleRasterizer';\nimport { LineRasterizerDda } from './rasterizer/line/LineRasterizer';\nimport { LineRasterizerNoZ } from './rasterizer/line/LineRasterizerNoZ';\nimport { TexturedAlphaBlendingTriangleRasterizer } from './rasterizer/TexturedAlphaBlendingTriangleRasterizer';\nimport { TexturedTriangleRasterizer } from './rasterizer/TexturedTriangleRasterizer';\nimport { TexturingRenderingPipeline } from './rendering-pipelines/TexturingRenderingPipeline';\nimport { AbstractClipEdge } from './screen-space-clipping/AbstractClipEdge';\nimport { BottomClipEdge } from './screen-space-clipping/BottomClipEdge';\nimport { CohenSutherlandLineClipper } from './screen-space-clipping/CohenSutherlandLineClipper';\nimport { LeftClipEdge } from './screen-space-clipping/LeftClipEdge';\nimport { RightClipEdge } from './screen-space-clipping/RightClipEdge';\nimport { TopClipEdge } from './screen-space-clipping/TopClipEdge';\nimport { Texture } from './texture/Texture';\nimport { TextureCoordinate } from './TextureCoordinate';\nimport { Vertex } from './Vertex';\n\n/*\nimport { FlatShadingRenderingPipeline } from './rendering-pipelines/FlatShadingRenderingPipeline';\nimport { TexturingRenderingPipeline } from './rendering-pipelines/TexturingRenderingPipeline';\nimport { BlenderJsonParser } from './blender/BlenderJsonParser';\nimport { Material } from './shading/material/Material';\nimport { PointLight } from './shading/light/PointLight';\n*/\n\n\n// let labJson2 = <any>require('@assets/lab2.json');\n// let bakedJson = <any>require('@assets/abstract.json');\n\nexport class Framebuffer {\n\n    public static PIXEL_SIZE_IN_BYTES = 4;\n\n    public minWindow: Vector2f;\n    public maxWindow: Vector2f;\n\n\n    public framebuffer: Uint32Array;\n    public wBuffer: Float32Array;\n\n    public cullMode: CullFace = CullFace.BACK;\n\n    public camera: ControllableCamera;\n    public bob: Texture;\n    public triangleRasterizer = new FlatShadingTriangleRasterizer(this);\n    public texturedTriangleRasterizer = new TexturedTriangleRasterizer(this);\n   \n    public scaleClipBlitter = new ScaleClipBlitter(this);\n    // public renderingPipeline: FlatShadingRenderingPipeline;\n     public texturedRenderingPipeline: TexturingRenderingPipeline;\n    public lineRasterizer = new LineRasterizerDda(this);\n    public lineRasterizerNo = new LineRasterizerNoZ(this);\n    public tmpGlitch: Uint32Array;\n\n    public lensFlareVisible: boolean = false;\n    public lensFlareStart = 0;\n    public lensFlareEnd = 0;\n\n    public width: number;\n    public height: number;\n    private imageData: ImageData;\n    private unsignedIntArray: Uint8ClampedArray;\n\n    private torus = new Torus();\n\n    private plane: {\n        points: Vector4f[];\n        points2: Vector4f[];\n        normals: Vector4f[];\n        normals2: Vector4f[];\n        index:Array<number>;\n    };\n\n    private cylinder2: {\n        points: Vector4f[];\n        points2: Vector4f[];\n        normals: Vector4f[];\n        normals2: Vector4f[];\n        index:Array<number>;\n    };\n\n    private linerClipper = new CohenSutherlandLineClipper(this);\n    public clipRegion = Array<AbstractClipEdge>();\n    private texture = new Texture();\n\n    constructor(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n\n        this.imageData = new ImageData(width, height);\n        this.wBuffer = new Float32Array(width * height);\n        const arrayBuffer = new ArrayBuffer(this.width * this.height * Framebuffer.PIXEL_SIZE_IN_BYTES);\n        this.unsignedIntArray = new Uint8ClampedArray(arrayBuffer);\n        this.framebuffer = new Uint32Array(arrayBuffer);\n        this.tmpGlitch = new Uint32Array(width * height);\n        // this.renderingPipeline = new FlatShadingRenderingPipeline(this);\n     this.texturedRenderingPipeline = new TexturingRenderingPipeline(this);\n        this.minWindow = new Vector2f(0, 0);\n        this.maxWindow = new Vector2f(width - 1, height - 1);\n\n        this.clipRegion = new Array<AbstractClipEdge>(\n            new RightClipEdge(this),\n            new LeftClipEdge(this),\n            new BottomClipEdge(this),\n            new TopClipEdge(this)\n        );\n    }\n\n    public setCullFace(face: CullFace): void {\n        this.cullMode = face;\n    }\n\n    public setTexture(texture: Texture): void {\n        this.bob = texture;\n    }\n\n    /*\n    public precompute(texture: Texture): void {\n        // this.blengetBlenderScene(hoodlumJson, false);\n\n         //this.cylinder = this.createCylinder();\n\n        // this.sphereDisp = this.createSphereDistplaced(texture);\n    }\n    */\n\n    public getImageData(): ImageData {\n        this.imageData.data.set(this.unsignedIntArray);\n        return this.imageData;\n    }\n\n    public clear() {\n        const color: number = Color.BLACK.toPackedFormat();\n        const count: number = this.width * this.height;\n        for (let i = 0; i < count; i++) {\n            this.framebuffer[i] = color;\n        }\n    }\n\n    public clearColorBuffer(color: number) {\n        this.framebuffer.fill(color);\n    }\n\n    public drawPixel(x: number, y: number, color: number) {\n        this.framebuffer[x + y * this.width] = color;\n\n    }\n    public drawPixel4(x: number, y: number, color: number, alpha: number) {\n        const index: number = x + y * this.width;\n        const inverseAlpha = 1 - alpha;\n        const r = (((this.framebuffer[index] >> 0) & 0xff) * (inverseAlpha)\n            + ((color >> 0) & 0xff) * (alpha)) | 0;\n        const g = (((this.framebuffer[index] >> 8) & 0xff) * (inverseAlpha) +\n            ((color >> 8) & 0xff) * (alpha)) | 0;\n        const b = (((this.framebuffer[index] >> 16) & 0xff) * (inverseAlpha) +\n            ((color >> 16) & 0xff) * (alpha)) | 0;\n        this.framebuffer[x + y * this.width] = r | (g << 8) | (b << 16) | (255 << 24);\n\n    }\n\n    public drawPixel3(x: number, y: number, color: number, alpha2: number) {\n\n        const index: number = x + y * this.width;\n        const alpha = ((color >> 24) & 0xff) / 255 * alpha2;\n        const inverseAlpha = 1 - alpha;\n\n        const r = (((this.framebuffer[index] >> 0) & 0xff) * (inverseAlpha)\n            + ((color >> 0) & 0xff) * (alpha)) | 0;\n        const g = (((this.framebuffer[index] >> 8) & 0xff) * (inverseAlpha) +\n            ((color >> 8) & 0xff) * (alpha)) | 0;\n        const b = (((this.framebuffer[index] >> 16) & 0xff) * (inverseAlpha) +\n            ((color >> 16) & 0xff) * (alpha)) | 0;\n\n        this.framebuffer[index] = r | (g << 8) | (b << 16) | (255 << 24);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * blended with the framebuffer background\n     *\n     * @param  {x} number                 this can be a float\n     * @param  {y} number                 this can be a float\n     * @param  {color} number             color to blend into framebuffer\n     */\n    drawPixelAntiAliased(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        const roundedX = Math.floor(x);\n        const roundedY = Math.floor(y);\n        const percentX = 1 - Math.abs(x - roundedX);\n        const percentY = 1 - Math.abs(y - roundedY);\n        const percent = percentX * percentY;\n        this.drawPixel3(roundedX, roundedY, color, percent);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * to the framebuffer background\n     */\n    drawPixelAliased(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        const roundedX = Math.round(x);\n        const roundedY = Math.round(y)\n        this.drawPixel(roundedX, roundedY, color);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * blended with the framebuffer background in a 4x4 matrix\n     * https://en.wikipedia.org/wiki/Spatial_anti-aliasing\n     */\n    drawPixelAntiAliasedSpacial(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        for (let roundedX = Math.floor(x); roundedX <= Math.ceil(x); roundedX++) {\n            for (let roundedY = Math.floor(y); roundedY <= Math.ceil(y); roundedY++) {\n                const percentX = 1 - Math.abs(x - roundedX);\n                const percentY = 1 - Math.abs(y - roundedY);\n                const percent = percentX * percentY;\n                this.drawPixel4(roundedX, roundedY, color, percent);\n            }\n        }\n    }\n\n    public readPixel(x: number, y: number): number {\n        return this.framebuffer[x + y * this.width];\n    }\n\n    public drawRect(x, y, width, color) {\n        let start = x + y * this.width;\n\n        for (let i = 0; i < width; i++) {\n            this.framebuffer[start++] = color;\n        }\n    }\n\n    public drawRect2(x: number, y: number, width: number, height: number, color: number) {\n        let start = x + y * this.width;\n        for (let j = 0; j < height; j++) {\n            for (let i = 0; i < width; i++) {\n\n                this.framebuffer[start++] = color;\n\n            }\n            start += this.width - width;\n        }\n    }\n\n    public drawText(x: number, y: number, text: string, texture: Texture): void {\n        let xpos = x;\n        const firstIndex = ' '.charCodeAt(0);\n        for (let i = 0; i < text.length; i++) {\n            const index = text.charCodeAt(i) - firstIndex;\n            const tx = Math.floor(index % 32) * 8;\n            const ty = Math.floor(index / 32) * 8;\n            this.drawTextureRectFastAlpha(xpos, y, tx, ty, 8, 8, texture);\n            xpos += 8;\n        }\n    }\n\n    public addReflections() {\n        const start = 150;\n        for (let i = 0; i < 50; i++) {\n            for (let x = 0; x < this.width; x++) {\n                this.framebuffer[(start + i) * this.width + x] = this.framebuffer[(start - i * 3 - 1) * this.width + x +\n                    Interpolator.interpolate(0, 50, i) * (Math.sin(Date.now() * 0.002 + i * 0.2) * 14) | 0];\n            }\n        }\n    }\n\n    public drawTextureRect2(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture, alpha2: number): void {\n        for (let w = 0; w < width; w++) {\n            for (let h = 0; h < height; h++) {\n                const texIndex = (xt + w) + ((yt + h) * texture.width);\n                const frIndex = (xs + w) + ((ys + h) * this.width);\n                const alpha = ((texture.texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (((this.framebuffer[frIndex] >> 0) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 0) & 0xff) * (alpha)) | 0;\n                const g = (((this.framebuffer[frIndex] >> 8) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 8) & 0xff) * (alpha)) | 0;\n                const b = (((this.framebuffer[frIndex] >> 16) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 16) & 0xff) * (alpha)) | 0;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n            }\n        }\n    }\n\n    public drawTextureRectFastAlpha(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const color = texture.texture[texIndex];\n                if (color & 0xff000000) {\n                    this.framebuffer[frIndex] = color;\n                }\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n\n    public drawTextureColorized(x: number, y: number, texture: Texture, color: Color): void {\n\n        let frIndex = x + y * this.width;\n        let texIndex = 0;\n\n        for (let h = 0; h < texture.height; h++) {\n            for (let w = 0; w < texture.width; w++) {\n                const txPixel = texture.texture[texIndex];\n\n\n                const r = (txPixel >> 0 & 0xff) * color.r / 255;\n                const g = (txPixel >> 8 & 0xff) * color.g / 255;\n                const b = (txPixel >> 16 & 0xff) * color.b / 255;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                texIndex++;\n                frIndex++;\n            }\n\n            frIndex += this.width - texture.width;\n        }\n    }\n\n    public drawTextureRectNoAlpha(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                this.framebuffer[frIndex] = texture.texture[texIndex];\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    /**\n     * Transitions from one pixel to another using alpha\n     *\n     * @param  {number} c1\n     * @param  {number} c2\n     * @param  {number} alpha number ranging from 0-255\n     * @return {number}     color blended difference between c1 and c2\n     */\n    public static blend(c1: number, c2: number, nAlpha: number): number {\n\n        if (0 === nAlpha) {\n            return c1;\n        }\n\n        if (255 === nAlpha) {\n            return c2;\n        }\n\n        const nInvAlpha: number = 255 - nAlpha;\n\n        const r1: number = (c1 & 0x00FF0000) >> 16;\n        const r2: number = (c2 & 0x00FF0000) >> 16;\n        const r: number = (r2 * nAlpha + r1 * nInvAlpha) >> 8;\n\n        const g1: number = (c1 & 0x0000FF00) >> 8;\n        const g2: number = (c2 & 0x0000FF00) >> 8;\n        const g: number = (g2 * nAlpha + g1 * nInvAlpha) >> 8;\n\n        const b1: number = (c1 & 0x000000FF);\n        const b2: number = (c2 & 0x000000FF);\n        const b: number = (b2 * nAlpha + b1 * nInvAlpha) >> 8;\n\n        return 0xff000000 | r << 16 | g << 8 | b;\n    }\n\n\n    public static addColor(c1: number, c2: number) {\n        //int a1 = (c1 >> 24) & 0xff;\n        const r1 = (c1 >> 16) & 0xFF;\n        const g1 = (c1 >>  8) & 0xFF;\n        const b1 =  c1        & 0xFF;\n\n        const r2 = (c2 >> 16) & 0xFF;\n        const g2 = (c2 >>  8) & 0xFF;\n        const b2 =  c2        & 0xFF;\n\n        const r = r1 + r2 < 0xFF ? r1 + r2 : 0xFF;\n        const g = g1 + g2 < 0xFF ? g1 + g2 : 0xFF;\n        const b = b1 + b2 < 0xFF ? b1 + b2 : 0xFF;\n\n        return (0xFF << 24 | r << 16 | g << 8 | b);\n      }\n\n    public drawTextureRect(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Uint32Array, pixelWidth: number, alpha2: number): void {\n        let texIndex = xt + yt * pixelWidth;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const alpha = ((texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n                const inverseAlpha = 1 - alpha;\n\n                const fbPixel = this.framebuffer[frIndex];\n                const txPixel = texture[texIndex];\n\n                const r = (fbPixel >> 0 & 0xff) * inverseAlpha + (txPixel >> 0 & 0xff) * alpha;\n                const g = (fbPixel >> 8 & 0xff) * inverseAlpha + (txPixel >> 8 & 0xff) * alpha;\n                const b = (fbPixel >> 16 & 0xff) * inverseAlpha + (txPixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += pixelWidth - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    public drawTextureRectAdd(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture, alpha2: number): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const alpha = ((texture.texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n\n                const fbPixel = this.framebuffer[frIndex];\n                const txPixel = texture.texture[texIndex];\n\n                const r = Math.min(255, (fbPixel >> 0 & 0xff) + (txPixel >> 0 & 0xff) * alpha);\n                const g = Math.min(255, (fbPixel >> 8 & 0xff) + (txPixel >> 8 & 0xff) * alpha);\n                const b = Math.min(255, (fbPixel >> 16 & 0xff) + (txPixel >> 16 & 0xff) * alpha);\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    public pixelate() {\n        const xoff = 200;\n        const yoff = 50;\n\n        for (let x = 0; x < 10; x++) {\n            for (let y = 0; y < 10; y++) {\n                this.drawBox2(x * 10 + xoff, y * 10 + yoff, 10, 10, this.readPixel(x * 10 + xoff, y * 10 + yoff));\n            }\n        }\n        this.drawLineDDA(new Vector3f(xoff, yoff, -0.3), new Vector3f(xoff + 20 * 5, yoff, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff, yoff + 20 * 5, -0.3), new Vector3f(xoff + 20 * 5, yoff + 20 * 5, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff, yoff, -0.3), new Vector3f(xoff, yoff + 20 * 5, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff + 20 * 5, yoff, -0.3), new Vector3f(xoff + 20 * 5, yoff + 20 * 5, -0.3), 0xffffffff);\n    }\n\n    public fastFramebufferCopyOffset(src: Uint32Array, dest: Uint32Array, offset = 0) {\n        let i = this.width * this.height / 32 + 1;\n        let k = this.width * this.height;\n        let l = this.width * (this.height - offset);\n        while (--i) {\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n        }\n    }\n\n    // 6 times faster than the slow method that clips and does alpha blending\n    public fastFramebufferCopy(dest: Uint32Array, src: Uint32Array) {\n        dest.set(src);\n    }\n\n    public noise(elapsedTime: number, texture: Texture, scale: number = 0.07): void {\n        const rng = new RandomNumberGenerator();\n        rng.setSeed(elapsedTime);\n        for (let y = 0; y < this.height; y++) {\n            this.drawTextureRect(0, y, Math.floor(rng.getFloat() * (texture.texture.length - this.width)), 0, this.width, 1, texture.texture, texture.width, scale);\n        }\n    }\n\n    public drawTexturedBillboard(xp: number, yp: number, width: number, height: number, texture: Texture, z: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n                    this.wBuffer[index2] = z;\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const r = (this.framebuffer[index2] >> 0 & 0xff) + (texture.texture[textureIndex] >> 0 & 0xff);\n                    const g = (this.framebuffer[index2] >> 8 & 0xff) + (texture.texture[textureIndex] >> 8 & 0xff);\n                    const b = (this.framebuffer[index2] >> 16 & 0xff) + (texture.texture[textureIndex] >> 16 & 0xff);\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += yStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle(xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle2(\n        xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number,\n        imgNum: number = 0, spritH: number): void {\n        const xStep = texture.width / width;\n        const yStep = spritH / height;\n        let xx = 0;\n        let yy = 0;\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n        let xTextureStart: number;\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, spritH - 1) * texture.width +\n                        spritH * texture.width * imgNum;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle2Sub(\n        xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number,\n        imgNum: number = 0, spritH: number, rr:number=1,gg:number=1,bb:number=1) : void {\n        const xStep = texture.width / width;\n        const yStep = spritH / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > this.height - 1 ||\n            xp + width < 0 ||\n            xp > this.width - 1) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - (this.height), 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - (this.height - 1), 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = Math.ceil((width + xp) - Math.max(xp + width - (this.width), 0));\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = Math.ceil(width - Math.max(xp + width - (this.width - 1), 0));\n        }\n\n        const sub: number = Math.ceil(xp) - xp;\n        const suby: number = Math.ceil(yp) - yp;\n        xTextureStart += sub * xStep;\n        yy += suby * yStep;\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = Math.ceil(xStart) + Math.ceil(yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(Math.round(xx) | 0, texture.width - 1) +\n                        Math.min(Math.round(yy) | 0, spritH - 1) * texture.width +\n                        spritH * texture.width * imgNum;\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha*rr;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha*gg;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha*bb;\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticleNoDepth(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > this.height - 1 ||\n            xp + width < 0 ||\n            xp > this.width - 1) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n\n                const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                const inverseAlpha = 1 - alpha;\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawSoftParticle(xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n                    // float scale = 0.2f;\n                    // float fade = clamp((depthMapDepth.x-depth)*scale, 0.0, 1.0);\n                    const zDist = Math.min(Math.max(((1 / z - 1 / this.wBuffer[index2])), 0.0), 1.0);\n                    // this.wBuffer[index2] = z;\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale * zDist;\n                    const inverseAlpha = 1 - alpha;\n\n                    const r = (this.framebuffer[index2] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer[index2] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer[index2] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawFog(color: Color, fogScale: number, fogOffset: number): void {\n        const videoMemorySize: number = this.width * this.height;\n        const wBufferScale: number = -fogScale;\n\n        for (let index: number = 0; index < videoMemorySize; index++) {\n            const alpha = Math.max(Math.min(wBufferScale * (1 / this.wBuffer[index] + fogOffset), 1.0), 0.0);\n            const inverseAlpha = 1.0 - alpha;\n\n            const r = (this.framebuffer[index] >> 0 & 0xff) * inverseAlpha + color.r * alpha;\n            const g = (this.framebuffer[index] >> 8 & 0xff) * inverseAlpha + color.g * alpha;\n            const b = (this.framebuffer[index] >> 16 & 0xff) * inverseAlpha + color.b * alpha;\n\n            this.framebuffer[index] = r | (g << 8) | (b << 16) | (255 << 24);\n        }\n    }\n\n    public drawScaledTextureClipBi(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n               // console.log(xx, yy);\n                // let textureIndex = //Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n                const color = texture.getBilinearFilteredPixel2(xx, yy);\n\n                const alpha = 255 * alphaScale;\n                const inverseAlpha = 1 - alpha;\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = color;\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawScaledTextureClipBiAdd(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                // let textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n                const color = texture.getBilinearFilteredPixel2(xx, yy);\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = color;\n\n                const r = Math.min((framebufferPixel >> 0 & 0xff) + (texturePixel >> 0 & 0xff) * alphaBlend, 255);\n                const g = Math.min((framebufferPixel >> 8 & 0xff) + (texturePixel >> 8 & 0xff) * alphaBlend, 255);\n                const b = Math.min((framebufferPixel >> 16 & 0xff) + (texturePixel >> 16 & 0xff) * alphaBlend, 255);\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawScaledTextureClipAdd(xp: number, yp: number, width: number, height: number, texture: Texture, alpha: number = 1.0): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = Math.min((framebufferPixel >> 0 & 0xff) + (texturePixel >> 0 & 0xff) * alpha, 255);\n                const g = Math.min((framebufferPixel >> 8 & 0xff) + (texturePixel >> 8 & 0xff) * alpha, 255);\n                const b = Math.min((framebufferPixel >> 16 & 0xff) + (texturePixel >> 16 & 0xff) * alpha, 255);\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawTexture(x: number, y: number, texture: Texture, alpha2: number) {\n        const SCREEN_WIDTH = this.width;\n        const SCREEN_HEIGHT = this.height;\n\n        let framebufferIndex: number = Math.max(x, 0) + Math.max(y, 0) * this.width;\n        let textureIndex: number = Math.max(0, 0 - x) + Math.max(0, 0 - y) * texture.width;\n\n        const width: number = Math.min(texture.width, SCREEN_WIDTH - x) - Math.max(0, 0 - x);\n        const height: number = Math.min(texture.height, SCREEN_HEIGHT - y) - Math.max(0, 0 - y);\n\n        const textureRowOffset = texture.width - width;\n        const framebufferRowOffset = this.width - width;\n\n        const div = 1 / 255 * alpha2;\n\n        for (let yHeight: number = 0; yHeight < height; yHeight++) {\n            for (let xWidth: number = 0; xWidth < width; xWidth++) {\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * div;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            textureIndex += textureRowOffset;\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n    public drawTextureFullscreen(texture: Texture, alpha2: number) {\n\n        let framebufferIndex: number = 0;\n        const inverseAlpha = 1 - alpha2;\n        for (let y: number = 0; y < this.width * this.height; y++) {\n\n            const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 0 & 0xff) * alpha2;\n            const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 8 & 0xff) * alpha2;\n            const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 16 & 0xff) * alpha2;\n\n            this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n            framebufferIndex++;\n        }\n    }\n\n    public drawTexture3(x: number, y: number, texture: Texture, alpha2: number, time: number) {\n        const SCREEN_WIDTH = this.width;\n        const SCREEN_HEIGHT = this.height;\n\n        let framebufferIndex: number = Math.max(x, 0) + Math.max(y, 0) * this.width;\n        let textureIndex: number = Math.max(0, 0 - x) + Math.max(0, 0 - y) * texture.width;\n\n        const width: number = Math.min(texture.width, SCREEN_WIDTH - x) - Math.max(0, 0 - x);\n        const height: number = Math.min(texture.height, SCREEN_HEIGHT - y) - Math.max(0, 0 - y);\n\n        const textureRowOffset = texture.width - width;\n        const framebufferRowOffset = this.width - width;\n\n        const div = 1 / 255 * alpha2;\n\n        const mHeight = Math.floor(height * Math.max(Math.min(1, time), 0));\n\n        for (let yHeight: number = 0; yHeight < mHeight; yHeight++) {\n            for (let xWidth: number = 0; xWidth < width; xWidth++) {\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * div;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            textureIndex += textureRowOffset;\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n    public drawTextureNoClipAlpha(x: number, y: number, texture: Texture): void {\n        let framebufferIndex: number = x + y * this.width;\n        let textureIndex: number = 0;\n\n        const framebufferRowOffset = this.width - texture.width;\n\n        for (let yHeight = 0; yHeight < texture.height; yHeight++) {\n            for (let xWidth = 0; xWidth < texture.width; xWidth++) {\n                const color = texture.texture[textureIndex];\n\n                if (color & 0xff000000) {\n                    this.framebuffer[framebufferIndex] = color;\n                }\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n     // https://math.stackexchange.com/questions/859454/maximum-number-of-vertices-in-intersection-of-triangle-with-box/\n     public nearPlaneClipping(t1: Vector3f, t2: Vector3f, color: number): void {\n        const NEAR_PLANE_Z = -1.7;\n\n        if (t1.z < NEAR_PLANE_Z && t2.z < NEAR_PLANE_Z) {\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t1), this.project(t2), color);\n        } else if (t1.z > NEAR_PLANE_Z && t2.z > NEAR_PLANE_Z) {\n            return;\n        } else if (t1.z < NEAR_PLANE_Z) {\n            const ratio = (NEAR_PLANE_Z - t1.z) / (t2.z - t1.z);\n            const t3 = new Vector3f(ratio * (t2.x - t1.x) + t1.x, ratio * (t2.y - t1.y) + t1.y, NEAR_PLANE_Z);\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t1), this.project(t3), color);\n        } else if (t2.z < NEAR_PLANE_Z) {\n            const ratio = (NEAR_PLANE_Z - t2.z) / (t1.z - t2.z);\n            const t3 = new Vector3f(ratio * (t1.x - t2.x) + t2.x, ratio * (t1.y - t2.y) + t2.y, NEAR_PLANE_Z);\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t2), this.project(t3), color);\n        }\n    }\n\n    public project(t1: { x: number, y: number, z: number }): Vector3f {\n        return new Vector3f(Math.round((this.width / 2) + (292 * t1.x / (-t1.z))),\n            Math.round((this.height / 2) - (t1.y * 292 / (-t1.z))),\n            t1.z);\n    }\n\n    public clearDepthBuffer(): void {\n        this.wBuffer.fill(-1 / 900);\n    }\n\n    public drawBox() {\n        const height = this.maxWindow.y - this.minWindow.y + 1;\n        const width = this.maxWindow.x - this.minWindow.x + 1;\n        let index = this.minWindow.y * this.width + this.minWindow.x;\n        for (let i = 0; i < height; i++) {\n            this.framebuffer.fill(255 << 24 | 55 << 16 | 55 << 8 | 55, index, index + width);\n            index += this.width;\n        }\n    }\n\n    public drawBox2(x1: number, y1: number, width: number, height: number, color: number) {\n\n        let index = y1 * this.width + x1;\n        for (let i = 0; i < height; i++) {\n            this.framebuffer.fill(color, index, index + width);\n            index += this.width;\n        }\n    }\n\n    // TODO: implement subpixel accuracy\n    // https://github.com/specht/cruiser\n    public wireFrameSphereClipping(elapsedTime: number): void {\n\n        this.wBuffer.fill(100);\n\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 16;\n        const STEPS2 = 16;\n\n        // TODO: move into setup method\n        for (let i = 0; i <= STEPS; i++) {\n            for (let r = 0; r < STEPS2; r++) {\n                points.push(this.sphereFunction2(-i * Math.PI / STEPS - Math.PI / 2, -r * 2 * Math.PI / STEPS2));\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2)); // 2\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 1\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2)); // 4\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 5\n            }\n        }\n\n        // Create MV Matrix\n        const scale = 10.8 + 5 * (Math.sin(elapsedTime * 0.16) + 1) / 2;\n        let modelViewMartrix = Matrix4f.constructScaleMatrix(scale, scale, scale).multiplyMatrix(Matrix4f.constructYRotationMatrix(elapsedTime * 0.08));\n        modelViewMartrix = modelViewMartrix.multiplyMatrix(Matrix4f.constructXRotationMatrix(elapsedTime * 0.08));\n        modelViewMartrix = Matrix4f.constructTranslationMatrix(0 + 20 * Math.sin(elapsedTime * 0.04), 5 * Math.sin(elapsedTime * 0.06), -22).multiplyMatrix(modelViewMartrix);\n\n        const points2: Array<Vector3f> = new Array<Vector3f>();\n\n        for (let p = 0; p < points.length; p++) {\n            const transformed = modelViewMartrix.multiplyHom(points[p]);\n\n            const x = transformed.x;\n            const y = transformed.y;\n            const z = transformed.z;\n\n            const xx = (this.width * 0.5) + (x / (-z * 0.0078));\n            const yy = (this.height * 0.5) + (y / (-z * 0.0078));\n\n            points2.push(new Vector3f(xx, yy, z));\n        }\n\n        // draw clip region\n        const colred = 255 << 24 | 230 << 16 | this.height << 16 | this.height;\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.minWindow.y - 1, 0), new Vector3f(this.minWindow.x - 1, this.maxWindow.y + 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.maxWindow.x + 1, this.minWindow.y - 1, 0), new Vector3f(this.maxWindow.x + 1, this.maxWindow.y + 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.minWindow.y - 1, 0), new Vector3f(this.maxWindow.x + 1, this.minWindow.y - 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.maxWindow.y + 1, 0), new Vector3f(this.maxWindow.x + 2, this.maxWindow.y + 1, 0), colred);\n\n        this.drawBox();\n\n        for (let i = 0; i < index.length; i += 3) {\n            const v1 = points2[index[i]];\n            const v2 = points2[index[i + 1]];\n            const v3 = points2[index[i + 2]];\n\n            const colLine = 255 << 24 | 255 << 16 | 255 << 8 | 255;\n            if (this.isTriangleCCW(v1, v2, v3)) {\n                this.linerClipper.cohenSutherlandLineClipper(v1, v2, colLine);\n                this.linerClipper.cohenSutherlandLineClipper(v1, v3, colLine);\n                this.linerClipper.cohenSutherlandLineClipper(v3, v2, colLine);\n            }\n        }\n    }\n\n    public isTriangleCCW(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number }): boolean {\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v1.y - v1.x * v3.y;\n        if (this.cullMode === CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n        public wireFrameTerrain(elapsedTime: number, heightmap: Texture): void {\n\n            this.clearDepthBuffer();\n\n            const index: Array<number> = [\n            ];\n\n            const points: Array<Vector3f> = [];\n            for (let y = 0; y < 256; y++) {\n                for (let x = 0; x < 256; x++) {\n                    points.push(new Vector3f((x - 128) * 20.0, (heightmap.texture[x + y * 256] & 0x000000ff) * 128 / 256 - 70, (y - 128) * 20.0));\n                }\n            }\n\n            for (let y = 0; y < 256; y += 1) {\n                for (let x = 0; x < 256 - 1; x += 1) {\n                    index.push(0 + x + (y * 256));\n                    index.push(1 + x + (y * 256));\n                }\n            }\n\n            for (let x = 0; x < 256; x += 1) {\n                for (let y = 0; y < 256 - 1; y += 1) {\n\n                    index.push(x + ((y + 0) * 256));\n                    index.push(x + ((y + 1) * 256));\n                }\n            }\n\n            const modelViewMartrix = Matrix3f.constructYRotationMatrix(elapsedTime * 0.003);\n\n            const points2: Array<Vector3f> = new Array<Vector3f>();\n\n            const xOff = + Math.cos(elapsedTime * 0.000001) * 128 * 20;\n            const zOff = Math.sin(elapsedTime * 0.000001) * 128 * 20;\n            points.forEach(element => {\n                const transformed = modelViewMartrix.multiply(element);\n\n                const x = transformed.x + xOff;\n                const y = transformed.y;\n                const z = transformed.z + zOff; // TODO: use translation matrix!\n\n                points2.push(new Vector3f(x, y, z));\n            });\n\n            for (let i = 0; i < index.length; i += 2) {\n                const scale = (1 - Math.min(255, -points2[index[i]].z * 0.9) / 255);\n                const color = (255 * scale) << 8 | 100 * scale | (this.height * scale) << 16 | 255 << 24;\n                this.nearPlaneClipping(points2[index[i]], points2[index[i + 1]], color);\n            }\n        }\n\n    public drawBoundingSphere(sphere: Sphere, matrix: Matrix4f, color: number): void {\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 8;\n        const STEPS2 = 8;\n\n        // TODO: move into setup method\n        for (let i = 0; i <= STEPS; i++) {\n            for (let r = 0; r < STEPS2; r++) {\n\n                const pos = this.sphereFunction2(-i * Math.PI / STEPS - Math.PI / 2, -r * 2 * Math.PI / STEPS2).mul(sphere.getRadius() + 0.01).add(sphere.getCenter());\n                pos.w = 1;\n\n                points.push(pos);\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2)); // 2\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 1\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2)); // 4\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 5\n            }\n        }\n\n        const modelViewMartrix = matrix;\n\n        const points2: Array<Vector3f> = new Array<Vector3f>();\n\n        for (let p = 0; p < points.length; p++) {\n            const transformed = modelViewMartrix.multiplyHom(points[p]);\n            points2.push(new Vector3f(transformed.x, transformed.y, transformed.z));\n        }\n\n        for (let i = 0; i < index.length; i += 3) {\n\n            const v1 = points2[index[i]];\n            const v2 = points2[index[i + 1]];\n            const v3 = points2[index[i + 2]];\n\n            this.nearPlaneClipping(v1, v2, color);\n            this.nearPlaneClipping(v1, v3, color);\n            this.nearPlaneClipping(v3, v2, color);\n\n        }\n    }\n    public drawPlanedeformationTunnelAnim(elapsedTime: number, texture: Texture) {\n\n        let i = 0;\n        for (let y = 0; y < this.height; y++) {\n            for (let x = 0; x < this.width; x++) {\n                const xdist = (x - this.width / 2);\n                const ydist = (y - this.height / 2);\n                const dist = 256 * 0.2 / Math.max(1.0, Math.sqrt(xdist * xdist + ydist * ydist));\n                const dist2 = dist + elapsedTime * 0.002;\n                const angle = (Math.atan2(xdist, ydist) / Math.PI + 1.0) * 16 + elapsedTime * 0.00069;\n\n                const color1 = texture.texture[(dist2 & 0x1f) + (angle & 0x1f) * 32];\n                // darkening can be done with alpha blended texture\n                const scale = 1 - Interpolator.cosineInterpolate(1.0, 6.0, dist);\n                const r = ((color1 >> 0) & 0xff) * scale;\n                const g = ((color1 >> 8) & 0xff) * scale;\n                const b = ((color1 >> 16) & 0xff) * scale;\n                const final = r | g << 8 | b << 16;\n\n                this.framebuffer[i++] = final;\n            }\n        }\n    }\n\n    public drawPlaneDeformation(elapsedTime: number, texture: Texture): void {\n        // optimize\n        // power of two modulo with &\n        // this.framebuffer.clearColor(new Color());\n        // precompute LUD + render to half size backbuffer\n        const IMG_WIDTH = texture.width;\n        const IMG_HEIGHT = texture.height;\n\n        let framebufferIndex = 0;\n\n        for (let y = 0; y < this.height; y++) {\n            const yy = (-1.00 + 2.00 * y / this.height);\n\n            for (let x = 0; x < this.width; x++) {\n\n                const xx = (-1.00 + 2.00 * x / this.width);\n\n                // magic formulas here\n                const u = ((xx / Math.abs(yy)) * IMG_WIDTH * 0.05) | 0;\n                const v = (1.0 / Math.abs(yy) * IMG_HEIGHT * 0.05 + elapsedTime * 0.008) | 0;\n\n                const scale = 1 - Math.max(Math.min(1 / Math.abs(yy) * 0.2, 1), 0);\n                let color = texture.texture[(u & 0xff) + (v & 0xff) * IMG_WIDTH];\n                const r = ((color >> 0) & 0xff) * scale;\n                const g = ((color >> 8) & 0xff) * scale;\n                const b = ((color >> 16) & 0xff) * scale;\n                color = (255 << 24) | (b << 16) | (g << 8) | (r << 0);\n\n                this.framebuffer[framebufferIndex++] = color;\n            }\n        }\n    }\n\n    public torusFunction(alpha: number): Vector3f {\n        return new Vector3f(Math.sin(alpha) * 10, 0, Math.cos(alpha) * 10);\n    }\n\n    public fakeSphere(normal: Vector4f, vertex: Vertex): void {\n        // https://www.mvps.org/directx/articles/spheremap.htm\n        // vertex.textureCoordinate.u = 0.5 + normal.x * 0.5;\n        // vertex.textureCoordinate.v = 0.5 - normal.y * 0.5;\n        vertex.textureCoordinate.u = 0.5 + Math.asin(normal.x) / Math.PI;\n        vertex.textureCoordinate.v = 0.5 - Math.asin(normal.y) / Math.PI;\n    }\n\n    public fakeSphere2(normal: Vector3f, tex: TextureCoordinate): void {\n        tex.u = 0.5 + Math.asin(normal.x) / Math.PI;\n        tex.v = 0.5 - Math.asin(normal.y) / Math.PI;\n    }\n\n    public drawLineDDA(start: Vector3f, end: Vector3f, color: number): void {\n        this.lineRasterizer.drawLineDDA(start, end, color);\n    }\n\n    public drawLineDDANoZ(start: Vector3f, end: Vector3f, color: number): void {\n        this.lineRasterizerNo.drawLineDDANoZ(start, end, color);\n    }\n\n    private sphereFunction2(theta: number, phi: number): Vector4f {\n        const pos = new Vector4f(Math.cos(theta) * Math.cos(phi),\n            Math.cos(theta) * Math.sin(phi),\n            Math.sin(theta), 1.0);\n\n        return pos;\n    }\n\n}\n","export default class RandomNumberGenerator {\n\n    private seed: number;\n\n    public constructor() {\n        this.seed = 6;\n    }\n\n    public getFloat(): number {\n        this.seed = (this.seed * 9301 + 49297) % 233280;\n        return this.seed / 233280;\n    }\n\n    public setSeed(seed: number): void {\n        this.seed = seed;\n    }\n\n}\n","export class TextureCoordinate {\n    public u: number;\n    public v: number;\n\n    constructor(u?: number, v?: number) {\n        this.u = u;\n        this.v = v;\n    }\n}\n","import { Color } from './core/Color';\nimport { Vector4f } from './math/index';\nimport { TextureCoordinate } from './TextureCoordinate';\n\nexport class Vertex {\n    public position: Vector4f;\n    public projection: Vector4f = new Vector4f(0,0,0);\n    public normal: Vector4f;\n    public color: Color;\n    public textureCoordinate: TextureCoordinate = new TextureCoordinate();\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Texture } from '../texture/Texture';\n\nexport class ScaleClipBlitter {\n\n    constructor(private framebuffer: Framebuffer) {\n\n    }\n\n    public drawScaledTextureClip(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.framebuffer.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.framebuffer.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.framebuffer.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.framebuffer.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.framebuffer.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.framebuffer.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.framebuffer.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                const xxInt = xx | 0;\n                const yyInt = yy | 0;\n                const textureIndex = xxInt + yyInt * texture.width;\n                // (xxInt > texture.width - 1 ? texture.width - 1 : xxInt) +\n                // (yyInt > texture.height - 1 ? texture.height - 1 : yyInt) * texture.width;\n\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                const inverseAlpha = 1 - alpha;\n\n                const framebufferPixel = this.framebuffer.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.framebuffer.width;\n        }\n    }\n\n}\n","/**\n * Color\n *\n * @export\n * @class Color\n * @see https://www.rapidtables.com/web/color/RGB_Color.html\n * @author Johannes Diemke\n */\nexport class Color {\n\n    public static readonly BLACK: Color = new Color(0, 0, 0, 255);\n    public static readonly WHITE: Color = new Color(255, 255, 255, 255);\n    public static readonly RED: Color = new Color(255, 0, 0, 255);\n    public static readonly GREEN: Color = new Color(0, 255, 0, 255);\n    public static readonly LIME: Color = new Color(0, 255, 0, 255);\n    public static readonly BLUE: Color = new Color(0, 0, 255, 255);\n    public static readonly DARK_BLUE: Color = new Color(0, 0, 64, 255);\n    public static readonly YELLOW: Color = new Color(255, 255, 0, 255);\n    public static readonly CYAN: Color = new Color(0, 255, 255, 255);\n    public static readonly MAGENTA: Color = new Color(255, 0, 255, 255);\n    public static readonly SLATE_GRAY: Color = new Color(112, 128, 144, 255);\n    public static readonly DARK_GRAY: Color = new Color(19, 19, 20, 255);\n    public static readonly ORANGE: Color = new Color(255, 160, 122);\n\n    constructor(public r: number = 0, public g: number = 0, public b: number = 0, public a: number = 255) {\n    }\n\n    public toPackedFormat(): number {\n        return this.r | this.g << 8 | this.b << 16 | this.a << 24;\n    }\n\n    public sub(color: Color): Color {\n        return new Color(this.r - color.r, this.g - color.g, this.b - color.b, 255);\n    }\n\n    public add(color: Color): Color {\n        return new Color(this.r + color.r, this.g + color.g, this.b + color.b, 255);\n    }\n\n    public div(num: number): Color {\n        return new Color(this.r / num, this.g / num, this.b / num, 255);\n    }\n\n    public mul(num: number): Color {\n        return new Color(this.r * num, this.g * num, this.b * num, 255);\n    }\n\n}\n","export class Utils {\n    /**\n     * Returns a number whose value is limited to the given range.\n     *\n     * Example: limit the output of this computation to between 0 and 255\n     * (x * 255).clamp(0, 255)\n     *\n     * @param {Number} min The lower boundary of the output range\n     * @param {Number} max The upper boundary of the output range\n     * @returns A number in the range [min, max]\n     * @type Number\n     */\n    public static clamp(input: number, min: number, max: number): number {\n        return input <= min ? min : input >= max ? max : input;\n    }\n\n    /**\n     * Re-maps a number from one range to another.\n     *\n     * @param  {number} value           the incoming value to be converted\n     * @param  {number} istart          lower bound of the value's current range\n     * @param  {number} istop           upper bound of the value's current range\n     * @param  {number} ostart          lower bound of the value's target range\n     * @param  {number} ostop           upper bound of the value's target range\n     */\n    public static map(value: number, istart: number, istop: number, ostart: number, ostop: number): number {\n        return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));\n    }\n\n    /**\n     * returns random integer between two values\n     *\n     * @param  {number} value           the incoming value to be converted\n     */\n    public static getRandomInt(min: number, max: number): number {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n    }\n\n    public static arrayCopy(src, srcPosition: number, dst, dstPosition: number, length: number) {\n        // the index to begin splicing from dst array\n        let start: number;\n        let end: number;\n\n        if (typeof length !== 'undefined') {\n            end = Math.min(length, src.length);\n            start = dstPosition;\n            src = src.slice(srcPosition, end + srcPosition);\n        } else {\n            if (typeof dst !== 'undefined') {\n                // src, dst, length\n                // rename  so we don't get confused\n                end = dst;\n                end = Math.min(end, src.length);\n            } else {\n                // src, dst\n                end = src.length;\n            }\n\n            start = 0;\n            // rename  so we don't get confused\n            dst = srcPosition;\n            src = src.slice(0, end);\n        }\n\n        // Since we are not returning the array and JavaScript is pass by reference\n        // we must modify the actual values of the array\n        // instead of reassigning arrays\n        Array.prototype.splice.apply(dst, [start, end].concat(src));\n    }\n\n    // This is a port of Ken Perlin's Java code. The\n    // original Java code is at http://cs.nyu.edu/%7Eperlin/noise/.\n    // Note that in this version, a number from 0 to 1 is returned.\n    public static PerlinNoise = new function () {\n\n        this.noise = (x: number, y: number, z: number) => {\n\n            const p = new Array(512)\n            const permutation = [151, 160, 137, 91, 90, 15,\n                131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\n                190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\n                88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\n                77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\n                102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\n                135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\n                5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\n                223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\n                129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\n                251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\n                49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\n                138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180\n            ];\n            for (let i = 0; i < 256; i++)\n                p[256 + i] = p[i] = permutation[i];\n\n            const X = Math.floor(x) & 255;                              // FIND UNIT CUBE THAT\n            const Y = Math.floor(y) & 255;                              // CONTAINS POINT.\n            const Z = Math.floor(z) & 255;\n            x -= Math.floor(x);                                         // FIND RELATIVE X,Y,Z\n            y -= Math.floor(y);                                         // OF POINT IN CUBE.\n            z -= Math.floor(z);\n            const u = fade(x);                                          // COMPUTE FADE CURVES\n            const v = fade(y);                                          // FOR EACH OF X,Y,Z.\n            const w = fade(z);\n            const A = p[X] + Y;\n            const AA = p[A] + Z;\n            const AB = p[A + 1] + Z;       // HASH COORDINATES OF\n            const B = p[X + 1] + Y;\n            const BA = p[B] + Z;\n            const BB = p[B + 1] + Z;   // THE 8 CUBE CORNERS,\n\n            return scale(lerp(w, lerp(v, lerp(u, grad(p[AA], x, y, z),  // AND ADD\n                grad(p[BA], x - 1, y, z)), // BLENDED\n                lerp(u, grad(p[AB], x, y - 1, z),  // RESULTS\n                    grad(p[BB], x - 1, y - 1, z))),// FROM  8\n                lerp(v, lerp(u, grad(p[AA + 1], x, y, z - 1),  // CORNERS\n                    grad(p[BA + 1], x - 1, y, z - 1)), // OF CUBE\n                    lerp(u, grad(p[AB + 1], x, y - 1, z - 1),\n                        grad(p[BB + 1], x - 1, y - 1, z - 1)))));\n        }\n        function fade(t) { return t * t * t * (t * (t * 6 - 15) + 10); }\n        function lerp(t, a, b) { return a + t * (b - a); }\n        function grad(hash, x, y, z) {\n            const h = hash & 15;                      // CONVERT LO 4 BITS OF HASH CODE\n            const u = h < 8 ? x : y;                 // INTO 12 GRADIENT DIRECTIONS.\n            const v = h < 4 ? y : h === 12 || h === 14 ? x : z;\n            return ((h & 1) === 0 ? u : -u) + ((h & 2) === 0 ? v : -v);\n        }\n        function scale(n) { return (1 + n) / 2; }\n    }\n\n    /**\n     * Cubic interpolation is the simplest method that offers true continuity between samples. \n     * It estimates values corresponding to intermediate samples present between the original or previous samples\n     *\n     * @param  {number} y0           sample 1\n     * @param  {number} y1           sample 2\n     * @param  {number} y2           sample 3\n     * @param  {number} y3           sample 4\n     * @param  {number} mu           behaves the same way for interpolating between the sample y1 to y2\n     */\n    public static CubicInterpolate(y0: number, y1: number, y2: number, y3: number, mu: number): number {\n        const mu2 = mu * mu;\n        const a0 = y3 - y2 - y0 + y1;\n        const a1 = y0 - y1 - a0;\n        const a2 = y2 - y0;\n        const a3 = y1;\n        return (a0 * mu * mu2 + a1 * mu2 + a2 * mu + a3);\n    }\n\n    /**\n     * Cosine interpolation serves to provide a smooth transition between adjacent samples. \n     * It estimates values corresponding to intermediate samples present between the original or previous samples\n     *\n     * @param  {number} y0           sample 1\n     * @param  {number} y1           sample 2\n     * @param  {number} mu           behaves the same way for interpolating between the sample 1 to 2\n     */\n    public static CosineInterpolate(y1: number, y2: number, mu: number): number {\n        const mu2 = (1 - Math.cos(mu * Math.PI)) / 2;\n        return (y1 * (1 - mu2) + y2 * mu2);\n    }\n\n}\n","export class FullscreenUtils {\n\n    public static toggleFullscreen(element: Element): void {\n        if (!this.fullscreen) {\n            FullscreenUtils.enterFullscreen(element);\n            this.fullscreen = true;\n            this.setStyle(element, 'cursor: none');\n        } else {\n            FullscreenUtils.exitFullscreen();\n            this.fullscreen = false;\n            this.setStyle(element, 'cursor: zoom-in');\n        }\n    }\n\n    private static setStyle(el, css) {\n        el.setAttribute('style', el.getAttribute('style') + ';' + css);\n    }\n\n    public static enterFullscreen(element: Element): void {\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.mozRequestFullScreen) {\n            element.mozRequestFullScreen();\n        } else if (element.msRequestFullscreen) {\n            element.msRequestFullscreen();\n        } else if (element.webkitRequestFullScreen) {\n            element.webkitRequestFullScreen();\n        }\n    }\n\n    public static exitFullscreen(): void {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    }\n\n    private static fullscreen: boolean = false;\n\n}\n","import { Framebuffer } from './Framebuffer';\nimport { FullscreenUtils } from './fullscreen/FullscreenUtils';\nimport { AbstractScene } from './scenes/AbstractScene';\n\nexport class Canvas {\n\n    public framebuffer: Framebuffer;\n    private canvas: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D;\n    private startTime: number;\n    private boundRenderLoop: FrameRequestCallback;\n\n    constructor(width: number, height: number, private scene: AbstractScene) {\n        this.canvas = document.createElement('canvas');\n\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.canvas.id = 'aisa-canvas';\n\n        this.canvas.style.cssText = 'image-rendering: optimizeSpeed;' + // FireFox < 6.0\n            'image-rendering: -moz-crisp-edges;' + // FireFox\n            'image-rendering: -o-crisp-edges;' +  // Opera\n            'image-rendering: -webkit-crisp-edges;' + // Chrome\n            'image-rendering: crisp-edges;' + // Chrome\n            'image-rendering: -webkit-optimize-contrast;' + // Safari\n            'image-rendering: pixelated; ' + // Future browsers\n            '-ms-interpolation-mode: nearest-neighbor;'; // IE\n\n        this.canvas.style.width = `${width * 2}px`;\n        this.canvas.style.height = `${height * 2}px`;\n\n        this.context = this.canvas.getContext('2d');\n\n        // FIXME: make this cross browser compatible!\n        (this.context as any).oImageSmoothingEnabled = false;\n        this.context.imageSmoothingEnabled = false;\n        (this.context as any).webkitImageSmoothingEnabled = false;\n\n        this.framebuffer = new Framebuffer(width, height);\n        this.boundRenderLoop = this.renderLoop.bind(this);\n    }\n\n    public init(): void {\n        // add canvas element to target element\n        this.appendTo(document.getElementById('aisa'));\n\n        // Add fullscreen toggle on click\n        this.canvas.addEventListener('click', (event: MouseEvent) => {\n            event.preventDefault();\n            FullscreenUtils.toggleFullscreen(this.canvas);\n        });\n\n        // Init scene and start rendering\n        this.scene.init(this.framebuffer).then(\n            () => {\n                this.scene.onInit();\n                this.startTime = Date.now();\n                this.renderLoop();\n            }\n        );\n    }\n\n    public renderLoop(): void {\n        this.scene.render(this.framebuffer, Date.now() - this.startTime);\n        this.flipBackbuffer();\n        requestAnimationFrame(this.boundRenderLoop);\n    }\n\n    public flipBackbuffer(): void {\n        this.context.putImageData(this.framebuffer.getImageData(), 0, 0);\n    }\n\n    public appendTo(element: HTMLElement): void {\n        element.appendChild(this.canvas);\n    }\n\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./demo-style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./demo-style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Canvas } from '../../Canvas';\nimport { DemoScene } from './DemoScene';\nimport './../../demo-style.css';\n\nclass Application {\n\n    // HD Resolution 1920 x 1080\n    public static readonly CANVAS_WIDTH = 1920 / 5;\n    public static readonly CANVAS_HEIGHT = 1080 / 5;\n\n    public static main(): void {\n        const canvas: Canvas = new Canvas(Application.CANVAS_WIDTH, Application.CANVAS_HEIGHT, new DemoScene());\n        canvas.init();\n    }\n\n}\n\nApplication.main();\n","export interface musicProperties {\n    timeSeconds: number;\n    timeMilliseconds: number;\n    sceneData: sceneData;\n}\n\n// scene variables | things you set through jsRocket\nexport interface sceneData {\n    effect: any;\n    transitionType: any;\n    transitionValue: any;\n    snare: any;\n    bass: any;\n}\n\n// Beats per minute of your demo tune\nexport const BPM = 125;\n\n// The resolution between two beats, four is usually fine,- eight adds a bit more finer control\nexport const ROWS_PER_BEAT = 6;\n\n// we calculate this now, so we can translate between rows and seconds later on\nexport const ROW_RATE = BPM / 60 * ROWS_PER_BEAT;\n","import './JSRocket';\nimport './cowbell/cowbell'\nimport './cowbell/audio_player'\nimport './cowbell/web_audio_player'\nimport './cowbell/openmpt/openmpt_player'\nimport {\n    musicProperties,\n    ROW_RATE,\n    sceneData\n} from './MusicProperties';\nexport class SoundManager {\n\n    public syncDevice;\n    public isPlaying = false;\n    public demoMode: boolean;\n    public row = 0;    // the current row we're on\n\n    //  container for audio values to be used by effects (time, bass, effect, transitions)\n    public musicProperties: musicProperties;\n    public sceneData: sceneData;\n    public audioElement: HTMLAudioElement;\n\n    public constructor() {\n\n        // Initialize JS Rocket\n        this.syncDevice = new JSRocket.SyncDevice();\n        this.syncDevice.connected = false;\n\n    }\n\n    /**\n     * Load audio files supported by cowbell\n     *\n     * @param {string} filename     audio file to load\n     * @returns {Promise<void>}     promise\n     */\n    public loadMusic(filename: string): Promise<void> {\n        return new Promise((resolve) => {\n\n            const fileExtension = filename.split('.').pop().toLowerCase();\n            let audioPlayer;\n\n            switch (fileExtension) {\n                case 'it':\n                case 'xm':\n                case 's3m':\n                case 'mod':\n                    audioPlayer = new Cowbell.Player.OpenMPT({\n                        'pathToLibOpenMPT': './openmpt/libopenmpt.js'\n                    });\n                    break;\n                case 'ogg':\n                case 'mp3':\n                default:\n                    audioPlayer = new Cowbell.Player.Audio();\n                    break;\n            }\n            const track = new audioPlayer.Track(filename);\n            this.audioElement = track.open();\n            resolve();\n        });\n    }\n\n    /**\n     * Load XML file for music syncronization for use with JS Rocket\n     *\n     * @param {string} filename      XML file to load\n     * @param {string} demoMode      use true for release mode (uses file) | false when using rocket editor\n     * @returns {Promise<void>}      promise\n     */\n    prepareSync(filename: string, demoMode: boolean): Promise<void> {\n        this.demoMode = demoMode;\n        return new Promise((resolve) => {\n            if (this.demoMode) {\n                this.syncDevice.setConfig({\n                    'rocketXML': filename\n                });\n                this.syncDevice.init('demo');\n\n            } else {\n                this.syncDevice.init();\n            }\n\n            // XML file from JS Rocket library was loaded and parsed, make sure your ogg is ready\n            this.syncDevice.on('ready', () => this.onSyncReady());\n\n            // [JS Rocket - Arrow keys] whenever you change the row, a value or interpolation mode this will get called\n            this.syncDevice.on('update', (newRow: number) => this.onSyncUpdate(newRow));\n\n            // [JS Rocket - Spacebar] in Rocket calls one of those\n            this.syncDevice.on('play', () => this.onPlay());\n            this.syncDevice.on('pause', () => this.onPause());\n            resolve()\n        });\n    }\n\n    onSyncReady() {\n        this.syncDevice.connected = true;\n\n        this.sceneData = {\n            effect: this.syncDevice.getTrack('effect'),\n            snare: this.syncDevice.getTrack('snare'),\n            bass: this.syncDevice.getTrack('bass'),\n            transitionType: this.syncDevice.getTrack('transitionType'),\n            transitionValue: this.syncDevice.getTrack('transitionValue')\n        }\n    }\n\n    // row is only given if you navigate, or change a value on the row in Rocket\n    // on interpolation change (hit [i]) no row value is sent, as the current there is the upper row of your block\n    onSyncUpdate(newRow: number) {\n        if (!isNaN(newRow)) {\n            this.row = newRow;\n        }\n        this.audioElement.currentTime = newRow / ROW_RATE;\n    }\n\n    updateMusic() {\n        // show message if rocket app is not running in background\n        if (!this.syncDevice.connected && !this.demoMode) {\n            return;\n        }\n\n        // update music properties\n        this.musicProperties = {\n            timeSeconds: (this.audioElement?.currentTime) || 0,\n            timeMilliseconds: (this.audioElement?.currentTime) * 1000,\n            sceneData: {\n                effect: this.sceneData.effect.getValue(this.row),\n                transitionType: this.sceneData.transitionType.getValue(this.row),\n                transitionValue: this.sceneData.transitionValue.getValue(this.row),\n                snare: this.sceneData.snare.getValue(this.row),\n                bass: this.sceneData.bass.getValue(this.row),\n            }\n        }\n\n        this.row = this.musicProperties.timeSeconds * ROW_RATE;\n\n        // update JS rocket\n        if (this.audioElement && this.audioElement.paused === false) {\n            // otherwise we may jump into a point in the audio where there's\n            // no timeframe, resulting in Rocket setting row 2 and we report\n            // row 1 back - thus Rocket spasming out\n\n            // this informs Rocket where we are\n            this.syncDevice.update(this.row);\n        }\n\n        // stop once timeline reaches end\n        if (Math.floor(this.audioElement.duration) === Math.floor(this.musicProperties.timeSeconds)) {\n            document.getElementById('ticker_stop').click();\n        }\n    }\n\n    onPlay() {\n        if (!this.isPlaying && this.audioElement) {\n            if (this.audioElement.currentTime) {\n                this.audioElement.currentTime = this.row / ROW_RATE;\n            }\n            this.isPlaying = true;\n            this.audioElement.play();\n        }\n        console.log('[onPlay]');\n    }\n\n    onPause() {\n        this.row = this.audioElement.currentTime * ROW_RATE;\n        if (!this.audioElement.paused && this.isPlaying) {\n            this.audioElement.pause();\n            this.isPlaying = false;\n        }\n        console.info('[onPause]');\n    }\n\n    /**\n     * find the prev/next effect and jump to it\n     *\n     * @param   {number} time       where we are in the audio timeline\n     * @param   {number} direction  direction to skip -1 goes backwards.  1 goes forward\n     */\n    public jump(time: number, direction: number, sceneLength: number) {\n        this.row = time * ROW_RATE;\n        const effectJump = Number(this.sceneData.effect.getValue(this.row).toFixed(1));\n        if (Math.trunc(Number(this.musicProperties.sceneData.effect)) !== Math.trunc(effectJump) && effectJump >= 1) {\n            // if running into transition effect 2.5..then keep searching and only land on whole numbers\n            if (parseInt(effectJump.toString(), 10) !== effectJump) {\n                this.jump(time + (0.12 * direction), direction, sceneLength);\n            } else {\n                this.seek(time);\n            }\n        } else {\n            if (time >= 0 && effectJump < sceneLength - 3) {\n                this.jump(time + (0.12 * direction), direction, sceneLength);\n            } else {\n                // go back to the beginning\n                this.seek(0);\n            }\n        }\n    }\n\n    /**\n     * Jumps to a point in the audio timeline in milliseconds\n     *\n     * @param  {number} time            time in milliseconds\n     */\n    public seek(time: number) {\n        this.audioElement.currentTime = time;\n        // update rocket editor position to new timeline location\n        if (!this.demoMode) {\n            this.syncDevice.update(this.audioElement.currentTime * ROW_RATE);\n        }\n    }\n\n    /**\n     * Turns music volume on or off\n     *\n     * @param  {HTMLElement} ref         volume icon to toggle\n     * @param  {boolean} isMuted         on or off\n     */\n    public toggleSound(ref: HTMLElement, isMuted: boolean) {\n        if (isMuted) {\n            ref.setAttribute('title', 'enable sound');\n            ref.classList.remove('fa-volume-up');\n            ref.classList.add('fa-volume-off');\n        } else {\n            ref.setAttribute('title', 'mute sound');\n            ref.classList.remove('fa-volume-off');\n            ref.classList.add('fa-volume-up');\n        }\n        this.audioElement.muted = isMuted;\n    }\n\n    /**\n     * Restore position of timeline & mute preferences on reloads\n     */\n    public initTimeline() {\n        // jump to last position on timeline for local development reloading\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const newLocal = this;\n        const jumpTo = Number(localStorage.getItem('lastTime')) || 0;\n\n        // poll for mod player since library does not use promises\n        if ((window as any).libopenmpt) {\n            (function poll() {\n                // check if mod was loaded then seek\n                if ((window as any).modulePtr) {\n\n                    // openmpt does not support volume control or muting\n                    document.getElementById('ticker_volume').style.display = 'none';\n                    newLocal.updateRange(newLocal.audioElement.duration);\n                    newLocal.seek(jumpTo);\n                    return;\n                }\n                setTimeout(poll, 150);\n            })();\n        } else {\n            newLocal.audioElement.onloadedmetadata = function () {\n                newLocal.updateRange(newLocal.audioElement.duration);\n            };\n            newLocal.seek(jumpTo);\n        }\n\n        // remember last sound preferences\n        const isMuted = localStorage.getItem('soundToggle') === 'true';\n        this.toggleSound(document.getElementById('ticker_volume'), isMuted);\n    }\n\n    /**\n     * Set timeline slider max range\n     *\n     * @param  {number} value         length time in seconds\n     */\n    private updateRange(value: number) {\n        (document.getElementById(\"timeline\") as HTMLInputElement).max = String(Math.floor(value) * 1000);\n    }\n\n    /*\n    // todo: add effect # markers to timeline\n    fetch(rocketData.default).then(response => response.text())\n        .then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\n        .then(data => {\n            const tracks: Element[] = Array.from(data.documentElement.getElementsByTagName(\"track\"));\n            tracks.forEach((element) => {\n                if (element.getAttribute(\"name\") === 'effect') {\n                    const keys: Element[] = Array.from(element.getElementsByTagName(\"key\"));\n                    keys.forEach((elementKey) => {\n                        const p = document.createElement(\"option\");\n                        const value = elementKey.getAttribute('row').valueOf();\n                        const label = elementKey.getAttribute('value').valueOf();\n\n                        // remap rows to a range between 0 and 1000\n                        const newValue = Utils.map(Number(label), 0, 1520, 0, 1000);\n\n                        p.value = value;\n                        p.label = label;\n                        // this.tickmarkRef.appendChild(p);\n                    })\n                }\n            });\n        });\n        */\n\n}\n","export enum TransitionMethods {\n        FADEIN = 1,\n        FADEOUT = 2,\n        BLOCKFADE = 3,\n        CROSSFADE = 4,\n        CIRCLE = 5,\n        WIPE_LEFT = 6,\n        DISSOLVE = 7\n}","export class Particle {\n    public x: number;\n    public y: number;\n    public _color: number;\n\n    private _x: number;\n    private _y: number;\n    private dx: number;\n    private dy: number;\n\n    private TTL: number = Math.round(Math.random() * 50);\n    private time: number;\n    private isLiving: boolean;\n    private width: number;\n    private height: number;\n\n    constructor(x: number, y: number, _color: number, width: number, height: number) {\n        this._x = this.x = x;\n        this._y = this.y = y;\n\n        this.dx = 0;\n        this.dy = - (Math.random() * (3 - 0.1) + 0.1);\n        this.time = 0;\n        this._color = 0xFF000000 | _color;\n\n        this.isLiving = true;\n\n        this.width = width;\n        this.height = height;\n    }\n\n    update(): boolean {\n        if (!this.isLiving) return false;\n\n        this.x = Math.round((this._x += this.dx) + 0.5);\n        this.y = Math.round((this._y += this.dy) + 0.5);\n\n        const a = ((this.TTL - this.time) / this.TTL);\n        const r = Math.round((this._color >> 16 & 0xFF) * a + 0.5);\n        const g = Math.round((this._color >> 8 & 0xFF) * a + 0.5);\n        const b = Math.round((this._color & 0xFF) * a + 0.5);\n\n        this._color = 0xFF << 24 | r << 16 | g << 8 | b;\n\n        if (this.x < 0 || this.x >= this.width) this.isLiving = false;\n        if (this.y < 0 || this.y >= this.height) this.isLiving = false;\n        if (this.time++ >= this.TTL) this.isLiving = false;\n        return this.isLiving;\n    }\n}","import { Color } from '../../core/Color';\nimport { Utils } from '../../core/Utils';\nimport { Framebuffer } from '../../Framebuffer';\nimport { Interpolator } from '../../math/Interpolator';\nimport RandomNumberGenerator from '../../RandomNumberGenerator';\nimport { AbstractScene } from '../../scenes/AbstractScene';\nimport { Texture, TextureUtils } from '../../texture/index';\nimport { TransitionMethods } from './TransitionMethods';\nimport { Particle } from './Particle';\n\nexport class BlockFade extends AbstractScene {\n    private ledTexture: Texture;\n    private startTime: number = Date.now();\n    private transitionFramebufferTo: Framebuffer;\n\n    public transitionCircle: Uint32Array;\n    public transitionWipe: Uint32Array;\n\n    // dissolve \n    private croud: Float32Array;        // Stores data for mask control\n    private prevMask: Array<boolean>;    // mask picture\n    private curMask: Array<boolean>;\n    private diff: Array<boolean>;       // difference mask\n    private noiseMask: Array<boolean>;  // particle mask\n    private croudMask: Uint32Array;     // cloud mask\n    private particleArray: Array<Particle>;\n\n    public init(framebuffer: Framebuffer): Promise<any> {\n        this.transitionFramebufferTo = new Framebuffer(framebuffer.width, framebuffer.height);\n\n        // draw side wipe\n        this.transitionWipe = new Uint32Array(framebuffer.width * framebuffer.height);\n        for (let y = 0; y < framebuffer.height; y++) {\n            for (let x = 0; x < framebuffer.width; x++) {\n                const c2 = Utils.map(x, 0, framebuffer.width, 0, 255);\n                const color = new Color(c2, c2, c2, 255).toPackedFormat();\n                this.transitionWipe[x + y * framebuffer.width] = color;\n            }\n        }\n\n        // draw circle gradient\n        this.transitionCircle = new Uint32Array(framebuffer.width * framebuffer.height);\n        this.transitionCircle.fill(Color.WHITE.toPackedFormat(), 0, this.transitionCircle.length);\n        for (let d = 0; d < framebuffer.width / 2; d += 1) {\n            const c3 = Utils.map(d, 0, framebuffer.width / 2, 0, 255);\n            this.drawCircle(framebuffer.width / 2, framebuffer.height / 2, d, c3);\n        }\n\n        //dissolve effect\n        this.initDissolve(framebuffer.width, framebuffer.height);\n\n        return Promise.all([\n            TextureUtils.load(require('@assets/atlantis.png'), false).then(\n                (textureBackground: Texture) => this.ledTexture = textureBackground\n            ),\n        ]);\n    }\n\n    private initDissolve(width: number, height: number) {\n        this.croud = new Float32Array(width * height);\n        this.prevMask = new Array<boolean>(width * height);\n        this.curMask = new Array<boolean>(width * height);\n        this.diff = new Array<boolean>(width * height);\n        this.noiseMask = new Array<boolean>(width * height);\n        this.particleArray = new Array<Particle>();\n\n        this.croudMask = new Uint32Array(width * height);\n        this.particleArray.splice(0, this.particleArray.length);\n\n        this.createCroud(width, height);\n        const threshold = 0;\n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                const index = y * width + x;\n                const isBackground = (this.croudMask[y * width + x] & 0xFF) < 0x80;\n                if (isBackground) {\n                    this.croud[index] = 0xFF000000;\n                }\n                this.prevMask[index] = this.curMask[index] = this.croud[index] < threshold;\n                if (Math.random() > 0.90) {\n                    this.noiseMask[index] = !isBackground;\n                }\n            }\n        }\n    }\n\n    private createCroud(width: number, height: number) {\n        if (this.croud == null) {\n            this.croud = new Float32Array(width * height);\n        }\n\n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                this.croudMask[y * width + x] = 0xFFFFFFFF;\n            }\n        }\n\n        const bias: number = Math.min(150.0, 0xFF);\n        const xbase = Math.random() * 100;\n        const ybase = Math.random() * 100;\n\n        let xnoise = 0.0;\n        let ynoise = 0.0;\n        const inc = 0.02;\n\n        const pn = Utils.PerlinNoise;\n\n        for (let y = 0; y < height; y++) {\n            const curBias = y * bias / height;\n            for (let x = 0; x < width; x++) {\n                const _gray = (pn.noise((xnoise + xbase), (ynoise + ybase), 0) * (0xFF - bias) + curBias);\n                this.croud[y * width + x] = _gray;\n                xnoise += inc;\n            }\n            xnoise = 0.0;\n            ynoise += inc;\n        }\n    }\n\n    // dissolve\n    public dissolve(renderBuffer: Framebuffer, renderBuffer2: Uint32Array, time: number) {\n\n        if (time <= 5) {\n\n            // update mask for current scene\n            for (let y = 0; y < renderBuffer.height; y++) {\n                for (let x = 0; x < renderBuffer.width; x++) {\n                    const index = y * renderBuffer.width + x;\n                    const isBackground = (this.croudMask[y * renderBuffer.width + x] & 0xFF) < 0x80;\n                    if (isBackground) {\n                        this.croud[index] = renderBuffer2[index];\n                    }\n                    this.prevMask[index] = this.curMask[index] = this.croud[index] < 0;\n                    if (Math.random() > 0.90) {\n                        this.noiseMask[index] = !isBackground;\n                    }\n                }\n            }\n\n            // delete loose particles\n            this.particleArray.length = 0;\n        }\n\n        for (let y = 0; y < renderBuffer.height; y++) {\n            for (let x = 0; x < renderBuffer.width; x++) {\n                const index = y * renderBuffer.width + x;\n                this.curMask[index] = this.croud[index] < time;\n                this.diff[index] = this.prevMask[index] != this.curMask[index];\n                this.prevMask[index] = this.curMask[index];\n\n                if (this.curMask[index]) {\n                    renderBuffer.framebuffer[index] = renderBuffer2[index];\n                }\n\n                if (this.diff[index]) {\n                    if (this.noiseMask[index]) {\n                        const particle = new Particle(x, y, renderBuffer[index], renderBuffer.width, renderBuffer.height);\n                        particle._color = renderBuffer.framebuffer[index];\n                        this.particleArray.push(particle);\n                    }\n                    renderBuffer.framebuffer[index] = 0xFFFFFFFF;\n                }\n            }\n        }\n\n        for (let it = 0; it < this.particleArray.length; it++) {\n            const p = this.particleArray[it];\n\n            if (!p.update()) {\n                this.particleArray.splice(it, 1); continue;\n            }\n            renderBuffer.framebuffer[p.y * renderBuffer.width + p.x] = Framebuffer.addColor(renderBuffer.framebuffer[p.y * renderBuffer.width + p.x], p._color);\n        }\n    }\n\n    private putpixel(x: number, y: number, color: number) {\n        this.transitionCircle[x + y * this.transitionFramebufferTo.width] = new Color(color, color, color, 255).toPackedFormat();\n    }\n\n    private drawCircle(x0: number, y0: number, radius: number, color: number) {\n        let x = 0;\n        let y = radius;\n        let d = -(radius >>> 1);\n\n        while (x <= y) {\n            this.putpixel(x + x0, y + y0, color);\n            this.putpixel(y + x0, x + y0, color);\n            this.putpixel(-x + x0, y + y0, color);\n            this.putpixel(-y + x0, x + y0, color);\n            this.putpixel(-x + x0, -y + y0, color);\n            this.putpixel(-y + x0, -x + y0, color);\n            this.putpixel(x + x0, -y + y0, color);\n            this.putpixel(y + x0, -x + y0, color);\n\n            if (d <= 0) {\n                x++;\n                d += x;\n            } else {\n                y--;\n                d -= y;\n            }\n        }\n    }\n\n    public render(framebuffer: Framebuffer): void {\n        const time: number = Date.now() - this.startTime;\n        framebuffer.clear();\n        this.blockFade(framebuffer, this.ledTexture.texture, this.ledTexture.width, time, 0);\n    }\n\n    /**\n     * Transitions from one effect to another using using \"transition\" value from JSRocket\n     *\n     * @param  {Framebuffer} framebuffer             pixels\n     * @param  {AbstractScene} transitionSceneFrom   previous effect\n     * @param  {AbstractScene} transitionSceneTo     effect we are transitioning to\n     * @param  {number} transitionMethod             transition effect to use (blend, wipe, crossfade, etc)\n     */\n    public transition(\n        framebuffer: Framebuffer,\n        transitionSceneFrom: AbstractScene,\n        transitionSceneTo: AbstractScene,\n        transitionMethod: TransitionMethods,\n        transitionValue: number,\n        time: number) {\n\n        // render the 'To' effect into the framebuffer\n        transitionSceneTo.render(this.transitionFramebufferTo, time);\n\n        // render 'From' effect into framebuffer\n        transitionSceneFrom.render(framebuffer, time);\n        // apply transition to framebuffer (fromEffect) using texture (toEffect) 0-255\n        switch (Math.trunc(transitionMethod)) {\n            case TransitionMethods.BLOCKFADE: // 0 - 12000\n                this.blockFade(framebuffer, this.transitionFramebufferTo.framebuffer, this.transitionFramebufferTo.width, Utils.map(transitionValue, 0, 255, 0, 12000), 0);\n                break;\n            case TransitionMethods.CROSSFADE: // 0 - 255\n                this.crossFade(framebuffer.framebuffer, transitionValue);\n                break;\n            case TransitionMethods.DISSOLVE: // 0 - 255\n                this.dissolve(framebuffer, this.transitionFramebufferTo.framebuffer, transitionValue);\n                break;\n            case TransitionMethods.FADEIN: // 0-255\n                this.fadeIn(framebuffer, transitionValue, 0);\n                break;\n            case TransitionMethods.FADEOUT: // 0-255\n                this.fadeOut(framebuffer, transitionValue, 0);\n                break;\n            case TransitionMethods.WIPE_LEFT: // 0 - 255\n                this.crossFadeImage(framebuffer, transitionValue, this.transitionWipe);\n                break;\n            case TransitionMethods.CIRCLE: // 0 - 255\n                this.crossFadeImage(framebuffer, transitionValue, this.transitionCircle);\n                break;\n            default: // 0 - 512\n                this.crossFade(framebuffer.framebuffer, Utils.map(transitionValue, 0, 255, 0, 12000));\n        }\n    }\n\n    public blockFade(framebuffer: Framebuffer, pixelArray: Uint32Array, pixelArrayWidth: number, time: number, startTime: number) {\n        const blockWidth = 20;\n        const horizontalUnits = Math.ceil(framebuffer.width / blockWidth);\n        const verticalUnits = Math.ceil(framebuffer.height / blockWidth);\n\n        const rng = new RandomNumberGenerator();\n        rng.setSeed(366);\n\n        const fadeArray = Array.from({ length: horizontalUnits * verticalUnits }, () => {\n            return 500 + Math.round(rng.getFloat() * 600000) % 10000;\n        });\n\n        for (let y = 0; y < verticalUnits; y++) {\n            const yPos = y * blockWidth;\n\n            for (let x = 0; x < horizontalUnits; x++) {\n                const xPos = x * blockWidth;\n                const fadeIndex = x + y * horizontalUnits;\n                framebuffer.drawTextureRect(xPos, yPos, xPos, yPos, blockWidth, blockWidth, pixelArray, pixelArrayWidth,\n                    Interpolator.interpolate(startTime + fadeArray[fadeIndex], startTime + fadeArray[fadeIndex] + 700, time)\n                );\n            }\n        }\n    }\n\n    // blend entire image to another image\n    public crossFade(framebuffer: Uint32Array, alpha: number) {\n        for (let i = 0; i < framebuffer.length; i++) {\n            framebuffer[i] = Framebuffer.blend(\n                framebuffer[i],\n                this.transitionFramebufferTo.framebuffer[i],\n                alpha)\n        }\n    }\n\n    // transition using image\n    // https://github.com/Slynchy/SDL-AlphaMaskWipes/blob/master/Transition.h\n    public crossFadeImage(framebuffer: Framebuffer, alpha: number, transitionImage: Uint32Array) {\n        for (let i = 0; i < framebuffer.framebuffer.length; i++) {\n            framebuffer.framebuffer[i] = Framebuffer.blend(\n                framebuffer.framebuffer[i],\n                this.transitionFramebufferTo.framebuffer[i],\n                Utils.clamp(\n                    (alpha * 2) - (transitionImage[i] & 0xff),\n                    0, 255))\n        }\n    }\n\n    // fade in from solid color\n    public fadeIn(framebuffer: Framebuffer, alpha: number, startColor: number) {\n        for (let y = 0; y < framebuffer.height; y++) {\n            for (let x = 0; x < framebuffer.width; x++) {\n                framebuffer.drawPixel(x, y,\n                    Framebuffer.blend(\n                        startColor,\n                        this.transitionFramebufferTo.framebuffer[x + y * framebuffer.width],\n                        alpha)\n                );\n            }\n        }\n    }\n\n    // fade out to solid color\n    public fadeOut(framebuffer: Framebuffer, alpha: number, endColor: number) {\n        for (let y = 0; y < framebuffer.height; y++) {\n            for (let x = 0; x < framebuffer.width; x++) {\n                framebuffer.drawPixel(x, y,\n                    Framebuffer.blend(\n                        framebuffer.framebuffer[x + y * framebuffer.width],\n                        endColor,\n                        alpha)\n                );\n            }\n        }\n    }\n\n    // Alternating scanlines + RGB Distort /w external input\n    public renderScanlines(framebuffer: Framebuffer, shiftAmount: number) {\n        let i = 0;\n\n        const offRed = (2 * shiftAmount) << 0;\n        const offGreen = (5 * shiftAmount) << 0;\n        const offBlue = (2 * shiftAmount) << 0;\n\n        for (let y = 0; y < framebuffer.height; y++) {\n\n            // horizontal scanlines * intensity\n            const strips = (y & 1) * 16;\n            const verticalPosition = y * framebuffer.width;\n\n            for (let x = 0; x < framebuffer.width; x++) {\n                const imagePixelR = framebuffer.framebuffer[Utils.clamp(x + offRed, 0, framebuffer.width - 1) + verticalPosition] & 0xFF;\n                const imagePixelG = framebuffer.framebuffer[Utils.clamp(x + offGreen, 0, framebuffer.width - 1) + verticalPosition] >> 8 & 0xFF;\n                const imagePixelB = framebuffer.framebuffer[Utils.clamp(x + offBlue, 0, framebuffer.width - 1) + verticalPosition] >> 16 & 0xFF;\n\n                framebuffer.framebuffer[i++] = new Color(\n                    Utils.clamp(imagePixelR - strips, 0, 255),\n                    Utils.clamp(imagePixelG - strips, 0, 255),\n                    Utils.clamp(imagePixelB - strips, 0, 255)).toPackedFormat();\n            }\n        }\n    }\n\n}\n","import { DLNode } from './Node';\n\n/**\n * Doubly Linked-List implementation class.\n * https://en.wikipedia.org/wiki/Doubly_linked_list\n * https://github.com/DameLyngdoh/dl-doubly-linked-list-ts\n *\n */\nexport class DoublyLinkedList<T> {\n    /**\n     * The start node of the list.\n     */\n    private _start: DLNode<T> | null;\n\n    /**\n     * The last  node of the list.\n     */\n    private _end: DLNode<T> | null;\n\n    /**\n     * The number of nodes in the list.\n     */\n    private _length: number;\n\n    constructor() {\n        this._start = null;\n        this._end = null;\n        this._length = 0;\n    }\n\n    get start(): DLNode<T> | null {\n        return this._start;\n    }\n\n    set start(start: DLNode<T> | null) {\n        this._start = start;\n    }\n\n    get end(): DLNode<T> | null {\n        return this._end;\n    }\n\n    set end(end: DLNode<T> | null) {\n        this._end = end;\n    }\n\n    get length(): number {\n        return this._length + 1;\n    }\n\n    /**\n     * Returns true if the list is empty.\n     * @returns Returns true if list is empty or false otherwise.\n     */\n    public isEmpty(): boolean {\n        return this.length === 0;\n    }\n\n    /**\n     * Inserts a node to the start of the list.\n     * @param node The node to be inserted to the list.\n     */\n    public insertStart(node: DLNode<T>): void {\n        if (this.isEmpty()) {\n            this.start = node;\n            this.end = node;\n        }\n        else {\n            node.next = this.start;\n            if (this.start != null) {\n                this.start.previous = node;\n            }\n            this.start = node;\n        }\n        this._length++;\n    }\n\n    /**\n     * Inserts a node to the end of the list.\n     * @param node The node to be inserted to the list.\n     */\n    public insertEnd(node: DLNode<T>): void {\n        if (this.isEmpty()) {\n            this.start = node;\n            this.end = node;\n        }\n        else {\n            node.previous = this.end;\n            if (this.end != null) {\n                this.end.next = node;\n            }\n            this.end = node;\n        }\n        this._length++;\n    }\n\n    /**\n     * Inserts a node at the specified index in the list.\n     * @param node The node to be inserted to the list.\n     * @param index The index to insert the node at. A value of -1 will insert the node to the end of the list.\n     */\n    public insert(node: DLNode<T>, index: number): void {\n        if (index === 0) {\n            this.insertStart(node);\n            return;\n        }\n        else if (index === -1) {\n            this.insertEnd(node);\n            return;\n        }\n\n        let currentNode = this.start;\n        let i: number = 0;\n        for (i = 0; i < index - 1 && currentNode !== null; i++) {\n            currentNode = currentNode.next;\n        }\n\n        // Insertion not possible\n        if (i !== index - 1 && currentNode === null) {\n            return;\n        }\n\n        if (currentNode != null) {\n            node.previous = currentNode;\n            node.next = currentNode.next;\n            if (currentNode.next != null) {\n                currentNode.next.previous = node;\n            }\n            else {\n                this.end = node;\n            }\n            currentNode.next = node;\n        }\n        this._length++;\n    }\n\n    /**\n     * Deletes the first node from the list.\n     */\n    public deleteStart(): void {\n        if (this.isEmpty()) {\n            return;\n        }\n\n        if (this.start != null && this.start.next == null) {\n            this.start = null;\n            this.end = null;\n        }\n        else if (this.start != null) {\n            this.start = this.start.next;\n            if (this.start != null) {\n                this.start.previous = null;\n            }\n        }\n        this._length--;\n    }\n\n    /**\n     * Deletes the last node from the list.\n     */\n    public deleteEnd(): void {\n        if (this.isEmpty()) {\n            return;\n        }\n\n        if (this.end != null && this.end.previous == null) {\n            this.start = null;\n            this.end = null;\n        }\n        else if (this.end != null) {\n            this.end = this.end.previous;\n            if (this.end != null) {\n                this.end.next = null;\n            }\n        }\n        this._length--;\n    }\n\n    /**\n     * Deletes a node from a specific index in the list. If the index is out of bounds, then no deletion will occur.\n     * @param index The index of the node to be deleted.\n     */\n    public delete(index: number): void {\n        if (this.isEmpty()) {\n            return;\n        }\n        if (index === 0) {\n            this.deleteStart();\n            return;\n        }\n        else if (index === -1) {\n            this.deleteEnd();\n            return;\n        }\n\n        const node = this.getNode(index);\n        if (node != null) {\n            if (node.next === null && node.previous !== null) {\n                this.deleteEnd();\n            }\n            else if (node.previous === null && node.next !== null) {\n                this.deleteStart();\n            }\n            else if (node.next !== null && node.previous !== null) {\n                node.previous.next = node.next;\n                node.next.previous = node.previous;\n                this._length--;\n            }\n        }\n    }\n\n    /**\n     * Retrieves a node from the specific index.\n     * @param index The index from which to retrieve the node.\n     * @returns Returns the node at the specific index or null if the index is out of bounds.\n     */\n    public getNode(index: number): DLNode<T> | null {\n        if (this.isEmpty() || index < 0) {\n            return null;\n        }\n\n        let currentNode = this.start;\n        for (let i = 1; i <= index && currentNode != null; i++) {\n            currentNode = currentNode.next;\n        }\n\n        return currentNode;\n    }\n\n    /**\n     * Returns an array of the nodes in the order of the list.\n     * @returns Array of nodes.\n     */\n    public toArray(): Array<DLNode<T>> {\n        const array: Array<DLNode<T>> = new Array<DLNode<T>>();\n\n        if (this.length === 0) {\n            return array;\n        }\n\n        let i = 0;\n\n        let currentNode: DLNode<T> | null = this.start;\n        while (currentNode != null && i < 12) {\n            array.push(currentNode);\n            currentNode = currentNode.next;\n            i++;\n        }\n        return array;\n    }\n\n    /**\n     * Clears the list and deletes all nodes.\n     */\n    public clear(): void {\n        this.end = null;\n        this.start = null;\n        this._length = 0;\n    }\n}","/**\n * Node implementation class. A node is a vertex in the list which contains data and pointers to the next node and previous node.\n */\nexport class DLNode<T> {\n    /**\n     * The data contained in the node.\n     */\n    private _data: T | null = null;\n\n    /**\n     * The edge or pointer to the next node.\n     */\n    private _next: DLNode<T> | null = null;\n\n    /**\n     * The edge or pointer to the previous node.\n     */\n    private _previous: DLNode<T> | null = null;\n\n    constructor() { }\n\n    get data(): T | null {\n        return this._data;\n    }\n\n    set data(data: T | null) {\n        this._data = data;\n    }\n\n    get next(): DLNode<T> | null {\n        return this._next;\n    }\n\n    set next(next: DLNode<T> | null) {\n        this._next = next;\n    }\n\n    get previous(): DLNode<T> | null {\n        return this._previous;\n    }\n\n    set previous(previous: DLNode<T> | null) {\n        this._previous = previous;\n    }\n}","/*\nName          : Aisa Demo\nRelease Date  : TBD\nPlatform      : JavaScript\nCategory      : Demo\nNotes         : Software rendered demoscene effects written in Typescript\n*/\n\n// Core\nimport { Framebuffer } from '../../Framebuffer';\nimport { AbstractScene } from '../../scenes/AbstractScene';\nimport { SoundManager } from '../../sound/SoundManager';\nimport { BlockFade } from '../block-fade/BlockFade';\nimport { DoublyLinkedList } from '../../core/LinkedList';\nimport { DLNode } from '../../core/Node';\nimport { LoadingScene } from './parts/LoadingScene';\n\n// Stats\nimport * as Stats from 'stats.js';\n\n// Video Recording Tool\nimport { CanvasRecorder } from './canvas-record';\n\nexport class DemoScene extends AbstractScene {\n\n    // Sound Manager\n    private soundManager: SoundManager;\n\n    // Video Recorder\n    private canvasRecorder: CanvasRecorder;\n\n    // list of scenes\n    private sceneList: DoublyLinkedList<AbstractScene>;\n    private nodeInstance: DLNode<AbstractScene>;\n\n    // transitions\n    private BlockFade: BlockFade;\n\n    // stats\n    private stats: Array<Stats>;\n\n    // our main canvas\n    private canvasRef: HTMLCanvasElement;\n\n    // moving line marking current place in the timeline\n    private timelineRef: HTMLInputElement;\n\n    // displays which scene we're on\n    private sceneRef: HTMLSpanElement;\n\n    // displays time in seconds\n    private timeRef: HTMLSpanElement;\n\n    public init(framebuffer: Framebuffer): Promise<any> {\n        this.soundManager = new SoundManager();\n\n        this.sceneList = new DoublyLinkedList();\n\n        this.initControls(framebuffer.width);\n\n        this.BlockFade = new BlockFade();\n\n        this.canvasRef = document.getElementById('aisa-canvas') as HTMLCanvasElement;\n\n        // establish loading scene\n        const newNode: DLNode<AbstractScene> = new DLNode();\n        newNode.data = new LoadingScene();\n        this.sceneList.insertStart(newNode);\n\n        // update screen\n        const animate = () => {\n            this.canvasRef.getContext('2d').putImageData(framebuffer.getImageData(), 0, 0);\n            requestAnimationFrame(animate);\n        };\n\n        const demoOrder = [\n            './parts/Scene1',\n            './parts/Scene2',\n            './parts/Scene3',\n            './parts/Scene4',\n            './parts/Scene5',\n            './parts/Scene6',\n            './parts/Scene7',\n            './parts/Scene8',\n            './parts/Scene9',\n            './parts/Scene10',\n            './parts/Scene11',\n            './parts/Scene12',\n            './parts/Scene13',\n            './parts/Scene14',\n            './parts/Scene15',\n            './parts/Scene16',\n            './parts/Scene17',\n            './parts/Scene18',\n            './parts/Scene19',\n            './parts/Scene20',\n        ]\n\n        // create placeholder nodes since dynamically importing will create out of order\n        for (let i = 0; i < demoOrder.length; i++) {\n            const newNodeInsert: DLNode<AbstractScene> = new DLNode();\n            this.sceneList.insert(newNodeInsert, this.sceneList.length - 1);\n        }\n\n        // initialize effects with progress\n        return this.allProgress([\n\n            // we use this for transitions\n            this.BlockFade.init(framebuffer),\n\n            // load music\n            this.soundManager.loadMusic(require(`@assets/sound/showeroflove.mod`)),\n\n            // load *.rocket file for scene/music synchronization\n            this.soundManager.prepareSync(require('@assets/sound/demo.rocket'), true),\n\n            // load and initialze effects\n            ...demoOrder.map(async (element, index) =>\n                await import(`${element}`).then(plug => this.initScene(framebuffer, plug, index + 1))\n            ),\n\n        ], (percent: number) => {\n\n            // update the loading screen with percent\n            this.sceneList.getNode(0).data.render(framebuffer, percent)\n\n            // update memory usage\n            for (const p of this.stats) {\n                p.update();\n            }\n            requestAnimationFrame(animate);\n        });\n    }\n\n    /**\n     * Adds AbstractScenes to sceneList array and initializes it\n     *\n     * @param   {Framebuffer} framebuffer            scene initializes with information in framebuffer such as width and height\n     * @param   {Object} plug                        imported class\n     * @returns {Promise<any>}                       resolves promise after completion\n     */\n\n    private initScene(framebuffer: Framebuffer, plug: unknown, index: number): Promise<any> {\n        const constructorName = Object.keys(plug)[0];\n        const currentNode = this.sceneList.getNode(index);\n        currentNode.data = new plug[constructorName]();\n\n        return Promise.all([\n            currentNode.data.init(framebuffer),\n            new Promise<void>(resolve => {\n                if (currentNode.data.onInit) currentNode.data.onInit();\n                resolve();\n            })\n        ]);\n    }\n\n    // this runs after init() has finished\n    public onInit(): void {\n\n        this.canvasRecorder = new CanvasRecorder();\n\n        // jump to last effect in timeline and set mute vs unmuted\n        this.soundManager.initTimeline();\n\n        // show debug / timeline navigator\n        document.getElementById('debug').style.display = 'block';\n    }\n\n    /**\n     * Setup debug tools for local development\n     */\n    private initControls(width: number) {\n        this.stats = new Array<Stats>();\n\n        // Stats - Memory in Megabytes\n        this.initStats(2, 0, width * 2);\n\n        // Stats - Frames per second\n        this.initStats(0, 50, width * 2);\n\n        // Stats - Milliseconds per frame\n        this.initStats(1, 100, width * 2);\n\n        document.getElementById('debug').style.width = `${width * 2}px`;\n\n        // Scene Playback Controls\n        const tickerPlayRef = document.getElementById('ticker_play');\n        const tickerStopRef = document.getElementById('ticker_stop');\n        const tickerNextRef = document.getElementById('ticker_next');\n        const tickerBackRef = document.getElementById('ticker_back');\n        const tickerRecordRef = document.getElementById('ticker_record');\n        const tickerScreenshotRef = document.getElementById('ticker_screenshot');\n        const tickerVolumeRef = document.getElementById('ticker_volume');\n\n        // timeline slider, scene and time display\n        this.timelineRef = document.getElementById('timeline') as HTMLInputElement;\n        this.sceneRef = document.getElementById('scene') as HTMLSpanElement;\n        this.timeRef = document.getElementById('time') as HTMLSpanElement;\n\n        // stop\n        tickerStopRef.addEventListener('click', () => {\n            this.soundManager.onPause();\n            this.soundManager.seek(0);\n\n            tickerPlayRef.classList.add('fa-play');\n            tickerPlayRef.classList.remove('fa-pause');\n\n            // save video if recoding\n            if (this.canvasRecorder.recording) {\n                tickerRecordRef.style.color = 'white';\n                this.canvasRecorder.saveVideo();\n            }\n        })\n\n        // record video\n        tickerRecordRef.addEventListener('click', () => {\n            if (!this.canvasRecorder.recording) {\n                // start audio and video recording\n                tickerRecordRef.style.color = 'red';\n                this.soundManager.onPlay();\n                this.canvasRecorder.recordVideo();\n                tickerPlayRef.classList.remove('fa-play');\n                tickerPlayRef.classList.add('fa-pause');\n            } else {\n                // pause audio and save video file\n                tickerRecordRef.style.color = 'white';\n                this.soundManager.onPause();\n                this.canvasRecorder.saveVideo();\n                tickerPlayRef.classList.add('fa-play');\n                tickerPlayRef.classList.remove('fa-pause');\n            }\n        })\n\n        // play / pause\n        tickerPlayRef.addEventListener('click', () => {\n            if (!this.soundManager.isPlaying) {\n                this.soundManager.onPlay();\n                tickerPlayRef.setAttribute('title', 'pause');\n                tickerPlayRef.classList.remove('fa-play');\n                tickerPlayRef.classList.add('fa-pause');\n            } else {\n                this.soundManager.onPause();\n                tickerPlayRef.setAttribute('title', 'play');\n                tickerPlayRef.classList.add('fa-play');\n                tickerPlayRef.classList.remove('fa-pause');\n            }\n        })\n\n        // toggle audio and save preference for subsequent reloads\n        tickerVolumeRef.addEventListener('click', () => {\n            this.soundManager.toggleSound(tickerVolumeRef, !this.soundManager.audioElement.muted);\n            localStorage.setItem('soundToggle', String(this.soundManager.audioElement.muted));\n        });\n\n        // save screenshot in PNG format\n        tickerScreenshotRef.addEventListener('click', () => {\n            const date = new Date();\n            const fileName = `Aisa ${date.toISOString().slice(0, 10)} at ${date\n                .toTimeString()\n                .slice(0, 8)\n                .replace(/:/g, '.')}.png`;\n            const image = this.canvasRef.toDataURL('image/png').replace('image/png', 'image/octet-stream');\n            const anchor = document.createElement('a');\n            anchor.setAttribute('download', fileName);\n            anchor.setAttribute('href', image);\n            anchor.click();\n        })\n\n        // next\n        tickerNextRef.addEventListener('click', () => {\n            this.soundManager.jump(this.soundManager.musicProperties.timeSeconds, 1, this.sceneList.length);\n        })\n\n        // back\n        tickerBackRef.addEventListener('click', () => {\n            this.soundManager.jump(this.soundManager.musicProperties.timeSeconds, -1, this.sceneList.length);\n        })\n\n        // seek\n        this.timelineRef.addEventListener('input', (e) => {\n            const time = Number((e.target as HTMLInputElement).value);\n            this.soundManager.seek(time / 1000);\n        });\n\n        // seek with scrollwheel\n        document.addEventListener(\"wheel\", (e) => {\n            const directionToScroll = (e.deltaY < 0) ? -0.06 : 0.06;\n            this.soundManager.seek(this.soundManager.audioElement.currentTime + directionToScroll);\n            // prevent page scroll\n            e.preventDefault();\n            e.stopPropagation();\n        }, { passive: false })\n\n        // keyboard navigation controls\n        document.addEventListener('keydown', (e: KeyboardEvent) => {\n            switch (e.key) {\n                case 'MediaStop':\n                    tickerStopRef.click();\n                    break;\n                // play or pause\n                case 'MediaPlayPause':\n                case ' ':\n                    tickerPlayRef.click();\n                    break;\n                // navigate timeline backward\n                case 'ArrowLeft':\n                    this.soundManager.seek(this.soundManager.audioElement.currentTime - 0.06);\n                    break;\n                // navigate timeline forward\n                case 'ArrowRight':\n                    this.soundManager.seek(this.soundManager.audioElement.currentTime + 0.06);\n                    break;\n                // jump to next effect\n                case 'MediaTrackNext':\n                case 'ArrowUp':\n                    this.soundManager.jump(this.soundManager.audioElement.currentTime, 1, this.sceneList.length);\n                    break;\n                // jump to previous effect\n                case 'MediaTrackPrevious':\n                case 'ArrowDown':\n                    this.soundManager.jump(this.soundManager.audioElement.currentTime, -1, this.sceneList.length);\n                    break;\n                // toggle full screen\n                case 'f':\n                    this.canvasRef.click();\n                    break;\n                // save a screenshot\n                case 's':\n                    tickerScreenshotRef.click();\n                    break;\n                // record video in webm format\n                case 'r':\n                    tickerRecordRef.click();\n                    break;\n                case 'd':\n                    break;\n            }\n        })\n    }\n\n    /**\n     * Runs all promises in an array and runs callback with percentage of completion\n     *\n     * @param   {Array<Promise<any>>} promises       array of promises to run\n     * @param   {Function} progressCallback          function sending percentage after individual promise is complete\n     * @returns {Promise<any>}                       promise resolve after all promises are complete\n     */\n    private allProgress(promises: Array<Promise<any>>, progressCallback: (percentage: number) => void): Promise<any> {\n        let d = 0;\n        for (const p of promises) {\n            p.then(() => {\n                d++;\n                progressCallback(d / promises.length);\n            });\n        }\n        return Promise.all(promises);\n    }\n\n    /**\n     * Adds JavaScript Performance Monitor and initializes it\n     *\n     * @param   {Object} args                        stat type[0-3], top in pixels, left in pixels\n     */\n    private initStats(...args: Array<number>) {\n        this.stats.push(new Stats());\n        const statsObj = this.stats[this.stats.length - 1];\n        statsObj.showPanel(args[0]);\n        statsObj.dom.style.cssText = `position:absolute;top:${args[1]}px;left:${args[2]}px;`;\n        document.body.appendChild(statsObj.dom);\n    }\n\n    public render(framebuffer: Framebuffer) {\n\n        // get time and values from music\n        this.soundManager.updateMusic();\n\n        // get which effect to run\n        this.nodeInstance = this.sceneList.getNode(this.soundManager.musicProperties.sceneData.effect || 0);\n\n        if (this.soundManager.musicProperties === undefined) return;\n\n        // if \"transitionType\" in JSRocket is zero then run the effect by itself\n        if (this.soundManager.musicProperties.sceneData.transitionType === 0) {\n            this.nodeInstance.data.render(framebuffer, this.soundManager.musicProperties.timeMilliseconds)\n        } else {\n            // otherwise blend two effects together\n            this.BlockFade.transition(\n                framebuffer,\n                this.nodeInstance.data,\n                this.nodeInstance.next.data,\n                this.soundManager.musicProperties.sceneData.transitionType,\n                this.soundManager.musicProperties.sceneData.transitionValue,\n                this.soundManager.musicProperties.timeMilliseconds);\n        }\n\n        // comment out for release\n        this.drawStats();\n    }\n\n    /**\n     * Show FPS, Memory Usage and js rocket time and effect number\n     */\n    private drawStats() {\n        // update timeline marker\n        this.timelineRef.value = String(this.soundManager.musicProperties.timeMilliseconds);\n\n        // keep current time in local storage to stay in place during reloads\n        localStorage.setItem('lastTime', String(this.soundManager.musicProperties.timeSeconds));\n\n        if (!this.soundManager.syncDevice.connected && !this.soundManager.demoMode) {\n            console.error('Rocket not connected.');\n            return;\n        } else {\n            // get values from JS rocket\n            this.sceneRef.innerText = this.soundManager.musicProperties.sceneData.effect.toString();\n            this.timeRef.innerText = this.soundManager.musicProperties.timeSeconds.toFixed(2);\n        }\n        // update FPS and Memory usage\n        for (const p of this.stats) {\n            p.update();\n        }\n    }\n\n}\n","export class CanvasRecorder {\n\n    public recording: boolean;\n    private canvasRecordingOptions;\n    private canvasRecorder;\n    private audioTrack: MediaStreamTrack;\n\n    public constructor() {\n        this.recording = false;\n    }\n\n    public getType(filename: string) {\n        const ext = this.fileExtension(filename);\n        return ['mkv'].includes(ext) ? 'video/x-matroska;codecs=avc1' : 'video/webm';\n    }\n\n    private fileExtension(filename: string): string {\n        return filename.split('.').pop();\n    }\n\n    public createCanvasRecorder(canvas: HTMLCanvasElement, options = {}) {\n        const date = new Date();\n        let link = null;\n\n        const {\n            filename = `Recording ${date.toISOString().slice(0, 10)} at ${date\n                .toTimeString()\n                .slice(0, 8)\n                .replace(/:/g, '.')}.webm`,\n            frameRate = 25,\n            download = true,\n            recorderOptions = {\n                mimeType: 'video/x-matroska;codecs=avc1',\n                audioBitsPerSecond: 128000, // 128 Kbit/sec\n                videoBitsPerSecond: 2500000 // 2.5 Mbit/sec\n            }\n        } = {\n            ...options\n        };\n\n        const mimeType = recorderOptions.mimeType || this.getType(filename);\n\n        if (download) {\n            link = link || document.createElement('a');\n            link.download = filename;\n        }\n\n        let chunks = [];\n\n        let stream = canvas.captureStream(frameRate);\n\n        /*\n        if (!this.canvasRecorder) {\n            // get the audio track:\n            const ctx = new AudioContext();\n            const dest = ctx.createMediaStreamDestination();\n            const sourceNode = ctx.createMediaElementSource(audio);\n            sourceNode.connect(dest);\n            sourceNode.connect(ctx.destination);\n            this.audioTrack = dest.stream.getAudioTracks()[0];\n        }\n\n        stream.addTrack(this.audioTrack);\n        */\n\n        let recorder = new MediaRecorder(stream, { mimeType, ...recorderOptions });\n\n        recorder.ondataavailable = event => {\n            event.data.size && chunks.push(event.data);\n        };\n        recorder.onstop = () => {\n            if (download && chunks.length) {\n                const blob = new Blob(chunks, { type: mimeType });\n                const url = URL.createObjectURL(blob);\n                link.href = url;\n\n                const event = new MouseEvent('click');\n                link.dispatchEvent(event);\n                setTimeout(() => {\n                    URL.revokeObjectURL(url);\n                }, 1);\n            }\n        };\n\n        return {\n            start(timeslice) {\n                chunks = [];\n                recorder.start(timeslice);\n            },\n            set filename(name) {\n                link.download = name;\n            },\n            stop() {\n                recorder.stop();\n                return chunks;\n            },\n            dispose() {\n                recorder = null;\n                stream = null;\n            },\n            stream,\n            recorder\n        };\n    }\n\n    /**\n     * Records a video and sound using CanvasRecorder\n     */\n    public recordVideo() {\n        console.info('recording video...');\n        this.recording = true;\n        const date = new Date();\n\n        // options\n        this.canvasRecordingOptions = {\n            filename: `Aisa ${date.toISOString().slice(0, 10)} at ${date\n                .toTimeString()\n                .slice(0, 8)\n                .replace(/:/g, '.')}.webm`,\n            frameRate: 60,\n            download: true,\n            recorderOptions: {\n                mimeType: 'video/webm',\n                audioBitsPerSecond: 128000, // 128 Kbit/sec\n                videoBitsPerSecond: 5000000 // 2.5 Mbit/sec\n            }\n        }\n\n        // Create canvas video recorder\n        const canvasObj = document.getElementById('aisa-canvas');\n        this.canvasRecorder = this.createCanvasRecorder(canvasObj as HTMLCanvasElement, this.canvasRecordingOptions);\n        this.canvasRecorder.start();\n    }\n\n    public saveVideo() {\n        // Stop and dispose\n        this.canvasRecorder.stop();\n        this.canvasRecorder.dispose();\n        this.recording = false;\n        console.info(`saved video as ${this.canvasRecordingOptions.filename}`);\n    }\n}\n","import { Framebuffer } from '../../../Framebuffer';\nimport { Color } from '../../../core/Color';\nimport { AbstractScene } from '../../../scenes/AbstractScene';\n\nexport class LoadingScene extends AbstractScene {\n\n    public init(framebuffer: Framebuffer): Promise<any> {\n        return Promise.all([\n        ]);\n    }\n\n    public render(framebuffer: Framebuffer, percent: number): void {\n        // update the progress bar via canvas\n        const outputX = Math.ceil(framebuffer.width * percent);\n        framebuffer.drawRect2(0, (framebuffer.height / 2) - 5, outputX, 10, Color.WHITE.toPackedFormat());\n    }\n\n}\n","import { Vector4f } from '../math/index';\nimport { FlatShadedFace } from './FlatShadedFace';\nimport { FlatshadedMesh } from './FlatshadedMesh';\n\nexport class AbstractGeometricObject {\n\n    protected mesh: FlatshadedMesh;\n    protected inverse: boolean;\n\n    protected buildMesh(points: Array<Vector4f>, index: Array<number>, inverse: boolean = false): void {\n        this.inverse = inverse;\n        const normals: Array<Vector4f> = new Array<Vector4f>();\n\n        // todo use index array for normals to have less normal objects\n        // compute normal and check wheter the normal already exists. then reuse inded\n        // maybe have a similarity faktor to reuse similar normals\n        for (let i = 0; i < index.length; i += 3) {\n            const normal = points[index[i + 1]].sub(points[index[i]]).cross(points[index[i + 2]].sub(points[index[i]]));\n            normals.push(this.inverse ? normal.normalize().mul(-1) : normal.normalize()); // normalize?\n        }\n\n\n        const faces: Array<FlatShadedFace> = new Array<FlatShadedFace>();\n\n        for (let i = 0; i < index.length; i += 3) {\n\n            faces.push({\n                n1: i / 3,\n                n2: i / 3,\n                n3: i / 3,\n                v1: index[0 + i],\n                v2: index[1 + i],\n                v3: index[2 + i],\n            });\n        }\n\n        // Create class for objects\n        this.mesh = {\n            points,\n            normals,\n            faces,\n            transformedPoints: points.map(() => new Vector4f(0, 0, 0, 0)),\n            transformedNormals: normals.map(() => new Vector4f(0, 0, 0, 0))\n        };\n    }\n\n    public getMesh(): FlatshadedMesh {\n        return this.mesh;\n    }\n\n}\n","import { Vector4f } from '../math/Vector4f';\nimport { AbstractGeometricObject } from './AbstractGeometricObject';\nimport { Vector3f } from '../math/Vector3f';\n\nexport class Torus extends AbstractGeometricObject {\n\n    public constructor(invert: boolean = false) {\n        super();\n\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 15;\n        const STEPS2 = 12;\n        // find a better solution for inversion\n        // maybe configuration by constructor of base class and construction of geometry\n        // in template method pattern method\n        this.inverse = invert;\n\n        for (let i = 0; i < STEPS; i++) {\n            const frame = this.torusFunction(i * 2 * Math.PI / STEPS);\n            const frame2 = this.torusFunction(i * 2 * Math.PI / STEPS + 0.1);\n            const up = new Vector3f(0.0, 4.0, 0);\n            const right = frame2.sub(frame).cross(up);\n\n            for (let r = 0; r < STEPS2; r++) {\n                const pos = up.mul(Math.sin(r * 2 * Math.PI / STEPS2)).add(right.mul(Math.cos(r * 2 * Math.PI / STEPS2))).add(frame);\n                points.push(new Vector4f(pos.x, pos.y, pos.z, 1.0));\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2) % points.length);\n            }\n        }\n\n        this.buildMesh(points, index);\n    }\n\n    public torusFunction(alpha: number): Vector3f {\n        return new Vector3f(Math.sin(alpha) * 10, 0, Math.cos(alpha) * 10);\n    }\n\n}\n","export class Interpolator {\n\n    public static interpolate(start: number, end: number, current: number): number {\n        if (current <= start) {\n            return 0;\n        }\n        if (current >= end) {\n            return 1;\n        }\n        return (current - start) / (end - start);\n    }\n\n    public static cosineInterpolate(y1: number, y2: number, mu: number): number {\n        if (mu <= y1) { return 0; }\n        if (mu >= y2) { return 1; }\n        const mu2 = (mu - y1) / (y2 - y1);\n        return (1 - Math.cos(mu2 * Math.PI)) / 2;\n    }\n\n}\n","import { Vector3f } from './Vector3f';\n\nexport class Matrix3f {\n\n    public m11: number;\n    public m12: number;\n    public m13: number;\n\n    public m21: number;\n    public m22: number;\n    public m23: number;\n\n    public m31: number;\n    public m32: number;\n    public m33: number;\n\n    static constructXRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = cos;\n        matrix.m23 = -sin;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = sin;\n        matrix.m33 = cos;\n\n        return matrix;\n    }\n\n    static constructYRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = Math.cos(angle);\n        matrix.m12 = 0.0;\n        matrix.m13 = Math.sin(angle);\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n\n        matrix.m31 = -Math.sin(angle);\n        matrix.m32 = 0.0;\n        matrix.m33 = Math.cos(angle);\n\n        return matrix;\n    }\n\n    static constructZRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = Math.cos(angle);\n        matrix.m12 = -Math.sin(angle);\n        matrix.m13 = 0.0;\n\n        matrix.m21 = Math.sin(angle);\n        matrix.m22 = Math.cos(angle);\n        matrix.m23 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n\n        return matrix;\n    }\n\n    static constructScaleMatrix(xScale: number, yScale: number, zScale: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = xScale;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = yScale;\n        matrix.m23 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = zScale;\n\n        return matrix;\n    }\n\n    public multiplyMatrix(matrix: Matrix3f): Matrix3f {\n        const result = new Matrix3f();\n\n        result.m11 = this.m11 * matrix.m11 + this.m12 * matrix.m21 + this.m13 * matrix.m31;\n        result.m21 = this.m21 * matrix.m11 + this.m22 * matrix.m21 + this.m23 * matrix.m31;\n        result.m31 = this.m31 * matrix.m11 + this.m32 * matrix.m21 + this.m33 * matrix.m31;\n\n        result.m12 = this.m11 * matrix.m12 + this.m12 * matrix.m22 + this.m13 * matrix.m32;\n        result.m22 = this.m21 * matrix.m12 + this.m22 * matrix.m22 + this.m23 * matrix.m32;\n        result.m32 = this.m31 * matrix.m12 + this.m32 * matrix.m22 + this.m33 * matrix.m32;\n\n        result.m13 = this.m11 * matrix.m13 + this.m12 * matrix.m23 + this.m13 * matrix.m33;\n        result.m23 = this.m21 * matrix.m13 + this.m22 * matrix.m23 + this.m23 * matrix.m33;\n        result.m33 = this.m31 * matrix.m13 + this.m32 * matrix.m23 + this.m33 * matrix.m33;\n\n        return result;\n\n    }\n\n    public multiply(vector: Vector3f): Vector3f {\n        return new Vector3f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z);\n    }\n}","/**\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_00_introduction.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_00_research.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_01_pipeline.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_02_transformations.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_03_projections.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_04_lighting.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_05_rasterization.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_06_texturing.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_07_shadows.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_08_transparencyReflection.pdf\n * https://cg.informatik.uni-freiburg.de/teaching.htm\n * @author Johannes Diemke\n * @since 2017-05-07\n */\n\nimport { Vector3f } from './Vector3f';\nimport { Vector4f } from './Vector4f';\n\nexport class Matrix4f {\n\n    public m11: number;\n    public m12: number;\n    public m13: number;\n    public m14: number;\n\n    public m21: number;\n    public m22: number;\n    public m23: number;\n    public m24: number;\n\n    public m31: number;\n    public m32: number;\n    public m33: number;\n    public m34: number;\n\n    public m41: number;\n    public m42: number;\n    public m43: number;\n    public m44: number;\n\n    static constructIdentityMatrix(): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n\n    public setIdentityMatrix(): void {\n\n\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public transpose(): Matrix4f {\n        const transpose: Matrix4f = new Matrix4f();\n\n        transpose.m11 = this.m11;\n        transpose.m12 = this.m21;\n        transpose.m13 = this.m31;\n        transpose.m14 = this.m41;\n\n        transpose.m21 = this.m12;\n        transpose.m22 = this.m22;\n        transpose.m23 = this.m32;\n        transpose.m24 = this.m42;\n\n        transpose.m31 = this.m13;\n        transpose.m32 = this.m23;\n        transpose.m33 = this.m33;\n        transpose.m34 = this.m43;\n\n        transpose.m41 = this.m14;\n        transpose.m42 = this.m24;\n        transpose.m43 = this.m34;\n        transpose.m44 = this.m44;\n\n        return transpose;\n    }\n\n    public computeNormalMatrix(): Matrix4f {\n        // http://www.lighthouse3d.com/tutorials/glsl-12-tutorial/the-normal-matrix/\n        // https://www.gamedev.net/forums/topic/443040-inverse-of-modelview-matrix/\n        // https://computergraphics.stackexchange.com/questions/1502/why-is-the-transposed-inverse-of-the-model-view-matrix-used-to-transform-the-nor\n        return this.inverse().transpose();\n    }\n\n    public inverse(): Matrix4f {\n        // Inverse hack\n        // - only works when the MV matrix only contains\n        // translation and rotation and scaling that is the same in all directions\n\n        const inverseTranslation: Matrix4f = Matrix4f.constructIdentityMatrix();\n        inverseTranslation.m14 = -this.m14;\n        inverseTranslation.m24 = -this.m24;\n        inverseTranslation.m34 = -this.m34;\n\n        const scale1 = 1.0 / Math.sqrt(this.m11 * this.m11 + this.m12 * this.m12 + this.m13 * this.m13);\n        const scale2 = 1.0 / Math.sqrt(this.m21 * this.m21 + this.m22 * this.m22 + this.m23 * this.m23);\n        const scale3 = 1.0 / Math.sqrt(this.m31 * this.m31 + this.m32 * this.m32 + this.m33 * this.m33);\n        const inverseRotation: Matrix4f = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11 * scale1;\n        inverseRotation.m21 = this.m12 * scale1;\n        inverseRotation.m31 = this.m13 * scale1;\n\n        inverseRotation.m12 = this.m21 * scale2;\n        inverseRotation.m22 = this.m22 * scale2;\n        inverseRotation.m32 = this.m23 * scale2;\n\n        inverseRotation.m13 = this.m31 * scale3;\n        inverseRotation.m23 = this.m32 * scale3;\n        inverseRotation.m33 = this.m33 * scale3;\n\n        return inverseRotation.multiplyMatrix(inverseTranslation);\n    }\n\n    public getInverseRotation(): Matrix4f {\n        const scale = 1.0;\n        const inverseRotation = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11 * scale;\n        inverseRotation.m21 = this.m12 * scale;\n        inverseRotation.m31 = this.m13 * scale;\n\n        inverseRotation.m12 = this.m21 * scale;\n        inverseRotation.m22 = this.m22 * scale;\n        inverseRotation.m32 = this.m23 * scale;\n\n        inverseRotation.m13 = this.m31 * scale;\n        inverseRotation.m23 = this.m32 * scale;\n        inverseRotation.m33 = this.m33 * scale;\n\n        return inverseRotation;\n    }\n\n    public getRotation(): Matrix4f {\n\n        const inverseRotation = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11;\n        inverseRotation.m21 = this.m21;\n        inverseRotation.m31 = this.m31;\n\n        inverseRotation.m12 = this.m12;\n        inverseRotation.m22 = this.m22;\n        inverseRotation.m32 = this.m32;\n\n        inverseRotation.m13 = this.m13;\n        inverseRotation.m23 = this.m23;\n        inverseRotation.m33 = this.m33;\n\n        return inverseRotation;\n    }\n\n    static constructShadowMatrix(): Matrix4f {\n        const planePoint: Vector3f = new Vector3f(0, -1.5, 0);\n        const planeNormal: Vector3f = new Vector3f(0, 1, 0);\n        const lightPosition: Vector3f = new Vector3f(0, 11, 0);\n\n        const d = -planePoint.dot(planeNormal);\n        const NdotL = planeNormal.x * lightPosition.x +\n            planeNormal.y * lightPosition.y +\n            planeNormal.z * lightPosition.z;\n\n        const shadowMatrix: Matrix4f = new Matrix4f();\n\n        shadowMatrix.m11 = NdotL + d - lightPosition.x * planeNormal.x;\n        shadowMatrix.m12 = - lightPosition.x * planeNormal.y;\n        shadowMatrix.m13 = - lightPosition.x * planeNormal.z;\n        shadowMatrix.m14 = - lightPosition.x * d;\n\n        shadowMatrix.m21 = - lightPosition.y * planeNormal.x;\n        shadowMatrix.m22 = NdotL + d - lightPosition.y * planeNormal.y;\n        shadowMatrix.m23 = - lightPosition.y * planeNormal.z;\n        shadowMatrix.m24 = - lightPosition.y * d;\n\n        shadowMatrix.m31 = - lightPosition.z * planeNormal.x;\n        shadowMatrix.m32 = - lightPosition.z * planeNormal.y;\n        shadowMatrix.m33 = NdotL + d - lightPosition.z * planeNormal.z;\n        shadowMatrix.m34 = - lightPosition.z * d;\n\n        shadowMatrix.m41 = - planeNormal.x;\n        shadowMatrix.m42 = - planeNormal.y;\n        shadowMatrix.m43 = - planeNormal.z;\n        shadowMatrix.m44 = NdotL;\n\n        return shadowMatrix;\n\n    }\n\n    static constructTranslationMatrix(tx: number, ty: number, tz: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = tx;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = ty;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = tz;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public setTranslationMatrix(tx: number, ty: number, tz: number): void {\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = tx;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = ty;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = tz;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    static constructXRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = Math.cos(alpha);\n        matrix.m23 = -Math.sin(alpha);\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = Math.sin(alpha);\n        matrix.m33 = Math.cos(alpha);\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public setXRotationMatrix(alpha: number): void {\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = Math.cos(alpha);\n        this.m23 = -Math.sin(alpha);\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = Math.sin(alpha);\n        this.m33 = Math.cos(alpha);\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setZRotationMatrix(alpha: number): void {\n        this.m11 = Math.cos(alpha);\n        this.m12 = -Math.sin(alpha);\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = Math.sin(alpha);\n        this.m22 = Math.cos(alpha);\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setScaleMatrix(sx: number, sy: number, sz: number): void {\n        this.m11 = sx;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = sy;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = sz;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setYRotationMatrix(alpha: number): void {\n        this.m11 = Math.cos(alpha);\n        this.m12 = 0.0;\n        this.m13 = Math.sin(alpha);\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = -Math.sin(alpha);\n        this.m32 = 0.0;\n        this.m33 = Math.cos(alpha);\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n\n    public setRotationMatrix(x: number,y: number,z: number, alpha: number): void {\n        const c = Math.cos(Math.PI * 2 *alpha / 360 );\n        const s = Math.sin(Math.PI * 2 *alpha / 360 );\n        const vector = new Vector3f(x,y,z);\n        vector.normalize2();\n\n        this.m11 = (1.0 - c) * vector.x * vector.x + c;\n        this.m12 = (1.0 - c) * vector.x * vector.y - s * vector.z;\n        this.m13 = (1.0 - c) * vector.x * vector.z + s * vector.y;\n        this.m14 = 0.0;\n\n        this.m21 = (1.0 - c) * vector.x * vector.y + s * vector.z;\n        this.m22 = (1.0 - c) * vector.y * vector.y + c;\n        this.m23 = (1.0 - c) * vector.y * vector.z - s * vector.x;\n        this.m24 = 0.0;\n\n        this.m31 = (1.0 - c) * vector.x * vector.z - s * vector.y;\n        this.m32 = (1.0 - c) * vector.y * vector.z + s * vector.x;\n        this.m33 = (1.0 - c) * vector.z * vector.z + c;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    static constructYRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = Math.cos(alpha);\n        matrix.m12 = 0.0;\n        matrix.m13 = Math.sin(alpha);\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = -Math.sin(alpha);\n        matrix.m32 = 0.0;\n        matrix.m33 = Math.cos(alpha);\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    static constructZRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = Math.cos(alpha);\n        matrix.m12 = -Math.sin(alpha);\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = Math.sin(alpha);\n        matrix.m22 = Math.cos(alpha);\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    static constructScaleMatrix(sx: number, sy: number = sx, sz: number = sy): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = sx;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = sy;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = sz;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public multiplyMatrix(matrix: Matrix4f): Matrix4f {\n        const result = new Matrix4f();\n\n        result.m11 = this.m11 * matrix.m11 + this.m12 * matrix.m21 + this.m13 * matrix.m31 + this.m14 * matrix.m41;\n        result.m21 = this.m21 * matrix.m11 + this.m22 * matrix.m21 + this.m23 * matrix.m31 + this.m24 * matrix.m41;\n        result.m31 = this.m31 * matrix.m11 + this.m32 * matrix.m21 + this.m33 * matrix.m31 + this.m34 * matrix.m41;\n        result.m41 = this.m41 * matrix.m11 + this.m42 * matrix.m21 + this.m43 * matrix.m31 + this.m44 * matrix.m41;\n\n        result.m12 = this.m11 * matrix.m12 + this.m12 * matrix.m22 + this.m13 * matrix.m32 + this.m14 * matrix.m42;\n        result.m22 = this.m21 * matrix.m12 + this.m22 * matrix.m22 + this.m23 * matrix.m32 + this.m24 * matrix.m42;\n        result.m32 = this.m31 * matrix.m12 + this.m32 * matrix.m22 + this.m33 * matrix.m32 + this.m34 * matrix.m42;\n        result.m42 = this.m41 * matrix.m12 + this.m42 * matrix.m22 + this.m43 * matrix.m32 + this.m44 * matrix.m42;\n\n        result.m13 = this.m11 * matrix.m13 + this.m12 * matrix.m23 + this.m13 * matrix.m33 + this.m14 * matrix.m43;\n        result.m23 = this.m21 * matrix.m13 + this.m22 * matrix.m23 + this.m23 * matrix.m33 + this.m24 * matrix.m43;\n        result.m33 = this.m31 * matrix.m13 + this.m32 * matrix.m23 + this.m33 * matrix.m33 + this.m34 * matrix.m43;\n        result.m43 = this.m41 * matrix.m13 + this.m42 * matrix.m23 + this.m43 * matrix.m33 + this.m44 * matrix.m43;\n\n        result.m14 = this.m11 * matrix.m14 + this.m12 * matrix.m24 + this.m13 * matrix.m34 + this.m14 * matrix.m44;\n        result.m24 = this.m21 * matrix.m14 + this.m22 * matrix.m24 + this.m23 * matrix.m34 + this.m24 * matrix.m44;\n        result.m34 = this.m31 * matrix.m14 + this.m32 * matrix.m24 + this.m33 * matrix.m34 + this.m34 * matrix.m44;\n        result.m44 = this.m41 * matrix.m14 + this.m42 * matrix.m24 + this.m43 * matrix.m34 + this.m44 * matrix.m44;\n\n        return result;\n    }\n\n    public multiply2(matrix: Matrix4f, matrix2: Matrix4f): void {\n        this.m11 = matrix.m11 * matrix2.m11 + matrix.m12 * matrix2.m21 + matrix.m13 * matrix2.m31 + matrix.m14 * matrix2.m41;\n        this.m21 = matrix.m21 * matrix2.m11 + matrix.m22 * matrix2.m21 + matrix.m23 * matrix2.m31 + matrix.m24 * matrix2.m41;\n        this.m31 = matrix.m31 * matrix2.m11 + matrix.m32 * matrix2.m21 + matrix.m33 * matrix2.m31 + matrix.m34 * matrix2.m41;\n        this.m41 = matrix.m41 * matrix2.m11 + matrix.m42 * matrix2.m21 + matrix.m43 * matrix2.m31 + matrix.m44 * matrix2.m41;\n\n        this.m12 = matrix.m11 * matrix2.m12 + matrix.m12 * matrix2.m22 + matrix.m13 * matrix2.m32 + matrix.m14 * matrix2.m42;\n        this.m22 = matrix.m21 * matrix2.m12 + matrix.m22 * matrix2.m22 + matrix.m23 * matrix2.m32 + matrix.m24 * matrix2.m42;\n        this.m32 = matrix.m31 * matrix2.m12 + matrix.m32 * matrix2.m22 + matrix.m33 * matrix2.m32 + matrix.m34 * matrix2.m42;\n        this.m42 = matrix.m41 * matrix2.m12 + matrix.m42 * matrix2.m22 + matrix.m43 * matrix2.m32 + matrix.m44 * matrix2.m42;\n\n        this.m13 = matrix.m11 * matrix2.m13 + matrix.m12 * matrix2.m23 + matrix.m13 * matrix2.m33 + matrix.m14 * matrix2.m43;\n        this.m23 = matrix.m21 * matrix2.m13 + matrix.m22 * matrix2.m23 + matrix.m23 * matrix2.m33 + matrix.m24 * matrix2.m43;\n        this.m33 = matrix.m31 * matrix2.m13 + matrix.m32 * matrix2.m23 + matrix.m33 * matrix2.m33 + matrix.m34 * matrix2.m43;\n        this.m43 = matrix.m41 * matrix2.m13 + matrix.m42 * matrix2.m23 + matrix.m43 * matrix2.m33 + matrix.m44 * matrix2.m43;\n\n        this.m14 = matrix.m11 * matrix2.m14 + matrix.m12 * matrix2.m24 + matrix.m13 * matrix2.m34 + matrix.m14 * matrix2.m44;\n        this.m24 = matrix.m21 * matrix2.m14 + matrix.m22 * matrix2.m24 + matrix.m23 * matrix2.m34 + matrix.m24 * matrix2.m44;\n        this.m34 = matrix.m31 * matrix2.m14 + matrix.m32 * matrix2.m24 + matrix.m33 * matrix2.m34 + matrix.m34 * matrix2.m44;\n        this.m44 = matrix.m41 * matrix2.m14 + matrix.m42 * matrix2.m24 + matrix.m43 * matrix2.m34 + matrix.m44 * matrix2.m44;\n    }\n\n    public multiply(vector: Vector3f): Vector3f {\n        return new Vector3f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34);\n    }\n\n    public multiplyHom(vector: Vector4f): Vector4f {\n        return new Vector4f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w,\n            this.m41 * vector.x + this.m42 * vector.y + this.m43 * vector.z + this.m44 * vector.w);\n    }\n\n    public multiplyHomArr(vector: Vector4f, result: Vector4f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w;\n    }\n\n    public multiplyHomArr2(vector: Vector4f, result: Vector4f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w;\n        result.w = this.m41 * vector.x + this.m42 * vector.y + this.m43 * vector.z + this.m44 * vector.w;\n        result.x /= result.w;\n        result.y /= result.w;\n        result.z /= result.w;\n    }\n\n    public multiplyArr(vector: Vector3f, result: Vector3f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34;\n    }\n\n}\n","\nexport class Vector2f {\n\n    constructor(public x: number, public y: number) {\n\n    }\n\n    public perp(): Vector2f {\n        return new Vector2f(-this.y, this.x);\n    }\n\n    public sub(vec: Vector2f): Vector2f {\n        return new Vector2f(this.x - vec.x, this.y - vec.y);\n    }\n\n    public mul(scal: number): Vector2f {\n        return new Vector2f(this.x * scal, this.y * scal);\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    public normalize(): Vector2f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public dot(vec: Vector2f): number {\n        return this.x * vec.x + this.y * vec.y;\n    }\n\n}\n","export class Vector3f {\n\n    public x: number;\n    public y: number;\n    public z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    public mult(scale: number): Vector3f {\n        return new Vector3f(this.x * scale, this.y * scale, this.z * scale);\n    }\n\n    public sub(vec: Vector3f): Vector3f {\n        return new Vector3f(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n    }\n\n    public sub2(vec1: Vector3f, vec2: Vector3f): void {\n        this.x = vec1.x - vec2.x;\n        this.y = vec1.y - vec2.y;\n        this.z = vec1.z - vec2.z;\n    }\n\n    public mul(scal: number): Vector3f {\n        return new Vector3f(this.x * scal, this.y * scal, this.z * scal);\n    }\n\n    public add(vec: Vector3f): Vector3f {\n        return new Vector3f(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n    }\n\n    public add2(vec: Vector3f, vec2: Vector3f): void {\n        this.x = vec.x + vec2.x;\n        this.y = vec.y + vec2.y;\n        this.z = vec.z + vec2.z;\n    }\n\n    public cross(vec: Vector3f): Vector3f {\n        return new Vector3f(this.y * vec.z - this.z * vec.y,\n            this.z * vec.x - this.x * vec.z,\n            this.x * vec.y - this.y * vec.x);\n    }\n\n    public cross2(vec1: Vector3f, vec2: Vector3f): void {\n        this.x = vec1.y * vec2.z - vec1.z * vec2.y;\n        this.y = vec1.z * vec2.x - vec1.x * vec2.z;\n        this.z = vec1.x * vec2.y - vec1.y * vec2.x;\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    public normalize(): Vector3f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public normalize2(): void {\n        const reci: number = 1.0 / this.length();\n        this.x *= reci;\n        this.y *= reci;\n        this.z *= reci;\n    }\n\n    public dot(vec: Vector3f): number {\n        return this.x * vec.x + this.y * vec.y + this.z * vec.z;\n    }\n\n}\n","export class Vector4f {\n\n    public x: number;\n    public y: number;\n    public z: number;\n    public w: number;\n\n    constructor(x: number, y: number, z: number, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    public sub(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x - vec.x, this.y - vec.y, this.z - vec.z, this.w - vec.w);\n    }\n\n    public add(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x + vec.x, this.y + vec.y, this.z + vec.z, this.w + vec.w);\n    }\n\n    public cross(vec: Vector4f): Vector4f {\n        return new Vector4f(this.y * vec.z - this.z * vec.y,\n            this.z * vec.x - this.x * vec.z,\n            this.x * vec.y - this.y * vec.x, 0.0);\n    }\n\n    public normalize(): Vector4f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n\n    public sub2(vec1: Vector4f, vec2: Vector4f): void {\n        this.x = vec1.x - vec2.x;\n        this.y = vec1.y - vec2.y;\n        this.z = vec1.z - vec2.z;\n    }\n\n    public add2(vec: Vector4f, vec2: Vector4f): void {\n        this.x = vec.x + vec2.x;\n        this.y = vec.y + vec2.y;\n        this.z = vec.z + vec2.z;\n    }\n\n\n    public mul(scal: number): Vector4f {\n        return new Vector4f(this.x * scal, this.y * scal, this.z * scal, this.w);\n    }\n\n    public componentWiseMul(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x * vec.x, this.y * vec.y, this.z * vec.z, this.w * vec.w);\n    }\n\n    public dot(vec: Vector4f): number {\n        return this.x * vec.x + this.y * vec.y + this.z * vec.z;\n    }\n\n    public cross2(vec1: Vector4f, vec2: Vector4f): void {\n        this.x = vec1.y * vec2.z - vec1.z * vec2.y;\n        this.y = vec1.z * vec2.x - vec1.x * vec2.z;\n        this.z = vec1.x * vec2.y - vec1.y * vec2.x;\n    }\n\n    public normalize2(): void {\n        const reci: number = 1.0 / this.length();\n        this.x *= reci;\n        this.y *= reci;\n        this.z *= reci;\n    }\n\n\n}\n","import { Framebuffer } from \"../Framebuffer\";\nimport { Vertex } from \"../Vertex\";\nimport { AbstractTriangleRasterizer } from \"./AbstractTriangleRasterizer\";\n\nexport abstract class AbstractScannlineTriangleRasterizer extends AbstractTriangleRasterizer {\n\n    private temp: Vertex = null;\n    \n    /**\n     * Triangle rasterization using edge-walking strategy for scan-conversion.\n     * Internally DDA is used for edge-walking.\n     */\n    public drawTriangleDDA(framebuffer: Framebuffer, p1: Vertex, p2: Vertex, p3: Vertex): void {\n\n        if (p1.projection.y > p3.projection.y) {\n            this.temp = p1;\n            p1 = p3;\n            p3 = this.temp;\n        }\n\n        if (p1.projection.y > p2.projection.y) {\n            this.temp = p1;\n            p1 = p2;\n            p2 = this.temp;\n        }\n\n        if (p2.projection.y > p3.projection.y) {\n            this.temp = p2;\n            p2 = p3;\n            p3 = this.temp;\n        }\n\n        if (p1.projection.y === p3.projection.y) {\n            return;\n        } else {\n            const x: number = (p3.projection.x - p1.projection.x) * (p2.projection.y - p1.projection.y) /\n                (p3.projection.y - p1.projection.y) + p1.projection.x;\n            if (x > p2.projection.x) {\n                this.fillLongRightTriangle(framebuffer, p1, p2, p3);\n            } else {\n                this.fillLongLeftTriangle(framebuffer,p1,p2,p3);\n            }\n        }\n    }\n\n    protected abstract fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void;\n    protected abstract fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void;\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\n\nexport abstract class AbstractTriangleRasterizer {\n\n    public abstract drawTriangleDDA(framebuffer: Framebuffer, p1: Vertex, p2: Vertex, p3: Vertex): void;\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class FlatShadingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n    private slope1: number;\n    private slope2: number;\n    private zslope1: number;\n    private zslope2: number;\n    private curz1: number;\n    private curz2: number;\n    private xPosition: number;\n    private xPosition2: number;\n    private yPosition: number;\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        const color: number = v1.color.toPackedFormat();\n\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n\n        this.slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        this.slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n\n        this.zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        this.zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n\n        this.curz1 = 1.0 / v1.projection.z;\n        this.curz2 = 1.0 / v1.projection.z;\n\n        this.xPosition = v1.projection.x;\n        this.xPosition2 = v1.projection.x;\n        this.yPosition = v1.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceLeft, color);\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n        this.slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        this.zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n\n        this.xPosition = v2.projection.x;\n        this.yPosition = v2.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceLeft, color);\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        const color: number = v1.color.toPackedFormat();\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        this.slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        this.slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        this.zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        this.zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        this.curz1 = 1.0 / v1.projection.z;\n        this.curz2 = 1.0 / v1.projection.z;\n\n        this.xPosition = v1.projection.x;\n        this.xPosition2 = v1.projection.x;\n        this.yPosition = v1.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceRight, color);\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        this.slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        this.zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        this.curz2 = 1.0 / v2.projection.z;\n        this.xPosition2 = v2.projection.x;\n        this.yPosition = v2.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceRight, color);\n    }\n\n    drawSpan(framebuffer: Framebuffer, distance: number, color: number) {\n        for (let i = 0; i < distance; i++) {\n            const length = (this.xPosition2) - (this.xPosition);\n            const spanzStep = Math.round(this.curz2 - this.curz1) / length;\n            let wStart = this.curz1;\n            for (let j = 0; j < length; j++) {\n                const framebufferIndex = Math.round(this.yPosition) * framebuffer.width + Math.round(this.xPosition + j);\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    framebuffer.framebuffer[framebufferIndex] = color;\n                }\n                wStart += spanzStep;\n            }\n            this.xPosition += this.slope1;\n            this.xPosition2 += this.slope2;\n            this.yPosition++;\n            this.curz1 += this.zslope1;\n            this.curz2 += this.zslope2;\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { AbstractRenderingPipeline } from '../rendering-pipelines/AbstractRenderingPipeline';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class TexturedAlphaBlendingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n\n\n    // requires\n    // bob und wbuffer\n    constructor(private framebuffer: Framebuffer, private pipeline: AbstractRenderingPipeline) {\n        super();\n    }\n\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n\n\n\n\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n\n        let slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        const slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n\n        let tslope1u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        const tslope2u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        let tslope1v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        const tslope2v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n\n        let zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        const zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                const currentColor = this.framebuffer.framebuffer[framebufferIndex];\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n\n                    // TODO: move out of loops!\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (currentColor >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (currentColor >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (currentColor >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n\n        if (yDistanceLeft === 0) {\n            return;\n        }\n\n        slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n        tslope1u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceLeft;\n        tslope1v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceLeft;\n\n        curz1 = 1.0 / v2.projection.z;\n        curu1 = v2.textureCoordinate.u / v2.projection.z;\n        curv1 = v2.textureCoordinate.v / v2.projection.z;\n        xPosition = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer,  v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        let slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        const slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        const tslope1u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope2u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        const tslope1v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v  / v1.projection.z) / yDistanceLeft;\n        let tslope2v = (v2.textureCoordinate.v  / v2.projection.z - v1.textureCoordinate.v  / v1.projection.z) / yDistanceRight;\n\n\n        let zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        const zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        tslope2u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceRight;\n        tslope2v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceRight;\n\n        curz2 = 1.0 / v2.projection.z;\n\n        curu2 = v2.textureCoordinate.u / v2.projection.z;\n        curv2 = v2.textureCoordinate.v / v2.projection.z;\n\n        xPosition2 = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class TexturedTriangleRasterizer extends AbstractScannlineTriangleRasterizer{\n\n    // requires\n    // bob und wbuffer\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        // left slope\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n        let slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        let tslope1u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope1v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        let zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        let curz1 = 1.0 / v1.projection.z;\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let xPosition = v1.projection.x;\n\n        // right slope\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n        const slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n        const tslope2u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n        const tslope2v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n        const zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        let curz2 = 1.0 / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n        let xPosition2 = v1.projection.x;\n\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   //color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n\n        if (yDistanceLeft === 0) {\n            return;\n        }\n\n        slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n        tslope1u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceLeft;\n        tslope1v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceLeft;\n\n        curz1 = 1.0 / v2.projection.z;\n        curu1 = v2.textureCoordinate.u / v2.projection.z;\n        curv1 = v2.textureCoordinate.v / v2.projection.z;\n        xPosition = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   //color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        let slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        const slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        const tslope1u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope2u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        const tslope1v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        let tslope2v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n\n\n        let zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        const zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   //color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        tslope2u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceRight;\n        tslope2v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceRight;\n\n        curz2 = 1.0 / v2.projection.z;\n\n        curu2 = v2.textureCoordinate.u / v2.projection.z;\n        curv2 = v2.textureCoordinate.v / v2.projection.z;\n\n        xPosition2 = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                  // color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { Vector3f } from '../../math';\n\n/**\n * digital differential analyser line drawing algorithm\n * using fixed point math.\n * renders approx 1400 lines per millisecond on my machine\n */\nexport class LineRasterizerDda {\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public drawLineDDA(start: Vector3f, end: Vector3f, color: number): void {\n        const xDistance: number = end.x - start.x;\n        const yDistance: number = end.y - start.y;\n\n        let dx: number;\n        let dy: number;\n        let length: number;\n\n        if (Math.abs(xDistance) > Math.abs(yDistance)) {\n            dx = Math.sign(xDistance);\n            dy = yDistance / Math.abs(xDistance);\n            length = Math.abs(xDistance);\n        } else {\n            dx = xDistance / Math.abs(yDistance);\n            dy = Math.sign(yDistance);\n            length = Math.abs(yDistance);\n        }\n\n        let xPosition: number = start.x;\n        let yPosition: number = start.y;\n\n        // w=1/z interpolation for z-buffer\n        let wStart = 1 / (start.z);\n        const wDelta = (1 / end.z - 1 / start.z) / length;\n\n        for (let i = 0; i <= length; i++) {\n            if (wStart < this.framebuffer.wBuffer[Math.round(xPosition) + Math.round(yPosition) * this.framebuffer.width]) {\n                this.framebuffer.wBuffer[Math.round(xPosition) + Math.round(yPosition) * this.framebuffer.width] = wStart;\n                this.framebuffer.drawPixel(Math.round(xPosition), Math.round(yPosition), color);\n            }\n            xPosition += dx;\n            yPosition += dy;\n            wStart += wDelta;\n        }\n    }\n\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { Vector3f } from '../../math';\n\nexport class LineRasterizerNoZ {\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public drawLineDDANoZ(start: Vector3f, end: Vector3f, color: number): void {\n        const xDistance: number = end.x - start.x;\n        const yDistance: number = end.y - start.y;\n\n        let dx: number;\n        let dy: number;\n        let length: number;\n\n        if (Math.abs(xDistance) > Math.abs(yDistance)) {\n            dx = Math.sign(xDistance);\n            dy = yDistance / Math.abs(xDistance);\n            length = Math.abs(xDistance);\n        } else {\n            dx = xDistance / Math.abs(yDistance);\n            dy = Math.sign(yDistance);\n            length = Math.abs(yDistance);\n        }\n\n        let xPosition: number = start.x;\n        let yPosition: number = start.y;\n\n        for (let i = 0; i <= length; i++) {\n\n            this.framebuffer.drawPixel(Math.round(xPosition), Math.round(yPosition), color);\n\n            xPosition += dx;\n            yPosition += dy;\n\n        }\n    }\n\n}\n","import { CullFace } from '../CullFace';\nimport { Framebuffer } from '../Framebuffer';\n\nexport class AbstractRenderingPipeline {\n\n    public NEAR_PLANE_Z: number = -1.7;\n    public alpha: number;\n    private cullMode: CullFace = CullFace.BACK;\n\n    constructor(protected framebuffer: Framebuffer) { }\n\n    public setCullFace(face: CullFace): void {\n        this.cullMode = face;\n    }\n\n    public setAlpha(alpha: number): void {\n        this.alpha = Math.max(Math.min(alpha, 1.0), 0.0);\n    }\n\n    public isInFrontOfNearPlane(p: { x: number; y: number; z: number }): boolean {\n        return p.z < this.NEAR_PLANE_Z;\n    }\n\n    /**\n     * based on signed polygon area computation:\n     * http://www.faqs.org/faqs/graphics/algorithms-faq/\n     * https://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-points-are-in-clockwise-order\n     * http://csharphelper.com/blog/2014/07/calculate-the-area-of-a-polygon-in-c/\n     * http://mathworld.wolfram.com/PolygonArea.html\n     *\n     * @private\n     * @param {{ x: number, y: number, z: number }} v1\n     * @param {{ x: number, y: number, z: number }} v2\n     * @param {{ x: number, y: number, z: number }} v3\n     * @returns {boolean}\n     * @memberof Framebuffer\n     *\n     */\n    public isTriangleCCW(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number }): boolean {\n        if (this.cullMode == CullFace.DISABLED) {\n            return true;\n        }\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v1.y - v1.x * v3.y;\n        if (this.cullMode == CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n    public isTriangleCCW2(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number },\n        v4: { x: number, y: number, z: number }): boolean {\n            if (this.cullMode == CullFace.DISABLED) {\n                return true;\n            }\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v4.y - v4.x * v3.y +\n            v4.x * v1.y - v1.x * v4.y;\n        if (this.cullMode === CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Matrix4f } from '../math/Matrix4f';\nimport { Vector4f } from '../math/Vector4f';\nimport { AbstractTriangleRasterizer } from '../rasterizer/AbstractTriangleRasterizer';\nimport { TexturedAlphaBlendingTriangleRasterizer } from '../rasterizer/TexturedAlphaBlendingTriangleRasterizer';\nimport { TexturedTriangleRasterizer } from '../rasterizer/TexturedTriangleRasterizer';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractRenderingPipeline } from './AbstractRenderingPipeline';\nimport { TexturedMesh } from './TexturedMesh';\n\nexport class TexturingRenderingPipeline extends AbstractRenderingPipeline {\n\n    private sphereMapping: boolean = false;\n    public triangleRasterizer: AbstractTriangleRasterizer = null;\n\n    private vertexArray: Array<Vertex> = new Array<Vertex>(\n        new Vertex(), new Vertex(), new Vertex()\n    );\n    setSphereMapping(sphereMapping: boolean) {\n        this.sphereMapping = sphereMapping;\n    }\n\n    private modelViewMatrix: Matrix4f;\n\n    private projectedVertices: Array<Vector4f> = new Array<Vector4f>(\n        new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1)\n    );\n\n    constructor(framebuffer: Framebuffer) {\n        super(framebuffer);\n        this.setAlpha(1.0);\n        this.triangleRasterizer = new TexturedTriangleRasterizer(framebuffer);\n    }\n\n    public setFramebuffer(framebuffer: Framebuffer) {\n        this.framebuffer = framebuffer;\n    }\n\n    public enableAlphaBlending(): void {\n        this.triangleRasterizer = new TexturedAlphaBlendingTriangleRasterizer(this.framebuffer, this);\n    }\n\n    public disableAlphaBlending(): void {\n        this.triangleRasterizer = new TexturedTriangleRasterizer(this.framebuffer);\n    }\n\n    public setModelViewMatrix(matrix: Matrix4f): void {\n        this.modelViewMatrix = matrix;\n    }\n\n    public drawMeshArray(framebuffer: Framebuffer, meshes: Array<TexturedMesh>): void {\n        for (let j: number = 0; j < meshes.length; j++) {\n            const model: TexturedMesh = meshes[j];\n            this.draw(framebuffer, model);\n        }\n    }\n\n    public draw(framebuffer: Framebuffer, mesh: TexturedMesh): void {\n        if (mesh.normals) {\n            const normalMatrix: Matrix4f = this.modelViewMatrix.computeNormalMatrix();\n\n            for (let i: number = 0; i < mesh.normals.length; i++) {\n                normalMatrix.multiplyHomArr(mesh.normals[i], mesh.normals2[i]);\n            }\n        }\n\n        for (let i: number = 0; i < mesh.points.length; i++) {\n            this.modelViewMatrix.multiplyHomArr(mesh.points[i], mesh.points2[i]);\n        }\n\n        for (let i: number = 0; i < mesh.faces.length; i++) {\n            const v1: Vector4f = mesh.points2[mesh.faces[i].vertices[0]];\n            const v2: Vector4f = mesh.points2[mesh.faces[i].vertices[1]];\n            const v3: Vector4f = mesh.points2[mesh.faces[i].vertices[2]];\n\n            if (this.isInFrontOfNearPlane(v1) &&\n                this.isInFrontOfNearPlane(v2) &&\n                this.isInFrontOfNearPlane(v3)) {\n\n                this.project2(v1, this.projectedVertices[0]);\n                this.project2(v2, this.projectedVertices[1]);\n                this.project2(v3, this.projectedVertices[2]);\n\n                if (this.isTriangleCCW(\n                    this.projectedVertices[0],\n                    this.projectedVertices[1],\n                    this.projectedVertices[2])) {\n\n                    this.vertexArray[0].projection = this.projectedVertices[0]; // p1 is Vector3f\n                    this.vertexArray[1].projection = this.projectedVertices[1];\n                    this.vertexArray[2].projection = this.projectedVertices[2];\n\n                    if (this.sphereMapping) {\n                        const n1: Vector4f = mesh.normals2[mesh.faces[i].normals[0]];\n                        const n2: Vector4f = mesh.normals2[mesh.faces[i].normals[1]];\n                        const n3: Vector4f = mesh.normals2[mesh.faces[i].normals[2]];\n                        framebuffer.fakeSphere(n1, this.vertexArray[0]);\n                        framebuffer.fakeSphere(n2, this.vertexArray[1]);\n                        framebuffer.fakeSphere(n3, this.vertexArray[2]);\n                    } else {\n                        this.vertexArray[0].textureCoordinate = mesh.uv[mesh.faces[i].uv[0]];\n                        this.vertexArray[1].textureCoordinate = mesh.uv[mesh.faces[i].uv[1]];\n                        this.vertexArray[2].textureCoordinate = mesh.uv[mesh.faces[i].uv[2]];\n                    }\n\n                    this.clipConvexPolygon(framebuffer, this.vertexArray);\n                }\n            } else if (!this.isInFrontOfNearPlane(v1) &&\n                !this.isInFrontOfNearPlane(v2) &&\n                !this.isInFrontOfNearPlane(v3)) {\n                continue;\n            } else {\n                this.vertexArray[0].position = v1; // v1 is Vector4f\n                this.vertexArray[0].textureCoordinate = mesh.uv[mesh.faces[i].uv[0]];\n\n                this.vertexArray[1].position = v2;\n                this.vertexArray[1].textureCoordinate = mesh.uv[mesh.faces[i].uv[1]];\n\n                this.vertexArray[2].position = v3;\n                this.vertexArray[2].textureCoordinate = mesh.uv[mesh.faces[i].uv[2]];\n\n                this.zClipTriangle(framebuffer, this.vertexArray);\n            }\n        }\n    }\n\n    public project2(t1: { x: number, y: number, z: number }, result: Vector4f): void {\n        result.x = Math.round((this.framebuffer.width / 2) + (292 * t1.x / (-t1.z)));\n        result.y = Math.round((this.framebuffer.height / 2) - (t1.y * 292 / (-t1.z)));\n        result.z = t1.z;\n    }\n\n    public computeNearPlaneIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const ratio: number = (this.NEAR_PLANE_Z - p1.position.z) / (p2.position.z - p1.position.z);\n        const vertex: Vertex = new Vertex();\n\n        vertex.position = new Vector4f(\n            ratio * (p2.position.x - p1.position.x) + p1.position.x,\n            ratio * (p2.position.y - p1.position.y) + p1.position.y,\n            this.NEAR_PLANE_Z\n        );\n\n        vertex.textureCoordinate = new TextureCoordinate(\n            ratio * (p2.textureCoordinate.u - p1.textureCoordinate.u) + p1.textureCoordinate.u,\n            ratio * (p2.textureCoordinate.v - p1.textureCoordinate.v) + p1.textureCoordinate.v\n        );\n\n        return vertex;\n    }\n\n    public zClipTriangle(framebuffer: Framebuffer, subject: Array<Vertex>): void {\n        const input: Array<Vertex> = subject;\n        const output: Array<Vertex> = new Array<Vertex>();\n        let S: Vertex = input[input.length - 1];\n\n        for (let i: number = 0; i < input.length; i++) {\n            const point: Vertex = input[i];\n            if (this.isInFrontOfNearPlane(point.position)) {\n                if (!this.isInFrontOfNearPlane(S.position)) {\n                    output.push(this.computeNearPlaneIntersection(S, point));\n                }\n                output.push(point);\n            } else if (this.isInFrontOfNearPlane(S.position)) {\n                output.push(this.computeNearPlaneIntersection(S, point));\n            }\n            S = point;\n        }\n\n        if (output.length < 3) {\n            return;\n        }\n\n        for (let j: number = 0; j < output.length; j++) {\n            this.project2(output[j].position, output[j].projection);\n        }\n\n        if (output.length === 3 &&\n            !this.isTriangleCCW(output[0].projection, output[1].projection, output[2].projection)) {\n            return;\n        }\n\n        if (output.length === 4 &&\n            !this.isTriangleCCW2(\n                output[0].projection,\n                output[1].projection,\n                output[2].projection,\n                output[3].projection\n            )) {\n            return;\n        }\n\n        this.clipConvexPolygon(framebuffer, output);\n    }\n\n\n    public clipConvexPolygon(framebuffer: Framebuffer, subject: Array<Vertex>): void {\n\n        let output = subject;\n\n        for (let j = 0; j < framebuffer.clipRegion.length; j++) {\n            const edge = framebuffer.clipRegion[j];\n            const input = output;\n            output = new Array<Vertex>();\n            let S = input[input.length - 1];\n\n            for (let i = 0; i < input.length; i++) {\n                const point = input[i];\n                if (edge.isInside2(point)) {\n                    if (!edge.isInside2(S)) {\n                        output.push(edge.computeIntersection2(S, point));\n                    }\n                    output.push(point);\n                } else if (edge.isInside2(S)) {\n                    output.push(edge.computeIntersection2(S, point));\n                }\n                S = point;\n            }\n        }\n\n        if (output.length < 3) {\n            return;\n        }\n\n        // triangulate new point set\n        for (let i = 0; i < output.length - 2; i++) {\n            this.triangleRasterizer.drawTriangleDDA(framebuffer, output[0], output[1 + i], output[2 + i]);\n        }\n    }\n\n}\n","import { Framebuffer } from './../Framebuffer';\n\nexport abstract class AbstractScene {\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public init(framebuffer: Framebuffer): Promise<any> {\n        return Promise.all([]);\n    }\n\n    public onInit(): void {\n\n    }\n\n    public abstract render(framebuffer: Framebuffer, time: number): void;\n\n}\n","import { Vertex } from '../Vertex';\n\n// TODO:\n// - use polymorphism in order to have different intersection methods\n// - one for plain clipping / one for tex coords / one for multitexturing / gouraud shading etc\nexport abstract class AbstractClipEdge {\n\n    public abstract isInside(p: Vertex): boolean;\n    public abstract isInside2(p: Vertex): boolean;\n    public abstract computeIntersection(p1: Vertex, p2: Vertex): Vertex;\n    public abstract computeIntersection2(p1: Vertex, p2: Vertex): Vertex;\n    public abstract computeIntersection3(p1: Vertex, p2: Vertex): Vertex;\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\n\nexport class BottomClipEdge extends AbstractClipEdge {\n\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.y >= this.framebuffer.minWindow.y;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.y >= this.framebuffer.minWindow.y;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        // since this is for flat shading no interpolation is required\n        const factor: number = (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(\n            Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * factor),\n            this.framebuffer.minWindow.y,\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.minWindow.y,\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)));\n\n        const textCoord: TextureCoordinate = new TextureCoordinate();\n        const z: number = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n    public computeIntersection3(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.minWindow.y,\n                0);\n\n        const textCoord: TextureCoordinate = new TextureCoordinate();\n\n        textCoord.u = (p1.textureCoordinate.u  + (p2.textureCoordinate.u  - p1.textureCoordinate.u ) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y));\n        textCoord.v = (p1.textureCoordinate.v  + (p2.textureCoordinate.v  - p1.textureCoordinate.v ) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y));\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector3f } from '../math/Vector3f';\n\nexport class CohenSutherlandLineClipper {\n\n    public static REGION_CODE_CENTER = 0b0000;\n    public static REGION_CODE_LEFT = 0b0001;\n    public static REGION_CODE_RIGHT = 0b0010;\n    public static REGION_CODE_BOTTOM = 0b0100;\n    public static REGION_CODE_TOP = 0b1000;\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public cohenSutherlandLineClipper(start: Vector3f, end: Vector3f, col: number) {\n        let p1: Vector3f = new Vector3f(start.x, start.y, start.z);\n        let p2: Vector3f = new Vector3f(end.x, end.y, end.z);\n\n        let code1: number = this.computeRegionCode(p1);\n        let code2: number = this.computeRegionCode(p2);\n\n        let accept: boolean = false;\n        let done: boolean = false;\n\n        while (!done) {\n\n            if (this.isTrivialAccept(code1, code2)) {\n                accept = true;\n                done = true;\n            } else if (this.isTrivialReject(code1, code2)) {\n                done = true;\n            } else {\n\n                if (code1 === CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    const tempCode: number = code1;\n                    code1 = code2;\n                    code2 = tempCode;\n\n                    const tempPoint: Vector3f = p1;\n                    p1 = p2;\n                    p2 = tempPoint;\n                }\n\n                if ((code1 & CohenSutherlandLineClipper.REGION_CODE_TOP) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.x = (p1.x + (p2.x - p1.x) * (this.framebuffer.maxWindow.y - p1.y) / (p2.y - p1.y));\n                    p1.y = this.framebuffer.maxWindow.y;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_BOTTOM) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.x = (p1.x + (p2.x - p1.x) * (this.framebuffer.minWindow.y - p1.y) / (p2.y - p1.y));\n                    p1.y = this.framebuffer.minWindow.y;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_RIGHT) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.y = (p1.y + (p2.y - p1.y) * (this.framebuffer.maxWindow.x - p1.x) / (p2.x - p1.x));\n                    p1.x = this.framebuffer.maxWindow.x;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_LEFT) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.y = (p1.y + (p2.y - p1.y) * (this.framebuffer.minWindow.x - p1.x) / (p2.x - p1.x));\n                    p1.x = this.framebuffer.minWindow.x;\n                }\n\n                code1 = this.computeRegionCode(p1);\n            }\n        }\n\n        if (accept) {\n            this.framebuffer.drawLineDDA(p1, p2, col);\n        }\n    }\n\n    public isTrivialAccept(code1: number, code2: number): boolean {\n        return (code1 | code2) === CohenSutherlandLineClipper.REGION_CODE_CENTER;\n    }\n\n    public isTrivialReject(code1: number, code2: number): boolean {\n        return (code1 & code2) !== CohenSutherlandLineClipper.REGION_CODE_CENTER;\n    }\n\n    public computeRegionCode(point: Vector3f): number {\n        let regionCode: number = CohenSutherlandLineClipper.REGION_CODE_CENTER;\n\n        if (point.x < this.framebuffer.minWindow.x) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_LEFT;\n        } else if (point.x > this.framebuffer.maxWindow.x) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_RIGHT;\n        }\n\n        if (point.y < this.framebuffer.minWindow.y) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_BOTTOM;\n        } else if (point.y > this.framebuffer.maxWindow.y) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_TOP;\n        }\n\n        return regionCode;\n    }\n\n}\n","import { AbstractClipEdge } from './AbstractClipEdge';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math/Vector4f';\n\nexport class LeftClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.x >= 0;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.x >= 0;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(this.framebuffer.minWindow.x,\n            Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * factor),\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.minWindow.x,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n    public computeIntersection3(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.minWindow.x,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n               0);\n\n        const textCoord = new TextureCoordinate();\n\n        textCoord.u = (p1.textureCoordinate.u  + (p2.textureCoordinate.u - p1.textureCoordinate.u) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) ;\n        textCoord.v = (p1.textureCoordinate.v  + (p2.textureCoordinate.v  - p1.textureCoordinate.v) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) ;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\nimport { Vector4f } from '../math/Vector4f';\n\nexport class RightClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.x < this.framebuffer.width;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.x < this.framebuffer.width;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(this.framebuffer.maxWindow.x + 1,\n            Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * factor),\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.maxWindow.x + 1,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n    // no 3d clipping\n    public computeIntersection3(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.maxWindow.x + 1,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                0);\n\n        const textCoord = new TextureCoordinate();\n        textCoord.u = (p1.textureCoordinate.u + (p2.textureCoordinate.u - p1.textureCoordinate.u) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x));\n        textCoord.v = (p1.textureCoordinate.v + (p2.textureCoordinate.v - p1.textureCoordinate.v) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x));\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\n\nexport class TopClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.y < this.framebuffer.maxWindow.y + 1;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.y < this.framebuffer.maxWindow.y + 1;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y);\n        // this interpolation is not perspective correct but linear!!\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(\n            Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * factor),\n            this.framebuffer.maxWindow.y + 1,\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.maxWindow.y + 1,\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n    public computeIntersection3(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.maxWindow.y + 1,\n                0);\n\n        const textCoord = new TextureCoordinate();\n        textCoord.u = (p1.textureCoordinate.u  + (p2.textureCoordinate.u  - p1.textureCoordinate.u ) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) ;\n        textCoord.v = (p1.textureCoordinate.v  + (p2.textureCoordinate.v  - p1.textureCoordinate.v ) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y));\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n\n}\n","export class Texture {\n\n\n    public texture: Uint32Array;\n    public width: number;\n    public height: number;\n    public maxWidth: number;\n    public maxHeight: number;\n    private clamp: boolean = false;\n\n    setClamp(clamp: boolean) {\n        this.clamp = clamp;\n    }\n    constructor(texture?: Uint32Array, width?: number, height?: number) {\n        this.texture = texture;\n        this.width = width;\n        this.height = height;\n        this.maxHeight = (height-1) |0;\n        this.maxWidth = (width-1)|0;\n    }\n\n    public getPixel(texture: Texture, x: number, y: number): number {\n        return texture.texture[(x & 0xff) + (y & 0xff) * 256];\n    }\n\n    public getBilinearFilteredPixel(x: number, y: number): number {\n        const x0 = (((x | 0) % 256) + 256) % 256;\n        const x1 = ((((x + 1) | 0) % 256) + 256) % 256;\n        const y0 = (((y | 0) % 256) + 256) % 256;\n        const y1 = ((((y + 1) | 0) % 256) + 256) % 256;\n\n        const x0y0 = this.getPixel(this, x0, y0) & 0xff;\n        const x1y0 = this.getPixel(this, x1, y0) & 0xff;\n        const x0y1 = this.getPixel(this, x0, y1) & 0xff;\n        const x1y1 = this.getPixel(this, x1, y1) & 0xff;\n\n        const col1 = x0y0 * (1 - (x - Math.floor(x))) + (x1y0 * ((x - Math.floor(x))));\n        const col2 = x0y1 * (1 - (x - Math.floor(x))) + (x1y1 * ((x - Math.floor(x))));\n        const col = col1 * (1 - (y - Math.floor(y))) + (col2 * ((y - Math.floor(y))));\n\n        return col;\n    }\n\n    public getBilinearFilteredPixel2(x: number, y: number) {\n\n        let x0;\n        let  x1 ;\n        let  y0;\n        let y1 ;\n\n        if (this.clamp) {\n            x = Math.max(Math.min(x, this.width - 1), 0);\n            y = Math.max(Math.min(y, this.height - 1), 0);\n\n            //x= ((x%this.width)+ this.width) % this.width;\n            //y= ((y%this.height)+ this.height) % this.height;\n\n\n            x0 = Math.floor(x);\n            x1 =  Math.max(Math.min(x0+1, this.width - 1), 0);\n              y0 = Math.floor(y);\n             y1 =Math.max(Math.min(y0+1, this.height - 1), 0);\n        } else {\n            x= ((x%this.width)+ this.width) % this.width;\n            y= ((y%this.height)+ this.height) % this.height;\n\n\n        x0 = x | 0;\n        x1 = (x+ 1 | 0)%this.width ;\n          y0 = y | 0;\n         y1 = (y+ 1 | 0)%this.height ;\n        }\n\n\n\n        const x0y0 = this.getPixel2(this, x0, y0);\n        const x1y0 = this.getPixel2(this, x1, y0);\n        const x0y1 = this.getPixel2(this, x0, y1);\n        const x1y1 = this.getPixel2(this, x1, y1);\n\n        return this.interpolateComp(x, y, x0y0, x1y0 , x0y1, x1y1 );\n    }\n\n    public getPixel2(texture: Texture, x: number, y: number): number {\n        return this.texture[x + y * this.width];\n    }\n\n    /**\n     * highly optimized version only for power of 2 textures\n     */\n    public getBilinearFilteredPixelRasterizer(x: number, y: number) {\n        let x0 = x | 0;\n        let x1 = (x | 0) + 1;\n        let y0 = y | 0;\n        let y1 = (y | 0) + 1;\n\n        let x0y0: number;\n        let x1y0: number;\n        let x0y1: number;\n        let x1y1: number;\n\n        if (this.clamp) {\n             x0 = Math.max(Math.min(x0, this.width - 1), 0);\n             x1 = Math.max(Math.min(x1, this.width - 1), 0);\n             y0 = Math.max(Math.min(y0, this.height - 1), 0);\n             y1 = Math.max(Math.min(y1, this.height - 1), 0);\n\n             x0y0 = this.getPixel2(this, x0, y0);\n             x1y0 = this.getPixel2(this, x1, y0);\n             x0y1 = this.getPixel2(this, x0, y1);\n             x1y1 = this.getPixel2(this, x1, y1);\n        } else {\n            x0y0 = this.getPixelRasterizer(this, x0, y0);\n            x1y0 = this.getPixelRasterizer(this, x1, y0);\n            x0y1 = this.getPixelRasterizer(this, x0, y1);\n            x1y1 = this.getPixelRasterizer(this, x1, y1);\n        }\n        return this.interpolateComp(x, y, x0y0, x1y0, x0y1, x1y1);\n    }\n\n    public getPixelRasterizer(texture: Texture, x: number, y: number): number {\n        return this.texture[(x & (this.width-1)) + (y&(this.height-1)) * this.width];\n    }\n\n    public getPixel3(texture: Texture, x: number, y: number): number {\n        return this.texture[\n            (((x % this.width) + this.width) % this.width) +\n            (((y % this.height) + this.height) % this.height) * this.width];\n    }\n\n    private interpolateComp(x, y, x0y0, x1y0, x0y1, x1y1): number {\n        // reuse these values for all color components\n        const xFrac = x - (x | 0);\n        const yFrac = y - (y | 0);\n        const oneMinusXfrac = 1 - xFrac;\n        const oneMinusYfrac = 1 - yFrac;\n\n        const x0y0_r = x0y0 & 0xff;\n        const x1y0_r = x1y0 & 0xff;\n        const x0y1_r = x0y1 & 0xff;\n        const x1y1_r = x1y1 & 0xff;\n\n        const col1_r = x0y0_r * oneMinusXfrac + x1y0_r * xFrac;\n        const col2_r = x0y1_r * oneMinusXfrac + x1y1_r * xFrac;\n        const col_r = col1_r * oneMinusYfrac + (col2_r * yFrac);\n\n        const x0y0_g = x0y0 >> 8 & 0xff;\n        const x1y0_g = x1y0 >> 8 & 0xff;\n        const x0y1_g = x0y1 >> 8 & 0xff;\n        const x1y1_g = x1y1 >> 8 & 0xff;\n\n        const col1_g = x0y0_g * oneMinusXfrac + x1y0_g * xFrac;\n        const col2_g = x0y1_g * oneMinusXfrac + x1y1_g * xFrac;\n        const col_g = col1_g * oneMinusYfrac + (col2_g * yFrac);\n\n        const x0y0_b = x0y0 >> 16 & 0xff;\n        const x1y0_b = x1y0 >> 16 & 0xff;\n        const x0y1_b = x0y1 >> 16 & 0xff;\n        const x1y1_b = x1y1 >> 16 & 0xff;\n\n        const col1_b = x0y0_b * oneMinusXfrac + x1y0_b * xFrac;\n        const col2_b = x0y1_b * oneMinusXfrac + x1y1_b * xFrac;\n        const col_b = col1_b * oneMinusYfrac + (col2_b * yFrac);\n\n        const x0y0_a = x0y0 >> 24 & 0xff;\n        const x1y0_a = x1y0 >> 24 & 0xff;\n        const x0y1_a = x0y1 >> 24 & 0xff;\n        const x1y1_a = x1y1 >> 24 & 0xff;\n\n        const col1_a = x0y0_a * oneMinusXfrac + x1y0_a * xFrac;\n        const col2_a = x0y1_a * oneMinusXfrac + x1y1_a * xFrac;\n        const col_a = col1_a * oneMinusYfrac + (col2_a * yFrac);\n\n        return col_r | col_g << 8 | col_b << 16 | col_a << 24;\n    }\n\n}\n","import RandomNumberGenerator from '../RandomNumberGenerator';\nimport { Texture } from './Texture';\n\nexport class TextureUtils {\n\n    public static generateProceduralNoise(): Promise<Texture> {\n        return new Promise<Texture>((resolve: (value?: Texture) => void): void => {\n            const texture: Texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng: RandomNumberGenerator = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let i: number = 0; i < 256 * 256; i++) {\n                const scale: number = rng.getFloat();\n                texture.texture[i] = 200 * scale | 255 * scale << 8 | 205 * scale << 16 | 255 << 24;\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static generateProceduralParticleTexture(): Promise<Texture> {\n        return new Promise((resolve: (value?: Texture) => void): void => {\n            const texture: Texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng: RandomNumberGenerator = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let y: number = 0; y < 256; y++) {\n                for (let x: number = 0; x < 256; x++) {\n                    const dx: number = 127 - x;\n                    const dy: number = 127 - y;\n                    const r: number = Math.sqrt(dx * dx + dy * dy) / 127;\n                    let c: number = 1 - r;\n                    c = c * c * c;\n                    if (r > 1) {\n                        c = 0;\n                    }\n                    c = Math.min(1, c * 2.9);\n\n                    texture.texture[x + y * 256] = 235 | 255 << 8 | 235 << 16 | (c * 255) << 24;\n                }\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static generateProceduralParticleTexture2(): Promise<Texture> {\n        return new Promise((resolve) => {\n            const texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let y = 0; y < 256; y++) {\n                for (let x = 0; x < 256; x++) {\n                    const dx = 127 - x;\n                    const dy = 127 - y;\n                    const r = Math.sqrt(dx * dx + dy * dy) / 127;\n                    let c = 1 - r;\n                    c = c * c;\n                    if (r > 1) { c = 0; }\n                    c = Math.min(1, c * 40);\n                    texture.texture[x + y * 256] = 255 | 205 << 8 | 255 << 16 | (c * 255) << 24;\n                }\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static load(filename: string, transparency: boolean): Promise<Texture> {\n        return new Promise<Texture>((resolve: (texture?: Texture) => void): void => {\n            const image: HTMLImageElement = new Image();\n            image.onload = (): void => {\n                const texture: Texture = new Texture();\n                texture.texture = this.getImageData(image, transparency);\n                texture.width = image.width;\n                texture.height = image.height;\n                resolve(texture);\n            };\n            image.onerror = (): void => resolve();\n            image.src = filename;\n        });\n    }\n\n    private static getImageData(image: HTMLImageElement, withAlpha: boolean = false): Uint32Array {\n        const canvas: HTMLCanvasElement = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const context: CanvasRenderingContext2D = canvas.getContext('2d');\n        context.drawImage(image, 0, 0);\n        const data: Uint8ClampedArray = context.getImageData(0, 0, image.width, image.height).data;\n        const conv: Uint32Array = new Uint32Array(data.length / 4);\n        let c: number = 0;\n        for (let i: number = 0; i < data.length; i += 4) {\n            if (withAlpha) {\n                conv[c] = (data[i + 3] << 24) | (data[i + 2] << 16) | (data[i + 1] << 8) | data[i + 0];\n            } else {\n                conv[c] = (255 << 24) | (data[i + 2] << 16) | (data[i + 1] << 8) | data[i + 0];\n            }\n\n            c++;\n        }\n        return conv;\n    }\n\n}\n","var map = {\n\t\"./Application\": [\n\t\t8547\n\t],\n\t\"./Application.ts\": [\n\t\t8547\n\t],\n\t\"./DemoScene\": [\n\t\t1054\n\t],\n\t\"./DemoScene.ts\": [\n\t\t1054\n\t],\n\t\"./canvas-record\": [\n\t\t360\n\t],\n\t\"./canvas-record.ts\": [\n\t\t360\n\t],\n\t\"./parts/LoadingScene\": [\n\t\t3638\n\t],\n\t\"./parts/LoadingScene.ts\": [\n\t\t3638\n\t],\n\t\"./parts/Scene1\": [\n\t\t2193,\n\t\t2193\n\t],\n\t\"./parts/Scene1.ts\": [\n\t\t2193,\n\t\t2193\n\t],\n\t\"./parts/Scene10\": [\n\t\t8012,\n\t\t8012\n\t],\n\t\"./parts/Scene10.ts\": [\n\t\t8012,\n\t\t8012\n\t],\n\t\"./parts/Scene11\": [\n\t\t9923,\n\t\t9923\n\t],\n\t\"./parts/Scene11.ts\": [\n\t\t9923,\n\t\t9923\n\t],\n\t\"./parts/Scene12\": [\n\t\t2178,\n\t\t2178\n\t],\n\t\"./parts/Scene12.ts\": [\n\t\t2178,\n\t\t2178\n\t],\n\t\"./parts/Scene13\": [\n\t\t5827,\n\t\t4766,\n\t\t5827\n\t],\n\t\"./parts/Scene13.ts\": [\n\t\t5827,\n\t\t4766,\n\t\t5827\n\t],\n\t\"./parts/Scene14\": [\n\t\t1935,\n\t\t1935\n\t],\n\t\"./parts/Scene14.ts\": [\n\t\t1935,\n\t\t1935\n\t],\n\t\"./parts/Scene15\": [\n\t\t3554,\n\t\t3554\n\t],\n\t\"./parts/Scene15.ts\": [\n\t\t3554,\n\t\t3554\n\t],\n\t\"./parts/Scene16\": [\n\t\t9063,\n\t\t9063\n\t],\n\t\"./parts/Scene16.ts\": [\n\t\t9063,\n\t\t9063\n\t],\n\t\"./parts/Scene17\": [\n\t\t2451,\n\t\t2451\n\t],\n\t\"./parts/Scene17.ts\": [\n\t\t2451,\n\t\t2451\n\t],\n\t\"./parts/Scene18\": [\n\t\t6435,\n\t\t6435\n\t],\n\t\"./parts/Scene18.ts\": [\n\t\t6435,\n\t\t6435\n\t],\n\t\"./parts/Scene19\": [\n\t\t3245,\n\t\t3245\n\t],\n\t\"./parts/Scene19.ts\": [\n\t\t3245,\n\t\t3245\n\t],\n\t\"./parts/Scene2\": [\n\t\t7427,\n\t\t7427\n\t],\n\t\"./parts/Scene2.ts\": [\n\t\t7427,\n\t\t7427\n\t],\n\t\"./parts/Scene20\": [\n\t\t396,\n\t\t396\n\t],\n\t\"./parts/Scene20.ts\": [\n\t\t396,\n\t\t396\n\t],\n\t\"./parts/Scene3\": [\n\t\t4620,\n\t\t4620\n\t],\n\t\"./parts/Scene3.ts\": [\n\t\t4620,\n\t\t4620\n\t],\n\t\"./parts/Scene4\": [\n\t\t2596,\n\t\t2596\n\t],\n\t\"./parts/Scene4.ts\": [\n\t\t2596,\n\t\t2596\n\t],\n\t\"./parts/Scene5\": [\n\t\t2703,\n\t\t2703\n\t],\n\t\"./parts/Scene5.ts\": [\n\t\t2703,\n\t\t2703\n\t],\n\t\"./parts/Scene6\": [\n\t\t3441,\n\t\t3441\n\t],\n\t\"./parts/Scene6.ts\": [\n\t\t3441,\n\t\t3441\n\t],\n\t\"./parts/Scene7\": [\n\t\t2719,\n\t\t4766,\n\t\t2719\n\t],\n\t\"./parts/Scene7.ts\": [\n\t\t2719,\n\t\t4766,\n\t\t2719\n\t],\n\t\"./parts/Scene8\": [\n\t\t3688,\n\t\t3688\n\t],\n\t\"./parts/Scene8.ts\": [\n\t\t3688,\n\t\t3688\n\t],\n\t\"./parts/Scene9\": [\n\t\t3868,\n\t\t3868\n\t],\n\t\"./parts/Scene9.ts\": [\n\t\t3868,\n\t\t3868\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3261;\nmodule.exports = webpackAsyncContext;","(function (window) {\n\n    if (!window.JSRocket) {\n        window.JSRocket = {};\n    }\n    JSRocket.SyncData = function () {\n\n        \"use strict\";\n\n        var _track = [];\n\n        function getTrack(index) {\n            return _track[index];\n        }\n\n        function getIndexForName(name) {\n            for (var i = 0; i < _track.length; i++) {\n\n                if (_track[i].name === name) {\n                    return i;\n                }\n            }\n\n            return -1;\n        }\n\n        function getTrackLength() {\n            return _track.length;\n        }\n\n        function createIndex(varName) {\n            var track = new JSRocket.Track();\n            track.name = varName;\n\n            _track.push(track);\n        }\n\n        return {\n            getTrack: getTrack,\n            getIndexForName: getIndexForName,\n            getTrackLength: getTrackLength,\n            createIndex: createIndex\n        };\n    };\n    JSRocket.Track = function () {\n\n        \"use strict\";\n\n        var STEP = 0,\n            LINEAR = 1,\n            SMOOTH = 2,\n            RAMP = 3;\n\n        var data = [];\n\n        function findKeyIndex(keys, row) {\n            var lo = 0, hi = keys.length;\n            while (lo < hi) {\n                var mi = ((hi + lo) / 2) | 0;\n\n                if (keys[mi] < row) {\n                    lo = mi + 1;\n                } else if (keys[mi] > row) {\n                    hi = mi;\n                } else {\n                    return mi;\n                }\n            }\n            return lo - 1;\n        }\n\n        function getValue(row) {\n            var keys = Object.keys(data);\n\n            if (!keys.length) {\n                return 0.0;\n            }\n\n            var idx = findKeyIndex(keys, Math.floor(row));\n            if (idx < 0) {\n                return data[keys[0]].value;\n            }\n            if (idx > keys.length - 2) {\n                return data[keys[keys.length - 1]].value;\n            }\n\n            // lookup keys and values\n            var k0 = keys[idx], k1 = keys[idx + 1];\n            var a = data[k0].value;\n            var b = data[k1].value;\n\n            // interpolate\n            var t = (row - k0) / (k1 - k0);\n            switch (data[k0].interpolation) {\n                case 0:\n                    return a;\n                case 1:\n                    return a + (b - a) * t;\n                case 2:\n                    return a + (b - a) * t * t * (3 - 2 * t);\n                case 3:\n                    return a + (b - a) * Math.pow(t, 2.0);\n            }\n        }\n\n        function add(row, value, interpolation) {\n            data[row] = {\n                \"value\": value,\n                \"interpolation\": interpolation\n            };\n        }\n\n        function remove(row) {\n            delete data[row];\n        }\n\n        return {\n            getValue: getValue,\n            add: add,\n            remove: remove\n        };\n    };\n    JSRocket.SyncDevicePlayer = function (cfg) {\n\n        \"use strict\";\n\n        var _urlRequest,\n            _syncData = new JSRocket.SyncData(),\n            _eventHandler = {\n                'ready': function () {\n                },\n                'error': function () {\n                }\n            };\n\n        function load(url) {\n\n            _urlRequest = new XMLHttpRequest();\n\n            if (_urlRequest === null) {\n                _eventHandler.error();\n                return;\n            }\n\n            _urlRequest.open('GET', url, true);\n            _urlRequest.onreadystatechange = urlRequestHandler;\n\n            _urlRequest.send();\n        }\n\n        function urlRequestHandler() {\n\n            if (_urlRequest.readyState === 4) {\n                if (_urlRequest.status < 300) {\n                    readXML(_urlRequest.responseText);\n                } else {\n                    _eventHandler.error();\n                }\n            }\n        }\n\n        function readXML(xmlString) {\n            var key,\n                t = 0, tLen, k = 0, kLen,\n                xml = (new DOMParser()).parseFromString(xmlString, 'text/xml'),\n                tracks = xml.getElementsByTagName('tracks');\n\n            //<tracks>\n            var trackList = tracks[0].getElementsByTagName('track');\n\n            for (t, tLen = trackList.length; t < tLen; t++) {\n\n                var track = getTrack(trackList[t].getAttribute('name')),\n                    keyList = trackList[t].getElementsByTagName('key');\n\n                for (k = 0, kLen = keyList.length; k < kLen; k++) {\n                    key = keyList[k];\n                    track.add(parseInt(key.getAttribute('row'), 10),\n                        parseFloat(key.getAttribute('value')),\n                        parseInt(key.getAttribute('interpolation'), 10));\n\n                }\n            }\n\n            _eventHandler.ready();\n        }\n\n        function getTrack(name) {\n\n            var index = _syncData.getIndexForName(name);\n\n            if (index > -1) {\n                return _syncData.getTrack(index);\n            }\n\n            _syncData.createIndex(name);\n            return _syncData.getTrack(_syncData.getTrackLength() - 1);\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        function nop() {\n\n        }\n\n        if (cfg.rocketXML === \"\" || cfg.rocketXML === undefined || cfg.rocketXML === undefined) {\n            throw (\"[jsRocket] rocketXML is not set, try _syncDevice.setConfig({'rocketXML':'url/To/RocketXML.rocket'})\");\n        } else {\n            load(cfg.rocketXML);\n        }\n\n        return {\n            load: load,\n            getTrack: getTrack,\n            update: nop,\n            on: setEvent\n        };\n    };\n    JSRocket.SyncDeviceClient = function (cfg) {\n\n        \"use strict\";\n\n        var CMD_SET_KEY = 0,\n            CMD_DELETE_KEY = 1,\n            CMD_GET_TRACK = 2,\n            CMD_SET_ROW = 3,\n            CMD_PAUSE = 4,\n            CMD_SAVE_TRACKS = 5;\n\n        var _ws = new WebSocket(cfg.socketURL),\n            _syncData = new JSRocket.SyncData(),\n            _eventHandler = {\n                'ready': function () {\n                },\n                'update': function () {\n                },\n                'play': function () {\n                },\n                'pause': function () {\n                },\n                'save': function () {\n                }\n            };\n\n        function onOpen() {\n\n            _ws.binaryType = \"arraybuffer\";\n            _ws.send('hello, synctracker!');\n        }\n\n        function onMessage(e) {\n\n            var queue = (new Uint8Array(e.data)),\n                cmd = queue[0],\n                track, row, value, interpolation;\n\n            //Handshake\n            if (cmd === 104) {\n\n                _eventHandler.ready();\n\n                //PAUSE\n            } else if (CMD_PAUSE === cmd) {\n\n                if (queue[1] === 1) {\n                    _eventHandler.pause();\n                } else {\n                    _eventHandler.play();\n                }\n\n                //SET_ROW\n            } else if (CMD_SET_ROW === cmd) {\n\n                row = toInt(queue.subarray(1, 5));\n\n                _eventHandler.update(row);\n\n                //SET_KEY\n            } else if (CMD_SET_KEY === cmd) {\n\n                track = toInt(queue.subarray(1, 5));\n                row = toInt(queue.subarray(5, 9));\n\n                //value = Math.round(toFloat(queue.subarray(9, 13)) * 100) / 100; //round to what's seen in Rocket tracks\n                value = toFloat(queue.subarray(9, 13)); //use the values you see in Rocket statusbar\n\n                interpolation = toInt(queue.subarray(13, 14));\n                _syncData.getTrack(track).add(row, value, interpolation);\n\n                //DELETE\n            } else if (CMD_DELETE_KEY === cmd) {\n\n                track = toInt(queue.subarray(1, 5));\n                row = toInt(queue.subarray(5, 9));\n\n                _syncData.getTrack(track).remove(row);\n\n                //SAVE\n            } else if (CMD_SAVE_TRACKS === cmd) {\n                _eventHandler.save();\n            }\n        }\n\n        function onClose(e) {\n            console.warn(\">> connection closed\", e);\n        }\n\n        function onError(e) {\n            console.error(\">> connection error'd\", e);\n        }\n\n        _ws.onopen = onOpen;\n        _ws.onmessage = onMessage;\n        _ws.onclose = onClose;\n        _ws.onerror = onError;\n\n        function getTrack(name) {\n\n            var index = _syncData.getIndexForName(name);\n\n            if (index > -1) {\n                return _syncData.getTrack(index);\n            }\n\n            var utf8Name = encodeURIComponent(name).replace(/%([\\dA-F]{2})/g, function (m, c) {\n                return String.fromCharCode('0x' + c);\n            });\n            var message = [CMD_GET_TRACK,\n                (utf8Name.length >> 24) & 0xFF, (utf8Name.length >> 16) & 0xFF,\n                (utf8Name.length >> 8) & 0xFF, (utf8Name.length) & 0xFF];\n\n            for (var i = 0; i < utf8Name.length; i++) {\n                message.push(utf8Name.charCodeAt(i));\n            }\n\n            _ws.send(new Uint8Array(message).buffer);\n\n            _syncData.createIndex(name);\n            return _syncData.getTrack(_syncData.getTrackLength() - 1);\n        }\n\n        function setRow(row) {\n\n            var streamInt = [(row >> 24) & 0xFF,\n            (row >> 16) & 0xFF,\n            (row >> 8) & 0xFF,\n            (row) & 0xFF];\n\n            _ws.send(new Uint8Array([CMD_SET_ROW, streamInt[0], streamInt[1], streamInt[2], streamInt[3]]).buffer);\n        }\n\n        function toInt(arr) {\n\n            var i = 0,\n                view = new DataView(new ArrayBuffer(arr.length));\n\n            for (; i < arr.length; i++) {\n                view.setUint8(i, arr[i]);\n            }\n\n            if (view.byteLength === 1) {\n                return view.getInt8(0);\n            } else {\n                return view.getInt32(0);\n            }\n        }\n\n        function toFloat(arr) {\n            var view = new DataView(new ArrayBuffer(4));\n            view.setUint8(0, arr[0]);\n            view.setUint8(1, arr[1]);\n            view.setUint8(2, arr[2]);\n            view.setUint8(3, arr[3]);\n\n            return view.getFloat32(0);\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        return {\n            getTrack: getTrack,\n            update: setRow,\n            on: setEvent\n        };\n    };\n\n    JSRocket.SyncDevice = function () {\n\n        \"use strict\";\n\n        var _connected = false,\n            _device,\n            _previousIntRow,\n            _config = {\n                \"socketURL\": \"ws://localhost:1339\",\n                \"rocketXML\": \"\"\n            },\n            _eventHandler = {\n                'ready': function () {\n                },\n                'update': function () {\n                },\n                'play': function () {\n                },\n                'pause': function () {\n                }\n            };\n\n        function init(mode) {\n            if (mode === \"demo\") {\n                _device = new JSRocket.SyncDevicePlayer(_config);\n            } else {\n                _device = new JSRocket.SyncDeviceClient(_config);\n            }\n\n            _device.on('ready', deviceReady);\n            _device.on('update', deviceUpdate);\n            _device.on('play', devicePlay);\n            _device.on('pause', devicePause);\n        }\n\n        function getConfig() {\n            return _config;\n        }\n\n        function setConfig(cfg) {\n            for (var option in cfg) {\n                if (cfg.hasOwnProperty(option)) {\n                    _config[option] = cfg[option];\n                }\n            }\n\n            return _config;\n        }\n\n        function deviceReady() {\n            _connected = true;\n            _eventHandler.ready();\n        }\n\n        function deviceUpdate(row) {\n            _eventHandler.update(row);\n        }\n\n        function devicePlay() {\n            _eventHandler.play();\n        }\n\n        function devicePause() {\n            _eventHandler.pause();\n        }\n\n        function getTrack(name) {\n            if (_connected) {\n                return _device.getTrack(name);\n            } else {\n                return null;\n            }\n        }\n\n        function update(row) {\n            //no need to update rocket on float rows\n            if (Math.floor(row) !== _previousIntRow) {\n                _previousIntRow = Math.floor(row);\n                _device.update(_previousIntRow);\n            }\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        return {\n            init: init,\n            setConfig: setConfig,\n            getConfig: getConfig,\n            getTrack: getTrack,\n            update: update,\n            on: setEvent\n        };\n    };\n\n})(window);\n\n","/* Trivial player for formats that the browser supports natively through the <audio> element,\nsuch as MP3 and OGG */\n\nCowbell.Player.Audio = function() {\n\tthis.Track = function(url) {\n\t\tthis.open = function() {\n\t\t\tvar audio = document.createElement('audio');\n\t\t\taudio.src = url;\n\t\t\tdocument.body.appendChild(audio);\n\n\t\t\treturn audio;\n\t\t};\n\t};\n};\n","window.Cowbell = {\n\t'UI': {},\n\t'Player': {},\n\t'Common': {}\n};\n\nwindow.Cowbell.createPlayer = function(containerElement, opts) {\n\tif (!opts) opts = {};\n\n\tif (typeof(containerElement) == 'string') {\n\t\tcontainerElement = document.getElementById(containerElement);\n\t}\n\n\tvar uiConstructor = opts.ui || Cowbell.UI.Basic;\n\tvar ui = new uiConstructor(containerElement);\n\n\tif (opts.player) {\n\t\tvar player = new opts.player(opts.playerOpts);\n\n\t\tif (opts.url) {\n\t\t\tvar track = new player.Track(opts.url, opts.trackOpts);\n\t\t\tui.open(track);\n\t\t}\n\t}\n\n\treturn ui;\n};\n\nif (window.jQuery) {\n\twindow.jQuery.fn.cowbell = function(opts) {\n\t\tthis.each(function() {\n\t\t\tCowbell.createPlayer(this, opts);\n\t\t});\n\t};\n}\n","/* Player for module formats supported by libopenmpt */\n\n(function() {\n\tfunction OpenMPTGenerator(url, audioCtx, playerOpts, trackOpts) {\n\t\tvar modulePtr, leftBufferPtr, rightBufferPtr;\n\t\tvar maxFramesPerChunk = 4096;\n\t\tvar self = this;\n\t\tif (!playerOpts) playerOpts = {};\n\t\tif (!trackOpts) trackOpts = {};\n\n\t\tfunction initModule(data) {\n\t\t\tvar byteArray = new Int8Array(data);\n\t\t\tvar ptrToFile = libopenmpt._malloc(byteArray.byteLength);\n\t\t\tlibopenmpt.HEAPU8.set(byteArray, ptrToFile);\n\n\t\t\tmodulePtr = libopenmpt._openmpt_module_create_from_memory(ptrToFile, byteArray.byteLength, 0, 0, 0);\n            global.window.modulePtr = modulePtr;\n\t\t\tleftBufferPtr  = libopenmpt._malloc(4 * maxFramesPerChunk);\n\t\t\trightBufferPtr = libopenmpt._malloc(4 * maxFramesPerChunk);\n\n\t\t\tfunction asciiToStack(str) {\n\t\t\t\tvar stackStr = stackAlloc(str.length + 1);\n\t\t\t\twriteAsciiToMemory(str, stackStr);\n\t\t\t\treturn stackStr;\n\t\t\t}\n\t\t\tvar stack = stackSave();\n\t\t\tlibopenmpt._openmpt_module_ctl_set(modulePtr, asciiToStack('render.resampler.emulate_amiga'), asciiToStack('1')); // enable Amiga resampler\n\t\t\tlibopenmpt._openmpt_module_ctl_set(modulePtr, asciiToStack('render.resampler.emulate_amiga_type'), asciiToStack('a1200')); // set emulated Amiga model to A1200\n\t\t\tstackRestore(stack);\n\n\t\t\tself.duration = libopenmpt._openmpt_module_get_duration_seconds(modulePtr);\n\t\t}\n\n\t\tfunction ensureLibOpenMPT(onReady) {\n\t\t\tif (!playerOpts.pathToLibOpenMPT) {\n\t\t\t\tthrow \"pathToLibOpenMPT not specified\";\n\t\t\t}\n\n\t\t\tif (window.libopenmpt && window.libopenmpt._openmpt_module_create_from_memory) {\n\t\t\t\t/* libopenmpt already loaded */\n\t\t\t\tonReady();\n\t\t\t} else {\n\t\t\t\t/* load libopenmpt via <script> tag injection */\n\t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n\t\t\t\tvar script = document.createElement(\"script\");\n\t\t\t\tscript.src = playerOpts.pathToLibOpenMPT;\n\n\t\t\t\twindow.libopenmpt = {\n\t\t\t\t\tonRuntimeInitialized: function() {\n\t\t\t\t\t\tonReady();\n\t\t\t\t\t\thead.removeChild(script);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\thead.appendChild(script);\n\t\t\t}\n\t\t}\n\n\t\tthis.cleanup = function() {\n\t\t\tif (modulePtr) {\n\t\t\t\tlibopenmpt._openmpt_module_destroy(modulePtr);\n\t\t\t}\n\t\t\tif (leftBufferPtr) {\n\t\t\t\tlibopenmpt._free(leftBufferPtr);\n\t\t\t}\n\t\t\tif (rightBufferPtr) {\n\t\t\t\tlibopenmpt._free(rightBufferPtr);\n\t\t\t}\n\t\t};\n\n\t\tthis.load = function(onReady) {\n\t\t\tvar self = this;\n\t\t\tensureLibOpenMPT(function() {\n\t\t\t\tself.channelCount = 2;\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\t\trequest.addEventListener('error', function(e) {\n\t\t\t\t\tconsole.log('XHR error', e);\n\t\t\t\t});\n\n\t\t\t\trequest.addEventListener('load', function(e) {\n\t\t\t\t\tdata = request.response;\n\t\t\t\t\tinitModule(data);\n\t\t\t\t\tonReady();\n\t\t\t\t});\n\n\t\t\t\t/* trigger XHR */\n\t\t\t\trequest.open('GET', url, true);\n\t\t\t\trequest.responseType = \"arraybuffer\";\n\t\t\t\trequest.send();\n\t\t\t});\n\t\t};\n\n\t\tthis.generateAudio = function(outputBuffer) {\n\t\t\tvar outputL = outputBuffer.getChannelData(0);\n\t\t\tvar outputR = outputBuffer.getChannelData(1);\n\t\t\tvar framesToRender = outputBuffer.length;\n\n\t\t\tvar framesRendered = 0;\n\t\t\tvar ended = false;\n\t\t\twhile (framesToRender > 0) {\n\t\t\t\tvar framesPerChunk = Math.min(framesToRender, maxFramesPerChunk);\n\t\t\t\tvar actualFramesPerChunk = libopenmpt._openmpt_module_read_float_stereo(modulePtr, audioCtx.sampleRate, framesPerChunk, leftBufferPtr, rightBufferPtr);\n\t\t\t\tvar rawAudioLeft = libopenmpt.HEAPF32.subarray(leftBufferPtr / 4, leftBufferPtr / 4 + actualFramesPerChunk);\n\t\t\t\tvar rawAudioRight = libopenmpt.HEAPF32.subarray(rightBufferPtr / 4, rightBufferPtr / 4 + actualFramesPerChunk);\n\t\t\t\tfor (var i = 0; i < actualFramesPerChunk; ++i) {\n\t\t\t\t\toutputL[framesRendered + i] = rawAudioLeft[i];\n\t\t\t\t\toutputR[framesRendered + i] = rawAudioRight[i];\n\t\t\t\t}\n\t\t\t\tframesToRender -= actualFramesPerChunk;\n\t\t\t\tframesRendered += actualFramesPerChunk;\n\t\t\t\tif (actualFramesPerChunk < framesPerChunk) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn framesRendered;\n\t\t};\n\n\t\tthis.seekable = true;\n\n\t\tthis.seek = function(position) {\n\t\t\tlibopenmpt._openmpt_module_set_position_seconds(modulePtr, position);\n\t\t};\n\n\t\tthis.reset = function() {\n\t\t\tthis.seek(0);\n\t\t}\n\t}\n\tCowbell.Player.OpenMPT = function(opts) {\n\t\treturn new Cowbell.Common.WebAudioPlayer(OpenMPTGenerator, opts);\n\t};\n})();\n","/*\nWrapper to allow Web Audio createScriptProcessor-based player routines to expose\na subset of the HTML5 Media Element API.\n\nThis wrapper handles the details of buffering, pausing, and keeping track of current play time.\nInner routines only need to implement a simple 'generator' API consisting of filling a buffer\nwith audio data, and seeking to a specified time.\n*/\n\n(function () {\n    var audioCtx;\n    Cowbell.Common.WebAudioPlayer = function (generatorConstructor, playerOpts) {\n        this.Track = function (url, trackOpts) {\n            var generator;\n\n            this.open = function () {\n                var self = {};\n\n                if (!audioCtx) {\n                    var AudioContext = window.AudioContext || window.webkitAudioContext;\n                    audioCtx = new AudioContext({\n                        latencyHint: \"playback\",\n                        sampleRate: 22050\n                      });\n                }\n\n                var BUFFER_SIZE = 4096;\n\n                self.HAVE_NOTHING = 0;\n                self.HAVE_METADATA = 1;\n                self.HAVE_CURRENT_DATA = 2;\n                self.HAVE_FUTURE_DATA = 3;\n                self.HAVE_ENOUGH_DATA = 4;\n                self.readyState = self.HAVE_NOTHING;\n\n                generator = new generatorConstructor(url, audioCtx, playerOpts, trackOpts);\n                var generatorIsReady = false;\n                var playWasRequestedBeforeReady = false;\n                var scriptNode;\n\n                var hasStartedProcessing = false;\n                var playFromTime = 0;\n                var playStartTimestamp;\n                self.paused = true;\n\n                generator.load(function () {\n                    generatorIsReady = true;\n                    self.readyState = self.HAVE_ENOUGH_DATA;\n                    self.duration = generator.duration;\n                    if (generator.seekable) {\n                        self.seekable = {\n                            'length': 1,\n                            'start': function (i) {\n                                if (i !== 0) throw \"Out of range\";\n                                return 0;\n                            },\n                            'end': function (i) {\n                                if (i !== 0) throw \"Out of range\";\n                                return generator.duration;\n                            }\n                        };\n                    } else {\n                        self.seekable = {\n                            'length': 0,\n                            'start': function (i) {\n                                throw \"Out of range\";\n                            },\n                            'end': function (i) {\n                                throw \"Out of range\";\n                            }\n                        };\n                    }\n                    seek(0);\n                    if (self.onloadedmetadata) self.onloadedmetadata();\n                    if (playWasRequestedBeforeReady) self.play();\n                });\n\n                function seek(newTime) {\n                    if (scriptNode) scriptNode.disconnect(0);\n                    if (newTime > 0) {\n                        generator.seek(newTime);\n                    } else {\n                        generator.reset();\n                    }\n                    playFromTime = newTime;\n                    hasStartedProcessing = false;\n                    scriptNode = audioCtx.createScriptProcessor(BUFFER_SIZE, 0, generator.channelCount);\n                    scriptNode.onaudioprocess = generateAudio;\n                    if (!self.paused) {\n                        self.paused = true;\n                        self.play();\n                    }\n                }\n\n                function generateAudio(event) {\n                    if (!hasStartedProcessing) {\n                        playStartTimestamp = event.playbackTime;\n                        hasStartedProcessing = true;\n                    }\n\n                    var generatedLength = generator.generateAudio(event.outputBuffer);\n\n                    if (generatedLength < event.outputBuffer.length) {\n                        /* generate silence for the remainder of the buffer */\n                        for (var chan = 0; chan < event.outputBuffer.numberOfChannels; chan++) {\n                            var channelData = event.outputBuffer.getChannelData(chan);\n                            for (var i = generatedLength; i < event.outputBuffer.length; i++) {\n                                channelData[i] = 0;\n                            }\n                        }\n\n                        if (self.currentTime > self.duration) {\n                            /* we've finished playing (not just generating) the audio */\n                            self.pause();\n                            if (self.onended) self.onended();\n                            seek(0);\n                        }\n                    }\n\n                    if (self.ontimeupdate) self.ontimeupdate();\n                }\n\n                self.play = function () {\n                    if (!generatorIsReady) {\n                        playWasRequestedBeforeReady = true;\n                        return;\n                    }\n                    if (self.paused) {\n                        scriptNode.connect(audioCtx.destination);\n                        self.paused = false;\n                        // If an AudioContext is created prior to the document receiving a user gesture, \n                        // it will be created in the \"suspended\" state, and you will need to call resume() \n                        // after a user gesture is received.\n                        if (audioCtx.state === 'suspended') { audioCtx.resume() };\n                        if (self.onplay) self.onplay();\n\n                        if (hasStartedProcessing) {\n                            playStartTimestamp = audioCtx.currentTime;\n                            playFromTime = pausedAtTrackTime;\n                        }\n                    }\n                };\n\n                self.pause = function () {\n                    if (!self.paused) {\n                        pausedAtTimestamp = audioCtx.currentTime;\n                        pausedAtTrackTime = self.currentTime;\n\n                        scriptNode.disconnect(0);\n                        self.paused = true;\n                        if (self.onpause) self.onpause();\n                    }\n                };\n\n\n                /*\n                hasStartedProcessing = false && self.paused = true  =>  initial state\n                hasStartedProcessing = false && self.paused = false  =>  the instant we just called play()\n                hasStartedProcessing = true && self.paused = false  =>\n                    ready to play if currentTime < playStartTimestamp; playing if currentTime >= playStartTimestamp\n                hasStartedProcessing = true && self.paused = true  => paused\n                */\n\n                self.__defineGetter__('currentTime', function () {\n                    if (!hasStartedProcessing) return playFromTime;\n                    if (self.paused) return pausedAtTrackTime;\n                    if (audioCtx.currentTime < playStartTimestamp) return playFromTime;\n                    return playFromTime + audioCtx.currentTime - playStartTimestamp;\n                });\n\n                self.__defineSetter__('currentTime', function (newTime) {\n                    if (generator.seekable || newTime === 0) {\n                        seek(newTime);\n                    }\n                });\n\n                return self;\n            };\n            this.close = function () {\n                if (generator && generator.cleanup) {\n                    generator.cleanup();\n                }\n            };\n        };\n    };\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t9577: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkaisa\"] = self[\"webpackChunkaisa\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(8547);\n"],"names":["inProgress","dataWebpackPrefix","___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","f","e","a","c","appendChild","dom","u","d","children","style","display","l","document","createElement","cssText","addEventListener","preventDefault","performance","Date","now","g","r","Panel","h","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","Math","round","window","devicePixelRatio","v","m","n","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","getTarget","Error","element","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","firstChild","createTextNode","CullFace","Framebuffer","static","minWindow","maxWindow","framebuffer","wBuffer","cullMode","BACK","camera","bob","triangleRasterizer","texturedTriangleRasterizer","scaleClipBlitter","texturedRenderingPipeline","lineRasterizer","lineRasterizerNo","tmpGlitch","lensFlareVisible","lensFlareStart","lensFlareEnd","imageData","unsignedIntArray","torus","plane","cylinder2","linerClipper","clipRegion","Array","texture","constructor","ImageData","Float32Array","arrayBuffer","ArrayBuffer","PIXEL_SIZE_IN_BYTES","Uint8ClampedArray","Uint32Array","setCullFace","face","setTexture","getImageData","set","clear","color","BLACK","toPackedFormat","clearColorBuffer","fill","drawPixel","x","y","drawPixel4","alpha","inverseAlpha","drawPixel3","alpha2","drawPixelAntiAliased","roundedX","floor","roundedY","percent","abs","drawPixelAliased","drawPixelAntiAliasedSpacial","ceil","readPixel","drawRect","start","drawRect2","j","drawText","text","xpos","firstIndex","charCodeAt","tx","ty","drawTextureRectFastAlpha","addReflections","interpolate","sin","drawTextureRect2","xs","ys","xt","yt","texIndex","frIndex","drawTextureColorized","txPixel","drawTextureRectNoAlpha","blend","c1","c2","nAlpha","nInvAlpha","addColor","r1","g1","b1","r2","g2","b2","drawTextureRect","pixelWidth","fbPixel","drawTextureRectAdd","pixelate","xoff","yoff","drawBox2","drawLineDDA","fastFramebufferCopyOffset","src","dest","offset","fastFramebufferCopy","noise","elapsedTime","scale","rng","setSeed","getFloat","drawTexturedBillboard","xp","yp","z","xStep","yStep","newHeight","newWidth","yStart","xStart","xTextureStart","xx","yy","index2","textureIndex","drawParticle","alphaBlend","alphaScale","framebufferPixel","texturePixel","drawParticle2","imgNum","spritH","drawParticle2Sub","rr","gg","bb","drawParticleNoDepth","drawSoftParticle","zDist","drawFog","fogScale","fogOffset","videoMemorySize","wBufferScale","drawScaledTextureClipBi","getBilinearFilteredPixel2","drawScaledTextureClipBiAdd","drawScaledTextureClipAdd","drawTexture","SCREEN_WIDTH","SCREEN_HEIGHT","framebufferIndex","textureRowOffset","framebufferRowOffset","div","yHeight","xWidth","drawTextureFullscreen","drawTexture3","time","mHeight","drawTextureNoClipAlpha","nearPlaneClipping","t1","t2","NEAR_PLANE_Z","cohenSutherlandLineClipper","project","ratio","t3","clearDepthBuffer","drawBox","x1","y1","wireFrameSphereClipping","points","STEPS2","sphereFunction2","PI","modelViewMartrix","constructScaleMatrix","multiplyMatrix","constructYRotationMatrix","constructXRotationMatrix","constructTranslationMatrix","points2","transformed","multiplyHom","colred","v1","v2","v3","colLine","isTriangleCCW","det","wireFrameTerrain","heightmap","xOff","cos","zOff","forEach","multiply","drawBoundingSphere","sphere","matrix","pos","mul","getRadius","add","getCenter","drawPlanedeformationTunnelAnim","xdist","ydist","dist","sqrt","dist2","angle","atan2","color1","cosineInterpolate","final","drawPlaneDeformation","IMG_WIDTH","IMG_HEIGHT","torusFunction","fakeSphere","normal","vertex","textureCoordinate","asin","fakeSphere2","tex","drawLineDDANoZ","theta","phi","RandomNumberGenerator","seed","TextureCoordinate","Vertex","position","projection","ScaleClipBlitter","drawScaledTextureClip","Color","sub","num","Utils","clamp","input","value","istart","istop","ostart","ostop","getRandomInt","random","arrayCopy","srcPosition","dst","dstPosition","slice","prototype","fade","lerp","grad","hash","permutation","X","Y","Z","A","AA","AB","B","BA","BB","CubicInterpolate","y0","y2","y3","mu","mu2","a0","CosineInterpolate","FullscreenUtils","toggleFullscreen","fullscreen","exitFullscreen","setStyle","enterFullscreen","el","getAttribute","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullScreen","mozCancelFullScreen","webkitExitFullscreen","Canvas","scene","canvas","context","startTime","boundRenderLoop","oImageSmoothingEnabled","imageSmoothingEnabled","webkitImageSmoothingEnabled","renderLoop","bind","init","appendTo","getElementById","event","then","onInit","render","flipBackbuffer","requestAnimationFrame","putImageData","locals","Application","main","CANVAS_WIDTH","CANVAS_HEIGHT","DemoScene","ROW_RATE","BPM","SoundManager","syncDevice","isPlaying","demoMode","row","musicProperties","sceneData","audioElement","JSRocket","SyncDevice","connected","loadMusic","filename","Promise","resolve","audioPlayer","split","pop","toLowerCase","Cowbell","Player","OpenMPT","Audio","track","Track","open","prepareSync","setConfig","on","onSyncReady","newRow","onSyncUpdate","onPlay","onPause","effect","getTrack","snare","bass","transitionType","transitionValue","isNaN","currentTime","updateMusic","timeSeconds","timeMilliseconds","getValue","paused","duration","click","play","console","log","pause","info","jump","direction","sceneLength","effectJump","Number","toFixed","trunc","parseInt","seek","toggleSound","ref","isMuted","classList","muted","initTimeline","newLocal","jumpTo","localStorage","getItem","libopenmpt","poll","modulePtr","updateRange","setTimeout","onloadedmetadata","String","TransitionMethods","Particle","_color","_x","_y","dx","dy","TTL","isLiving","BlockFade","AbstractScene","ledTexture","transitionFramebufferTo","transitionCircle","transitionWipe","croud","prevMask","curMask","diff","noiseMask","croudMask","particleArray","WHITE","c3","drawCircle","initDissolve","all","TextureUtils","load","textureBackground","createCroud","isBackground","bias","xbase","ybase","xnoise","ynoise","pn","PerlinNoise","curBias","_gray","dissolve","renderBuffer","renderBuffer2","particle","it","putpixel","x0","radius","blockFade","transition","transitionSceneFrom","transitionSceneTo","transitionMethod","BLOCKFADE","CROSSFADE","crossFade","DISSOLVE","FADEIN","fadeIn","FADEOUT","fadeOut","WIPE_LEFT","crossFadeImage","CIRCLE","pixelArray","pixelArrayWidth","blockWidth","horizontalUnits","verticalUnits","fadeArray","from","yPos","xPos","fadeIndex","Interpolator","transitionImage","startColor","endColor","renderScanlines","shiftAmount","offRed","offGreen","offBlue","strips","verticalPosition","imagePixelR","imagePixelG","imagePixelB","DoublyLinkedList","_start","_end","_length","isEmpty","insertStart","node","next","previous","insertEnd","currentNode","deleteStart","deleteEnd","getNode","toArray","array","DLNode","_data","_next","_previous","soundManager","canvasRecorder","sceneList","nodeInstance","stats","canvasRef","timelineRef","sceneRef","timeRef","initControls","newNode","LoadingScene","animate","demoOrder","newNodeInsert","allProgress","async","plug","initScene","constructorName","Object","keys","CanvasRecorder","initStats","tickerPlayRef","tickerStopRef","tickerNextRef","tickerBackRef","tickerRecordRef","tickerScreenshotRef","tickerVolumeRef","recording","saveVideo","recordVideo","setItem","date","fileName","toISOString","toTimeString","replace","image","toDataURL","anchor","directionToScroll","deltaY","stopPropagation","passive","key","promises","progressCallback","args","statsObj","body","drawStats","innerText","error","canvasRecordingOptions","audioTrack","getType","ext","fileExtension","includes","createCanvasRecorder","link","frameRate","download","recorderOptions","mimeType","audioBitsPerSecond","videoBitsPerSecond","chunks","stream","captureStream","recorder","MediaRecorder","ondataavailable","size","onstop","blob","Blob","type","url","URL","createObjectURL","href","MouseEvent","dispatchEvent","revokeObjectURL","timeslice","name","stop","dispose","canvasObj","outputX","AbstractGeometricObject","mesh","inverse","buildMesh","normals","cross","normalize","faces","n1","n2","n3","transformedPoints","transformedNormals","getMesh","Torus","invert","super","frame","frame2","up","right","current","Matrix3f","m11","m12","m13","m21","m22","m23","m31","m32","m33","constructZRotationMatrix","xScale","yScale","zScale","vector","Matrix4f","m14","m24","m34","m41","m42","m43","m44","constructIdentityMatrix","setIdentityMatrix","transpose","computeNormalMatrix","inverseTranslation","scale1","scale2","scale3","inverseRotation","getInverseRotation","getRotation","constructShadowMatrix","planePoint","planeNormal","lightPosition","dot","NdotL","shadowMatrix","tz","setTranslationMatrix","setXRotationMatrix","setZRotationMatrix","setScaleMatrix","sx","sy","sz","setYRotationMatrix","setRotationMatrix","s","normalize2","multiply2","matrix2","multiplyHomArr","multiplyHomArr2","multiplyArr","Vector2f","perp","vec","scal","reci","Vector3f","mult","sub2","vec1","vec2","add2","cross2","Vector4f","componentWiseMul","AbstractScannlineTriangleRasterizer","temp","drawTriangleDDA","p1","p2","p3","fillLongRightTriangle","fillLongLeftTriangle","AbstractTriangleRasterizer","FlatShadingTriangleRasterizer","slope1","slope2","zslope1","zslope2","curz1","curz2","xPosition","xPosition2","yPosition","yDistanceLeft","yDistanceRight","drawSpan","distance","spanzStep","wStart","TexturedAlphaBlendingTriangleRasterizer","pipeline","tslope1u","tslope2u","tslope1v","tslope2v","curu1","curv1","curu2","curv2","spanuStep","spanvStep","uStart","vStart","currentColor","color2","getBilinearFilteredPixelRasterizer","TexturedTriangleRasterizer","LineRasterizerDda","xDistance","yDistance","sign","wDelta","LineRasterizerNoZ","AbstractRenderingPipeline","setAlpha","isInFrontOfNearPlane","DISABLED","isTriangleCCW2","v4","TexturingRenderingPipeline","sphereMapping","vertexArray","setSphereMapping","modelViewMatrix","projectedVertices","setFramebuffer","enableAlphaBlending","disableAlphaBlending","setModelViewMatrix","drawMeshArray","meshes","model","draw","normalMatrix","normals2","vertices","project2","uv","clipConvexPolygon","zClipTriangle","computeNearPlaneIntersection","subject","output","S","point","edge","isInside2","computeIntersection2","AbstractClipEdge","BottomClipEdge","isInside","computeIntersection","factor","textCoord","computeIntersection3","CohenSutherlandLineClipper","col","code1","computeRegionCode","code2","accept","done","isTrivialAccept","isTrivialReject","REGION_CODE_CENTER","tempCode","tempPoint","REGION_CODE_TOP","REGION_CODE_BOTTOM","REGION_CODE_RIGHT","REGION_CODE_LEFT","regionCode","LeftClipEdge","RightClipEdge","TopClipEdge","Texture","maxWidth","maxHeight","setClamp","getPixel","getBilinearFilteredPixel","x0y0","x1y0","x0y1","x1y1","col1","col2","getPixel2","interpolateComp","getPixelRasterizer","getPixel3","xFrac","yFrac","oneMinusXfrac","oneMinusYfrac","generateProceduralNoise","generateProceduralParticleTexture","generateProceduralParticleTexture2","transparency","Image","onload","onerror","withAlpha","conv","webpackAsyncContext","req","__webpack_require__","o","code","ids","SyncData","_track","getIndexForName","getTrackLength","createIndex","varName","idx","lo","hi","mi","findKeyIndex","k0","k1","interpolation","pow","SyncDevicePlayer","cfg","_urlRequest","_syncData","_eventHandler","XMLHttpRequest","onreadystatechange","urlRequestHandler","send","readyState","status","xmlString","tLen","kLen","trackList","DOMParser","parseFromString","getElementsByTagName","keyList","parseFloat","ready","readXML","responseText","rocketXML","evt","handler","SyncDeviceClient","_ws","WebSocket","socketURL","toInt","arr","view","DataView","setUint8","byteLength","getInt8","getInt32","onopen","binaryType","onmessage","queue","Uint8Array","cmd","subarray","getFloat32","save","onclose","warn","utf8Name","fromCharCode","message","buffer","streamInt","_device","_previousIntRow","_connected","_config","deviceReady","deviceUpdate","devicePlay","devicePause","mode","option","hasOwnProperty","getConfig","audio","createPlayer","containerElement","opts","ui","UI","Basic","player","playerOpts","trackOpts","jQuery","fn","cowbell","each","OpenMPTGenerator","audioCtx","leftBufferPtr","rightBufferPtr","initModule","byteArray","Int8Array","ptrToFile","_malloc","asciiToStack","str","stackStr","stackAlloc","writeAsciiToMemory","HEAPU8","_openmpt_module_create_from_memory","stack","stackSave","_openmpt_module_ctl_set","stackRestore","_openmpt_module_get_duration_seconds","cleanup","_openmpt_module_destroy","_free","onReady","pathToLibOpenMPT","script","onRuntimeInitialized","ensureLibOpenMPT","channelCount","request","response","responseType","generateAudio","outputBuffer","outputL","getChannelData","outputR","framesToRender","framesRendered","framesPerChunk","actualFramesPerChunk","_openmpt_module_read_float_stereo","sampleRate","rawAudioLeft","HEAPF32","rawAudioRight","seekable","_openmpt_module_set_position_seconds","reset","Common","WebAudioPlayer","generatorConstructor","generator","AudioContext","webkitAudioContext","latencyHint","BUFFER_SIZE","HAVE_NOTHING","HAVE_METADATA","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","scriptNode","playStartTimestamp","generatorIsReady","playWasRequestedBeforeReady","hasStartedProcessing","playFromTime","newTime","disconnect","createScriptProcessor","onaudioprocess","playbackTime","generatedLength","chan","numberOfChannels","channelData","onended","ontimeupdate","connect","destination","state","resume","onplay","pausedAtTrackTime","pausedAtTimestamp","onpause","__defineGetter__","__defineSetter__","close","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","getter","__esModule","definition","defineProperty","enumerable","get","chunkId","reduce","globalThis","Function","prop","needAttach","scripts","charset","timeout","nc","onScriptComplete","prev","clearTimeout","doneFns","Symbol","toStringTag","scriptUrl","importScripts","location","currentScript","installedChunks","installedChunkData","promise","reject","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal"],"sourceRoot":""}