{"version":3,"file":"demo.js","mappings":"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","sources":["webpack://aisa/webpack/runtime/load script","webpack://aisa/./src/demo-style.css","webpack://aisa/./node_modules/css-loader/dist/runtime/api.js","webpack://aisa/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://aisa/./node_modules/stats.js/build/stats.min.js","webpack://aisa/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://aisa/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://aisa/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://aisa/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://aisa/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://aisa/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://aisa/./src/CullFace.ts","webpack://aisa/./src/RandomNumberGenerator.ts","webpack://aisa/./src/TextureCoordinate.ts","webpack://aisa/./src/Vertex.ts","webpack://aisa/./src/core/Color.ts","webpack://aisa/./src/core/Utils.ts","webpack://aisa/./src/geometrical-objects/AbstractGeometricObject.ts","webpack://aisa/./src/geometrical-objects/Torus.ts","webpack://aisa/./src/math/Interpolator.ts","webpack://aisa/./src/math/Matrix3.ts","webpack://aisa/./src/math/Matrix4f.ts","webpack://aisa/./src/math/Vector2f.ts","webpack://aisa/./src/math/Vector3f.ts","webpack://aisa/./src/math/Vector4f.ts","webpack://aisa/./src/rasterizer/AbstractScanlineTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/AbstractTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/TexturedAlphaBlendingTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/TexturedTriangleRasterizer.ts","webpack://aisa/./src/rendering-pipelines/AbstractRenderingPipeline.ts","webpack://aisa/./src/rendering-pipelines/TexturingRenderingPipeline.ts","webpack://aisa/./src/scenes/AbstractScene.ts","webpack://aisa/./src/screen-space-clipping/AbstractClipEdge.ts","webpack://aisa/./src/screen-space-clipping/BottomClipEdge.ts","webpack://aisa/./src/screen-space-clipping/LeftClipEdge.ts","webpack://aisa/./src/screen-space-clipping/RightClipEdge.ts","webpack://aisa/./src/screen-space-clipping/TopClipEdge.ts","webpack://aisa/./src/texture/Texture.ts","webpack://aisa/./src/texture/TextureUtils.ts","webpack://aisa/./src/sound/JSRocket.js","webpack://aisa/./src/sound/cowbell/audio_player.js","webpack://aisa/./src/sound/cowbell/cowbell.js","webpack://aisa/./src/sound/cowbell/openmpt/openmpt_player.js","webpack://aisa/./src/sound/cowbell/web_audio_player.js","webpack://aisa/webpack/bootstrap","webpack://aisa/webpack/runtime/compat get default export","webpack://aisa/webpack/runtime/define property getters","webpack://aisa/webpack/runtime/ensure chunk","webpack://aisa/webpack/runtime/get javascript chunk filename","webpack://aisa/webpack/runtime/global","webpack://aisa/webpack/runtime/hasOwnProperty shorthand","webpack://aisa/webpack/runtime/make namespace object","webpack://aisa/webpack/runtime/publicPath","webpack://aisa/webpack/runtime/jsonp chunk loading","webpack://aisa/webpack/runtime/nonce","webpack://aisa/./src/blitter/ScaleClipBlitter.ts","webpack://aisa/./src/rasterizer/FlatShadingTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/line/LineRasterizer.ts","webpack://aisa/./src/rasterizer/line/LineRasterizerNoZ.ts","webpack://aisa/./src/screen-space-clipping/CohenSutherlandLineClipper.ts","webpack://aisa/./src/Framebuffer.ts","webpack://aisa/./src/fullscreen/FullscreenUtils.ts","webpack://aisa/./src/Canvas.ts","webpack://aisa/./src/sound/MusicProperties.ts","webpack://aisa/./src/sound/SoundManager.ts","webpack://aisa/./src/examples/block-fade/TransitionMethods.ts","webpack://aisa/./src/examples/block-fade/Particle.ts","webpack://aisa/./src/examples/block-fade/BlockFade.ts","webpack://aisa/./src/core/LinkedList.ts","webpack://aisa/./src/core/Node.ts","webpack://aisa/./src/examples/demo/canvas-record.ts","webpack://aisa/./src/examples/demo/DemoScene.ts","webpack://aisa/./src/demo-style.css?5811","webpack://aisa/./src/examples/demo/Application.ts"],"sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"aisa:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n    padding: 0;\n    margin: 0;\n    color: white;\n    background-color: #000;\n    font-family: 'Play', sans-serif;\n    font-size: 100%;\n}\n\n#aisa {\n    cursor: zoom-in;\n}\n\n/* debugging */\n#debug {\n    bottom: 0;\n    height: 24px;\n    width: 640px;\n    background-color: black;\n    display: none;\n}\n\n#ticker_controls {\n    padding: 10px 0 10px 0;\n    -moz-user-select: -moz-none;\n    -khtml-user-select: none;\n    -webkit-user-select: none;\n}\n\n#ticker_controls .fa {\n    cursor: pointer;\n    color: white;\n    padding-left: 8px;\n    padding-right: 8px;\n    width: 16px;\n}\n\n#timeline {\n    -webkit-appearance: none;\n    width: 100%;\n    height: 25px;\n    background: #fff;\n    outline: none;\n    -webkit-transition: .2s;\n    transition: opacity .2s;\n}\n\n#timeline::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 20px;\n    height: 25px;\n    background: rgb(10, 28, 109);\n    cursor: pointer;\n}\n\n#timeline::-moz-range-thumb {\n    width: 20px;\n    height: 25px;\n    background: #000;\n    cursor: pointer;\n}\n\n#scene, #time {\n    font-weight: bold;\n    padding-right: 10px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/demo-style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,UAAU;IACV,SAAS;IACT,YAAY;IACZ,sBAAsB;IACtB,+BAA+B;IAC/B,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA,cAAc;AACd;IACI,SAAS;IACT,YAAY;IACZ,YAAY;IACZ,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,sBAAsB;IACtB,2BAA2B;IAC3B,wBAAwB;IACxB,yBAAyB;AAC7B;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,wBAAwB;IACxB,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,uBAAuB;AAC3B;;AAEA;IACI,wBAAwB;IACxB,gBAAgB;IAChB,WAAW;IACX,YAAY;IACZ,4BAA4B;IAC5B,eAAe;AACnB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;AACvB\",\"sourcesContent\":[\"body {\\n    padding: 0;\\n    margin: 0;\\n    color: white;\\n    background-color: #000;\\n    font-family: 'Play', sans-serif;\\n    font-size: 100%;\\n}\\n\\n#aisa {\\n    cursor: zoom-in;\\n}\\n\\n/* debugging */\\n#debug {\\n    bottom: 0;\\n    height: 24px;\\n    width: 640px;\\n    background-color: black;\\n    display: none;\\n}\\n\\n#ticker_controls {\\n    padding: 10px 0 10px 0;\\n    -moz-user-select: -moz-none;\\n    -khtml-user-select: none;\\n    -webkit-user-select: none;\\n}\\n\\n#ticker_controls .fa {\\n    cursor: pointer;\\n    color: white;\\n    padding-left: 8px;\\n    padding-right: 8px;\\n    width: 16px;\\n}\\n\\n#timeline {\\n    -webkit-appearance: none;\\n    width: 100%;\\n    height: 25px;\\n    background: #fff;\\n    outline: none;\\n    -webkit-transition: .2s;\\n    transition: opacity .2s;\\n}\\n\\n#timeline::-webkit-slider-thumb {\\n    -webkit-appearance: none;\\n    appearance: none;\\n    width: 20px;\\n    height: 25px;\\n    background: rgb(10, 28, 109);\\n    cursor: pointer;\\n}\\n\\n#timeline::-moz-range-thumb {\\n    width: 20px;\\n    height: 25px;\\n    background: #000;\\n    cursor: pointer;\\n}\\n\\n#scene, #time {\\n    font-weight: bold;\\n    padding-right: 10px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","export enum CullFace {\n    FRONT = 0,\n    BACK = 1,\n    DISABLED\n}\n","export default class RandomNumberGenerator {\n\n    private seed: number;\n\n    public constructor() {\n        this.seed = 6;\n    }\n\n    public getFloat(): number {\n        this.seed = (this.seed * 9301 + 49297) % 233280;\n        return this.seed / 233280;\n    }\n\n    public setSeed(seed: number): void {\n        this.seed = seed;\n    }\n\n}\n","export class TextureCoordinate {\n    public u: number;\n    public v: number;\n\n    constructor(u?: number, v?: number) {\n        this.u = u;\n        this.v = v;\n    }\n}\n","import { Color } from './core/Color';\nimport { Vector4f } from './math/index';\nimport { TextureCoordinate } from './TextureCoordinate';\n\nexport class Vertex {\n    public position: Vector4f;\n    public projection: Vector4f = new Vector4f(0,0,0);\n    public normal: Vector4f;\n    public color: Color;\n    public textureCoordinate: TextureCoordinate = new TextureCoordinate();\n}\n","/**\n * Color\n *\n * @export\n * @class Color\n * @see https://www.rapidtables.com/web/color/RGB_Color.html\n * @author Johannes Diemke\n */\nexport class Color {\n\n    public static readonly BLACK: Color = new Color(0, 0, 0, 255);\n    public static readonly WHITE: Color = new Color(255, 255, 255, 255);\n    public static readonly RED: Color = new Color(255, 0, 0, 255);\n    public static readonly GREEN: Color = new Color(0, 255, 0, 255);\n    public static readonly LIME: Color = new Color(0, 255, 0, 255);\n    public static readonly BLUE: Color = new Color(0, 0, 255, 255);\n    public static readonly DARK_BLUE: Color = new Color(0, 0, 64, 255);\n    public static readonly YELLOW: Color = new Color(255, 255, 0, 255);\n    public static readonly CYAN: Color = new Color(0, 255, 255, 255);\n    public static readonly MAGENTA: Color = new Color(255, 0, 255, 255);\n    public static readonly SLATE_GRAY: Color = new Color(112, 128, 144, 255);\n    public static readonly DARK_GRAY: Color = new Color(19, 19, 20, 255);\n    public static readonly ORANGE: Color = new Color(255, 160, 122);\n\n    constructor(public r: number = 0, public g: number = 0, public b: number = 0, public a: number = 255) {\n    }\n\n    public toPackedFormat(): number {\n        return this.r | this.g << 8 | this.b << 16 | this.a << 24;\n    }\n\n    public sub(color: Color): Color {\n        return new Color(this.r - color.r, this.g - color.g, this.b - color.b, 255);\n    }\n\n    public add(color: Color): Color {\n        return new Color(this.r + color.r, this.g + color.g, this.b + color.b, 255);\n    }\n\n    public div(num: number): Color {\n        return new Color(this.r / num, this.g / num, this.b / num, 255);\n    }\n\n    public mul(num: number): Color {\n        return new Color(this.r * num, this.g * num, this.b * num, 255);\n    }\n\n}\n","export class Utils {\n    /**\n     * Returns a number whose value is limited to the given range.\n     *\n     * Example: limit the output of this computation to between 0 and 255\n     * (x * 255).clamp(0, 255)\n     *\n     * @param {Number} min The lower boundary of the output range\n     * @param {Number} max The upper boundary of the output range\n     * @returns A number in the range [min, max]\n     * @type Number\n     */\n    public static clamp(input: number, min: number, max: number): number {\n        return input <= min ? min : input >= max ? max : input;\n    }\n\n    /**\n     * Re-maps a number from one range to another.\n     *\n     * @param  {number} value           the incoming value to be converted\n     * @param  {number} istart          lower bound of the value's current range\n     * @param  {number} istop           upper bound of the value's current range\n     * @param  {number} ostart          lower bound of the value's target range\n     * @param  {number} ostop           upper bound of the value's target range\n     */\n    public static map(value: number, istart: number, istop: number, ostart: number, ostop: number): number {\n        return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));\n    }\n\n    /**\n     * returns random integer between two values\n     *\n     * @param  {number} value           the incoming value to be converted\n     */\n    public static getRandomInt(min: number, max: number): number {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n    }\n\n    public static arrayCopy(src, srcPosition: number, dst, dstPosition: number, length: number) {\n        // the index to begin splicing from dst array\n        let start: number;\n        let end: number;\n\n        if (typeof length !== 'undefined') {\n            end = Math.min(length, src.length);\n            start = dstPosition;\n            src = src.slice(srcPosition, end + srcPosition);\n        } else {\n            if (typeof dst !== 'undefined') {\n                // src, dst, length\n                // rename  so we don't get confused\n                end = dst;\n                end = Math.min(end, src.length);\n            } else {\n                // src, dst\n                end = src.length;\n            }\n\n            start = 0;\n            // rename  so we don't get confused\n            dst = srcPosition;\n            src = src.slice(0, end);\n        }\n\n        // Since we are not returning the array and JavaScript is pass by reference\n        // we must modify the actual values of the array\n        // instead of reassigning arrays\n        Array.prototype.splice.apply(dst, [start, end].concat(src));\n    }\n\n    // This is a port of Ken Perlin's Java code. The\n    // original Java code is at http://cs.nyu.edu/%7Eperlin/noise/.\n    // Note that in this version, a number from 0 to 1 is returned.\n    public static PerlinNoise = new function () {\n\n        this.noise = (x: number, y: number, z: number) => {\n\n            const p = new Array(512)\n            const permutation = [151, 160, 137, 91, 90, 15,\n                131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\n                190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\n                88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\n                77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\n                102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\n                135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\n                5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\n                223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\n                129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\n                251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\n                49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\n                138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180\n            ];\n            for (let i = 0; i < 256; i++)\n                p[256 + i] = p[i] = permutation[i];\n\n            const X = Math.floor(x) & 255;                              // FIND UNIT CUBE THAT\n            const Y = Math.floor(y) & 255;                              // CONTAINS POINT.\n            const Z = Math.floor(z) & 255;\n            x -= Math.floor(x);                                         // FIND RELATIVE X,Y,Z\n            y -= Math.floor(y);                                         // OF POINT IN CUBE.\n            z -= Math.floor(z);\n            const u = fade(x);                                          // COMPUTE FADE CURVES\n            const v = fade(y);                                          // FOR EACH OF X,Y,Z.\n            const w = fade(z);\n            const A = p[X] + Y;\n            const AA = p[A] + Z;\n            const AB = p[A + 1] + Z;       // HASH COORDINATES OF\n            const B = p[X + 1] + Y;\n            const BA = p[B] + Z;\n            const BB = p[B + 1] + Z;   // THE 8 CUBE CORNERS,\n\n            return scale(lerp(w, lerp(v, lerp(u, grad(p[AA], x, y, z),  // AND ADD\n                grad(p[BA], x - 1, y, z)), // BLENDED\n                lerp(u, grad(p[AB], x, y - 1, z),  // RESULTS\n                    grad(p[BB], x - 1, y - 1, z))),// FROM  8\n                lerp(v, lerp(u, grad(p[AA + 1], x, y, z - 1),  // CORNERS\n                    grad(p[BA + 1], x - 1, y, z - 1)), // OF CUBE\n                    lerp(u, grad(p[AB + 1], x, y - 1, z - 1),\n                        grad(p[BB + 1], x - 1, y - 1, z - 1)))));\n        }\n        function fade(t) { return t * t * t * (t * (t * 6 - 15) + 10); }\n        function lerp(t, a, b) { return a + t * (b - a); }\n        function grad(hash, x, y, z) {\n            const h = hash & 15;                      // CONVERT LO 4 BITS OF HASH CODE\n            const u = h < 8 ? x : y;                 // INTO 12 GRADIENT DIRECTIONS.\n            const v = h < 4 ? y : h === 12 || h === 14 ? x : z;\n            return ((h & 1) === 0 ? u : -u) + ((h & 2) === 0 ? v : -v);\n        }\n        function scale(n) { return (1 + n) / 2; }\n    }\n\n    /**\n     * Cubic interpolation is the simplest method that offers true continuity between samples. \n     * It estimates values corresponding to intermediate samples present between the original or previous samples\n     *\n     * @param  {number} y0           sample 1\n     * @param  {number} y1           sample 2\n     * @param  {number} y2           sample 3\n     * @param  {number} y3           sample 4\n     * @param  {number} mu           behaves the same way for interpolating between the sample y1 to y2\n     */\n    public static CubicInterpolate(y0: number, y1: number, y2: number, y3: number, mu: number): number {\n        const mu2 = mu * mu;\n        const a0 = y3 - y2 - y0 + y1;\n        const a1 = y0 - y1 - a0;\n        const a2 = y2 - y0;\n        const a3 = y1;\n        return (a0 * mu * mu2 + a1 * mu2 + a2 * mu + a3);\n    }\n\n    /**\n     * Cosine interpolation serves to provide a smooth transition between adjacent samples. \n     * It estimates values corresponding to intermediate samples present between the original or previous samples\n     *\n     * @param  {number} y0           sample 1\n     * @param  {number} y1           sample 2\n     * @param  {number} mu           behaves the same way for interpolating between the sample 1 to 2\n     */\n    public static CosineInterpolate(y1: number, y2: number, mu: number): number {\n        const mu2 = (1 - Math.cos(mu * Math.PI)) / 2;\n        return (y1 * (1 - mu2) + y2 * mu2);\n    }\n\n}\n","import { Vector4f } from '../math/index';\nimport { FlatShadedFace } from './FlatShadedFace';\nimport { FlatshadedMesh } from './FlatshadedMesh';\n\nexport class AbstractGeometricObject {\n\n    protected mesh: FlatshadedMesh;\n    protected inverse: boolean;\n\n    protected buildMesh(points: Array<Vector4f>, index: Array<number>, inverse: boolean = false): void {\n        this.inverse = inverse;\n        const normals: Array<Vector4f> = new Array<Vector4f>();\n\n        // todo use index array for normals to have less normal objects\n        // compute normal and check wheter the normal already exists. then reuse inded\n        // maybe have a similarity faktor to reuse similar normals\n        for (let i = 0; i < index.length; i += 3) {\n            const normal = points[index[i + 1]].sub(points[index[i]]).cross(points[index[i + 2]].sub(points[index[i]]));\n            normals.push(this.inverse ? normal.normalize().mul(-1) : normal.normalize()); // normalize?\n        }\n\n\n        const faces: Array<FlatShadedFace> = new Array<FlatShadedFace>();\n\n        for (let i = 0; i < index.length; i += 3) {\n\n            faces.push({\n                n1: i / 3,\n                n2: i / 3,\n                n3: i / 3,\n                v1: index[0 + i],\n                v2: index[1 + i],\n                v3: index[2 + i],\n            });\n        }\n\n        // Create class for objects\n        this.mesh = {\n            points,\n            normals,\n            faces,\n            transformedPoints: points.map(() => new Vector4f(0, 0, 0, 0)),\n            transformedNormals: normals.map(() => new Vector4f(0, 0, 0, 0))\n        };\n    }\n\n    public getMesh(): FlatshadedMesh {\n        return this.mesh;\n    }\n\n}\n","import { Vector4f } from '../math/Vector4f';\nimport { AbstractGeometricObject } from './AbstractGeometricObject';\nimport { Vector3f } from '../math/Vector3f';\n\nexport class Torus extends AbstractGeometricObject {\n\n    public constructor(invert: boolean = false) {\n        super();\n\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 15;\n        const STEPS2 = 12;\n        // find a better solution for inversion\n        // maybe configuration by constructor of base class and construction of geometry\n        // in template method pattern method\n        this.inverse = invert;\n\n        for (let i = 0; i < STEPS; i++) {\n            const frame = this.torusFunction(i * 2 * Math.PI / STEPS);\n            const frame2 = this.torusFunction(i * 2 * Math.PI / STEPS + 0.1);\n            const up = new Vector3f(0.0, 4.0, 0);\n            const right = frame2.sub(frame).cross(up);\n\n            for (let r = 0; r < STEPS2; r++) {\n                const pos = up.mul(Math.sin(r * 2 * Math.PI / STEPS2)).add(right.mul(Math.cos(r * 2 * Math.PI / STEPS2))).add(frame);\n                points.push(new Vector4f(pos.x, pos.y, pos.z, 1.0));\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2) % points.length);\n            }\n        }\n\n        this.buildMesh(points, index);\n    }\n\n    public torusFunction(alpha: number): Vector3f {\n        return new Vector3f(Math.sin(alpha) * 10, 0, Math.cos(alpha) * 10);\n    }\n\n}\n","export class Interpolator {\n\n    public static interpolate(start: number, end: number, current: number): number {\n        if (current <= start) {\n            return 0;\n        }\n        if (current >= end) {\n            return 1;\n        }\n        return (current - start) / (end - start);\n    }\n\n    public static cosineInterpolate(y1: number, y2: number, mu: number): number {\n        if (mu <= y1) { return 0; }\n        if (mu >= y2) { return 1; }\n        const mu2 = (mu - y1) / (y2 - y1);\n        return (1 - Math.cos(mu2 * Math.PI)) / 2;\n    }\n\n}\n","import { Vector3f } from './Vector3f';\n\nexport class Matrix3f {\n\n    public m11: number;\n    public m12: number;\n    public m13: number;\n\n    public m21: number;\n    public m22: number;\n    public m23: number;\n\n    public m31: number;\n    public m32: number;\n    public m33: number;\n\n    static constructXRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = cos;\n        matrix.m23 = -sin;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = sin;\n        matrix.m33 = cos;\n\n        return matrix;\n    }\n\n    static constructYRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = Math.cos(angle);\n        matrix.m12 = 0.0;\n        matrix.m13 = Math.sin(angle);\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n\n        matrix.m31 = -Math.sin(angle);\n        matrix.m32 = 0.0;\n        matrix.m33 = Math.cos(angle);\n\n        return matrix;\n    }\n\n    static constructZRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = Math.cos(angle);\n        matrix.m12 = -Math.sin(angle);\n        matrix.m13 = 0.0;\n\n        matrix.m21 = Math.sin(angle);\n        matrix.m22 = Math.cos(angle);\n        matrix.m23 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n\n        return matrix;\n    }\n\n    static constructScaleMatrix(xScale: number, yScale: number, zScale: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = xScale;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = yScale;\n        matrix.m23 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = zScale;\n\n        return matrix;\n    }\n\n    public multiplyMatrix(matrix: Matrix3f): Matrix3f {\n        const result = new Matrix3f();\n\n        result.m11 = this.m11 * matrix.m11 + this.m12 * matrix.m21 + this.m13 * matrix.m31;\n        result.m21 = this.m21 * matrix.m11 + this.m22 * matrix.m21 + this.m23 * matrix.m31;\n        result.m31 = this.m31 * matrix.m11 + this.m32 * matrix.m21 + this.m33 * matrix.m31;\n\n        result.m12 = this.m11 * matrix.m12 + this.m12 * matrix.m22 + this.m13 * matrix.m32;\n        result.m22 = this.m21 * matrix.m12 + this.m22 * matrix.m22 + this.m23 * matrix.m32;\n        result.m32 = this.m31 * matrix.m12 + this.m32 * matrix.m22 + this.m33 * matrix.m32;\n\n        result.m13 = this.m11 * matrix.m13 + this.m12 * matrix.m23 + this.m13 * matrix.m33;\n        result.m23 = this.m21 * matrix.m13 + this.m22 * matrix.m23 + this.m23 * matrix.m33;\n        result.m33 = this.m31 * matrix.m13 + this.m32 * matrix.m23 + this.m33 * matrix.m33;\n\n        return result;\n\n    }\n\n    public multiply(vector: Vector3f): Vector3f {\n        return new Vector3f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z);\n    }\n}","/**\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_00_introduction.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_00_research.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_01_pipeline.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_02_transformations.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_03_projections.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_04_lighting.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_05_rasterization.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_06_texturing.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_07_shadows.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_08_transparencyReflection.pdf\n * https://cg.informatik.uni-freiburg.de/teaching.htm\n * @author Johannes Diemke\n * @since 2017-05-07\n */\n\nimport { Vector3f } from './Vector3f';\nimport { Vector4f } from './Vector4f';\n\nexport class Matrix4f {\n\n    public m11: number;\n    public m12: number;\n    public m13: number;\n    public m14: number;\n\n    public m21: number;\n    public m22: number;\n    public m23: number;\n    public m24: number;\n\n    public m31: number;\n    public m32: number;\n    public m33: number;\n    public m34: number;\n\n    public m41: number;\n    public m42: number;\n    public m43: number;\n    public m44: number;\n\n    static constructIdentityMatrix(): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n\n    public setIdentityMatrix(): void {\n\n\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public transpose(): Matrix4f {\n        const transpose: Matrix4f = new Matrix4f();\n\n        transpose.m11 = this.m11;\n        transpose.m12 = this.m21;\n        transpose.m13 = this.m31;\n        transpose.m14 = this.m41;\n\n        transpose.m21 = this.m12;\n        transpose.m22 = this.m22;\n        transpose.m23 = this.m32;\n        transpose.m24 = this.m42;\n\n        transpose.m31 = this.m13;\n        transpose.m32 = this.m23;\n        transpose.m33 = this.m33;\n        transpose.m34 = this.m43;\n\n        transpose.m41 = this.m14;\n        transpose.m42 = this.m24;\n        transpose.m43 = this.m34;\n        transpose.m44 = this.m44;\n\n        return transpose;\n    }\n\n    public computeNormalMatrix(): Matrix4f {\n        // http://www.lighthouse3d.com/tutorials/glsl-12-tutorial/the-normal-matrix/\n        // https://www.gamedev.net/forums/topic/443040-inverse-of-modelview-matrix/\n        // https://computergraphics.stackexchange.com/questions/1502/why-is-the-transposed-inverse-of-the-model-view-matrix-used-to-transform-the-nor\n        return this.inverse().transpose();\n    }\n\n    public inverse(): Matrix4f {\n        // Inverse hack\n        // - only works when the MV matrix only contains\n        // translation and rotation and scaling that is the same in all directions\n\n        const inverseTranslation: Matrix4f = Matrix4f.constructIdentityMatrix();\n        inverseTranslation.m14 = -this.m14;\n        inverseTranslation.m24 = -this.m24;\n        inverseTranslation.m34 = -this.m34;\n\n        const scale1 = 1.0 / Math.sqrt(this.m11 * this.m11 + this.m12 * this.m12 + this.m13 * this.m13);\n        const scale2 = 1.0 / Math.sqrt(this.m21 * this.m21 + this.m22 * this.m22 + this.m23 * this.m23);\n        const scale3 = 1.0 / Math.sqrt(this.m31 * this.m31 + this.m32 * this.m32 + this.m33 * this.m33);\n        const inverseRotation: Matrix4f = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11 * scale1;\n        inverseRotation.m21 = this.m12 * scale1;\n        inverseRotation.m31 = this.m13 * scale1;\n\n        inverseRotation.m12 = this.m21 * scale2;\n        inverseRotation.m22 = this.m22 * scale2;\n        inverseRotation.m32 = this.m23 * scale2;\n\n        inverseRotation.m13 = this.m31 * scale3;\n        inverseRotation.m23 = this.m32 * scale3;\n        inverseRotation.m33 = this.m33 * scale3;\n\n        return inverseRotation.multiplyMatrix(inverseTranslation);\n    }\n\n    public getInverseRotation(): Matrix4f {\n        const scale = 1.0;\n        const inverseRotation = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11 * scale;\n        inverseRotation.m21 = this.m12 * scale;\n        inverseRotation.m31 = this.m13 * scale;\n\n        inverseRotation.m12 = this.m21 * scale;\n        inverseRotation.m22 = this.m22 * scale;\n        inverseRotation.m32 = this.m23 * scale;\n\n        inverseRotation.m13 = this.m31 * scale;\n        inverseRotation.m23 = this.m32 * scale;\n        inverseRotation.m33 = this.m33 * scale;\n\n        return inverseRotation;\n    }\n\n    public getRotation(): Matrix4f {\n\n        const inverseRotation = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11;\n        inverseRotation.m21 = this.m21;\n        inverseRotation.m31 = this.m31;\n\n        inverseRotation.m12 = this.m12;\n        inverseRotation.m22 = this.m22;\n        inverseRotation.m32 = this.m32;\n\n        inverseRotation.m13 = this.m13;\n        inverseRotation.m23 = this.m23;\n        inverseRotation.m33 = this.m33;\n\n        return inverseRotation;\n    }\n\n    static constructShadowMatrix(): Matrix4f {\n        const planePoint: Vector3f = new Vector3f(0, -1.5, 0);\n        const planeNormal: Vector3f = new Vector3f(0, 1, 0);\n        const lightPosition: Vector3f = new Vector3f(0, 11, 0);\n\n        const d = -planePoint.dot(planeNormal);\n        const NdotL = planeNormal.x * lightPosition.x +\n            planeNormal.y * lightPosition.y +\n            planeNormal.z * lightPosition.z;\n\n        const shadowMatrix: Matrix4f = new Matrix4f();\n\n        shadowMatrix.m11 = NdotL + d - lightPosition.x * planeNormal.x;\n        shadowMatrix.m12 = - lightPosition.x * planeNormal.y;\n        shadowMatrix.m13 = - lightPosition.x * planeNormal.z;\n        shadowMatrix.m14 = - lightPosition.x * d;\n\n        shadowMatrix.m21 = - lightPosition.y * planeNormal.x;\n        shadowMatrix.m22 = NdotL + d - lightPosition.y * planeNormal.y;\n        shadowMatrix.m23 = - lightPosition.y * planeNormal.z;\n        shadowMatrix.m24 = - lightPosition.y * d;\n\n        shadowMatrix.m31 = - lightPosition.z * planeNormal.x;\n        shadowMatrix.m32 = - lightPosition.z * planeNormal.y;\n        shadowMatrix.m33 = NdotL + d - lightPosition.z * planeNormal.z;\n        shadowMatrix.m34 = - lightPosition.z * d;\n\n        shadowMatrix.m41 = - planeNormal.x;\n        shadowMatrix.m42 = - planeNormal.y;\n        shadowMatrix.m43 = - planeNormal.z;\n        shadowMatrix.m44 = NdotL;\n\n        return shadowMatrix;\n\n    }\n\n    static constructTranslationMatrix(tx: number, ty: number, tz: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = tx;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = ty;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = tz;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public setTranslationMatrix(tx: number, ty: number, tz: number): void {\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = tx;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = ty;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = tz;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    static constructXRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = Math.cos(alpha);\n        matrix.m23 = -Math.sin(alpha);\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = Math.sin(alpha);\n        matrix.m33 = Math.cos(alpha);\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public setXRotationMatrix(alpha: number): void {\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = Math.cos(alpha);\n        this.m23 = -Math.sin(alpha);\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = Math.sin(alpha);\n        this.m33 = Math.cos(alpha);\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setZRotationMatrix(alpha: number): void {\n        this.m11 = Math.cos(alpha);\n        this.m12 = -Math.sin(alpha);\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = Math.sin(alpha);\n        this.m22 = Math.cos(alpha);\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setScaleMatrix(sx: number, sy: number, sz: number): void {\n        this.m11 = sx;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = sy;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = sz;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setYRotationMatrix(alpha: number): void {\n        this.m11 = Math.cos(alpha);\n        this.m12 = 0.0;\n        this.m13 = Math.sin(alpha);\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = -Math.sin(alpha);\n        this.m32 = 0.0;\n        this.m33 = Math.cos(alpha);\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n\n    public setRotationMatrix(x: number,y: number,z: number, alpha: number): void {\n        const c = Math.cos(Math.PI * 2 *alpha / 360 );\n        const s = Math.sin(Math.PI * 2 *alpha / 360 );\n        const vector = new Vector3f(x,y,z);\n        vector.normalize2();\n\n        this.m11 = (1.0 - c) * vector.x * vector.x + c;\n        this.m12 = (1.0 - c) * vector.x * vector.y - s * vector.z;\n        this.m13 = (1.0 - c) * vector.x * vector.z + s * vector.y;\n        this.m14 = 0.0;\n\n        this.m21 = (1.0 - c) * vector.x * vector.y + s * vector.z;\n        this.m22 = (1.0 - c) * vector.y * vector.y + c;\n        this.m23 = (1.0 - c) * vector.y * vector.z - s * vector.x;\n        this.m24 = 0.0;\n\n        this.m31 = (1.0 - c) * vector.x * vector.z - s * vector.y;\n        this.m32 = (1.0 - c) * vector.y * vector.z + s * vector.x;\n        this.m33 = (1.0 - c) * vector.z * vector.z + c;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    static constructYRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = Math.cos(alpha);\n        matrix.m12 = 0.0;\n        matrix.m13 = Math.sin(alpha);\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = -Math.sin(alpha);\n        matrix.m32 = 0.0;\n        matrix.m33 = Math.cos(alpha);\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    static constructZRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = Math.cos(alpha);\n        matrix.m12 = -Math.sin(alpha);\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = Math.sin(alpha);\n        matrix.m22 = Math.cos(alpha);\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    static constructScaleMatrix(sx: number, sy: number = sx, sz: number = sy): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = sx;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = sy;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = sz;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public multiplyMatrix(matrix: Matrix4f): Matrix4f {\n        const result = new Matrix4f();\n\n        result.m11 = this.m11 * matrix.m11 + this.m12 * matrix.m21 + this.m13 * matrix.m31 + this.m14 * matrix.m41;\n        result.m21 = this.m21 * matrix.m11 + this.m22 * matrix.m21 + this.m23 * matrix.m31 + this.m24 * matrix.m41;\n        result.m31 = this.m31 * matrix.m11 + this.m32 * matrix.m21 + this.m33 * matrix.m31 + this.m34 * matrix.m41;\n        result.m41 = this.m41 * matrix.m11 + this.m42 * matrix.m21 + this.m43 * matrix.m31 + this.m44 * matrix.m41;\n\n        result.m12 = this.m11 * matrix.m12 + this.m12 * matrix.m22 + this.m13 * matrix.m32 + this.m14 * matrix.m42;\n        result.m22 = this.m21 * matrix.m12 + this.m22 * matrix.m22 + this.m23 * matrix.m32 + this.m24 * matrix.m42;\n        result.m32 = this.m31 * matrix.m12 + this.m32 * matrix.m22 + this.m33 * matrix.m32 + this.m34 * matrix.m42;\n        result.m42 = this.m41 * matrix.m12 + this.m42 * matrix.m22 + this.m43 * matrix.m32 + this.m44 * matrix.m42;\n\n        result.m13 = this.m11 * matrix.m13 + this.m12 * matrix.m23 + this.m13 * matrix.m33 + this.m14 * matrix.m43;\n        result.m23 = this.m21 * matrix.m13 + this.m22 * matrix.m23 + this.m23 * matrix.m33 + this.m24 * matrix.m43;\n        result.m33 = this.m31 * matrix.m13 + this.m32 * matrix.m23 + this.m33 * matrix.m33 + this.m34 * matrix.m43;\n        result.m43 = this.m41 * matrix.m13 + this.m42 * matrix.m23 + this.m43 * matrix.m33 + this.m44 * matrix.m43;\n\n        result.m14 = this.m11 * matrix.m14 + this.m12 * matrix.m24 + this.m13 * matrix.m34 + this.m14 * matrix.m44;\n        result.m24 = this.m21 * matrix.m14 + this.m22 * matrix.m24 + this.m23 * matrix.m34 + this.m24 * matrix.m44;\n        result.m34 = this.m31 * matrix.m14 + this.m32 * matrix.m24 + this.m33 * matrix.m34 + this.m34 * matrix.m44;\n        result.m44 = this.m41 * matrix.m14 + this.m42 * matrix.m24 + this.m43 * matrix.m34 + this.m44 * matrix.m44;\n\n        return result;\n    }\n\n    public multiply2(matrix: Matrix4f, matrix2: Matrix4f): void {\n        this.m11 = matrix.m11 * matrix2.m11 + matrix.m12 * matrix2.m21 + matrix.m13 * matrix2.m31 + matrix.m14 * matrix2.m41;\n        this.m21 = matrix.m21 * matrix2.m11 + matrix.m22 * matrix2.m21 + matrix.m23 * matrix2.m31 + matrix.m24 * matrix2.m41;\n        this.m31 = matrix.m31 * matrix2.m11 + matrix.m32 * matrix2.m21 + matrix.m33 * matrix2.m31 + matrix.m34 * matrix2.m41;\n        this.m41 = matrix.m41 * matrix2.m11 + matrix.m42 * matrix2.m21 + matrix.m43 * matrix2.m31 + matrix.m44 * matrix2.m41;\n\n        this.m12 = matrix.m11 * matrix2.m12 + matrix.m12 * matrix2.m22 + matrix.m13 * matrix2.m32 + matrix.m14 * matrix2.m42;\n        this.m22 = matrix.m21 * matrix2.m12 + matrix.m22 * matrix2.m22 + matrix.m23 * matrix2.m32 + matrix.m24 * matrix2.m42;\n        this.m32 = matrix.m31 * matrix2.m12 + matrix.m32 * matrix2.m22 + matrix.m33 * matrix2.m32 + matrix.m34 * matrix2.m42;\n        this.m42 = matrix.m41 * matrix2.m12 + matrix.m42 * matrix2.m22 + matrix.m43 * matrix2.m32 + matrix.m44 * matrix2.m42;\n\n        this.m13 = matrix.m11 * matrix2.m13 + matrix.m12 * matrix2.m23 + matrix.m13 * matrix2.m33 + matrix.m14 * matrix2.m43;\n        this.m23 = matrix.m21 * matrix2.m13 + matrix.m22 * matrix2.m23 + matrix.m23 * matrix2.m33 + matrix.m24 * matrix2.m43;\n        this.m33 = matrix.m31 * matrix2.m13 + matrix.m32 * matrix2.m23 + matrix.m33 * matrix2.m33 + matrix.m34 * matrix2.m43;\n        this.m43 = matrix.m41 * matrix2.m13 + matrix.m42 * matrix2.m23 + matrix.m43 * matrix2.m33 + matrix.m44 * matrix2.m43;\n\n        this.m14 = matrix.m11 * matrix2.m14 + matrix.m12 * matrix2.m24 + matrix.m13 * matrix2.m34 + matrix.m14 * matrix2.m44;\n        this.m24 = matrix.m21 * matrix2.m14 + matrix.m22 * matrix2.m24 + matrix.m23 * matrix2.m34 + matrix.m24 * matrix2.m44;\n        this.m34 = matrix.m31 * matrix2.m14 + matrix.m32 * matrix2.m24 + matrix.m33 * matrix2.m34 + matrix.m34 * matrix2.m44;\n        this.m44 = matrix.m41 * matrix2.m14 + matrix.m42 * matrix2.m24 + matrix.m43 * matrix2.m34 + matrix.m44 * matrix2.m44;\n    }\n\n    public multiply(vector: Vector3f): Vector3f {\n        return new Vector3f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34);\n    }\n\n    public multiplyHom(vector: Vector4f): Vector4f {\n        return new Vector4f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w,\n            this.m41 * vector.x + this.m42 * vector.y + this.m43 * vector.z + this.m44 * vector.w);\n    }\n\n    public multiplyHomArr(vector: Vector4f, result: Vector4f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w;\n    }\n\n    public multiplyHomArr2(vector: Vector4f, result: Vector4f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w;\n        result.w = this.m41 * vector.x + this.m42 * vector.y + this.m43 * vector.z + this.m44 * vector.w;\n        result.x /= result.w;\n        result.y /= result.w;\n        result.z /= result.w;\n    }\n\n    public multiplyArr(vector: Vector3f, result: Vector3f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34;\n    }\n\n}\n","\nexport class Vector2f {\n\n    constructor(public x: number, public y: number) {\n\n    }\n\n    public perp(): Vector2f {\n        return new Vector2f(-this.y, this.x);\n    }\n\n    public sub(vec: Vector2f): Vector2f {\n        return new Vector2f(this.x - vec.x, this.y - vec.y);\n    }\n\n    public mul(scal: number): Vector2f {\n        return new Vector2f(this.x * scal, this.y * scal);\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    public normalize(): Vector2f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public dot(vec: Vector2f): number {\n        return this.x * vec.x + this.y * vec.y;\n    }\n\n}\n","export class Vector3f {\n\n    public x: number;\n    public y: number;\n    public z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    public mult(scale: number): Vector3f {\n        return new Vector3f(this.x * scale, this.y * scale, this.z * scale);\n    }\n\n    public sub(vec: Vector3f): Vector3f {\n        return new Vector3f(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n    }\n\n    public sub2(vec1: Vector3f, vec2: Vector3f): void {\n        this.x = vec1.x - vec2.x;\n        this.y = vec1.y - vec2.y;\n        this.z = vec1.z - vec2.z;\n    }\n\n    public mul(scal: number): Vector3f {\n        return new Vector3f(this.x * scal, this.y * scal, this.z * scal);\n    }\n\n    public add(vec: Vector3f): Vector3f {\n        return new Vector3f(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n    }\n\n    public add2(vec: Vector3f, vec2: Vector3f): void {\n        this.x = vec.x + vec2.x;\n        this.y = vec.y + vec2.y;\n        this.z = vec.z + vec2.z;\n    }\n\n    public cross(vec: Vector3f): Vector3f {\n        return new Vector3f(this.y * vec.z - this.z * vec.y,\n            this.z * vec.x - this.x * vec.z,\n            this.x * vec.y - this.y * vec.x);\n    }\n\n    public cross2(vec1: Vector3f, vec2: Vector3f): void {\n        this.x = vec1.y * vec2.z - vec1.z * vec2.y;\n        this.y = vec1.z * vec2.x - vec1.x * vec2.z;\n        this.z = vec1.x * vec2.y - vec1.y * vec2.x;\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    public normalize(): Vector3f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public normalize2(): void {\n        const reci: number = 1.0 / this.length();\n        this.x *= reci;\n        this.y *= reci;\n        this.z *= reci;\n    }\n\n    public dot(vec: Vector3f): number {\n        return this.x * vec.x + this.y * vec.y + this.z * vec.z;\n    }\n\n}\n","export class Vector4f {\n\n    public x: number;\n    public y: number;\n    public z: number;\n    public w: number;\n\n    constructor(x: number, y: number, z: number, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    public sub(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x - vec.x, this.y - vec.y, this.z - vec.z, this.w - vec.w);\n    }\n\n    public add(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x + vec.x, this.y + vec.y, this.z + vec.z, this.w + vec.w);\n    }\n\n    public cross(vec: Vector4f): Vector4f {\n        return new Vector4f(this.y * vec.z - this.z * vec.y,\n            this.z * vec.x - this.x * vec.z,\n            this.x * vec.y - this.y * vec.x, 0.0);\n    }\n\n    public normalize(): Vector4f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n\n    public sub2(vec1: Vector4f, vec2: Vector4f): void {\n        this.x = vec1.x - vec2.x;\n        this.y = vec1.y - vec2.y;\n        this.z = vec1.z - vec2.z;\n    }\n\n    public add2(vec: Vector4f, vec2: Vector4f): void {\n        this.x = vec.x + vec2.x;\n        this.y = vec.y + vec2.y;\n        this.z = vec.z + vec2.z;\n    }\n\n\n    public mul(scal: number): Vector4f {\n        return new Vector4f(this.x * scal, this.y * scal, this.z * scal, this.w);\n    }\n\n    public componentWiseMul(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x * vec.x, this.y * vec.y, this.z * vec.z, this.w * vec.w);\n    }\n\n    public dot(vec: Vector4f): number {\n        return this.x * vec.x + this.y * vec.y + this.z * vec.z;\n    }\n\n    public cross2(vec1: Vector4f, vec2: Vector4f): void {\n        this.x = vec1.y * vec2.z - vec1.z * vec2.y;\n        this.y = vec1.z * vec2.x - vec1.x * vec2.z;\n        this.z = vec1.x * vec2.y - vec1.y * vec2.x;\n    }\n\n    public normalize2(): void {\n        const reci: number = 1.0 / this.length();\n        this.x *= reci;\n        this.y *= reci;\n        this.z *= reci;\n    }\n\n\n}\n","import { Framebuffer } from \"../Framebuffer\";\nimport { Vertex } from \"../Vertex\";\nimport { AbstractTriangleRasterizer } from \"./AbstractTriangleRasterizer\";\n\nexport abstract class AbstractScannlineTriangleRasterizer extends AbstractTriangleRasterizer {\n\n    private temp: Vertex = null;\n    \n    /**\n     * Triangle rasterization using edge-walking strategy for scan-conversion.\n     * Internally DDA is used for edge-walking.\n     */\n    public drawTriangleDDA(framebuffer: Framebuffer, p1: Vertex, p2: Vertex, p3: Vertex): void {\n\n        if (p1.projection.y > p3.projection.y) {\n            this.temp = p1;\n            p1 = p3;\n            p3 = this.temp;\n        }\n\n        if (p1.projection.y > p2.projection.y) {\n            this.temp = p1;\n            p1 = p2;\n            p2 = this.temp;\n        }\n\n        if (p2.projection.y > p3.projection.y) {\n            this.temp = p2;\n            p2 = p3;\n            p3 = this.temp;\n        }\n\n        if (p1.projection.y === p3.projection.y) {\n            return;\n        } else {\n            const x: number = (p3.projection.x - p1.projection.x) * (p2.projection.y - p1.projection.y) /\n                (p3.projection.y - p1.projection.y) + p1.projection.x;\n            if (x > p2.projection.x) {\n                this.fillLongRightTriangle(framebuffer, p1, p2, p3);\n            } else {\n                this.fillLongLeftTriangle(framebuffer,p1,p2,p3);\n            }\n        }\n    }\n\n    protected abstract fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void;\n    protected abstract fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void;\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\n\nexport abstract class AbstractTriangleRasterizer {\n\n    public abstract drawTriangleDDA(framebuffer: Framebuffer, p1: Vertex, p2: Vertex, p3: Vertex): void;\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { AbstractRenderingPipeline } from '../rendering-pipelines/AbstractRenderingPipeline';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class TexturedAlphaBlendingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n\n\n    // requires\n    // bob und wbuffer\n    constructor(private framebuffer: Framebuffer, private pipeline: AbstractRenderingPipeline) {\n        super();\n    }\n\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n\n\n\n\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n\n        let slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        const slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n\n        let tslope1u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        const tslope2u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        let tslope1v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        const tslope2v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n\n        let zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        const zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                const currentColor = this.framebuffer.framebuffer[framebufferIndex];\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n\n                    // TODO: move out of loops!\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (currentColor >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (currentColor >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (currentColor >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n\n        if (yDistanceLeft === 0) {\n            return;\n        }\n\n        slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n        tslope1u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceLeft;\n        tslope1v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceLeft;\n\n        curz1 = 1.0 / v2.projection.z;\n        curu1 = v2.textureCoordinate.u / v2.projection.z;\n        curv1 = v2.textureCoordinate.v / v2.projection.z;\n        xPosition = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer,  v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        let slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        const slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        const tslope1u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope2u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        const tslope1v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v  / v1.projection.z) / yDistanceLeft;\n        let tslope2v = (v2.textureCoordinate.v  / v2.projection.z - v1.textureCoordinate.v  / v1.projection.z) / yDistanceRight;\n\n\n        let zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        const zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        tslope2u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceRight;\n        tslope2v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceRight;\n\n        curz2 = 1.0 / v2.projection.z;\n\n        curu2 = v2.textureCoordinate.u / v2.projection.z;\n        curv2 = v2.textureCoordinate.v / v2.projection.z;\n\n        xPosition2 = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class TexturedTriangleRasterizer extends AbstractScannlineTriangleRasterizer{\n\n    // requires\n    // bob und wbuffer\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        // left slope\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n        let slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        let tslope1u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope1v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        let zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        let curz1 = 1.0 / v1.projection.z;\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let xPosition = v1.projection.x;\n\n        // right slope\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n        const slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n        const tslope2u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n        const tslope2v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n        const zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        let curz2 = 1.0 / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n        let xPosition2 = v1.projection.x;\n\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n\n        if (yDistanceLeft === 0) {\n            return;\n        }\n\n        slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n        tslope1u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceLeft;\n        tslope1v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceLeft;\n\n        curz1 = 1.0 / v2.projection.z;\n        curu1 = v2.textureCoordinate.u / v2.projection.z;\n        curv1 = v2.textureCoordinate.v / v2.projection.z;\n        xPosition = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        let slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        const slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        const tslope1u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope2u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        const tslope1v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        let tslope2v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n\n\n        let zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        const zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        tslope2u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceRight;\n        tslope2v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceRight;\n\n        curz2 = 1.0 / v2.projection.z;\n\n        curu2 = v2.textureCoordinate.u / v2.projection.z;\n        curv2 = v2.textureCoordinate.v / v2.projection.z;\n\n        xPosition2 = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n}\n","import { CullFace } from '../CullFace';\nimport { Framebuffer } from '../Framebuffer';\n\nexport class AbstractRenderingPipeline {\n\n    public NEAR_PLANE_Z: number = -1.7;\n    public alpha: number;\n    private cullMode: CullFace = CullFace.BACK;\n\n    constructor(protected framebuffer: Framebuffer) { }\n\n    public setCullFace(face: CullFace): void {\n        this.cullMode = face;\n    }\n\n    public setAlpha(alpha: number): void {\n        this.alpha = Math.max(Math.min(alpha, 1.0), 0.0);\n    }\n\n    public isInFrontOfNearPlane(p: { x: number; y: number; z: number }): boolean {\n        return p.z < this.NEAR_PLANE_Z;\n    }\n\n    /**\n     * based on signed polygon area computation:\n     * http://www.faqs.org/faqs/graphics/algorithms-faq/\n     * https://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-points-are-in-clockwise-order\n     * http://csharphelper.com/blog/2014/07/calculate-the-area-of-a-polygon-in-c/\n     * http://mathworld.wolfram.com/PolygonArea.html\n     *\n     * @private\n     * @param {{ x: number, y: number, z: number }} v1\n     * @param {{ x: number, y: number, z: number }} v2\n     * @param {{ x: number, y: number, z: number }} v3\n     * @returns {boolean}\n     * @memberof Framebuffer\n     *\n     */\n    public isTriangleCCW(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number }): boolean {\n        if (this.cullMode == CullFace.DISABLED) {\n            return true;\n        }\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v1.y - v1.x * v3.y;\n        if (this.cullMode == CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n    public isTriangleCCW2(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number },\n        v4: { x: number, y: number, z: number }): boolean {\n            if (this.cullMode == CullFace.DISABLED) {\n                return true;\n            }\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v4.y - v4.x * v3.y +\n            v4.x * v1.y - v1.x * v4.y;\n        if (this.cullMode === CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Matrix4f } from '../math/Matrix4f';\nimport { Vector4f } from '../math/Vector4f';\nimport { AbstractTriangleRasterizer } from '../rasterizer/AbstractTriangleRasterizer';\nimport { TexturedAlphaBlendingTriangleRasterizer } from '../rasterizer/TexturedAlphaBlendingTriangleRasterizer';\nimport { TexturedTriangleRasterizer } from '../rasterizer/TexturedTriangleRasterizer';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractRenderingPipeline } from './AbstractRenderingPipeline';\nimport { TexturedMesh } from './TexturedMesh';\n\nexport class TexturingRenderingPipeline extends AbstractRenderingPipeline {\n\n    private sphereMapping: boolean = false;\n    public triangleRasterizer: AbstractTriangleRasterizer = null;\n\n    private vertexArray: Array<Vertex> = new Array<Vertex>(\n        new Vertex(), new Vertex(), new Vertex()\n    );\n    setSphereMapping(sphereMapping: boolean) {\n        this.sphereMapping = sphereMapping;\n    }\n\n    private modelViewMatrix: Matrix4f;\n\n    private projectedVertices: Array<Vector4f> = new Array<Vector4f>(\n        new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1)\n    );\n\n    constructor(framebuffer: Framebuffer) {\n        super(framebuffer);\n        this.setAlpha(1.0);\n        this.triangleRasterizer = new TexturedTriangleRasterizer(framebuffer);\n    }\n\n    public setFramebuffer(framebuffer: Framebuffer) {\n        this.framebuffer = framebuffer;\n    }\n\n    public enableAlphaBlending(): void {\n        this.triangleRasterizer = new TexturedAlphaBlendingTriangleRasterizer(this.framebuffer, this);\n    }\n\n    public disableAlphaBlending(): void {\n        this.triangleRasterizer = new TexturedTriangleRasterizer(this.framebuffer);\n    }\n\n    public setModelViewMatrix(matrix: Matrix4f): void {\n        this.modelViewMatrix = matrix;\n    }\n\n    public drawMeshArray(framebuffer: Framebuffer, meshes: Array<TexturedMesh>): void {\n        for (let j: number = 0; j < meshes.length; j++) {\n            const model: TexturedMesh = meshes[j];\n            this.draw(framebuffer, model);\n        }\n    }\n\n    public draw(framebuffer: Framebuffer, mesh: TexturedMesh): void {\n        if (mesh.normals) {\n            const normalMatrix: Matrix4f = this.modelViewMatrix.computeNormalMatrix();\n\n            for (let i: number = 0; i < mesh.normals.length; i++) {\n                normalMatrix.multiplyHomArr(mesh.normals[i], mesh.normals2[i]);\n            }\n        }\n\n        for (let i: number = 0; i < mesh.points.length; i++) {\n            this.modelViewMatrix.multiplyHomArr(mesh.points[i], mesh.points2[i]);\n        }\n\n        for (let i: number = 0; i < mesh.faces.length; i++) {\n            const v1: Vector4f = mesh.points2[mesh.faces[i].vertices[0]];\n            const v2: Vector4f = mesh.points2[mesh.faces[i].vertices[1]];\n            const v3: Vector4f = mesh.points2[mesh.faces[i].vertices[2]];\n\n            if (this.isInFrontOfNearPlane(v1) &&\n                this.isInFrontOfNearPlane(v2) &&\n                this.isInFrontOfNearPlane(v3)) {\n\n                this.project2(v1, this.projectedVertices[0]);\n                this.project2(v2, this.projectedVertices[1]);\n                this.project2(v3, this.projectedVertices[2]);\n\n                if (this.isTriangleCCW(\n                    this.projectedVertices[0],\n                    this.projectedVertices[1],\n                    this.projectedVertices[2])) {\n\n                    this.vertexArray[0].projection = this.projectedVertices[0]; // p1 is Vector3f\n                    this.vertexArray[1].projection = this.projectedVertices[1];\n                    this.vertexArray[2].projection = this.projectedVertices[2];\n\n                    if (this.sphereMapping) {\n                        const n1: Vector4f = mesh.normals2[mesh.faces[i].normals[0]];\n                        const n2: Vector4f = mesh.normals2[mesh.faces[i].normals[1]];\n                        const n3: Vector4f = mesh.normals2[mesh.faces[i].normals[2]];\n                        framebuffer.fakeSphere(n1, this.vertexArray[0]);\n                        framebuffer.fakeSphere(n2, this.vertexArray[1]);\n                        framebuffer.fakeSphere(n3, this.vertexArray[2]);\n                    } else {\n                        this.vertexArray[0].textureCoordinate = mesh.uv[mesh.faces[i].uv[0]];\n                        this.vertexArray[1].textureCoordinate = mesh.uv[mesh.faces[i].uv[1]];\n                        this.vertexArray[2].textureCoordinate = mesh.uv[mesh.faces[i].uv[2]];\n                    }\n\n                    this.clipConvexPolygon(framebuffer, this.vertexArray);\n                }\n            } else if (!this.isInFrontOfNearPlane(v1) &&\n                !this.isInFrontOfNearPlane(v2) &&\n                !this.isInFrontOfNearPlane(v3)) {\n                continue;\n            } else {\n                this.vertexArray[0].position = v1; // v1 is Vector4f\n                this.vertexArray[0].textureCoordinate = mesh.uv[mesh.faces[i].uv[0]];\n\n                this.vertexArray[1].position = v2;\n                this.vertexArray[1].textureCoordinate = mesh.uv[mesh.faces[i].uv[1]];\n\n                this.vertexArray[2].position = v3;\n                this.vertexArray[2].textureCoordinate = mesh.uv[mesh.faces[i].uv[2]];\n\n                this.zClipTriangle(framebuffer, this.vertexArray);\n            }\n        }\n    }\n\n    public project2(t1: { x: number, y: number, z: number }, result: Vector4f): void {\n        result.x = Math.round((this.framebuffer.width / 2) + (292 * t1.x / (-t1.z)));\n        result.y = Math.round((this.framebuffer.height / 2) - (t1.y * 292 / (-t1.z)));\n        result.z = t1.z;\n    }\n\n    public computeNearPlaneIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const ratio: number = (this.NEAR_PLANE_Z - p1.position.z) / (p2.position.z - p1.position.z);\n        const vertex: Vertex = new Vertex();\n\n        vertex.position = new Vector4f(\n            ratio * (p2.position.x - p1.position.x) + p1.position.x,\n            ratio * (p2.position.y - p1.position.y) + p1.position.y,\n            this.NEAR_PLANE_Z\n        );\n\n        vertex.textureCoordinate = new TextureCoordinate(\n            ratio * (p2.textureCoordinate.u - p1.textureCoordinate.u) + p1.textureCoordinate.u,\n            ratio * (p2.textureCoordinate.v - p1.textureCoordinate.v) + p1.textureCoordinate.v\n        );\n\n        return vertex;\n    }\n\n    public zClipTriangle(framebuffer: Framebuffer, subject: Array<Vertex>): void {\n        const input: Array<Vertex> = subject;\n        const output: Array<Vertex> = new Array<Vertex>();\n        let S: Vertex = input[input.length - 1];\n\n        for (let i: number = 0; i < input.length; i++) {\n            const point: Vertex = input[i];\n            if (this.isInFrontOfNearPlane(point.position)) {\n                if (!this.isInFrontOfNearPlane(S.position)) {\n                    output.push(this.computeNearPlaneIntersection(S, point));\n                }\n                output.push(point);\n            } else if (this.isInFrontOfNearPlane(S.position)) {\n                output.push(this.computeNearPlaneIntersection(S, point));\n            }\n            S = point;\n        }\n\n        if (output.length < 3) {\n            return;\n        }\n\n        for (let j: number = 0; j < output.length; j++) {\n            this.project2(output[j].position, output[j].projection);\n        }\n\n        if (output.length === 3 &&\n            !this.isTriangleCCW(output[0].projection, output[1].projection, output[2].projection)) {\n            return;\n        }\n\n        if (output.length === 4 &&\n            !this.isTriangleCCW2(\n                output[0].projection,\n                output[1].projection,\n                output[2].projection,\n                output[3].projection\n            )) {\n            return;\n        }\n\n        this.clipConvexPolygon(framebuffer, output);\n    }\n\n\n    public clipConvexPolygon(framebuffer: Framebuffer, subject: Array<Vertex>): void {\n\n        let output = subject;\n\n        for (let j = 0; j < framebuffer.clipRegion.length; j++) {\n            const edge = framebuffer.clipRegion[j];\n            const input = output;\n            output = new Array<Vertex>();\n            let S = input[input.length - 1];\n\n            for (let i = 0; i < input.length; i++) {\n                const point = input[i];\n                if (edge.isInside2(point)) {\n                    if (!edge.isInside2(S)) {\n                        output.push(edge.computeIntersection2(S, point));\n                    }\n                    output.push(point);\n                } else if (edge.isInside2(S)) {\n                    output.push(edge.computeIntersection2(S, point));\n                }\n                S = point;\n            }\n        }\n\n        if (output.length < 3) {\n            return;\n        }\n\n        // triangulate new point set\n        for (let i = 0; i < output.length - 2; i++) {\n            this.triangleRasterizer.drawTriangleDDA(framebuffer, output[0], output[1 + i], output[2 + i]);\n        }\n    }\n\n}\n","import { Framebuffer } from './../Framebuffer';\n\nexport abstract class AbstractScene {\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public init(framebuffer: Framebuffer): Promise<any> {\n        return Promise.all([]);\n    }\n\n    public onInit(): void {\n\n    }\n\n    public abstract render(framebuffer: Framebuffer, time: number): void;\n\n}\n","import { Vertex } from '../Vertex';\n\n// TODO:\n// - use polymorphism in order to have different intersection methods\n// - one for plain clipping / one for tex coords / one for multitexturing / gouraud shading etc\nexport abstract class AbstractClipEdge {\n\n    public abstract isInside(p: Vertex): boolean;\n    public abstract isInside2(p: Vertex): boolean;\n    public abstract computeIntersection(p1: Vertex, p2: Vertex): Vertex;\n    public abstract computeIntersection2(p1: Vertex, p2: Vertex): Vertex;\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\n\nexport class BottomClipEdge extends AbstractClipEdge {\n\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.y >= this.framebuffer.minWindow.y;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.y >= this.framebuffer.minWindow.y;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        // since this is for flat shading no interpolation is required\n        const factor: number = (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(\n            Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * factor),\n            this.framebuffer.minWindow.y,\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.minWindow.y,\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)));\n\n        const textCoord: TextureCoordinate = new TextureCoordinate();\n        const z: number = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n}\n","import { AbstractClipEdge } from './AbstractClipEdge';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math/Vector4f';\n\nexport class LeftClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.x >= 0;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.x >= 0;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(this.framebuffer.minWindow.x,\n            Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * factor),\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.minWindow.x,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\nimport { Vector4f } from '../math/Vector4f';\n\nexport class RightClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.x < this.framebuffer.width;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.x < this.framebuffer.width;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(this.framebuffer.maxWindow.x + 1,\n            Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * factor),\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.maxWindow.x + 1,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\n\nexport class TopClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.y < this.framebuffer.maxWindow.y + 1;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.y < this.framebuffer.maxWindow.y + 1;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y);\n        // this interpolation is not perspective correct but linear!!\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(\n            Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * factor),\n            this.framebuffer.maxWindow.y + 1,\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.maxWindow.y + 1,\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n\n}\n","export class Texture {\n\n\n    public texture: Uint32Array;\n    public width: number;\n    public height: number;\n    public maxWidth: number;\n    public maxHeight: number;\n    private clamp: boolean = false;\n\n    setClamp(clamp: boolean) {\n        this.clamp = clamp;\n    }\n    constructor(texture?: Uint32Array, width?: number, height?: number) {\n        this.texture = texture;\n        this.width = width;\n        this.height = height;\n        this.maxHeight = (height-1) |0;\n        this.maxWidth = (width-1)|0;\n    }\n\n    public getPixel(texture: Texture, x: number, y: number): number {\n        return texture.texture[(x & 0xff) + (y & 0xff) * 256];\n    }\n\n    public getBilinearFilteredPixel(x: number, y: number): number {\n        const x0 = (((x | 0) % 256) + 256) % 256;\n        const x1 = ((((x + 1) | 0) % 256) + 256) % 256;\n        const y0 = (((y | 0) % 256) + 256) % 256;\n        const y1 = ((((y + 1) | 0) % 256) + 256) % 256;\n\n        const x0y0 = this.getPixel(this, x0, y0) & 0xff;\n        const x1y0 = this.getPixel(this, x1, y0) & 0xff;\n        const x0y1 = this.getPixel(this, x0, y1) & 0xff;\n        const x1y1 = this.getPixel(this, x1, y1) & 0xff;\n\n        const col1 = x0y0 * (1 - (x - Math.floor(x))) + (x1y0 * ((x - Math.floor(x))));\n        const col2 = x0y1 * (1 - (x - Math.floor(x))) + (x1y1 * ((x - Math.floor(x))));\n        const col = col1 * (1 - (y - Math.floor(y))) + (col2 * ((y - Math.floor(y))));\n\n        return col;\n    }\n\n    public getBilinearFilteredPixel2(x: number, y: number) {\n        if (this.clamp) {\n            x = Math.max(Math.min(x, this.width - 1), 0);\n            y = Math.max(Math.min(y, this.height - 1), 0);\n        } else {\n            x= ((x%this.width)+ this.width) % this.width;\n            y= ((y%this.height)+ this.height) % this.height;\n        }\n\n        let x0 = x | 0;\n        let  x1 = (x+ 1 | 0)%this.width ;\n        let  y0 = y | 0;\n        let y1 = (y+ 1 | 0)%this.height ;\n\n        const x0y0 = this.getPixel2(this, x0, y0);\n        const x1y0 = this.getPixel2(this, x1, y0);\n        const x0y1 = this.getPixel2(this, x0, y1);\n        const x1y1 = this.getPixel2(this, x1, y1);\n\n        return this.interpolateComp(x, y, x0y0, x1y0 , x0y1, x1y1 );\n    }\n\n    public getPixel2(texture: Texture, x: number, y: number): number {\n        return this.texture[x + y * this.width];\n    }\n\n    /**\n     * highly optimized version only for power of 2 textures\n     */\n    public getBilinearFilteredPixelRasterizer(x: number, y: number) {\n        let x0 = x | 0;\n        let x1 = (x | 0) + 1;\n        let y0 = y | 0;\n        let y1 = (y | 0) + 1;\n\n        let x0y0: number;\n        let x1y0: number;\n        let x0y1: number;\n        let x1y1: number;\n\n        if (this.clamp) {\n             x0 = Math.max(Math.min(x0, this.width - 1), 0);\n             x1 = Math.max(Math.min(x1, this.width - 1), 0);\n             y0 = Math.max(Math.min(y0, this.height - 1), 0);\n             y1 = Math.max(Math.min(y1, this.height - 1), 0);\n\n             x0y0 = this.getPixel2(this, x0, y0);\n             x1y0 = this.getPixel2(this, x1, y0);\n             x0y1 = this.getPixel2(this, x0, y1);\n             x1y1 = this.getPixel2(this, x1, y1);\n        } else {\n            x0y0 = this.getPixelRasterizer(this, x0, y0);\n            x1y0 = this.getPixelRasterizer(this, x1, y0);\n            x0y1 = this.getPixelRasterizer(this, x0, y1);\n            x1y1 = this.getPixelRasterizer(this, x1, y1);\n        }\n        return this.interpolateComp(x, y, x0y0, x1y0, x0y1, x1y1);\n    }\n\n    public getPixelRasterizer(texture: Texture, x: number, y: number): number {\n        return this.texture[(x & (this.width-1)) + (y&(this.height-1)) * this.width];\n    }\n\n    public getPixel3(texture: Texture, x: number, y: number): number {\n        return this.texture[\n            (((x % this.width) + this.width) % this.width) +\n            (((y % this.height) + this.height) % this.height) * this.width];\n    }\n\n    private interpolateComp(x, y, x0y0, x1y0, x0y1, x1y1): number {\n        // reuse these values for all color components\n        const xFrac = x - (x | 0);\n        const yFrac = y - (y | 0);\n        const oneMinusXfrac = 1 - xFrac;\n        const oneMinusYfrac = 1 - yFrac;\n\n        const x0y0_r = x0y0 & 0xff;\n        const x1y0_r = x1y0 & 0xff;\n        const x0y1_r = x0y1 & 0xff;\n        const x1y1_r = x1y1 & 0xff;\n\n        const col1_r = x0y0_r * oneMinusXfrac + x1y0_r * xFrac;\n        const col2_r = x0y1_r * oneMinusXfrac + x1y1_r * xFrac;\n        const col_r = col1_r * oneMinusYfrac + (col2_r * yFrac);\n\n        const x0y0_g = x0y0 >> 8 & 0xff;\n        const x1y0_g = x1y0 >> 8 & 0xff;\n        const x0y1_g = x0y1 >> 8 & 0xff;\n        const x1y1_g = x1y1 >> 8 & 0xff;\n\n        const col1_g = x0y0_g * oneMinusXfrac + x1y0_g * xFrac;\n        const col2_g = x0y1_g * oneMinusXfrac + x1y1_g * xFrac;\n        const col_g = col1_g * oneMinusYfrac + (col2_g * yFrac);\n\n        const x0y0_b = x0y0 >> 16 & 0xff;\n        const x1y0_b = x1y0 >> 16 & 0xff;\n        const x0y1_b = x0y1 >> 16 & 0xff;\n        const x1y1_b = x1y1 >> 16 & 0xff;\n\n        const col1_b = x0y0_b * oneMinusXfrac + x1y0_b * xFrac;\n        const col2_b = x0y1_b * oneMinusXfrac + x1y1_b * xFrac;\n        const col_b = col1_b * oneMinusYfrac + (col2_b * yFrac);\n\n        const x0y0_a = x0y0 >> 24 & 0xff;\n        const x1y0_a = x1y0 >> 24 & 0xff;\n        const x0y1_a = x0y1 >> 24 & 0xff;\n        const x1y1_a = x1y1 >> 24 & 0xff;\n\n        const col1_a = x0y0_a * oneMinusXfrac + x1y0_a * xFrac;\n        const col2_a = x0y1_a * oneMinusXfrac + x1y1_a * xFrac;\n        const col_a = col1_a * oneMinusYfrac + (col2_a * yFrac);\n\n        return col_r | col_g << 8 | col_b << 16 | col_a << 24;\n    }\n\n}\n","import RandomNumberGenerator from '../RandomNumberGenerator';\nimport { Texture } from './Texture';\n\nexport class TextureUtils {\n\n    public static generateProceduralNoise(): Promise<Texture> {\n        return new Promise<Texture>((resolve: (value?: Texture) => void): void => {\n            const texture: Texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng: RandomNumberGenerator = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let i: number = 0; i < 256 * 256; i++) {\n                const scale: number = rng.getFloat();\n                texture.texture[i] = 200 * scale | 255 * scale << 8 | 205 * scale << 16 | 255 << 24;\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static generateProceduralParticleTexture(): Promise<Texture> {\n        return new Promise((resolve: (value?: Texture) => void): void => {\n            const texture: Texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng: RandomNumberGenerator = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let y: number = 0; y < 256; y++) {\n                for (let x: number = 0; x < 256; x++) {\n                    const dx: number = 127 - x;\n                    const dy: number = 127 - y;\n                    const r: number = Math.sqrt(dx * dx + dy * dy) / 127;\n                    let c: number = 1 - r;\n                    c = c * c * c;\n                    if (r > 1) {\n                        c = 0;\n                    }\n                    c = Math.min(1, c * 2.9);\n\n                    texture.texture[x + y * 256] = 235 | 255 << 8 | 235 << 16 | (c * 255) << 24;\n                }\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static generateProceduralParticleTexture2(): Promise<Texture> {\n        return new Promise((resolve) => {\n            const texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let y = 0; y < 256; y++) {\n                for (let x = 0; x < 256; x++) {\n                    const dx = 127 - x;\n                    const dy = 127 - y;\n                    const r = Math.sqrt(dx * dx + dy * dy) / 127;\n                    let c = 1 - r;\n                    c = c * c;\n                    if (r > 1) { c = 0; }\n                    c = Math.min(1, c * 40);\n                    texture.texture[x + y * 256] = 255 | 205 << 8 | 255 << 16 | (c * 255) << 24;\n                }\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static load(filename: string, transparency: boolean): Promise<Texture> {\n        return new Promise<Texture>((resolve: (texture?: Texture) => void): void => {\n            const image: HTMLImageElement = new Image();\n            image.onload = (): void => {\n                const texture: Texture = new Texture();\n                texture.texture = this.getImageData(image, transparency);\n                texture.width = image.width;\n                texture.height = image.height;\n                resolve(texture);\n            };\n            image.onerror = (): void => resolve();\n            image.src = filename;\n        });\n    }\n\n    private static getImageData(image: HTMLImageElement, withAlpha: boolean = false): Uint32Array {\n        const canvas: HTMLCanvasElement = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const context: CanvasRenderingContext2D = canvas.getContext('2d');\n        context.drawImage(image, 0, 0);\n        const data: Uint8ClampedArray = context.getImageData(0, 0, image.width, image.height).data;\n        const conv: Uint32Array = new Uint32Array(data.length / 4);\n        let c: number = 0;\n        for (let i: number = 0; i < data.length; i += 4) {\n            if (withAlpha) {\n                conv[c] = (data[i + 3] << 24) | (data[i + 2] << 16) | (data[i + 1] << 8) | data[i + 0];\n            } else {\n                conv[c] = (255 << 24) | (data[i + 2] << 16) | (data[i + 1] << 8) | data[i + 0];\n            }\n\n            c++;\n        }\n        return conv;\n    }\n\n}\n","(function (window) {\n\n    if (!window.JSRocket) {\n        window.JSRocket = {};\n    }\n    JSRocket.SyncData = function () {\n\n        \"use strict\";\n\n        var _track = [];\n\n        function getTrack(index) {\n            return _track[index];\n        }\n\n        function getIndexForName(name) {\n            for (var i = 0; i < _track.length; i++) {\n\n                if (_track[i].name === name) {\n                    return i;\n                }\n            }\n\n            return -1;\n        }\n\n        function getTrackLength() {\n            return _track.length;\n        }\n\n        function createIndex(varName) {\n            var track = new JSRocket.Track();\n            track.name = varName;\n\n            _track.push(track);\n        }\n\n        return {\n            getTrack: getTrack,\n            getIndexForName: getIndexForName,\n            getTrackLength: getTrackLength,\n            createIndex: createIndex\n        };\n    };\n    JSRocket.Track = function () {\n\n        \"use strict\";\n\n        var STEP = 0,\n            LINEAR = 1,\n            SMOOTH = 2,\n            RAMP = 3;\n\n        var data = [];\n\n        function findKeyIndex(keys, row) {\n            var lo = 0, hi = keys.length;\n            while (lo < hi) {\n                var mi = ((hi + lo) / 2) | 0;\n\n                if (keys[mi] < row) {\n                    lo = mi + 1;\n                } else if (keys[mi] > row) {\n                    hi = mi;\n                } else {\n                    return mi;\n                }\n            }\n            return lo - 1;\n        }\n\n        function getValue(row) {\n            var keys = Object.keys(data);\n\n            if (!keys.length) {\n                return 0.0;\n            }\n\n            var idx = findKeyIndex(keys, Math.floor(row));\n            if (idx < 0) {\n                return data[keys[0]].value;\n            }\n            if (idx > keys.length - 2) {\n                return data[keys[keys.length - 1]].value;\n            }\n\n            // lookup keys and values\n            var k0 = keys[idx], k1 = keys[idx + 1];\n            var a = data[k0].value;\n            var b = data[k1].value;\n\n            // interpolate\n            var t = (row - k0) / (k1 - k0);\n            switch (data[k0].interpolation) {\n                case 0:\n                    return a;\n                case 1:\n                    return a + (b - a) * t;\n                case 2:\n                    return a + (b - a) * t * t * (3 - 2 * t);\n                case 3:\n                    return a + (b - a) * Math.pow(t, 2.0);\n            }\n        }\n\n        function add(row, value, interpolation) {\n            data[row] = {\n                \"value\": value,\n                \"interpolation\": interpolation\n            };\n        }\n\n        function remove(row) {\n            delete data[row];\n        }\n\n        return {\n            getValue: getValue,\n            add: add,\n            remove: remove\n        };\n    };\n    JSRocket.SyncDevicePlayer = function (cfg) {\n\n        \"use strict\";\n\n        var _urlRequest,\n            _syncData = new JSRocket.SyncData(),\n            _eventHandler = {\n                'ready': function () {\n                },\n                'error': function () {\n                }\n            };\n\n        function load(url) {\n\n            _urlRequest = new XMLHttpRequest();\n\n            if (_urlRequest === null) {\n                _eventHandler.error();\n                return;\n            }\n\n            _urlRequest.open('GET', url, true);\n            _urlRequest.onreadystatechange = urlRequestHandler;\n\n            _urlRequest.send();\n        }\n\n        function urlRequestHandler() {\n\n            if (_urlRequest.readyState === 4) {\n                if (_urlRequest.status < 300) {\n                    readXML(_urlRequest.responseText);\n                } else {\n                    _eventHandler.error();\n                }\n            }\n        }\n\n        function readXML(xmlString) {\n            var key,\n                t = 0, tLen, k = 0, kLen,\n                xml = (new DOMParser()).parseFromString(xmlString, 'text/xml'),\n                tracks = xml.getElementsByTagName('tracks');\n\n            //<tracks>\n            var trackList = tracks[0].getElementsByTagName('track');\n\n            for (t, tLen = trackList.length; t < tLen; t++) {\n\n                var track = getTrack(trackList[t].getAttribute('name')),\n                    keyList = trackList[t].getElementsByTagName('key');\n\n                for (k = 0, kLen = keyList.length; k < kLen; k++) {\n                    key = keyList[k];\n                    track.add(parseInt(key.getAttribute('row'), 10),\n                        parseFloat(key.getAttribute('value')),\n                        parseInt(key.getAttribute('interpolation'), 10));\n\n                }\n            }\n\n            _eventHandler.ready();\n        }\n\n        function getTrack(name) {\n\n            var index = _syncData.getIndexForName(name);\n\n            if (index > -1) {\n                return _syncData.getTrack(index);\n            }\n\n            _syncData.createIndex(name);\n            return _syncData.getTrack(_syncData.getTrackLength() - 1);\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        function nop() {\n\n        }\n\n        if (cfg.rocketXML === \"\" || cfg.rocketXML === undefined || cfg.rocketXML === undefined) {\n            throw (\"[jsRocket] rocketXML is not set, try _syncDevice.setConfig({'rocketXML':'url/To/RocketXML.rocket'})\");\n        } else {\n            load(cfg.rocketXML);\n        }\n\n        return {\n            load: load,\n            getTrack: getTrack,\n            update: nop,\n            on: setEvent\n        };\n    };\n    JSRocket.SyncDeviceClient = function (cfg) {\n\n        \"use strict\";\n\n        var CMD_SET_KEY = 0,\n            CMD_DELETE_KEY = 1,\n            CMD_GET_TRACK = 2,\n            CMD_SET_ROW = 3,\n            CMD_PAUSE = 4,\n            CMD_SAVE_TRACKS = 5;\n\n        var _ws = new WebSocket(cfg.socketURL),\n            _syncData = new JSRocket.SyncData(),\n            _eventHandler = {\n                'ready': function () {\n                },\n                'update': function () {\n                },\n                'play': function () {\n                },\n                'pause': function () {\n                },\n                'save': function () {\n                }\n            };\n\n        function onOpen() {\n\n            _ws.binaryType = \"arraybuffer\";\n            _ws.send('hello, synctracker!');\n        }\n\n        function onMessage(e) {\n\n            var queue = (new Uint8Array(e.data)),\n                cmd = queue[0],\n                track, row, value, interpolation;\n\n            //Handshake\n            if (cmd === 104) {\n\n                _eventHandler.ready();\n\n                //PAUSE\n            } else if (CMD_PAUSE === cmd) {\n\n                if (queue[1] === 1) {\n                    _eventHandler.pause();\n                } else {\n                    _eventHandler.play();\n                }\n\n                //SET_ROW\n            } else if (CMD_SET_ROW === cmd) {\n\n                row = toInt(queue.subarray(1, 5));\n\n                _eventHandler.update(row);\n\n                //SET_KEY\n            } else if (CMD_SET_KEY === cmd) {\n\n                track = toInt(queue.subarray(1, 5));\n                row = toInt(queue.subarray(5, 9));\n\n                //value = Math.round(toFloat(queue.subarray(9, 13)) * 100) / 100; //round to what's seen in Rocket tracks\n                value = toFloat(queue.subarray(9, 13)); //use the values you see in Rocket statusbar\n\n                interpolation = toInt(queue.subarray(13, 14));\n                _syncData.getTrack(track).add(row, value, interpolation);\n\n                //DELETE\n            } else if (CMD_DELETE_KEY === cmd) {\n\n                track = toInt(queue.subarray(1, 5));\n                row = toInt(queue.subarray(5, 9));\n\n                _syncData.getTrack(track).remove(row);\n\n                //SAVE\n            } else if (CMD_SAVE_TRACKS === cmd) {\n                _eventHandler.save();\n            }\n        }\n\n        function onClose(e) {\n            console.warn(\">> connection closed\", e);\n        }\n\n        function onError(e) {\n            console.error(\">> connection error'd\", e);\n        }\n\n        _ws.onopen = onOpen;\n        _ws.onmessage = onMessage;\n        _ws.onclose = onClose;\n        _ws.onerror = onError;\n\n        function getTrack(name) {\n\n            var index = _syncData.getIndexForName(name);\n\n            if (index > -1) {\n                return _syncData.getTrack(index);\n            }\n\n            var utf8Name = encodeURIComponent(name).replace(/%([\\dA-F]{2})/g, function (m, c) {\n                return String.fromCharCode('0x' + c);\n            });\n            var message = [CMD_GET_TRACK,\n                (utf8Name.length >> 24) & 0xFF, (utf8Name.length >> 16) & 0xFF,\n                (utf8Name.length >> 8) & 0xFF, (utf8Name.length) & 0xFF];\n\n            for (var i = 0; i < utf8Name.length; i++) {\n                message.push(utf8Name.charCodeAt(i));\n            }\n\n            _ws.send(new Uint8Array(message).buffer);\n\n            _syncData.createIndex(name);\n            return _syncData.getTrack(_syncData.getTrackLength() - 1);\n        }\n\n        function setRow(row) {\n\n            var streamInt = [(row >> 24) & 0xFF,\n            (row >> 16) & 0xFF,\n            (row >> 8) & 0xFF,\n            (row) & 0xFF];\n\n            _ws.send(new Uint8Array([CMD_SET_ROW, streamInt[0], streamInt[1], streamInt[2], streamInt[3]]).buffer);\n        }\n\n        function toInt(arr) {\n\n            var i = 0,\n                view = new DataView(new ArrayBuffer(arr.length));\n\n            for (; i < arr.length; i++) {\n                view.setUint8(i, arr[i]);\n            }\n\n            if (view.byteLength === 1) {\n                return view.getInt8(0);\n            } else {\n                return view.getInt32(0);\n            }\n        }\n\n        function toFloat(arr) {\n            var view = new DataView(new ArrayBuffer(4));\n            view.setUint8(0, arr[0]);\n            view.setUint8(1, arr[1]);\n            view.setUint8(2, arr[2]);\n            view.setUint8(3, arr[3]);\n\n            return view.getFloat32(0);\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        return {\n            getTrack: getTrack,\n            update: setRow,\n            on: setEvent\n        };\n    };\n\n    JSRocket.SyncDevice = function () {\n\n        \"use strict\";\n\n        var _connected = false,\n            _device,\n            _previousIntRow,\n            _config = {\n                \"socketURL\": \"ws://localhost:1339\",\n                \"rocketXML\": \"\"\n            },\n            _eventHandler = {\n                'ready': function () {\n                },\n                'update': function () {\n                },\n                'play': function () {\n                },\n                'pause': function () {\n                }\n            };\n\n        function init(mode) {\n            if (mode === \"demo\") {\n                _device = new JSRocket.SyncDevicePlayer(_config);\n            } else {\n                _device = new JSRocket.SyncDeviceClient(_config);\n            }\n\n            _device.on('ready', deviceReady);\n            _device.on('update', deviceUpdate);\n            _device.on('play', devicePlay);\n            _device.on('pause', devicePause);\n        }\n\n        function getConfig() {\n            return _config;\n        }\n\n        function setConfig(cfg) {\n            for (var option in cfg) {\n                if (cfg.hasOwnProperty(option)) {\n                    _config[option] = cfg[option];\n                }\n            }\n\n            return _config;\n        }\n\n        function deviceReady() {\n            _connected = true;\n            _eventHandler.ready();\n        }\n\n        function deviceUpdate(row) {\n            _eventHandler.update(row);\n        }\n\n        function devicePlay() {\n            _eventHandler.play();\n        }\n\n        function devicePause() {\n            _eventHandler.pause();\n        }\n\n        function getTrack(name) {\n            if (_connected) {\n                return _device.getTrack(name);\n            } else {\n                return null;\n            }\n        }\n\n        function update(row) {\n            //no need to update rocket on float rows\n            if (Math.floor(row) !== _previousIntRow) {\n                _previousIntRow = Math.floor(row);\n                _device.update(_previousIntRow);\n            }\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        return {\n            init: init,\n            setConfig: setConfig,\n            getConfig: getConfig,\n            getTrack: getTrack,\n            update: update,\n            on: setEvent\n        };\n    };\n\n})(window);\n\n","/* Trivial player for formats that the browser supports natively through the <audio> element,\nsuch as MP3 and OGG */\n\nCowbell.Player.Audio = function() {\n\tthis.Track = function(url) {\n\t\tthis.open = function() {\n\t\t\tvar audio = document.createElement('audio');\n\t\t\taudio.src = url;\n\t\t\tdocument.body.appendChild(audio);\n\n\t\t\treturn audio;\n\t\t};\n\t};\n};\n","window.Cowbell = {\n\t'UI': {},\n\t'Player': {},\n\t'Common': {}\n};\n\nwindow.Cowbell.createPlayer = function(containerElement, opts) {\n\tif (!opts) opts = {};\n\n\tif (typeof(containerElement) == 'string') {\n\t\tcontainerElement = document.getElementById(containerElement);\n\t}\n\n\tvar uiConstructor = opts.ui || Cowbell.UI.Basic;\n\tvar ui = new uiConstructor(containerElement);\n\n\tif (opts.player) {\n\t\tvar player = new opts.player(opts.playerOpts);\n\n\t\tif (opts.url) {\n\t\t\tvar track = new player.Track(opts.url, opts.trackOpts);\n\t\t\tui.open(track);\n\t\t}\n\t}\n\n\treturn ui;\n};\n\nif (window.jQuery) {\n\twindow.jQuery.fn.cowbell = function(opts) {\n\t\tthis.each(function() {\n\t\t\tCowbell.createPlayer(this, opts);\n\t\t});\n\t};\n}\n","/* Player for module formats supported by libopenmpt */\n\n(function() {\n\tfunction OpenMPTGenerator(url, audioCtx, playerOpts, trackOpts) {\n\t\tvar modulePtr, leftBufferPtr, rightBufferPtr;\n\t\tvar maxFramesPerChunk = 4096;\n\t\tvar self = this;\n\t\tif (!playerOpts) playerOpts = {};\n\t\tif (!trackOpts) trackOpts = {};\n\n\t\tfunction initModule(data) {\n\t\t\tvar byteArray = new Int8Array(data);\n\t\t\tvar ptrToFile = libopenmpt._malloc(byteArray.byteLength);\n\t\t\tlibopenmpt.HEAPU8.set(byteArray, ptrToFile);\n\n\t\t\tmodulePtr = libopenmpt._openmpt_module_create_from_memory(ptrToFile, byteArray.byteLength, 0, 0, 0);\n            global.window.modulePtr = modulePtr;\n\t\t\tleftBufferPtr  = libopenmpt._malloc(4 * maxFramesPerChunk);\n\t\t\trightBufferPtr = libopenmpt._malloc(4 * maxFramesPerChunk);\n\n\t\t\tfunction asciiToStack(str) {\n\t\t\t\tvar stackStr = stackAlloc(str.length + 1);\n\t\t\t\twriteAsciiToMemory(str, stackStr);\n\t\t\t\treturn stackStr;\n\t\t\t}\n\t\t\tvar stack = stackSave();\n\t\t\tlibopenmpt._openmpt_module_ctl_set(modulePtr, asciiToStack('render.resampler.emulate_amiga'), asciiToStack('1')); // enable Amiga resampler\n\t\t\tlibopenmpt._openmpt_module_ctl_set(modulePtr, asciiToStack('render.resampler.emulate_amiga_type'), asciiToStack('a1200')); // set emulated Amiga model to A1200\n\t\t\tstackRestore(stack);\n\n\t\t\tself.duration = libopenmpt._openmpt_module_get_duration_seconds(modulePtr);\n\t\t}\n\n\t\tfunction ensureLibOpenMPT(onReady) {\n\t\t\tif (!playerOpts.pathToLibOpenMPT) {\n\t\t\t\tthrow \"pathToLibOpenMPT not specified\";\n\t\t\t}\n\n\t\t\tif (window.libopenmpt && window.libopenmpt._openmpt_module_create_from_memory) {\n\t\t\t\t/* libopenmpt already loaded */\n\t\t\t\tonReady();\n\t\t\t} else {\n\t\t\t\t/* load libopenmpt via <script> tag injection */\n\t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n\t\t\t\tvar script = document.createElement(\"script\");\n\t\t\t\tscript.src = playerOpts.pathToLibOpenMPT;\n\n\t\t\t\twindow.libopenmpt = {\n\t\t\t\t\tonRuntimeInitialized: function() {\n\t\t\t\t\t\tonReady();\n\t\t\t\t\t\thead.removeChild(script);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\thead.appendChild(script);\n\t\t\t}\n\t\t}\n\n\t\tthis.cleanup = function() {\n\t\t\tif (modulePtr) {\n\t\t\t\tlibopenmpt._openmpt_module_destroy(modulePtr);\n\t\t\t}\n\t\t\tif (leftBufferPtr) {\n\t\t\t\tlibopenmpt._free(leftBufferPtr);\n\t\t\t}\n\t\t\tif (rightBufferPtr) {\n\t\t\t\tlibopenmpt._free(rightBufferPtr);\n\t\t\t}\n\t\t};\n\n\t\tthis.load = function(onReady) {\n\t\t\tvar self = this;\n\t\t\tensureLibOpenMPT(function() {\n\t\t\t\tself.channelCount = 2;\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\t\trequest.addEventListener('error', function(e) {\n\t\t\t\t\tconsole.log('XHR error', e);\n\t\t\t\t});\n\n\t\t\t\trequest.addEventListener('load', function(e) {\n\t\t\t\t\tdata = request.response;\n\t\t\t\t\tinitModule(data);\n\t\t\t\t\tonReady();\n\t\t\t\t});\n\n\t\t\t\t/* trigger XHR */\n\t\t\t\trequest.open('GET', url, true);\n\t\t\t\trequest.responseType = \"arraybuffer\";\n\t\t\t\trequest.send();\n\t\t\t});\n\t\t};\n\n\t\tthis.generateAudio = function(outputBuffer) {\n\t\t\tvar outputL = outputBuffer.getChannelData(0);\n\t\t\tvar outputR = outputBuffer.getChannelData(1);\n\t\t\tvar framesToRender = outputBuffer.length;\n\n\t\t\tvar framesRendered = 0;\n\t\t\tvar ended = false;\n\t\t\twhile (framesToRender > 0) {\n\t\t\t\tvar framesPerChunk = Math.min(framesToRender, maxFramesPerChunk);\n\t\t\t\tvar actualFramesPerChunk = libopenmpt._openmpt_module_read_float_stereo(modulePtr, audioCtx.sampleRate, framesPerChunk, leftBufferPtr, rightBufferPtr);\n\t\t\t\tvar rawAudioLeft = libopenmpt.HEAPF32.subarray(leftBufferPtr / 4, leftBufferPtr / 4 + actualFramesPerChunk);\n\t\t\t\tvar rawAudioRight = libopenmpt.HEAPF32.subarray(rightBufferPtr / 4, rightBufferPtr / 4 + actualFramesPerChunk);\n\t\t\t\tfor (var i = 0; i < actualFramesPerChunk; ++i) {\n\t\t\t\t\toutputL[framesRendered + i] = rawAudioLeft[i];\n\t\t\t\t\toutputR[framesRendered + i] = rawAudioRight[i];\n\t\t\t\t}\n\t\t\t\tframesToRender -= actualFramesPerChunk;\n\t\t\t\tframesRendered += actualFramesPerChunk;\n\t\t\t\tif (actualFramesPerChunk < framesPerChunk) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn framesRendered;\n\t\t};\n\n\t\tthis.seekable = true;\n\n\t\tthis.seek = function(position) {\n\t\t\tlibopenmpt._openmpt_module_set_position_seconds(modulePtr, position);\n\t\t};\n\n\t\tthis.reset = function() {\n\t\t\tthis.seek(0);\n\t\t}\n\t}\n\tCowbell.Player.OpenMPT = function(opts) {\n\t\treturn new Cowbell.Common.WebAudioPlayer(OpenMPTGenerator, opts);\n\t};\n})();\n","/*\nWrapper to allow Web Audio createScriptProcessor-based player routines to expose\na subset of the HTML5 Media Element API.\n\nThis wrapper handles the details of buffering, pausing, and keeping track of current play time.\nInner routines only need to implement a simple 'generator' API consisting of filling a buffer\nwith audio data, and seeking to a specified time.\n*/\n\n(function () {\n    var audioCtx;\n    Cowbell.Common.WebAudioPlayer = function (generatorConstructor, playerOpts) {\n        this.Track = function (url, trackOpts) {\n            var generator;\n\n            this.open = function () {\n                var self = {};\n\n                if (!audioCtx) {\n                    var AudioContext = window.AudioContext || window.webkitAudioContext;\n                    audioCtx = new AudioContext({\n                        latencyHint: \"playback\",\n                        sampleRate: 22050\n                      });\n                }\n\n                var BUFFER_SIZE = 4096;\n\n                self.HAVE_NOTHING = 0;\n                self.HAVE_METADATA = 1;\n                self.HAVE_CURRENT_DATA = 2;\n                self.HAVE_FUTURE_DATA = 3;\n                self.HAVE_ENOUGH_DATA = 4;\n                self.readyState = self.HAVE_NOTHING;\n\n                generator = new generatorConstructor(url, audioCtx, playerOpts, trackOpts);\n                var generatorIsReady = false;\n                var playWasRequestedBeforeReady = false;\n                var scriptNode;\n\n                var hasStartedProcessing = false;\n                var playFromTime = 0;\n                var playStartTimestamp;\n                self.paused = true;\n\n                generator.load(function () {\n                    generatorIsReady = true;\n                    self.readyState = self.HAVE_ENOUGH_DATA;\n                    self.duration = generator.duration;\n                    if (generator.seekable) {\n                        self.seekable = {\n                            'length': 1,\n                            'start': function (i) {\n                                if (i !== 0) throw \"Out of range\";\n                                return 0;\n                            },\n                            'end': function (i) {\n                                if (i !== 0) throw \"Out of range\";\n                                return generator.duration;\n                            }\n                        };\n                    } else {\n                        self.seekable = {\n                            'length': 0,\n                            'start': function (i) {\n                                throw \"Out of range\";\n                            },\n                            'end': function (i) {\n                                throw \"Out of range\";\n                            }\n                        };\n                    }\n                    seek(0);\n                    if (self.onloadedmetadata) self.onloadedmetadata();\n                    if (playWasRequestedBeforeReady) self.play();\n                });\n\n                function seek(newTime) {\n                    if (scriptNode) scriptNode.disconnect(0);\n                    if (newTime > 0) {\n                        generator.seek(newTime);\n                    } else {\n                        generator.reset();\n                    }\n                    playFromTime = newTime;\n                    hasStartedProcessing = false;\n                    scriptNode = audioCtx.createScriptProcessor(BUFFER_SIZE, 0, generator.channelCount);\n                    scriptNode.onaudioprocess = generateAudio;\n                    if (!self.paused) {\n                        self.paused = true;\n                        self.play();\n                    }\n                }\n\n                function generateAudio(event) {\n                    if (!hasStartedProcessing) {\n                        playStartTimestamp = event.playbackTime;\n                        hasStartedProcessing = true;\n                    }\n\n                    var generatedLength = generator.generateAudio(event.outputBuffer);\n\n                    if (generatedLength < event.outputBuffer.length) {\n                        /* generate silence for the remainder of the buffer */\n                        for (var chan = 0; chan < event.outputBuffer.numberOfChannels; chan++) {\n                            var channelData = event.outputBuffer.getChannelData(chan);\n                            for (var i = generatedLength; i < event.outputBuffer.length; i++) {\n                                channelData[i] = 0;\n                            }\n                        }\n\n                        if (self.currentTime > self.duration) {\n                            /* we've finished playing (not just generating) the audio */\n                            self.pause();\n                            if (self.onended) self.onended();\n                            seek(0);\n                        }\n                    }\n\n                    if (self.ontimeupdate) self.ontimeupdate();\n                }\n\n                self.play = function () {\n                    if (!generatorIsReady) {\n                        playWasRequestedBeforeReady = true;\n                        return;\n                    }\n                    if (self.paused) {\n                        scriptNode.connect(audioCtx.destination);\n                        self.paused = false;\n                        // If an AudioContext is created prior to the document receiving a user gesture, \n                        // it will be created in the \"suspended\" state, and you will need to call resume() \n                        // after a user gesture is received.\n                        if (audioCtx.state === 'suspended') { audioCtx.resume() };\n                        if (self.onplay) self.onplay();\n\n                        if (hasStartedProcessing) {\n                            playStartTimestamp = audioCtx.currentTime;\n                            playFromTime = pausedAtTrackTime;\n                        }\n                    }\n                };\n\n                self.pause = function () {\n                    if (!self.paused) {\n                        pausedAtTimestamp = audioCtx.currentTime;\n                        pausedAtTrackTime = self.currentTime;\n\n                        scriptNode.disconnect(0);\n                        self.paused = true;\n                        if (self.onpause) self.onpause();\n                    }\n                };\n\n\n                /*\n                hasStartedProcessing = false && self.paused = true  =>  initial state\n                hasStartedProcessing = false && self.paused = false  =>  the instant we just called play()\n                hasStartedProcessing = true && self.paused = false  =>\n                    ready to play if currentTime < playStartTimestamp; playing if currentTime >= playStartTimestamp\n                hasStartedProcessing = true && self.paused = true  => paused\n                */\n\n                self.__defineGetter__('currentTime', function () {\n                    if (!hasStartedProcessing) return playFromTime;\n                    if (self.paused) return pausedAtTrackTime;\n                    if (audioCtx.currentTime < playStartTimestamp) return playFromTime;\n                    return playFromTime + audioCtx.currentTime - playStartTimestamp;\n                });\n\n                self.__defineSetter__('currentTime', function (newTime) {\n                    if (generator.seekable || newTime === 0) {\n                        seek(newTime);\n                    }\n                });\n\n                return self;\n            };\n            this.close = function () {\n                if (generator && generator.cleanup) {\n                    generator.cleanup();\n                }\n            };\n        };\n    };\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t9577: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkaisa\"] = self[\"webpackChunkaisa\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","import { Framebuffer } from '../Framebuffer';\nimport { Texture } from '../texture/Texture';\n\nexport class ScaleClipBlitter {\n\n    constructor(private framebuffer: Framebuffer) {\n\n    }\n\n    public drawScaledTextureClip(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.framebuffer.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.framebuffer.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.framebuffer.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.framebuffer.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.framebuffer.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.framebuffer.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.framebuffer.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                const xxInt = xx | 0;\n                const yyInt = yy | 0;\n                const textureIndex = xxInt + yyInt * texture.width;\n                // (xxInt > texture.width - 1 ? texture.width - 1 : xxInt) +\n                // (yyInt > texture.height - 1 ? texture.height - 1 : yyInt) * texture.width;\n\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                const inverseAlpha = 1 - alpha;\n\n                const framebufferPixel = this.framebuffer.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.framebuffer.width;\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class FlatShadingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n    private slope1: number;\n    private slope2: number;\n    private zslope1: number;\n    private zslope2: number;\n    private curz1: number;\n    private curz2: number;\n    private xPosition: number;\n    private xPosition2: number;\n    private yPosition: number;\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        const color: number = v1.color.toPackedFormat();\n\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n\n        this.slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        this.slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n\n        this.zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        this.zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n\n        this.curz1 = 1.0 / v1.projection.z;\n        this.curz2 = 1.0 / v1.projection.z;\n\n        this.xPosition = v1.projection.x;\n        this.xPosition2 = v1.projection.x;\n        this.yPosition = v1.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceLeft, color);\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n        this.slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        this.zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n\n        this.xPosition = v2.projection.x;\n        this.yPosition = v2.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceLeft, color);\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        const color: number = v1.color.toPackedFormat();\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        this.slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        this.slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        this.zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        this.zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        this.curz1 = 1.0 / v1.projection.z;\n        this.curz2 = 1.0 / v1.projection.z;\n\n        this.xPosition = v1.projection.x;\n        this.xPosition2 = v1.projection.x;\n        this.yPosition = v1.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceRight, color);\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        this.slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        this.zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        this.curz2 = 1.0 / v2.projection.z;\n        this.xPosition2 = v2.projection.x;\n        this.yPosition = v2.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceRight, color);\n    }\n\n    drawSpan(framebuffer: Framebuffer, distance: number, color: number) {\n        for (let i = 0; i < distance; i++) {\n            const length = (this.xPosition2) - (this.xPosition);\n            const spanzStep = Math.round(this.curz2 - this.curz1) / length;\n            let wStart = this.curz1;\n            for (let j = 0; j < length; j++) {\n                const framebufferIndex = Math.round(this.yPosition) * framebuffer.width + Math.round(this.xPosition + j);\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    framebuffer.framebuffer[framebufferIndex] = color;\n                }\n                wStart += spanzStep;\n            }\n            this.xPosition += this.slope1;\n            this.xPosition2 += this.slope2;\n            this.yPosition++;\n            this.curz1 += this.zslope1;\n            this.curz2 += this.zslope2;\n        }\n    }\n\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { Vector3f } from '../../math';\n\n/**\n * digital differential analyser line drawing algorithm\n * using fixed point math.\n * renders approx 1400 lines per millisecond on my machine\n */\nexport class LineRasterizerDda {\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public drawLineDDA(start: Vector3f, end: Vector3f, color: number): void {\n        const xDistance: number = end.x - start.x;\n        const yDistance: number = end.y - start.y;\n\n        let dx: number;\n        let dy: number;\n        let length: number;\n\n        if (Math.abs(xDistance) > Math.abs(yDistance)) {\n            dx = Math.sign(xDistance);\n            dy = yDistance / Math.abs(xDistance);\n            length = Math.abs(xDistance);\n        } else {\n            dx = xDistance / Math.abs(yDistance);\n            dy = Math.sign(yDistance);\n            length = Math.abs(yDistance);\n        }\n\n        let xPosition: number = start.x;\n        let yPosition: number = start.y;\n\n        // w=1/z interpolation for z-buffer\n        let wStart = 1 / (start.z);\n        const wDelta = (1 / end.z - 1 / start.z) / length;\n\n        for (let i = 0; i <= length; i++) {\n            if (wStart < this.framebuffer.wBuffer[Math.round(xPosition) + Math.round(yPosition) * this.framebuffer.width]) {\n                this.framebuffer.wBuffer[Math.round(xPosition) + Math.round(yPosition) * this.framebuffer.width] = wStart;\n                this.framebuffer.drawPixel(Math.round(xPosition), Math.round(yPosition), color);\n            }\n            xPosition += dx;\n            yPosition += dy;\n            wStart += wDelta;\n        }\n    }\n\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { Vector3f } from '../../math';\n\nexport class LineRasterizerNoZ {\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public drawLineDDANoZ(start: Vector3f, end: Vector3f, color: number): void {\n        const xDistance: number = end.x - start.x;\n        const yDistance: number = end.y - start.y;\n\n        let dx: number;\n        let dy: number;\n        let length: number;\n\n        if (Math.abs(xDistance) > Math.abs(yDistance)) {\n            dx = Math.sign(xDistance);\n            dy = yDistance / Math.abs(xDistance);\n            length = Math.abs(xDistance);\n        } else {\n            dx = xDistance / Math.abs(yDistance);\n            dy = Math.sign(yDistance);\n            length = Math.abs(yDistance);\n        }\n\n        let xPosition: number = start.x;\n        let yPosition: number = start.y;\n\n        for (let i = 0; i <= length; i++) {\n\n            this.framebuffer.drawPixel(Math.round(xPosition), Math.round(yPosition), color);\n\n            xPosition += dx;\n            yPosition += dy;\n\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector3f } from '../math/Vector3f';\n\nexport class CohenSutherlandLineClipper {\n\n    public static REGION_CODE_CENTER = 0b0000;\n    public static REGION_CODE_LEFT = 0b0001;\n    public static REGION_CODE_RIGHT = 0b0010;\n    public static REGION_CODE_BOTTOM = 0b0100;\n    public static REGION_CODE_TOP = 0b1000;\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public cohenSutherlandLineClipper(start: Vector3f, end: Vector3f, col: number) {\n        let p1: Vector3f = new Vector3f(start.x, start.y, start.z);\n        let p2: Vector3f = new Vector3f(end.x, end.y, end.z);\n\n        let code1: number = this.computeRegionCode(p1);\n        let code2: number = this.computeRegionCode(p2);\n\n        let accept: boolean = false;\n        let done: boolean = false;\n\n        while (!done) {\n\n            if (this.isTrivialAccept(code1, code2)) {\n                accept = true;\n                done = true;\n            } else if (this.isTrivialReject(code1, code2)) {\n                done = true;\n            } else {\n\n                if (code1 === CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    const tempCode: number = code1;\n                    code1 = code2;\n                    code2 = tempCode;\n\n                    const tempPoint: Vector3f = p1;\n                    p1 = p2;\n                    p2 = tempPoint;\n                }\n\n                if ((code1 & CohenSutherlandLineClipper.REGION_CODE_TOP) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.x = (p1.x + (p2.x - p1.x) * (this.framebuffer.maxWindow.y - p1.y) / (p2.y - p1.y));\n                    p1.y = this.framebuffer.maxWindow.y;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_BOTTOM) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.x = (p1.x + (p2.x - p1.x) * (this.framebuffer.minWindow.y - p1.y) / (p2.y - p1.y));\n                    p1.y = this.framebuffer.minWindow.y;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_RIGHT) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.y = (p1.y + (p2.y - p1.y) * (this.framebuffer.maxWindow.x - p1.x) / (p2.x - p1.x));\n                    p1.x = this.framebuffer.maxWindow.x;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_LEFT) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.y = (p1.y + (p2.y - p1.y) * (this.framebuffer.minWindow.x - p1.x) / (p2.x - p1.x));\n                    p1.x = this.framebuffer.minWindow.x;\n                }\n\n                code1 = this.computeRegionCode(p1);\n            }\n        }\n\n        if (accept) {\n            this.framebuffer.drawLineDDA(p1, p2, col);\n        }\n    }\n\n    public isTrivialAccept(code1: number, code2: number): boolean {\n        return (code1 | code2) === CohenSutherlandLineClipper.REGION_CODE_CENTER;\n    }\n\n    public isTrivialReject(code1: number, code2: number): boolean {\n        return (code1 & code2) !== CohenSutherlandLineClipper.REGION_CODE_CENTER;\n    }\n\n    public computeRegionCode(point: Vector3f): number {\n        let regionCode: number = CohenSutherlandLineClipper.REGION_CODE_CENTER;\n\n        if (point.x < this.framebuffer.minWindow.x) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_LEFT;\n        } else if (point.x > this.framebuffer.maxWindow.x) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_RIGHT;\n        }\n\n        if (point.y < this.framebuffer.minWindow.y) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_BOTTOM;\n        } else if (point.y > this.framebuffer.maxWindow.y) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_TOP;\n        }\n\n        return regionCode;\n    }\n\n}\n","\nimport { ScaleClipBlitter } from './blitter/ScaleClipBlitter';\nimport { ControllableCamera } from './camera';\nimport { Color } from './core/Color';\nimport { CullFace } from './CullFace';\nimport { Torus } from './geometrical-objects/Torus';\nimport { Matrix3f, Matrix4f, Vector2f, Vector3f, Vector4f } from './math';\nimport { Interpolator } from './math/Interpolator';\nimport { Sphere } from './math/Sphere';\nimport RandomNumberGenerator from './RandomNumberGenerator';\nimport { FlatShadingTriangleRasterizer } from './rasterizer/FlatShadingTriangleRasterizer';\nimport { LineRasterizerDda } from './rasterizer/line/LineRasterizer';\nimport { LineRasterizerNoZ } from './rasterizer/line/LineRasterizerNoZ';\nimport { TexturedTriangleRasterizer } from './rasterizer/TexturedTriangleRasterizer';\nimport { TexturingRenderingPipeline } from './rendering-pipelines/TexturingRenderingPipeline';\nimport { AbstractClipEdge } from './screen-space-clipping/AbstractClipEdge';\nimport { BottomClipEdge } from './screen-space-clipping/BottomClipEdge';\nimport { CohenSutherlandLineClipper } from './screen-space-clipping/CohenSutherlandLineClipper';\nimport { LeftClipEdge } from './screen-space-clipping/LeftClipEdge';\nimport { RightClipEdge } from './screen-space-clipping/RightClipEdge';\nimport { TopClipEdge } from './screen-space-clipping/TopClipEdge';\nimport { Texture } from './texture/Texture';\nimport { TextureCoordinate } from './TextureCoordinate';\nimport { Vertex } from './Vertex';\n\n/*\nimport { FlatShadingRenderingPipeline } from './rendering-pipelines/FlatShadingRenderingPipeline';\nimport { TexturingRenderingPipeline } from './rendering-pipelines/TexturingRenderingPipeline';\nimport { BlenderJsonParser } from './blender/BlenderJsonParser';\nimport { Material } from './shading/material/Material';\nimport { PointLight } from './shading/light/PointLight';\n*/\n\n\n// let labJson2 = <any>require('./assets/lab2.json');\n// let bakedJson = <any>require('./assets/abstract.json');\n\nexport class Framebuffer {\n\n    public static PIXEL_SIZE_IN_BYTES = 4;\n\n    public minWindow: Vector2f;\n    public maxWindow: Vector2f;\n\n\n    public framebuffer: Uint32Array;\n    public wBuffer: Float32Array;\n\n    public cullMode: CullFace = CullFace.BACK;\n\n    public camera: ControllableCamera;\n    public bob: Texture;\n    public triangleRasterizer = new FlatShadingTriangleRasterizer(this);\n    public texturedTriangleRasterizer = new TexturedTriangleRasterizer(this);\n\n    public scaleClipBlitter = new ScaleClipBlitter(this);\n    // public renderingPipeline: FlatShadingRenderingPipeline;\n     public texturedRenderingPipeline: TexturingRenderingPipeline;\n    public lineRasterizer = new LineRasterizerDda(this);\n    public lineRasterizerNo = new LineRasterizerNoZ(this);\n    public tmpGlitch: Uint32Array;\n\n    public lensFlareVisible: boolean = false;\n    public lensFlareStart = 0;\n    public lensFlareEnd = 0;\n\n    public width: number;\n    public height: number;\n    private imageData: ImageData;\n    private unsignedIntArray: Uint8ClampedArray;\n\n    private torus = new Torus();\n\n    private plane: {\n        points: Vector4f[];\n        points2: Vector4f[];\n        normals: Vector4f[];\n        normals2: Vector4f[];\n        index:Array<number>;\n    };\n\n    private cylinder2: {\n        points: Vector4f[];\n        points2: Vector4f[];\n        normals: Vector4f[];\n        normals2: Vector4f[];\n        index:Array<number>;\n    };\n\n    private linerClipper = new CohenSutherlandLineClipper(this);\n    public clipRegion = Array<AbstractClipEdge>();\n    private texture = new Texture();\n\n    constructor(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n\n        this.imageData = new ImageData(width, height);\n        this.wBuffer = new Float32Array(width * height);\n        const arrayBuffer = new ArrayBuffer(this.width * this.height * Framebuffer.PIXEL_SIZE_IN_BYTES);\n        this.unsignedIntArray = new Uint8ClampedArray(arrayBuffer);\n        this.framebuffer = new Uint32Array(arrayBuffer);\n        this.tmpGlitch = new Uint32Array(width * height);\n        // this.renderingPipeline = new FlatShadingRenderingPipeline(this);\n     this.texturedRenderingPipeline = new TexturingRenderingPipeline(this);\n        this.minWindow = new Vector2f(0, 0);\n        this.maxWindow = new Vector2f(width - 1, height - 1);\n\n        this.clipRegion = new Array<AbstractClipEdge>(\n            new RightClipEdge(this),\n            new LeftClipEdge(this),\n            new BottomClipEdge(this),\n            new TopClipEdge(this)\n        );\n    }\n\n    public setCullFace(face: CullFace): void {\n        this.cullMode = face;\n    }\n\n    public setTexture(texture: Texture): void {\n        this.bob = texture;\n    }\n\n    /*\n    public precompute(texture: Texture): void {\n        // this.blengetBlenderScene(hoodlumJson, false);\n\n         //this.cylinder = this.createCylinder();\n\n        // this.sphereDisp = this.createSphereDistplaced(texture);\n    }\n    */\n\n    public getImageData(): ImageData {\n        this.imageData.data.set(this.unsignedIntArray);\n        return this.imageData;\n    }\n\n    public clear() {\n        const color: number = Color.BLACK.toPackedFormat();\n        const count: number = this.width * this.height;\n        for (let i = 0; i < count; i++) {\n            this.framebuffer[i] = color;\n        }\n    }\n\n    public clearColorBuffer(color: number) {\n        this.framebuffer.fill(color);\n    }\n\n    public drawPixel(x: number, y: number, color: number) {\n        this.framebuffer[x + y * this.width] = color;\n\n    }\n    public drawPixel4(x: number, y: number, color: number, alpha: number) {\n        const index: number = x + y * this.width;\n        const inverseAlpha = 1 - alpha;\n        const r = (((this.framebuffer[index] >> 0) & 0xff) * (inverseAlpha)\n            + ((color >> 0) & 0xff) * (alpha)) | 0;\n        const g = (((this.framebuffer[index] >> 8) & 0xff) * (inverseAlpha) +\n            ((color >> 8) & 0xff) * (alpha)) | 0;\n        const b = (((this.framebuffer[index] >> 16) & 0xff) * (inverseAlpha) +\n            ((color >> 16) & 0xff) * (alpha)) | 0;\n        this.framebuffer[x + y * this.width] = r | (g << 8) | (b << 16) | (255 << 24);\n\n    }\n\n    public drawPixel3(x: number, y: number, color: number, alpha2: number) {\n\n        const index: number = x + y * this.width;\n        const alpha = ((color >> 24) & 0xff) / 255 * alpha2;\n        const inverseAlpha = 1 - alpha;\n\n        const r = (((this.framebuffer[index] >> 0) & 0xff) * (inverseAlpha)\n            + ((color >> 0) & 0xff) * (alpha)) | 0;\n        const g = (((this.framebuffer[index] >> 8) & 0xff) * (inverseAlpha) +\n            ((color >> 8) & 0xff) * (alpha)) | 0;\n        const b = (((this.framebuffer[index] >> 16) & 0xff) * (inverseAlpha) +\n            ((color >> 16) & 0xff) * (alpha)) | 0;\n\n        this.framebuffer[index] = r | (g << 8) | (b << 16) | (255 << 24);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * blended with the framebuffer background\n     *\n     * @param  {x} number                 this can be a float\n     * @param  {y} number                 this can be a float\n     * @param  {color} number             color to blend into framebuffer\n     */\n    drawPixelAntiAliased(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        const roundedX = Math.floor(x);\n        const roundedY = Math.floor(y);\n        const percentX = 1 - Math.abs(x - roundedX);\n        const percentY = 1 - Math.abs(y - roundedY);\n        const percent = percentX * percentY;\n        this.drawPixel3(roundedX, roundedY, color, percent);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * to the framebuffer background\n     */\n    drawPixelAliased(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        const roundedX = Math.round(x);\n        const roundedY = Math.round(y)\n        this.drawPixel(roundedX, roundedY, color);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * blended with the framebuffer background in a 4x4 matrix\n     * https://en.wikipedia.org/wiki/Spatial_anti-aliasing\n     */\n    drawPixelAntiAliasedSpacial(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        for (let roundedX = Math.floor(x); roundedX <= Math.ceil(x); roundedX++) {\n            for (let roundedY = Math.floor(y); roundedY <= Math.ceil(y); roundedY++) {\n                const percentX = 1 - Math.abs(x - roundedX);\n                const percentY = 1 - Math.abs(y - roundedY);\n                const percent = percentX * percentY;\n                this.drawPixel4(roundedX, roundedY, color, percent);\n            }\n        }\n    }\n\n    public readPixel(x: number, y: number): number {\n        return this.framebuffer[x + y * this.width];\n    }\n\n    public drawRect(x, y, width, color) {\n        let start = x + y * this.width;\n\n        for (let i = 0; i < width; i++) {\n            this.framebuffer[start++] = color;\n        }\n    }\n\n    public drawRect2(x: number, y: number, width: number, height: number, color: number) {\n        let start = x + y * this.width;\n        for (let j = 0; j < height; j++) {\n            for (let i = 0; i < width; i++) {\n\n                this.framebuffer[start++] = color;\n\n            }\n            start += this.width - width;\n        }\n    }\n\n    public drawText(x: number, y: number, text: string, texture: Texture): void {\n        let xpos = x;\n        const firstIndex = ' '.charCodeAt(0);\n        for (let i = 0; i < text.length; i++) {\n            const index = text.charCodeAt(i) - firstIndex;\n            const tx = Math.floor(index % 32) * 8;\n            const ty = Math.floor(index / 32) * 8;\n            this.drawTextureRectFastAlpha(xpos, y, tx, ty, 8, 8, texture);\n            xpos += 8;\n        }\n    }\n\n    public addReflections() {\n        const start = 150;\n        for (let i = 0; i < 50; i++) {\n            for (let x = 0; x < this.width; x++) {\n                this.framebuffer[(start + i) * this.width + x] = this.framebuffer[(start - i * 3 - 1) * this.width + x +\n                    Interpolator.interpolate(0, 50, i) * (Math.sin(Date.now() * 0.002 + i * 0.2) * 14) | 0];\n            }\n        }\n    }\n\n    public drawTextureRect2(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture, alpha2: number): void {\n        for (let w = 0; w < width; w++) {\n            for (let h = 0; h < height; h++) {\n                const texIndex = (xt + w) + ((yt + h) * texture.width);\n                const frIndex = (xs + w) + ((ys + h) * this.width);\n                const alpha = ((texture.texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (((this.framebuffer[frIndex] >> 0) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 0) & 0xff) * (alpha)) | 0;\n                const g = (((this.framebuffer[frIndex] >> 8) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 8) & 0xff) * (alpha)) | 0;\n                const b = (((this.framebuffer[frIndex] >> 16) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 16) & 0xff) * (alpha)) | 0;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n            }\n        }\n    }\n\n    public drawTextureRectFastAlpha(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const color = texture.texture[texIndex];\n                if (color & 0xff000000) {\n                    this.framebuffer[frIndex] = color;\n                }\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n\n    public drawTextureColorized(x: number, y: number, texture: Texture, color: Color): void {\n\n        let frIndex = x + y * this.width;\n        let texIndex = 0;\n\n        for (let h = 0; h < texture.height; h++) {\n            for (let w = 0; w < texture.width; w++) {\n                const txPixel = texture.texture[texIndex];\n\n\n                const r = (txPixel >> 0 & 0xff) * color.r / 255;\n                const g = (txPixel >> 8 & 0xff) * color.g / 255;\n                const b = (txPixel >> 16 & 0xff) * color.b / 255;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                texIndex++;\n                frIndex++;\n            }\n\n            frIndex += this.width - texture.width;\n        }\n    }\n\n    public drawTextureRectNoAlpha(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                this.framebuffer[frIndex] = texture.texture[texIndex];\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    /**\n     * Transitions from one pixel to another using alpha\n     *\n     * @param  {number} c1\n     * @param  {number} c2\n     * @param  {number} alpha number ranging from 0-255\n     * @return {number}     color blended difference between c1 and c2\n     */\n    public static blend(c1: number, c2: number, nAlpha: number): number {\n\n        if (0 === nAlpha) {\n            return c1;\n        }\n\n        if (255 === nAlpha) {\n            return c2;\n        }\n\n        const nInvAlpha: number = 255 - nAlpha;\n\n        const r1: number = (c1 & 0x00FF0000) >> 16;\n        const r2: number = (c2 & 0x00FF0000) >> 16;\n        const r: number = (r2 * nAlpha + r1 * nInvAlpha) >> 8;\n\n        const g1: number = (c1 & 0x0000FF00) >> 8;\n        const g2: number = (c2 & 0x0000FF00) >> 8;\n        const g: number = (g2 * nAlpha + g1 * nInvAlpha) >> 8;\n\n        const b1: number = (c1 & 0x000000FF);\n        const b2: number = (c2 & 0x000000FF);\n        const b: number = (b2 * nAlpha + b1 * nInvAlpha) >> 8;\n\n        return 0xff000000 | r << 16 | g << 8 | b;\n    }\n\n\n    public static addColor(c1: number, c2: number) {\n        //int a1 = (c1 >> 24) & 0xff;\n        const r1 = (c1 >> 16) & 0xFF;\n        const g1 = (c1 >>  8) & 0xFF;\n        const b1 =  c1        & 0xFF;\n\n        const r2 = (c2 >> 16) & 0xFF;\n        const g2 = (c2 >>  8) & 0xFF;\n        const b2 =  c2        & 0xFF;\n\n        const r = r1 + r2 < 0xFF ? r1 + r2 : 0xFF;\n        const g = g1 + g2 < 0xFF ? g1 + g2 : 0xFF;\n        const b = b1 + b2 < 0xFF ? b1 + b2 : 0xFF;\n\n        return (0xFF << 24 | r << 16 | g << 8 | b);\n      }\n\n    public drawTextureRect(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Uint32Array, pixelWidth: number, alpha2: number): void {\n        let texIndex = xt + yt * pixelWidth;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const alpha = ((texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n                const inverseAlpha = 1 - alpha;\n\n                const fbPixel = this.framebuffer[frIndex];\n                const txPixel = texture[texIndex];\n\n                const r = (fbPixel >> 0 & 0xff) * inverseAlpha + (txPixel >> 0 & 0xff) * alpha;\n                const g = (fbPixel >> 8 & 0xff) * inverseAlpha + (txPixel >> 8 & 0xff) * alpha;\n                const b = (fbPixel >> 16 & 0xff) * inverseAlpha + (txPixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += pixelWidth - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    public drawTextureRectAdd(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture, alpha2: number): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const alpha = ((texture.texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n\n                const fbPixel = this.framebuffer[frIndex];\n                const txPixel = texture.texture[texIndex];\n\n                const r = Math.min(255, (fbPixel >> 0 & 0xff) + (txPixel >> 0 & 0xff) * alpha);\n                const g = Math.min(255, (fbPixel >> 8 & 0xff) + (txPixel >> 8 & 0xff) * alpha);\n                const b = Math.min(255, (fbPixel >> 16 & 0xff) + (txPixel >> 16 & 0xff) * alpha);\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    public pixelate() {\n        const xoff = 200;\n        const yoff = 50;\n\n        for (let x = 0; x < 10; x++) {\n            for (let y = 0; y < 10; y++) {\n                this.drawBox2(x * 10 + xoff, y * 10 + yoff, 10, 10, this.readPixel(x * 10 + xoff, y * 10 + yoff));\n            }\n        }\n        this.drawLineDDA(new Vector3f(xoff, yoff, -0.3), new Vector3f(xoff + 20 * 5, yoff, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff, yoff + 20 * 5, -0.3), new Vector3f(xoff + 20 * 5, yoff + 20 * 5, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff, yoff, -0.3), new Vector3f(xoff, yoff + 20 * 5, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff + 20 * 5, yoff, -0.3), new Vector3f(xoff + 20 * 5, yoff + 20 * 5, -0.3), 0xffffffff);\n    }\n\n    public fastFramebufferCopyOffset(src: Uint32Array, dest: Uint32Array, offset = 0) {\n        let i = this.width * this.height / 32 + 1;\n        let k = this.width * this.height;\n        let l = this.width * (this.height - offset);\n        while (--i) {\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n        }\n    }\n\n    // 6 times faster than the slow method that clips and does alpha blending\n    public fastFramebufferCopy(dest: Uint32Array, src: Uint32Array) {\n        dest.set(src);\n    }\n\n    public noise(elapsedTime: number, texture: Texture, scale: number = 0.07): void {\n        const rng = new RandomNumberGenerator();\n        rng.setSeed(elapsedTime);\n        for (let y = 0; y < this.height; y++) {\n            this.drawTextureRect(0, y, Math.floor(rng.getFloat() * (texture.texture.length - this.width)), 0, this.width, 1, texture.texture, texture.width, scale);\n        }\n    }\n\n    public drawTexturedBillboard(xp: number, yp: number, width: number, height: number, texture: Texture, z: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n                    this.wBuffer[index2] = z;\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const r = (this.framebuffer[index2] >> 0 & 0xff) + (texture.texture[textureIndex] >> 0 & 0xff);\n                    const g = (this.framebuffer[index2] >> 8 & 0xff) + (texture.texture[textureIndex] >> 8 & 0xff);\n                    const b = (this.framebuffer[index2] >> 16 & 0xff) + (texture.texture[textureIndex] >> 16 & 0xff);\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += yStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle(xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle2(\n        xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number,\n        imgNum: number = 0, spritH: number): void {\n        const xStep = texture.width / width;\n        const yStep = spritH / height;\n        let xx = 0;\n        let yy = 0;\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n        let xTextureStart: number;\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, spritH - 1) * texture.width +\n                        spritH * texture.width * imgNum;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle2Sub(\n        xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number,\n        imgNum: number = 0, spritH: number, rr:number=1,gg:number=1,bb:number=1) : void {\n        const xStep = texture.width / width;\n        const yStep = spritH / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > this.height - 1 ||\n            xp + width < 0 ||\n            xp > this.width - 1) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - (this.height), 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - (this.height - 1), 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = Math.ceil((width + xp) - Math.max(xp + width - (this.width), 0));\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = Math.ceil(width - Math.max(xp + width - (this.width - 1), 0));\n        }\n\n        const sub: number = Math.ceil(xp) - xp;\n        const suby: number = Math.ceil(yp) - yp;\n        xTextureStart += sub * xStep;\n        yy += suby * yStep;\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = Math.ceil(xStart) + Math.ceil(yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(Math.round(xx) | 0, texture.width - 1) +\n                        Math.min(Math.round(yy) | 0, spritH - 1) * texture.width +\n                        spritH * texture.width * imgNum;\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha*rr;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha*gg;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha*bb;\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticleNoDepth(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > this.height - 1 ||\n            xp + width < 0 ||\n            xp > this.width - 1) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n\n                const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                const inverseAlpha = 1 - alpha;\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawSoftParticle(xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n                    // float scale = 0.2f;\n                    // float fade = clamp((depthMapDepth.x-depth)*scale, 0.0, 1.0);\n                    const zDist = Math.min(Math.max(((1 / z - 1 / this.wBuffer[index2])), 0.0), 1.0);\n                    // this.wBuffer[index2] = z;\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale * zDist;\n                    const inverseAlpha = 1 - alpha;\n\n                    const r = (this.framebuffer[index2] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer[index2] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer[index2] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawFog(color: Color, fogScale: number, fogOffset: number): void {\n        const videoMemorySize: number = this.width * this.height;\n        const wBufferScale: number = -fogScale;\n\n        for (let index: number = 0; index < videoMemorySize; index++) {\n            const alpha = Math.max(Math.min(wBufferScale * (1 / this.wBuffer[index] + fogOffset), 1.0), 0.0);\n            const inverseAlpha = 1.0 - alpha;\n\n            const r = (this.framebuffer[index] >> 0 & 0xff) * inverseAlpha + color.r * alpha;\n            const g = (this.framebuffer[index] >> 8 & 0xff) * inverseAlpha + color.g * alpha;\n            const b = (this.framebuffer[index] >> 16 & 0xff) * inverseAlpha + color.b * alpha;\n\n            this.framebuffer[index] = r | (g << 8) | (b << 16) | (255 << 24);\n        }\n    }\n\n    public drawScaledTextureClipBi(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                // let textureIndex = //Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n                const color = texture.getBilinearFilteredPixel2(xx, yy);\n\n                const alpha = 255 * alphaScale;\n                const inverseAlpha = 1 - alpha;\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = color;\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawScaledTextureClipBiAdd(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                // let textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n                const color = texture.getBilinearFilteredPixel2(xx, yy);\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = color;\n\n                const r = Math.min((framebufferPixel >> 0 & 0xff) + (texturePixel >> 0 & 0xff) * alphaBlend, 255);\n                const g = Math.min((framebufferPixel >> 8 & 0xff) + (texturePixel >> 8 & 0xff) * alphaBlend, 255);\n                const b = Math.min((framebufferPixel >> 16 & 0xff) + (texturePixel >> 16 & 0xff) * alphaBlend, 255);\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawScaledTextureClipAdd(xp: number, yp: number, width: number, height: number, texture: Texture, alpha: number = 1.0): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = Math.min((framebufferPixel >> 0 & 0xff) + (texturePixel >> 0 & 0xff) * alpha, 255);\n                const g = Math.min((framebufferPixel >> 8 & 0xff) + (texturePixel >> 8 & 0xff) * alpha, 255);\n                const b = Math.min((framebufferPixel >> 16 & 0xff) + (texturePixel >> 16 & 0xff) * alpha, 255);\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawTexture(x: number, y: number, texture: Texture, alpha2: number) {\n        const SCREEN_WIDTH = this.width;\n        const SCREEN_HEIGHT = this.height;\n\n        let framebufferIndex: number = Math.max(x, 0) + Math.max(y, 0) * this.width;\n        let textureIndex: number = Math.max(0, 0 - x) + Math.max(0, 0 - y) * texture.width;\n\n        const width: number = Math.min(texture.width, SCREEN_WIDTH - x) - Math.max(0, 0 - x);\n        const height: number = Math.min(texture.height, SCREEN_HEIGHT - y) - Math.max(0, 0 - y);\n\n        const textureRowOffset = texture.width - width;\n        const framebufferRowOffset = this.width - width;\n\n        const div = 1 / 255 * alpha2;\n\n        for (let yHeight: number = 0; yHeight < height; yHeight++) {\n            for (let xWidth: number = 0; xWidth < width; xWidth++) {\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * div;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            textureIndex += textureRowOffset;\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n    public drawTextureFullscreen(texture: Texture, alpha2: number) {\n\n        let framebufferIndex: number = 0;\n        const inverseAlpha = 1 - alpha2;\n        for (let y: number = 0; y < this.width * this.height; y++) {\n\n            const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 0 & 0xff) * alpha2;\n            const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 8 & 0xff) * alpha2;\n            const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 16 & 0xff) * alpha2;\n\n            this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n            framebufferIndex++;\n        }\n    }\n\n    public drawTexture3(x: number, y: number, texture: Texture, alpha2: number, time: number) {\n        const SCREEN_WIDTH = this.width;\n        const SCREEN_HEIGHT = this.height;\n\n        let framebufferIndex: number = Math.max(x, 0) + Math.max(y, 0) * this.width;\n        let textureIndex: number = Math.max(0, 0 - x) + Math.max(0, 0 - y) * texture.width;\n\n        const width: number = Math.min(texture.width, SCREEN_WIDTH - x) - Math.max(0, 0 - x);\n        const height: number = Math.min(texture.height, SCREEN_HEIGHT - y) - Math.max(0, 0 - y);\n\n        const textureRowOffset = texture.width - width;\n        const framebufferRowOffset = this.width - width;\n\n        const div = 1 / 255 * alpha2;\n\n        const mHeight = Math.floor(height * Math.max(Math.min(1, time), 0));\n\n        for (let yHeight: number = 0; yHeight < mHeight; yHeight++) {\n            for (let xWidth: number = 0; xWidth < width; xWidth++) {\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * div;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            textureIndex += textureRowOffset;\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n    public drawTextureNoClipAlpha(x: number, y: number, texture: Texture): void {\n        let framebufferIndex: number = x + y * this.width;\n        let textureIndex: number = 0;\n\n        const framebufferRowOffset = this.width - texture.width;\n\n        for (let yHeight = 0; yHeight < texture.height; yHeight++) {\n            for (let xWidth = 0; xWidth < texture.width; xWidth++) {\n                const color = texture.texture[textureIndex];\n\n                if (color & 0xff000000) {\n                    this.framebuffer[framebufferIndex] = color;\n                }\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n     // https://math.stackexchange.com/questions/859454/maximum-number-of-vertices-in-intersection-of-triangle-with-box/\n     public nearPlaneClipping(t1: Vector3f, t2: Vector3f, color: number): void {\n        const NEAR_PLANE_Z = -1.7;\n\n        if (t1.z < NEAR_PLANE_Z && t2.z < NEAR_PLANE_Z) {\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t1), this.project(t2), color);\n        } else if (t1.z > NEAR_PLANE_Z && t2.z > NEAR_PLANE_Z) {\n            return;\n        } else if (t1.z < NEAR_PLANE_Z) {\n            const ratio = (NEAR_PLANE_Z - t1.z) / (t2.z - t1.z);\n            const t3 = new Vector3f(ratio * (t2.x - t1.x) + t1.x, ratio * (t2.y - t1.y) + t1.y, NEAR_PLANE_Z);\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t1), this.project(t3), color);\n        } else if (t2.z < NEAR_PLANE_Z) {\n            const ratio = (NEAR_PLANE_Z - t2.z) / (t1.z - t2.z);\n            const t3 = new Vector3f(ratio * (t1.x - t2.x) + t2.x, ratio * (t1.y - t2.y) + t2.y, NEAR_PLANE_Z);\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t2), this.project(t3), color);\n        }\n    }\n\n    public project(t1: { x: number, y: number, z: number }): Vector3f {\n        return new Vector3f(Math.round((this.width / 2) + (292 * t1.x / (-t1.z))),\n            Math.round((this.height / 2) - (t1.y * 292 / (-t1.z))),\n            t1.z);\n    }\n\n    public clearDepthBuffer(): void {\n        this.wBuffer.fill(-1 / 900);\n    }\n\n    public drawBox() {\n        const height = this.maxWindow.y - this.minWindow.y + 1;\n        const width = this.maxWindow.x - this.minWindow.x + 1;\n        let index = this.minWindow.y * this.width + this.minWindow.x;\n        for (let i = 0; i < height; i++) {\n            this.framebuffer.fill(255 << 24 | 55 << 16 | 55 << 8 | 55, index, index + width);\n            index += this.width;\n        }\n    }\n\n    public drawBox2(x1: number, y1: number, width: number, height: number, color: number) {\n\n        let index = y1 * this.width + x1;\n        for (let i = 0; i < height; i++) {\n            this.framebuffer.fill(color, index, index + width);\n            index += this.width;\n        }\n    }\n\n    // TODO: implement subpixel accuracy\n    // https://github.com/specht/cruiser\n    public wireFrameSphereClipping(elapsedTime: number): void {\n\n        this.wBuffer.fill(100);\n\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 16;\n        const STEPS2 = 16;\n\n        // TODO: move into setup method\n        for (let i = 0; i <= STEPS; i++) {\n            for (let r = 0; r < STEPS2; r++) {\n                points.push(this.sphereFunction2(-i * Math.PI / STEPS - Math.PI / 2, -r * 2 * Math.PI / STEPS2));\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2)); // 2\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 1\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2)); // 4\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 5\n            }\n        }\n\n        // Create MV Matrix\n        const scale = 10.8 + 5 * (Math.sin(elapsedTime * 0.16) + 1) / 2;\n        let modelViewMartrix = Matrix4f.constructScaleMatrix(scale, scale, scale).multiplyMatrix(Matrix4f.constructYRotationMatrix(elapsedTime * 0.08));\n        modelViewMartrix = modelViewMartrix.multiplyMatrix(Matrix4f.constructXRotationMatrix(elapsedTime * 0.08));\n        modelViewMartrix = Matrix4f.constructTranslationMatrix(0 + 20 * Math.sin(elapsedTime * 0.04), 5 * Math.sin(elapsedTime * 0.06), -22).multiplyMatrix(modelViewMartrix);\n\n        const points2: Array<Vector3f> = new Array<Vector3f>();\n\n        for (let p = 0; p < points.length; p++) {\n            const transformed = modelViewMartrix.multiplyHom(points[p]);\n\n            const x = transformed.x;\n            const y = transformed.y;\n            const z = transformed.z;\n\n            const xx = (this.width * 0.5) + (x / (-z * 0.0078));\n            const yy = (this.height * 0.5) + (y / (-z * 0.0078));\n\n            points2.push(new Vector3f(xx, yy, z));\n        }\n\n        // draw clip region\n        const colred = 255 << 24 | 230 << 16 | this.height << 16 | this.height;\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.minWindow.y - 1, 0), new Vector3f(this.minWindow.x - 1, this.maxWindow.y + 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.maxWindow.x + 1, this.minWindow.y - 1, 0), new Vector3f(this.maxWindow.x + 1, this.maxWindow.y + 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.minWindow.y - 1, 0), new Vector3f(this.maxWindow.x + 1, this.minWindow.y - 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.maxWindow.y + 1, 0), new Vector3f(this.maxWindow.x + 2, this.maxWindow.y + 1, 0), colred);\n\n        this.drawBox();\n\n        for (let i = 0; i < index.length; i += 3) {\n            const v1 = points2[index[i]];\n            const v2 = points2[index[i + 1]];\n            const v3 = points2[index[i + 2]];\n\n            const colLine = 255 << 24 | 255 << 16 | 255 << 8 | 255;\n            if (this.isTriangleCCW(v1, v2, v3)) {\n                this.linerClipper.cohenSutherlandLineClipper(v1, v2, colLine);\n                this.linerClipper.cohenSutherlandLineClipper(v1, v3, colLine);\n                this.linerClipper.cohenSutherlandLineClipper(v3, v2, colLine);\n            }\n        }\n    }\n\n    public isTriangleCCW(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number }): boolean {\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v1.y - v1.x * v3.y;\n        if (this.cullMode === CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n        public wireFrameTerrain(elapsedTime: number, heightmap: Texture): void {\n\n            this.clearDepthBuffer();\n\n            const index: Array<number> = [\n            ];\n\n            const points: Array<Vector3f> = [];\n            for (let y = 0; y < 256; y++) {\n                for (let x = 0; x < 256; x++) {\n                    points.push(new Vector3f((x - 128) * 20.0, (heightmap.texture[x + y * 256] & 0x000000ff) * 128 / 256 - 70, (y - 128) * 20.0));\n                }\n            }\n\n            for (let y = 0; y < 256; y += 1) {\n                for (let x = 0; x < 256 - 1; x += 1) {\n                    index.push(0 + x + (y * 256));\n                    index.push(1 + x + (y * 256));\n                }\n            }\n\n            for (let x = 0; x < 256; x += 1) {\n                for (let y = 0; y < 256 - 1; y += 1) {\n\n                    index.push(x + ((y + 0) * 256));\n                    index.push(x + ((y + 1) * 256));\n                }\n            }\n\n            const modelViewMartrix = Matrix3f.constructYRotationMatrix(elapsedTime * 0.003);\n\n            const points2: Array<Vector3f> = new Array<Vector3f>();\n\n            const xOff = + Math.cos(elapsedTime * 0.000001) * 128 * 20;\n            const zOff = Math.sin(elapsedTime * 0.000001) * 128 * 20;\n            points.forEach(element => {\n                const transformed = modelViewMartrix.multiply(element);\n\n                const x = transformed.x + xOff;\n                const y = transformed.y;\n                const z = transformed.z + zOff; // TODO: use translation matrix!\n\n                points2.push(new Vector3f(x, y, z));\n            });\n\n            for (let i = 0; i < index.length; i += 2) {\n                const scale = (1 - Math.min(255, -points2[index[i]].z * 0.9) / 255);\n                const color = (255 * scale) << 8 | 100 * scale | (this.height * scale) << 16 | 255 << 24;\n                this.nearPlaneClipping(points2[index[i]], points2[index[i + 1]], color);\n            }\n        }\n\n    public drawBoundingSphere(sphere: Sphere, matrix: Matrix4f, color: number): void {\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 8;\n        const STEPS2 = 8;\n\n        // TODO: move into setup method\n        for (let i = 0; i <= STEPS; i++) {\n            for (let r = 0; r < STEPS2; r++) {\n\n                const pos = this.sphereFunction2(-i * Math.PI / STEPS - Math.PI / 2, -r * 2 * Math.PI / STEPS2).mul(sphere.getRadius() + 0.01).add(sphere.getCenter());\n                pos.w = 1;\n\n                points.push(pos);\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2)); // 2\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 1\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2)); // 4\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 5\n            }\n        }\n\n        const modelViewMartrix = matrix;\n\n        const points2: Array<Vector3f> = new Array<Vector3f>();\n\n        for (let p = 0; p < points.length; p++) {\n            const transformed = modelViewMartrix.multiplyHom(points[p]);\n            points2.push(new Vector3f(transformed.x, transformed.y, transformed.z));\n        }\n\n        for (let i = 0; i < index.length; i += 3) {\n\n            const v1 = points2[index[i]];\n            const v2 = points2[index[i + 1]];\n            const v3 = points2[index[i + 2]];\n\n            this.nearPlaneClipping(v1, v2, color);\n            this.nearPlaneClipping(v1, v3, color);\n            this.nearPlaneClipping(v3, v2, color);\n\n        }\n    }\n    public drawPlanedeformationTunnelAnim(elapsedTime: number, texture: Texture) {\n\n        let i = 0;\n        for (let y = 0; y < this.height; y++) {\n            for (let x = 0; x < this.width; x++) {\n                const xdist = (x - this.width / 2);\n                const ydist = (y - this.height / 2);\n                const dist = 256 * 0.2 / Math.max(1.0, Math.sqrt(xdist * xdist + ydist * ydist));\n                const dist2 = dist + elapsedTime * 0.002;\n                const angle = (Math.atan2(xdist, ydist) / Math.PI + 1.0) * 16 + elapsedTime * 0.00069;\n\n                const color1 = texture.texture[(dist2 & 0x1f) + (angle & 0x1f) * 32];\n                // darkening can be done with alpha blended texture\n                const scale = 1 - Interpolator.cosineInterpolate(1.0, 6.0, dist);\n                const r = ((color1 >> 0) & 0xff) * scale;\n                const g = ((color1 >> 8) & 0xff) * scale;\n                const b = ((color1 >> 16) & 0xff) * scale;\n                const final = r | g << 8 | b << 16;\n\n                this.framebuffer[i++] = final;\n            }\n        }\n    }\n\n\n    public drawScreenBounds(framebuffer: Framebuffer): void {\n        const color: number = Color.WHITE.toPackedFormat();\n        const width: number = this.width / 2;\n        const height: number = this.height / 2;\n\n        framebuffer.drawLineDDANoZ(\n            new Vector3f(width / 2, height / 2, 0),\n            new Vector3f(width / 2 + width, height / 2, -100),\n            color\n        );\n\n        framebuffer.drawLineDDANoZ(\n            new Vector3f(width / 2, height / 2, 0),\n            new Vector3f(width / 2, height / 2 + height, -100),\n            color\n        );\n\n        framebuffer.drawLineDDANoZ(\n            new Vector3f(width / 2 + width, height / 2, 0),\n            new Vector3f(width / 2 + width, height / 2 + height, -100),\n            color\n        );\n\n        framebuffer.drawLineDDANoZ(\n            new Vector3f(width / 2, height / 2 + height, 0),\n            new Vector3f(width / 2 + width, height / 2 + height, -100),\n            color\n        );\n    }\n\n    public drawParticleStreams(framebuffer: Framebuffer, elapsedTime: number, texture: Texture, light: Vector3f) {\n\n        const points: Array<Vector3f> = new Array<Vector3f>();\n        const points2: Array<Vector3f> = new Array<Vector3f>(points.length);\n        const transformed = framebuffer.project(light);\n\n        points2.push(transformed);\n        points2.sort((a, b) => {\n            return a.z - b.z;\n        });\n\n        points2.forEach(element => {\n            // let size = -(2.0 * 192 / (element.z));\n            const size = -(80.3 * 192 / (element.z));\n\n            framebuffer.drawParticle2(\n                Math.round(element.x - size / 2),\n                Math.round(element.y - size / 2),\n                Math.round(size), Math.round(size), texture, 1 / element.z, 1.0, 0, 200);\n        });\n\n    }\n\n    public drawPlaneDeformation(elapsedTime: number, texture: Texture): void {\n        // optimize\n        // power of two modulo with &\n        // this.framebuffer.clearColor(new Color());\n        // precompute LUD + render to half size backbuffer\n        const IMG_WIDTH = texture.width;\n        const IMG_HEIGHT = texture.height;\n\n        let framebufferIndex = 0;\n\n        for (let y = 0; y < this.height; y++) {\n            const yy = (-1.00 + 2.00 * y / this.height);\n\n            for (let x = 0; x < this.width; x++) {\n\n                const xx = (-1.00 + 2.00 * x / this.width);\n\n                // magic formulas here\n                const u = ((xx / Math.abs(yy)) * IMG_WIDTH * 0.05) | 0;\n                const v = (1.0 / Math.abs(yy) * IMG_HEIGHT * 0.05 + elapsedTime * 0.008) | 0;\n\n                const scale = 1 - Math.max(Math.min(1 / Math.abs(yy) * 0.2, 1), 0);\n                let color = texture.texture[(u & 0xff) + (v & 0xff) * IMG_WIDTH];\n                const r = ((color >> 0) & 0xff) * scale;\n                const g = ((color >> 8) & 0xff) * scale;\n                const b = ((color >> 16) & 0xff) * scale;\n                color = (255 << 24) | (b << 16) | (g << 8) | (r << 0);\n\n                this.framebuffer[framebufferIndex++] = color;\n            }\n        }\n    }\n\n    public torusFunction(alpha: number): Vector3f {\n        return new Vector3f(Math.sin(alpha) * 10, 0, Math.cos(alpha) * 10);\n    }\n\n    public fakeSphere(normal: Vector4f, vertex: Vertex): void {\n        // https://www.mvps.org/directx/articles/spheremap.htm\n        // vertex.textureCoordinate.u = 0.5 + normal.x * 0.5;\n        // vertex.textureCoordinate.v = 0.5 - normal.y * 0.5;\n        vertex.textureCoordinate.u = 0.5 + Math.asin(normal.x) / Math.PI;\n        vertex.textureCoordinate.v = 0.5 - Math.asin(normal.y) / Math.PI;\n    }\n\n    public fakeSphere2(normal: Vector3f, tex: TextureCoordinate): void {\n        tex.u = 0.5 + Math.asin(normal.x) / Math.PI;\n        tex.v = 0.5 - Math.asin(normal.y) / Math.PI;\n    }\n\n    public drawLineDDA(start: Vector3f, end: Vector3f, color: number): void {\n        this.lineRasterizer.drawLineDDA(start, end, color);\n    }\n\n    public drawLineDDANoZ(start: Vector3f, end: Vector3f, color: number): void {\n        this.lineRasterizerNo.drawLineDDANoZ(start, end, color);\n    }\n\n    private sphereFunction2(theta: number, phi: number): Vector4f {\n        const pos = new Vector4f(Math.cos(theta) * Math.cos(phi),\n            Math.cos(theta) * Math.sin(phi),\n            Math.sin(theta), 1.0);\n\n        return pos;\n    }\n\n}\n","export class FullscreenUtils {\n\n    public static toggleFullscreen(element: Element): void {\n        if (!this.fullscreen) {\n            FullscreenUtils.enterFullscreen(element);\n            this.fullscreen = true;\n            this.setStyle(element, 'cursor: none');\n        } else {\n            FullscreenUtils.exitFullscreen();\n            this.fullscreen = false;\n            this.setStyle(element, 'cursor: zoom-in');\n        }\n    }\n\n    private static setStyle(el, css) {\n        el.setAttribute('style', el.getAttribute('style') + ';' + css);\n    }\n\n    public static enterFullscreen(element: Element): void {\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.mozRequestFullScreen) {\n            element.mozRequestFullScreen();\n        } else if (element.msRequestFullscreen) {\n            element.msRequestFullscreen();\n        } else if (element.webkitRequestFullScreen) {\n            element.webkitRequestFullScreen();\n        }\n    }\n\n    public static exitFullscreen(): void {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    }\n\n    private static fullscreen: boolean = false;\n\n}\n","import { Framebuffer } from './Framebuffer';\nimport { FullscreenUtils } from './fullscreen/FullscreenUtils';\nimport { AbstractScene } from './scenes/AbstractScene';\n\nexport class Canvas {\n\n    public framebuffer: Framebuffer;\n    private canvas: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D;\n    private startTime: number;\n    private boundRenderLoop: FrameRequestCallback;\n\n    constructor(width: number, height: number, private scene: AbstractScene) {\n        this.canvas = document.createElement('canvas');\n\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.canvas.id = 'aisa-canvas';\n\n        this.canvas.style.cssText = 'image-rendering: optimizeSpeed;' + // FireFox < 6.0\n            'image-rendering: -moz-crisp-edges;' + // FireFox\n            'image-rendering: -o-crisp-edges;' +  // Opera\n            'image-rendering: -webkit-crisp-edges;' + // Chrome\n            'image-rendering: crisp-edges;' + // Chrome\n            'image-rendering: -webkit-optimize-contrast;' + // Safari\n            'image-rendering: pixelated; ' + // Future browsers\n            '-ms-interpolation-mode: nearest-neighbor;'; // IE\n\n        this.canvas.style.width = `${width * 2}px`;\n        this.canvas.style.height = `${height * 2}px`;\n\n        this.context = this.canvas.getContext('2d');\n\n        // FIXME: make this cross browser compatible!\n        (this.context as any).oImageSmoothingEnabled = false;\n        this.context.imageSmoothingEnabled = false;\n        (this.context as any).webkitImageSmoothingEnabled = false;\n\n        this.framebuffer = new Framebuffer(width, height);\n        this.boundRenderLoop = this.renderLoop.bind(this);\n    }\n\n    public init(): void {\n        // add canvas element to target element\n        this.appendTo(document.getElementById('aisa'));\n\n        // Add fullscreen toggle on click\n        this.canvas.addEventListener('click', (event: MouseEvent) => {\n            event.preventDefault();\n            FullscreenUtils.toggleFullscreen(this.canvas);\n        });\n\n        // Init scene and start rendering\n        this.scene.init(this.framebuffer).then(\n            () => {\n                this.scene.onInit();\n                this.startTime = Date.now();\n                this.renderLoop();\n            }\n        );\n    }\n\n    public renderLoop(): void {\n        this.scene.render(this.framebuffer, Date.now() - this.startTime);\n        this.flipBackbuffer();\n        requestAnimationFrame(this.boundRenderLoop);\n    }\n\n    public flipBackbuffer(): void {\n        this.context.putImageData(this.framebuffer.getImageData(), 0, 0);\n    }\n\n    public appendTo(element: HTMLElement): void {\n        element.appendChild(this.canvas);\n    }\n\n}\n","export interface musicProperties {\n    timeSeconds: number;\n    timeMilliseconds: number;\n    sceneData: sceneData;\n}\n\n// scene variables | things you set through jsRocket\nexport interface sceneData {\n    effect: any;\n    transitionType: any;\n    transitionValue: any;\n    snare: any;\n    bass: any;\n}\n\n// Beats per minute of your demo tune\nexport const BPM = 125;\n\n// The resolution between two beats, four is usually fine,- eight adds a bit more finer control\nexport const ROWS_PER_BEAT = 6;\n\n// we calculate this now, so we can translate between rows and seconds later on\nexport const ROW_RATE = BPM / 60 * ROWS_PER_BEAT;\n","import './JSRocket';\nimport './cowbell/cowbell'\nimport './cowbell/audio_player'\nimport './cowbell/web_audio_player'\nimport './cowbell/openmpt/openmpt_player'\nimport {\n    musicProperties,\n    ROW_RATE,\n    sceneData\n} from './MusicProperties';\nexport class SoundManager {\n\n    public syncDevice;\n    public isPlaying = false;\n    public demoMode: boolean;\n    public row = 0;    // the current row we're on\n\n    //  container for audio values to be used by effects (time, bass, effect, transitions)\n    public musicProperties: musicProperties;\n    public sceneData: sceneData;\n    public audioElement: HTMLAudioElement;\n\n    public constructor() {\n\n        // Initialize JS Rocket\n        this.syncDevice = new JSRocket.SyncDevice();\n        this.syncDevice.connected = false;\n\n    }\n\n    /**\n     * Load audio files supported by cowbell\n     *\n     * @param {string} filename     audio file to load\n     * @returns {Promise<void>}     promise\n     */\n    public loadMusic(filename: string): Promise<void> {\n        return new Promise((resolve) => {\n\n            const fileExtension = filename.split('.').pop().toLowerCase();\n            let audioPlayer;\n\n            switch (fileExtension) {\n                case 'it':\n                case 'xm':\n                case 's3m':\n                case 'mod':\n                    audioPlayer = new Cowbell.Player.OpenMPT({\n                        'pathToLibOpenMPT': './openmpt/libopenmpt.js'\n                    });\n                    break;\n                case 'ogg':\n                case 'mp3':\n                default:\n                    audioPlayer = new Cowbell.Player.Audio();\n                    break;\n            }\n            const track = new audioPlayer.Track(filename);\n            this.audioElement = track.open();\n            resolve();\n        });\n    }\n\n    /**\n     * Load XML file for music syncronization for use with JS Rocket\n     *\n     * @param {string} filename      XML file to load\n     * @param {string} demoMode      use true for release mode (uses file) | false when using rocket editor\n     * @returns {Promise<void>}      promise\n     */\n    prepareSync(filename: string, demoMode: boolean): Promise<void> {\n        this.demoMode = demoMode;\n        return new Promise((resolve) => {\n            if (this.demoMode) {\n                this.syncDevice.setConfig({\n                    'rocketXML': filename\n                });\n                this.syncDevice.init('demo');\n\n            } else {\n                this.syncDevice.init();\n            }\n\n            // XML file from JS Rocket library was loaded and parsed, make sure your ogg is ready\n            this.syncDevice.on('ready', () => this.onSyncReady());\n\n            // [JS Rocket - Arrow keys] whenever you change the row, a value or interpolation mode this will get called\n            this.syncDevice.on('update', (newRow: number) => this.onSyncUpdate(newRow));\n\n            // [JS Rocket - Spacebar] in Rocket calls one of those\n            this.syncDevice.on('play', () => this.onPlay());\n            this.syncDevice.on('pause', () => this.onPause());\n            resolve()\n        });\n    }\n\n    onSyncReady() {\n        this.syncDevice.connected = true;\n\n        this.sceneData = {\n            effect: this.syncDevice.getTrack('effect'),\n            snare: this.syncDevice.getTrack('snare'),\n            bass: this.syncDevice.getTrack('bass'),\n            transitionType: this.syncDevice.getTrack('transitionType'),\n            transitionValue: this.syncDevice.getTrack('transitionValue')\n        }\n    }\n\n    // row is only given if you navigate, or change a value on the row in Rocket\n    // on interpolation change (hit [i]) no row value is sent, as the current there is the upper row of your block\n    onSyncUpdate(newRow: number) {\n        if (!isNaN(newRow)) {\n            this.row = newRow;\n        }\n        this.audioElement.currentTime = newRow / ROW_RATE;\n    }\n\n    updateMusic() {\n        // show message if rocket app is not running in background\n        if (!this.syncDevice.connected && !this.demoMode) {\n            return;\n        }\n\n        // update music properties\n        this.musicProperties = {\n            timeSeconds: (this.audioElement?.currentTime) || 0,\n            timeMilliseconds: (this.audioElement?.currentTime) * 1000,\n            sceneData: {\n                effect: this.sceneData.effect.getValue(this.row),\n                transitionType: this.sceneData.transitionType.getValue(this.row),\n                transitionValue: this.sceneData.transitionValue.getValue(this.row),\n                snare: this.sceneData.snare.getValue(this.row),\n                bass: this.sceneData.bass.getValue(this.row),\n            }\n        }\n\n        this.row = this.musicProperties.timeSeconds * ROW_RATE;\n\n        // update JS rocket\n        if (this.audioElement && this.audioElement.paused === false) {\n            // otherwise we may jump into a point in the audio where there's\n            // no timeframe, resulting in Rocket setting row 2 and we report\n            // row 1 back - thus Rocket spasming out\n\n            // this informs Rocket where we are\n            this.syncDevice.update(this.row);\n        }\n\n        // stop once timeline reaches end\n        if (Math.floor(this.audioElement.duration) === Math.floor(this.musicProperties.timeSeconds)) {\n            document.getElementById('ticker_stop').click();\n        }\n    }\n\n    onPlay() {\n        if (!this.isPlaying && this.audioElement) {\n            if (this.audioElement.currentTime) {\n                this.audioElement.currentTime = this.row / ROW_RATE;\n            }\n            this.isPlaying = true;\n            this.audioElement.play();\n        }\n        console.log('[onPlay]');\n    }\n\n    onPause() {\n        this.row = this.audioElement.currentTime * ROW_RATE;\n        if (!this.audioElement.paused && this.isPlaying) {\n            this.audioElement.pause();\n            this.isPlaying = false;\n        }\n        console.info('[onPause]');\n    }\n\n    /**\n     * find the prev/next effect and jump to it\n     *\n     * @param   {number} time       where we are in the audio timeline\n     * @param   {number} direction  direction to skip -1 goes backwards.  1 goes forward\n     */\n    public jump(time: number, direction: number, sceneLength: number) {\n        this.row = time * ROW_RATE;\n        const effectJump = Number(this.sceneData.effect.getValue(this.row).toFixed(1));\n        if (Math.trunc(Number(this.musicProperties.sceneData.effect)) !== Math.trunc(effectJump) && effectJump >= 1) {\n            // if running into transition effect 2.5..then keep searching and only land on whole numbers\n            if (parseInt(effectJump.toString(), 10) !== effectJump) {\n                this.jump(time + (0.12 * direction), direction, sceneLength);\n            } else {\n                this.seek(time);\n            }\n        } else {\n            if (time >= 0 && effectJump < sceneLength - 3) {\n                this.jump(time + (0.12 * direction), direction, sceneLength);\n            } else {\n                // go back to the beginning\n                this.seek(0);\n            }\n        }\n    }\n\n    /**\n     * Jumps to a point in the audio timeline in milliseconds\n     *\n     * @param  {number} time            time in milliseconds\n     */\n    public seek(time: number) {\n        this.audioElement.currentTime = time;\n        // update rocket editor position to new timeline location\n        if (!this.demoMode) {\n            this.syncDevice.update(this.audioElement.currentTime * ROW_RATE);\n        }\n    }\n\n    /**\n     * Turns music volume on or off\n     *\n     * @param  {HTMLElement} ref         volume icon to toggle\n     * @param  {boolean} isMuted         on or off\n     */\n    public toggleSound(ref: HTMLElement, isMuted: boolean) {\n        if (isMuted) {\n            ref.setAttribute('title', 'enable sound');\n            ref.classList.remove('fa-volume-up');\n            ref.classList.add('fa-volume-off');\n        } else {\n            ref.setAttribute('title', 'mute sound');\n            ref.classList.remove('fa-volume-off');\n            ref.classList.add('fa-volume-up');\n        }\n        this.audioElement.muted = isMuted;\n    }\n\n    /**\n     * Restore position of timeline & mute preferences on reloads\n     */\n    public initTimeline() {\n        // jump to last position on timeline for local development reloading\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const newLocal = this;\n        const jumpTo = Number(localStorage.getItem('lastTime'));\n\n        // poll for mod player since library does not use promises\n        if ((window as any).libopenmpt) {\n            (function poll() {\n                // check if mod was loaded then seek\n                if ((window as any).modulePtr) {\n\n                    // openmpt does not support volume control or muting\n                    document.getElementById('ticker_volume').style.display = 'none';\n                    newLocal.updateRange(newLocal.audioElement.duration);\n                    newLocal.seek(jumpTo);\n                    return;\n                }\n                setTimeout(poll, 150);\n            })();\n        } else {\n            newLocal.audioElement.onloadedmetadata = function () {\n                newLocal.updateRange(newLocal.audioElement.duration);\n            };\n            newLocal.seek(jumpTo);\n        }\n\n        // remember last sound preferences\n        const isMuted = localStorage.getItem('soundToggle') === 'true';\n        this.toggleSound(document.getElementById('ticker_volume'), isMuted);\n    }\n\n    /**\n     * Set timeline slider max range\n     *\n     * @param  {number} value         length time in seconds\n     */\n    private updateRange(value: number) {\n        (document.getElementById(\"timeline\") as HTMLInputElement).max = String(Math.floor(value) * 1000);\n    }\n\n    /*\n    // todo: add effect # markers to timeline\n    fetch(rocketData.default).then(response => response.text())\n        .then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\n        .then(data => {\n            const tracks: Element[] = Array.from(data.documentElement.getElementsByTagName(\"track\"));\n            tracks.forEach((element) => {\n                if (element.getAttribute(\"name\") === 'effect') {\n                    const keys: Element[] = Array.from(element.getElementsByTagName(\"key\"));\n                    keys.forEach((elementKey) => {\n                        const p = document.createElement(\"option\");\n                        const value = elementKey.getAttribute('row').valueOf();\n                        const label = elementKey.getAttribute('value').valueOf();\n\n                        // remap rows to a range between 0 and 1000\n                        const newValue = Utils.map(Number(label), 0, 1520, 0, 1000);\n\n                        p.value = value;\n                        p.label = label;\n                        // this.tickmarkRef.appendChild(p);\n                    })\n                }\n            });\n        });\n        */\n\n}\n","export enum TransitionMethods {\n        FADEIN = 1,\n        FADEOUT = 2,\n        BLOCKFADE = 3,\n        CROSSFADE = 4,\n        CIRCLE = 5,\n        WIPE_LEFT = 6,\n        DISSOLVE = 7\n}","export class Particle {\n    public x: number;\n    public y: number;\n    public _color: number;\n\n    private _x: number;\n    private _y: number;\n    private dx: number;\n    private dy: number;\n\n    private TTL: number = Math.round(Math.random() * 50);\n    private time: number;\n    private isLiving: boolean;\n    private width: number;\n    private height: number;\n\n    constructor(x: number, y: number, _color: number, width: number, height: number) {\n        this._x = this.x = x;\n        this._y = this.y = y;\n\n        this.dx = 0;\n        this.dy = - (Math.random() * (3 - 0.1) + 0.1);\n        this.time = 0;\n        this._color = 0xFF000000 | _color;\n\n        this.isLiving = true;\n\n        this.width = width;\n        this.height = height;\n    }\n\n    update(): boolean {\n        if (!this.isLiving) return false;\n\n        this.x = Math.round((this._x += this.dx) + 0.5);\n        this.y = Math.round((this._y += this.dy) + 0.5);\n\n        const a = ((this.TTL - this.time) / this.TTL);\n        const r = Math.round((this._color >> 16 & 0xFF) * a + 0.5);\n        const g = Math.round((this._color >> 8 & 0xFF) * a + 0.5);\n        const b = Math.round((this._color & 0xFF) * a + 0.5);\n\n        this._color = 0xFF << 24 | r << 16 | g << 8 | b;\n\n        if (this.x < 0 || this.x >= this.width) this.isLiving = false;\n        if (this.y < 0 || this.y >= this.height) this.isLiving = false;\n        if (this.time++ >= this.TTL) this.isLiving = false;\n        return this.isLiving;\n    }\n}","import { Color } from '../../core/Color';\nimport { Utils } from '../../core/Utils';\nimport { Framebuffer } from '../../Framebuffer';\nimport { Interpolator } from '../../math/Interpolator';\nimport RandomNumberGenerator from '../../RandomNumberGenerator';\nimport { AbstractScene } from '../../scenes/AbstractScene';\nimport { Texture, TextureUtils } from '../../texture/index';\nimport { TransitionMethods } from './TransitionMethods';\nimport { Particle } from './Particle';\n\nexport class BlockFade extends AbstractScene {\n    private ledTexture: Texture;\n    private startTime: number = Date.now();\n    private transitionFramebufferTo: Framebuffer;\n\n    public transitionCircle: Uint32Array;\n    public transitionWipe: Uint32Array;\n\n    // dissolve \n    private croud: Float32Array;        // Stores data for mask control\n    private prevMask: Array<boolean>;    // mask picture\n    private curMask: Array<boolean>;\n    private diff: Array<boolean>;       // difference mask\n    private noiseMask: Array<boolean>;  // particle mask\n    private croudMask: Uint32Array;     // cloud mask\n    private particleArray: Array<Particle>;\n\n    public init(framebuffer: Framebuffer): Promise<any> {\n        this.transitionFramebufferTo = new Framebuffer(framebuffer.width, framebuffer.height);\n\n        // draw side wipe\n        this.transitionWipe = new Uint32Array(framebuffer.width * framebuffer.height);\n        for (let y = 0; y < framebuffer.height; y++) {\n            for (let x = 0; x < framebuffer.width; x++) {\n                const c2 = Utils.map(x, 0, framebuffer.width, 0, 255);\n                const color = new Color(c2, c2, c2, 255).toPackedFormat();\n                this.transitionWipe[x + y * framebuffer.width] = color;\n            }\n        }\n\n        // draw circle gradient\n        this.transitionCircle = new Uint32Array(framebuffer.width * framebuffer.height);\n        this.transitionCircle.fill(Color.WHITE.toPackedFormat(), 0, this.transitionCircle.length);\n        for (let d = 0; d < framebuffer.width / 2; d += 1) {\n            const c3 = Utils.map(d, 0, framebuffer.width / 2, 0, 255);\n            this.drawCircle(framebuffer.width / 2, framebuffer.height / 2, d, c3);\n        }\n\n        //dissolve effect\n        this.initDissolve(framebuffer.width, framebuffer.height);\n\n        return Promise.all([\n            TextureUtils.load(require('../../assets/atlantis.png'), false).then(\n                (textureBackground: Texture) => this.ledTexture = textureBackground\n            ),\n        ]);\n    }\n\n    private initDissolve(width: number, height: number) {\n        this.croud = new Float32Array(width * height);\n        this.prevMask = new Array<boolean>(width * height);\n        this.curMask = new Array<boolean>(width * height);\n        this.diff = new Array<boolean>(width * height);\n        this.noiseMask = new Array<boolean>(width * height);\n        this.particleArray = new Array<Particle>();\n\n        this.croudMask = new Uint32Array(width * height);\n        this.particleArray.splice(0, this.particleArray.length);\n\n        this.createCroud(width, height);\n        const threshold = 0;\n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                const index = y * width + x;\n                const isBackground = (this.croudMask[y * width + x] & 0xFF) < 0x80;\n                if (isBackground) {\n                    this.croud[index] = 0xFF000000;\n                }\n                this.prevMask[index] = this.curMask[index] = this.croud[index] < threshold;\n                if (Math.random() > 0.90) {\n                    this.noiseMask[index] = !isBackground;\n                }\n            }\n        }\n    }\n\n    private createCroud(width: number, height: number) {\n        if (this.croud == null) {\n            this.croud = new Float32Array(width * height);\n        }\n\n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                this.croudMask[y * width + x] = 0xFFFFFFFF;\n            }\n        }\n\n        const bias: number = Math.min(150.0, 0xFF);\n        const xbase = Math.random() * 100;\n        const ybase = Math.random() * 100;\n\n        let xnoise = 0.0;\n        let ynoise = 0.0;\n        const inc = 0.02;\n\n        const pn = Utils.PerlinNoise;\n\n        for (let y = 0; y < height; y++) {\n            const curBias = y * bias / height;\n            for (let x = 0; x < width; x++) {\n                const _gray = (pn.noise((xnoise + xbase), (ynoise + ybase), 0) * (0xFF - bias) + curBias);\n                this.croud[y * width + x] = _gray;\n                xnoise += inc;\n            }\n            xnoise = 0.0;\n            ynoise += inc;\n        }\n    }\n\n    // dissolve\n    public dissolve(renderBuffer: Framebuffer, renderBuffer2: Uint32Array, time: number) {\n\n        if (time <= 5) {\n\n            // update mask for current scene\n            for (let y = 0; y < renderBuffer.height; y++) {\n                for (let x = 0; x < renderBuffer.width; x++) {\n                    const index = y * renderBuffer.width + x;\n                    const isBackground = (this.croudMask[y * renderBuffer.width + x] & 0xFF) < 0x80;\n                    if (isBackground) {\n                        this.croud[index] = renderBuffer2[index];\n                    }\n                    this.prevMask[index] = this.curMask[index] = this.croud[index] < 0;\n                    if (Math.random() > 0.90) {\n                        this.noiseMask[index] = !isBackground;\n                    }\n                }\n            }\n\n            // delete loose particles\n            this.particleArray.splice(0, this.particleArray.length);\n        }\n\n        for (let y = 0; y < renderBuffer.height; y++) {\n            for (let x = 0; x < renderBuffer.width; x++) {\n                const index = y * renderBuffer.width + x;\n                this.curMask[index] = this.croud[index] < time;\n                this.diff[index] = this.prevMask[index] != this.curMask[index];\n                this.prevMask[index] = this.curMask[index];\n\n                if (this.curMask[index]) {\n                    renderBuffer.framebuffer[index] = renderBuffer2[index];\n                }\n\n                if (this.diff[index]) {\n                    if (this.noiseMask[index]) {\n                        const particle = new Particle(x, y, renderBuffer[index], renderBuffer.width, renderBuffer.height);\n                        particle._color = renderBuffer.framebuffer[index];\n                        this.particleArray.push(particle);\n                    }\n                    renderBuffer.framebuffer[index] = 0xFFFFFFFF;\n                }\n            }\n        }\n\n        for (let it = 0; it < this.particleArray.length; it++) {\n            const p = this.particleArray[it];\n\n            if (!p.update()) {\n                this.particleArray.splice(it, 1); continue;\n            }\n            renderBuffer.framebuffer[p.y * renderBuffer.width + p.x] = Framebuffer.addColor(renderBuffer.framebuffer[p.y * renderBuffer.width + p.x], p._color);\n        }\n    }\n\n    private putpixel(x: number, y: number, color: number) {\n        this.transitionCircle[x + y * this.transitionFramebufferTo.width] = new Color(color, color, color, 255).toPackedFormat();\n    }\n\n    private drawCircle(x0: number, y0: number, radius: number, color: number) {\n        let x = 0;\n        let y = radius;\n        let d = -(radius >>> 1);\n\n        while (x <= y) {\n            this.putpixel(x + x0, y + y0, color);\n            this.putpixel(y + x0, x + y0, color);\n            this.putpixel(-x + x0, y + y0, color);\n            this.putpixel(-y + x0, x + y0, color);\n            this.putpixel(-x + x0, -y + y0, color);\n            this.putpixel(-y + x0, -x + y0, color);\n            this.putpixel(x + x0, -y + y0, color);\n            this.putpixel(y + x0, -x + y0, color);\n\n            if (d <= 0) {\n                x++;\n                d += x;\n            } else {\n                y--;\n                d -= y;\n            }\n        }\n    }\n\n    public render(framebuffer: Framebuffer): void {\n        const time: number = Date.now() - this.startTime;\n        framebuffer.clear();\n        this.blockFade(framebuffer, this.ledTexture.texture, this.ledTexture.width, time, 0);\n    }\n\n    /**\n     * Transitions from one effect to another using using \"transition\" value from JSRocket\n     *\n     * @param  {Framebuffer} framebuffer             pixels\n     * @param  {AbstractScene} transitionSceneFrom   previous effect\n     * @param  {AbstractScene} transitionSceneTo     effect we are transitioning to\n     * @param  {number} transitionMethod             transition effect to use (blend, wipe, crossfade, etc)\n     */\n    public transition(\n        framebuffer: Framebuffer,\n        transitionSceneFrom: AbstractScene,\n        transitionSceneTo: AbstractScene,\n        transitionMethod: TransitionMethods,\n        transitionValue: number,\n        time: number) {\n\n        // render the 'To' effect into the framebuffer\n        transitionSceneTo.render(this.transitionFramebufferTo, time);\n\n        // render 'From' effect into framebuffer\n        transitionSceneFrom.render(framebuffer, time);\n        // apply transition to framebuffer (fromEffect) using texture (toEffect) 0-255\n        switch (Math.trunc(transitionMethod)) {\n            case TransitionMethods.BLOCKFADE: // 0 - 12000\n                this.blockFade(framebuffer, this.transitionFramebufferTo.framebuffer, this.transitionFramebufferTo.width, Utils.map(transitionValue, 0, 255, 0, 12000), 0);\n                break;\n            case TransitionMethods.CROSSFADE: // 0 - 255\n                this.crossFade(framebuffer.framebuffer, transitionValue);\n                break;\n            case TransitionMethods.DISSOLVE: // 0 - 255\n                this.dissolve(framebuffer, this.transitionFramebufferTo.framebuffer, transitionValue);\n                break;\n            case TransitionMethods.FADEIN: // 0-255\n                this.fadeIn(framebuffer, transitionValue, 0);\n                break;\n            case TransitionMethods.FADEOUT: // 0-255\n                this.fadeOut(framebuffer, transitionValue, 0);\n                break;\n            case TransitionMethods.WIPE_LEFT: // 0 - 255\n                this.crossFadeImage(framebuffer, transitionValue, this.transitionWipe);\n                break;\n            case TransitionMethods.CIRCLE: // 0 - 255\n                this.crossFadeImage(framebuffer, transitionValue, this.transitionCircle);\n                break;\n            default: // 0 - 512\n                this.crossFade(framebuffer.framebuffer, Utils.map(transitionValue, 0, 255, 0, 12000));\n        }\n    }\n\n    public blockFade(framebuffer: Framebuffer, pixelArray: Uint32Array, pixelArrayWidth: number, time: number, startTime: number) {\n        const blockWidth = 20;\n        const horizontalUnits = Math.ceil(framebuffer.width / blockWidth);\n        const verticalUnits = Math.ceil(framebuffer.height / blockWidth);\n\n        const fadeArray = new Array<number>(horizontalUnits * verticalUnits);\n        const rng = new RandomNumberGenerator();\n        rng.setSeed(366);\n        for (let y = 0; y < verticalUnits; y++) {\n            for (let x = 0; x < horizontalUnits; x++) {\n                fadeArray[x + y * horizontalUnits] = 500 + Math.round(rng.getFloat() * 600000) % 10000;\n            }\n        }\n\n        for (let y = 0; y < verticalUnits; y++) {\n            for (let x = 0; x < horizontalUnits; x++) {\n                framebuffer.drawTextureRect(x * blockWidth, y * blockWidth, x * blockWidth, y * blockWidth, blockWidth, blockWidth, pixelArray, pixelArrayWidth,\n                    Interpolator.interpolate(startTime + fadeArray[x + y * horizontalUnits], startTime + fadeArray[x + y * horizontalUnits] + 700, time)\n                );\n            }\n        }\n    }\n\n    // blend entire image to another image\n    public crossFade(framebuffer: Uint32Array, alpha: number) {\n        for (let i = 0; i < framebuffer.length; i++) {\n            framebuffer[i] = Framebuffer.blend(\n                framebuffer[i],\n                this.transitionFramebufferTo.framebuffer[i],\n                alpha)\n        }\n    }\n\n    // transition using image\n    // https://github.com/Slynchy/SDL-AlphaMaskWipes/blob/master/Transition.h\n    public crossFadeImage(framebuffer: Framebuffer, alpha: number, transitionImage: Uint32Array) {\n        for (let i = 0; i < framebuffer.framebuffer.length; i++) {\n            framebuffer.framebuffer[i] = Framebuffer.blend(\n                framebuffer.framebuffer[i],\n                this.transitionFramebufferTo.framebuffer[i],\n                Utils.clamp(\n                    (alpha * 2) - (transitionImage[i] & 0xff),\n                    0, 255))\n        }\n    }\n\n    // fade in from solid color\n    public fadeIn(framebuffer: Framebuffer, alpha: number, startColor: number) {\n        for (let y = 0; y < framebuffer.height; y++) {\n            for (let x = 0; x < framebuffer.width; x++) {\n                framebuffer.drawPixel(x, y,\n                    Framebuffer.blend(\n                        startColor,\n                        this.transitionFramebufferTo.framebuffer[x + y * framebuffer.width],\n                        alpha)\n                );\n            }\n        }\n    }\n\n    // fade out to solid color\n    public fadeOut(framebuffer: Framebuffer, alpha: number, endColor: number) {\n        for (let y = 0; y < framebuffer.height; y++) {\n            for (let x = 0; x < framebuffer.width; x++) {\n                framebuffer.drawPixel(x, y,\n                    Framebuffer.blend(\n                        framebuffer.framebuffer[x + y * framebuffer.width],\n                        endColor,\n                        alpha)\n                );\n            }\n        }\n    }\n\n    // Alternating scanlines + RGB Distort /w external input\n    public renderScanlines(framebuffer: Framebuffer, shiftAmount: number) {\n        let i = 0;\n\n        const offRed = (2 * shiftAmount) << 0;\n        const offGreen = (5 * shiftAmount) << 0;\n        const offBlue = (2 * shiftAmount) << 0;\n\n        for (let y = 0; y < framebuffer.height; y++) {\n\n            // horizontal scanlines * intensity\n            const strips = (y & 1) * 16;\n            const verticalPosition = y * framebuffer.width;\n\n            for (let x = 0; x < framebuffer.width; x++) {\n                const imagePixelR = framebuffer.framebuffer[Utils.clamp(x + offRed, 0, framebuffer.width - 1) + verticalPosition] & 0xFF;\n                const imagePixelG = framebuffer.framebuffer[Utils.clamp(x + offGreen, 0, framebuffer.width - 1) + verticalPosition] >> 8 & 0xFF;\n                const imagePixelB = framebuffer.framebuffer[Utils.clamp(x + offBlue, 0, framebuffer.width - 1) + verticalPosition] >> 16 & 0xFF;\n\n                framebuffer.framebuffer[i++] = new Color(\n                    Utils.clamp(imagePixelR - strips, 0, 255),\n                    Utils.clamp(imagePixelG - strips, 0, 255),\n                    Utils.clamp(imagePixelB - strips, 0, 255)).toPackedFormat();\n            }\n        }\n    }\n\n}\n","import { DLNode } from './Node';\n\n/**\n * Doubly Linked-List implementation class.\n * https://en.wikipedia.org/wiki/Doubly_linked_list\n * https://github.com/DameLyngdoh/dl-doubly-linked-list-ts\n *\n */\nexport class DoublyLinkedList<T> {\n    /**\n     * The start node of the list.\n     */\n    private _start: DLNode<T> | null;\n\n    /**\n     * The last  node of the list.\n     */\n    private _end: DLNode<T> | null;\n\n    /**\n     * The number of nodes in the list.\n     */\n    private _length: number;\n\n    constructor() {\n        this._start = null;\n        this._end = null;\n        this._length = 0;\n    }\n\n    get start(): DLNode<T> | null {\n        return this._start;\n    }\n\n    set start(start: DLNode<T> | null) {\n        this._start = start;\n    }\n\n    get end(): DLNode<T> | null {\n        return this._end;\n    }\n\n    set end(end: DLNode<T> | null) {\n        this._end = end;\n    }\n\n    get length(): number {\n        return this._length + 1;\n    }\n\n    /**\n     * Returns true if the list is empty.\n     * @returns Returns true if list is empty or false otherwise.\n     */\n    public isEmpty(): boolean {\n        return this.length === 0;\n    }\n\n    /**\n     * Inserts a node to the start of the list.\n     * @param node The node to be inserted to the list.\n     */\n    public insertStart(node: DLNode<T>): void {\n        if (this.isEmpty()) {\n            this.start = node;\n            this.end = node;\n        }\n        else {\n            node.next = this.start;\n            if (this.start != null) {\n                this.start.previous = node;\n            }\n            this.start = node;\n        }\n        this._length++;\n    }\n\n    /**\n     * Inserts a node to the end of the list.\n     * @param node The node to be inserted to the list.\n     */\n    public insertEnd(node: DLNode<T>): void {\n        if (this.isEmpty()) {\n            this.start = node;\n            this.end = node;\n        }\n        else {\n            node.previous = this.end;\n            if (this.end != null) {\n                this.end.next = node;\n            }\n            this.end = node;\n        }\n        this._length++;\n    }\n\n    /**\n     * Inserts a node at the specified index in the list.\n     * @param node The node to be inserted to the list.\n     * @param index The index to insert the node at. A value of -1 will insert the node to the end of the list.\n     */\n    public insert(node: DLNode<T>, index: number): void {\n        if (index === 0) {\n            this.insertStart(node);\n            return;\n        }\n        else if (index === -1) {\n            this.insertEnd(node);\n            return;\n        }\n\n        let currentNode = this.start;\n        let i: number = 0;\n        for (i = 0; i < index - 1 && currentNode !== null; i++) {\n            currentNode = currentNode.next;\n        }\n\n        // Insertion not possible\n        if (i !== index - 1 && currentNode === null) {\n            return;\n        }\n\n        if (currentNode != null) {\n            node.previous = currentNode;\n            node.next = currentNode.next;\n            if (currentNode.next != null) {\n                currentNode.next.previous = node;\n            }\n            else {\n                this.end = node;\n            }\n            currentNode.next = node;\n        }\n        this._length++;\n    }\n\n    /**\n     * Deletes the first node from the list.\n     */\n    public deleteStart(): void {\n        if (this.isEmpty()) {\n            return;\n        }\n\n        if (this.start != null && this.start.next == null) {\n            this.start = null;\n            this.end = null;\n        }\n        else if (this.start != null) {\n            this.start = this.start.next;\n            if (this.start != null) {\n                this.start.previous = null;\n            }\n        }\n        this._length--;\n    }\n\n    /**\n     * Deletes the last node from the list.\n     */\n    public deleteEnd(): void {\n        if (this.isEmpty()) {\n            return;\n        }\n\n        if (this.end != null && this.end.previous == null) {\n            this.start = null;\n            this.end = null;\n        }\n        else if (this.end != null) {\n            this.end = this.end.previous;\n            if (this.end != null) {\n                this.end.next = null;\n            }\n        }\n        this._length--;\n    }\n\n    /**\n     * Deletes a node from a specific index in the list. If the index is out of bounds, then no deletion will occur.\n     * @param index The index of the node to be deleted.\n     */\n    public delete(index: number): void {\n        if (this.isEmpty()) {\n            return;\n        }\n        if (index === 0) {\n            this.deleteStart();\n            return;\n        }\n        else if (index === -1) {\n            this.deleteEnd();\n            return;\n        }\n\n        const node = this.getNode(index);\n        if (node != null) {\n            if (node.next === null && node.previous !== null) {\n                this.deleteEnd();\n            }\n            else if (node.previous === null && node.next !== null) {\n                this.deleteStart();\n            }\n            else if (node.next !== null && node.previous !== null) {\n                node.previous.next = node.next;\n                node.next.previous = node.previous;\n                this._length--;\n            }\n        }\n    }\n\n    /**\n     * Retrieves a node from the specific index.\n     * @param index The index from which to retrieve the node.\n     * @returns Returns the node at the specific index or null if the index is out of bounds.\n     */\n    public getNode(index: number): DLNode<T> | null {\n        if (this.isEmpty() || index < 0) {\n            return null;\n        }\n\n        let currentNode = this.start;\n        for (let i = 1; i <= index && currentNode != null; i++) {\n            currentNode = currentNode.next;\n        }\n\n        return currentNode;\n    }\n\n    /**\n     * Returns an array of the nodes in the order of the list.\n     * @returns Array of nodes.\n     */\n    public toArray(): Array<DLNode<T>> {\n        const array: Array<DLNode<T>> = new Array<DLNode<T>>();\n\n        if (this.length === 0) {\n            return array;\n        }\n\n        let i = 0;\n\n        let currentNode: DLNode<T> | null = this.start;\n        while (currentNode != null && i < 12) {\n            array.push(currentNode);\n            currentNode = currentNode.next;\n            i++;\n        }\n        return array;\n    }\n\n    /**\n     * Clears the list and deletes all nodes.\n     */\n    public clear(): void {\n        this.end = null;\n        this.start = null;\n        this._length = 0;\n    }\n}","/**\n * Node implementation class. A node is a vertex in the list which contains data and pointers to the next node and previous node.\n */\nexport class DLNode<T> {\n    /**\n     * The data contained in the node.\n     */\n    private _data: T | null = null;\n\n    /**\n     * The edge or pointer to the next node.\n     */\n    private _next: DLNode<T> | null = null;\n\n    /**\n     * The edge or pointer to the previous node.\n     */\n    private _previous: DLNode<T> | null = null;\n\n    constructor() { }\n\n    get data(): T | null {\n        return this._data;\n    }\n\n    set data(data: T | null) {\n        this._data = data;\n    }\n\n    get next(): DLNode<T> | null {\n        return this._next;\n    }\n\n    set next(next: DLNode<T> | null) {\n        this._next = next;\n    }\n\n    get previous(): DLNode<T> | null {\n        return this._previous;\n    }\n\n    set previous(previous: DLNode<T> | null) {\n        this._previous = previous;\n    }\n}","export class CanvasRecorder {\n\n    public recording: boolean;\n    private canvasRecordingOptions;\n    private canvasRecorder;\n    private audioTrack: MediaStreamTrack;\n\n    public constructor() {\n        this.recording = false;\n    }\n\n    public getType(filename: string) {\n        const ext = this.fileExtension(filename);\n        return ['mkv'].includes(ext) ? 'video/x-matroska;codecs=avc1' : 'video/webm';\n    }\n\n    private fileExtension(filename: string): string {\n        return filename.split('.').pop();\n    }\n\n    public createCanvasRecorder(canvas: HTMLCanvasElement, options = {}) {\n        const date = new Date();\n        let link = null;\n\n        const {\n            filename = `Recording ${date.toISOString().slice(0, 10)} at ${date\n                .toTimeString()\n                .slice(0, 8)\n                .replace(/:/g, '.')}.webm`,\n            frameRate = 25,\n            download = true,\n            recorderOptions = {\n                mimeType: 'video/x-matroska;codecs=avc1',\n                audioBitsPerSecond: 128000, // 128 Kbit/sec\n                videoBitsPerSecond: 2500000 // 2.5 Mbit/sec\n            }\n        } = {\n            ...options\n        };\n\n        const mimeType = recorderOptions.mimeType || this.getType(filename);\n\n        if (download) {\n            link = link || document.createElement('a');\n            link.download = filename;\n        }\n\n        let chunks = [];\n\n        let stream = canvas.captureStream(frameRate);\n\n        /*\n        if (!this.canvasRecorder) {\n            // get the audio track:\n            const ctx = new AudioContext();\n            const dest = ctx.createMediaStreamDestination();\n            const sourceNode = ctx.createMediaElementSource(audio);\n            sourceNode.connect(dest);\n            sourceNode.connect(ctx.destination);\n            this.audioTrack = dest.stream.getAudioTracks()[0];\n        }\n\n        stream.addTrack(this.audioTrack);\n        */\n\n        let recorder = new MediaRecorder(stream, { mimeType, ...recorderOptions });\n\n        recorder.ondataavailable = event => {\n            event.data.size && chunks.push(event.data);\n        };\n        recorder.onstop = () => {\n            if (download && chunks.length) {\n                const blob = new Blob(chunks, { type: mimeType });\n                const url = URL.createObjectURL(blob);\n                link.href = url;\n\n                const event = new MouseEvent('click');\n                link.dispatchEvent(event);\n                setTimeout(() => {\n                    URL.revokeObjectURL(url);\n                }, 1);\n            }\n        };\n\n        return {\n            start(timeslice) {\n                chunks = [];\n                recorder.start(timeslice);\n            },\n            set filename(name) {\n                link.download = name;\n            },\n            stop() {\n                recorder.stop();\n                return chunks;\n            },\n            dispose() {\n                recorder = null;\n                stream = null;\n            },\n            stream,\n            recorder\n        };\n    }\n\n    /**\n     * Records a video and sound using CanvasRecorder\n     */\n    public recordVideo() {\n        console.info('recording video...');\n        this.recording = true;\n        const date = new Date();\n\n        // options\n        this.canvasRecordingOptions = {\n            filename: `Aisa ${date.toISOString().slice(0, 10)} at ${date\n                .toTimeString()\n                .slice(0, 8)\n                .replace(/:/g, '.')}.webm`,\n            frameRate: 60,\n            download: true,\n            recorderOptions: {\n                mimeType: 'video/webm',\n                audioBitsPerSecond: 128000, // 128 Kbit/sec\n                videoBitsPerSecond: 5000000 // 2.5 Mbit/sec\n            }\n        }\n\n        // Create canvas video recorder\n        const canvasObj = document.getElementById('aisa-canvas');\n        this.canvasRecorder = this.createCanvasRecorder(canvasObj as HTMLCanvasElement, this.canvasRecordingOptions);\n        this.canvasRecorder.start();\n    }\n\n    public saveVideo() {\n        // Stop and dispose\n        this.canvasRecorder.stop();\n        this.canvasRecorder.dispose();\n        this.recording = false;\n        console.info(`saved video as ${this.canvasRecordingOptions.filename}`);\n    }\n}\n","/*\nName          : Aisa Demo\nRelease Date  : TBD\nPlatform      : JavaScript\nCategory      : Demo\nNotes         : Software rendered effects written in Typescript\n*/\n\n// Core\nimport { Framebuffer } from '../../Framebuffer';\nimport { AbstractScene } from '../../scenes/AbstractScene';\nimport { SoundManager } from '../../sound/SoundManager';\nimport { Color } from '../../core/Color';\nimport { BlockFade } from '../block-fade/BlockFade';\nimport { DoublyLinkedList } from '../../core/LinkedList';\nimport { DLNode } from '../../core/Node';\n\n// Stats\nimport * as Stats from 'stats.js';\n\n// Video Recording Tool\nimport { CanvasRecorder } from './canvas-record';\n\nexport class DemoScene extends AbstractScene {\n\n    // Sound Manager\n    private soundManager: SoundManager;\n\n    // Video Recorder\n    private canvasRecorder: CanvasRecorder;\n\n    // list of scenes\n    private sceneList: DoublyLinkedList<AbstractScene>;\n    private nodeInstance: DLNode<AbstractScene>;\n\n    // transitions\n    private BlockFade: BlockFade;\n\n    // stats\n    private stats: Array<Stats>;\n\n    // our main canvas\n    private canvasRef: HTMLCanvasElement;\n\n    // moving line marking current place in the timeline\n    private timelineRef: HTMLInputElement;\n\n    // displays which scene we're on\n    private sceneRef: HTMLSpanElement;\n\n    // displays time in seconds\n    private timeRef: HTMLSpanElement;\n\n    public init(framebuffer: Framebuffer): Promise<any> {\n        this.soundManager = new SoundManager();\n\n        this.sceneList = new DoublyLinkedList();\n\n        this.initControls(framebuffer.width);\n\n        this.BlockFade = new BlockFade();\n\n        this.canvasRef = document.getElementById('aisa-canvas') as HTMLCanvasElement;\n\n        // initialize effects with progress\n        return this.allProgress([\n\n            // load music\n            // this.soundManager.loadMusic(require(`../../assets/sound/dubmood_-_cromenu1_haschkaka.xm`)),\n            this.soundManager.loadMusic(require(`../../assets/sound/showeroflove.mod`)),\n            // this.soundManager.loadMusic(require('../../assets/sound/NotMixedorMastered.ogg')),\n\n            // load *.rocket file for scene/music synchronization\n            this.soundManager.prepareSync(require('../../assets/sound/demo.rocket'), true),\n\n            // we use this for transitions\n            this.BlockFade.init(framebuffer),\n\n            // load and initialze effects\n            import('./parts/Scene1').then(plug => this.initScene(framebuffer, plug)), // cubicles\n            import('./parts/Scene1').then(plug => this.initScene(framebuffer, plug)), // cubicles\n            import('./parts/Scene2').then(plug => this.initScene(framebuffer, plug)), // telephone\n            import('./parts/Scene3').then(plug => this.initScene(framebuffer, plug)), // title screen here\n            import('./parts/Scene4').then(plug => this.initScene(framebuffer, plug)), // pizza delivery guy\n            import('./parts/Scene5').then(plug => this.initScene(framebuffer, plug)), // replace with something else\n            import('./parts/Scene6').then(plug => this.initScene(framebuffer, plug)), // spikeball + plane deformation\n            import('./parts/Scene7').then(plug => this.initScene(framebuffer, plug)), // cube + rotozoomer\n            import('./parts/Scene8').then(plug => this.initScene(framebuffer, plug)), // ledplasma + voxelcubes\n            import('./parts/Scene9').then(plug => this.initScene(framebuffer, plug)), // blender camera\n            import('./parts/Scene10').then(plug => this.initScene(framebuffer, plug)), // MetalHeadzScene\n            import('./parts/Scene11').then(plug => this.initScene(framebuffer, plug)), // AbstractCube\n            import('./parts/Scene12').then(plug => this.initScene(framebuffer, plug)), // DofBallsScene\n            import('./parts/Scene13').then(plug => this.initScene(framebuffer, plug)), // TorusKnotTunnelScene\n            import('./parts/Scene14').then(plug => this.initScene(framebuffer, plug)), // GearsScene\n            import('./parts/Scene15').then(plug => this.initScene(framebuffer, plug)), // BakedLighting\n            import('./parts/Scene16').then(plug => this.initScene(framebuffer, plug)), // ParticleStreamsScene\n            import('./parts/Scene17').then(plug => this.initScene(framebuffer, plug)), // HoodlumScene\n            import('./parts/Scene18').then(plug => this.initScene(framebuffer, plug)), // TwisterScene\n            import('./parts/Scene19').then(plug => this.initScene(framebuffer, plug)), // RazorScene\n            import('./parts/Scene20').then(plug => this.initScene(framebuffer, plug)), // sinescroller\n\n        ], (percent: number) => {\n            // update the progress bar via canvas\n            const outputX = Math.ceil(framebuffer.width * percent);\n            framebuffer.drawRect2(0, (framebuffer.height / 2) - 5, outputX, 10, Color.WHITE.toPackedFormat());\n\n            // update the canvas\n            this.canvasRef.getContext('2d').putImageData(framebuffer.getImageData(), 0, 0);\n\n            // update memory usage\n            for (const p of this.stats) {\n                p.update();\n            }\n        });\n    }\n\n    /**\n     * Adds AbstractScenes to sceneList array and initializes it\n     *\n     * @param   {Framebuffer} framebuffer            scene initializes with information in framebuffer such as width and height\n     * @param   {Object} plug                        imported class\n     * @returns {Promise<any>}                       resolves promise after completion\n     */\n    private initScene(framebuffer: Framebuffer, plug: unknown, ...args: Array<any>): Promise<any> {\n        const constructorName = Object.keys(plug)[0];\n        const newNode: DLNode<AbstractScene> = new DLNode();\n        newNode.data = new plug[constructorName](...args);\n        this.sceneList.insert(newNode, this.sceneList.length - 1);\n        return newNode.data.init(framebuffer);\n    }\n\n    // this runs after init() has finished\n    public onInit(): void {\n\n        this.canvasRecorder = new CanvasRecorder();\n\n        // jump to last effect in timeline and set mute vs unmuted\n        this.soundManager.initTimeline();\n\n        // show debug / timeline navigator\n        document.getElementById('debug').style.display = 'block';\n    }\n\n    /**\n     * Setup debug tools for local development\n     */\n    private initControls(width: number) {\n        this.stats = new Array<Stats>();\n\n        // Stats - Memory in Megabytes\n        this.initStats(2, 0, width * 2);\n\n        // Stats - Frames per second\n        this.initStats(0, 50, width * 2);\n\n        // Stats - Milliseconds per frame\n        this.initStats(1, 100, width * 2);\n\n        document.getElementById('debug').style.width = `${width * 2}px`;\n\n        // Scene Playback Controls\n        const tickerPlayRef = document.getElementById('ticker_play');\n        const tickerStopRef = document.getElementById('ticker_stop');\n        const tickerNextRef = document.getElementById('ticker_next');\n        const tickerBackRef = document.getElementById('ticker_back');\n        const tickerRecordRef = document.getElementById('ticker_record');\n        const tickerScreenshotRef = document.getElementById('ticker_screenshot');\n        const tickerVolumeRef = document.getElementById('ticker_volume');\n\n        // timeline slider, scene and time display\n        this.timelineRef = document.getElementById('timeline') as HTMLInputElement;\n        this.sceneRef = document.getElementById('scene') as HTMLSpanElement;\n        this.timeRef = document.getElementById('time') as HTMLSpanElement;\n\n        // stop\n        tickerStopRef.addEventListener('click', () => {\n            this.soundManager.onPause();\n            this.soundManager.seek(0);\n\n            tickerPlayRef.classList.add('fa-play');\n            tickerPlayRef.classList.remove('fa-pause');\n\n            // save video if recoding\n            if (this.canvasRecorder.recording) {\n                tickerRecordRef.style.color = 'white';\n                this.canvasRecorder.saveVideo();\n            }\n        })\n\n        // record video\n        tickerRecordRef.addEventListener('click', () => {\n            if (!this.canvasRecorder.recording) {\n                // start audio and video recording\n                tickerRecordRef.style.color = 'red';\n                this.soundManager.onPlay();\n                this.canvasRecorder.recordVideo();\n                tickerPlayRef.classList.remove('fa-play');\n                tickerPlayRef.classList.add('fa-pause');\n            } else {\n                // pause audio and save video file\n                tickerRecordRef.style.color = 'white';\n                this.soundManager.onPause();\n                this.canvasRecorder.saveVideo();\n                tickerPlayRef.classList.add('fa-play');\n                tickerPlayRef.classList.remove('fa-pause');\n            }\n        })\n\n        // play / pause\n        tickerPlayRef.addEventListener('click', () => {\n            if (!this.soundManager.isPlaying) {\n                this.soundManager.onPlay();\n                tickerPlayRef.setAttribute('title', 'pause');\n                tickerPlayRef.classList.remove('fa-play');\n                tickerPlayRef.classList.add('fa-pause');\n            } else {\n                this.soundManager.onPause();\n                tickerPlayRef.setAttribute('title', 'play');\n                tickerPlayRef.classList.add('fa-play');\n                tickerPlayRef.classList.remove('fa-pause');\n            }\n        })\n\n        // toggle audio and save preference for subsequent reloads\n        tickerVolumeRef.addEventListener('click', () => {\n            this.soundManager.toggleSound(tickerVolumeRef, !this.soundManager.audioElement.muted);\n            localStorage.setItem('soundToggle', String(this.soundManager.audioElement.muted));\n        });\n\n        // save screenshot in PNG format\n        tickerScreenshotRef.addEventListener('click', () => {\n            const date = new Date();\n            const fileName = `Aisa ${date.toISOString().slice(0, 10)} at ${date\n                .toTimeString()\n                .slice(0, 8)\n                .replace(/:/g, '.')}.png`;\n            const image = this.canvasRef.toDataURL('image/png').replace('image/png', 'image/octet-stream');\n            const anchor = document.createElement('a');\n            anchor.setAttribute('download', fileName);\n            anchor.setAttribute('href', image);\n            anchor.click();\n        })\n\n        // next\n        tickerNextRef.addEventListener('click', () => {\n            this.soundManager.jump(this.soundManager.musicProperties.timeSeconds, 1, this.sceneList.length);\n        })\n\n        // back\n        tickerBackRef.addEventListener('click', () => {\n            this.soundManager.jump(this.soundManager.musicProperties.timeSeconds, -1, this.sceneList.length);\n        })\n\n        // seek\n        this.timelineRef.addEventListener('input', (e) => {\n            const time = Number((e.target as HTMLInputElement).value);\n            this.soundManager.seek(time / 1000);\n        });\n\n        // seek with scrollwheel\n        document.addEventListener(\"wheel\", (e) => {\n            const directionToScroll = (e.deltaY < 0) ? -0.06 : 0.06;\n            this.soundManager.seek(this.soundManager.audioElement.currentTime + directionToScroll);\n            // prevent page scroll\n            e.preventDefault();\n            e.stopPropagation();\n        }, { passive: false })\n\n        // keyboard navigation controls\n        document.addEventListener('keydown', (e: KeyboardEvent) => {\n            switch (e.key) {\n                case 'MediaStop':\n                    tickerStopRef.click();\n                    break;\n                // play or pause\n                case 'MediaPlayPause':\n                case ' ':\n                    tickerPlayRef.click();\n                    break;\n                // navigate timeline backward\n                case 'ArrowLeft':\n                    this.soundManager.seek(this.soundManager.audioElement.currentTime - 0.06);\n                    break;\n                // navigate timeline forward\n                case 'ArrowRight':\n                    this.soundManager.seek(this.soundManager.audioElement.currentTime + 0.06);\n                    break;\n                // jump to next effect\n                case 'MediaTrackNext':\n                case 'ArrowUp':\n                    this.soundManager.jump(this.soundManager.audioElement.currentTime, 1, this.sceneList.length);\n                    break;\n                // jump to previous effect\n                case 'MediaTrackPrevious':\n                case 'ArrowDown':\n                    this.soundManager.jump(this.soundManager.audioElement.currentTime, -1, this.sceneList.length);\n                    break;\n                // toggle full screen\n                case 'f':\n                    this.canvasRef.click();\n                    break;\n                // save a screenshot\n                case 's':\n                    tickerScreenshotRef.click();\n                    break;\n                // record video in webm format\n                case 'r':\n                    tickerRecordRef.click();\n                    break;\n                case 'd':\n                    break;\n            }\n        })\n    }\n\n    /**\n     * Runs all promises in an array and runs callback with percentage of completion\n     *\n     * @param   {Array<Promise<any>>} promises       array of promises to run\n     * @param   {Function} progressCallback          function sending percentage after individual promise is complete\n     * @returns {Promise<any>}                       promise resolve after all promises are complete\n     */\n    private allProgress(promises: Array<Promise<any>>, progressCallback: (percentage: number) => void): Promise<any> {\n        let d = 0;\n        for (const p of promises) {\n            p.then(() => {\n                d++;\n                progressCallback(d / promises.length);\n            });\n        }\n        return Promise.all(promises);\n    }\n\n    /**\n     * Adds JavaScript Performance Monitor and initializes it\n     *\n     * @param   {Object} args                        stat type[0-3], top in pixels, left in pixels\n     */\n    private initStats(...args: Array<number>) {\n        this.stats.push(new Stats());\n        const statsObj = this.stats[this.stats.length - 1];\n        statsObj.showPanel(args[0]);\n        statsObj.dom.style.cssText = `position:absolute;top:${args[1]}px;left:${args[2]}px;`;\n        document.body.appendChild(statsObj.dom);\n    }\n\n    public render(framebuffer: Framebuffer) {\n        // get time and values from music\n        this.soundManager.updateMusic();\n\n        // get which effect to run\n        this.nodeInstance = this.sceneList.getNode(this.soundManager.musicProperties.sceneData.effect);\n\n        // if \"transitionType\" in JSRocket is zero then run the effect by itself\n        if (this.soundManager.musicProperties.sceneData.transitionType === 0) {\n            this.nodeInstance.data.render(framebuffer, this.soundManager.musicProperties.timeMilliseconds)\n        } else {\n            // otherwise blend two effects together\n            this.BlockFade.transition(\n                framebuffer,\n                this.nodeInstance.data,\n                this.nodeInstance.next.data,\n                this.soundManager.musicProperties.sceneData.transitionType,\n                this.soundManager.musicProperties.sceneData.transitionValue,\n                this.soundManager.musicProperties.timeMilliseconds);\n        }\n\n        // comment out for release\n        this.drawStats();\n    }\n\n    /**\n     * Show FPS, Memory Usage and js rocket time and effect number\n     */\n    private drawStats() {\n        // update timeline marker\n        this.timelineRef.value = String(this.soundManager.musicProperties.timeMilliseconds);\n\n        // keep current time in local storage to stay in place during reloads\n        localStorage.setItem('lastTime', String(this.soundManager.musicProperties.timeSeconds));\n\n        if (!this.soundManager.syncDevice.connected && !this.soundManager.demoMode) {\n            console.error('Rocket not connected.');\n            return;\n        } else {\n            // get values from JS rocket\n            this.sceneRef.innerText = this.soundManager.musicProperties.sceneData.effect.toString();\n            this.timeRef.innerText = this.soundManager.musicProperties.timeSeconds.toFixed(2);\n        }\n        // update FPS and Memory usage\n        for (const p of this.stats) {\n            p.update();\n        }\n    }\n\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./demo-style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./demo-style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Canvas } from '../../Canvas';\nimport { DemoScene } from './DemoScene';\nimport './../../demo-style.css';\n\nclass Application {\n\n    // HD Resolution 1920 x 1080\n    public static readonly CANVAS_WIDTH = 1920 / 5;\n    public static readonly CANVAS_HEIGHT = 1080 / 5;\n\n    public static main(): void {\n        const canvas: Canvas = new Canvas(Application.CANVAS_WIDTH, Application.CANVAS_HEIGHT, new DemoScene());\n        canvas.init();\n    }\n\n}\n\nApplication.main();\n"],"names":["inProgress","dataWebpackPrefix","___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","f","e","a","c","appendChild","dom","u","d","children","style","display","l","document","createElement","cssText","addEventListener","preventDefault","performance","Date","now","g","r","Panel","h","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","Math","round","window","devicePixelRatio","v","m","n","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","getTarget","Error","element","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","firstChild","createTextNode","CullFace","RandomNumberGenerator","seed","getFloat","setSeed","TextureCoordinate","constructor","Vertex","position","projection","normal","color","textureCoordinate","Color","static","toPackedFormat","sub","add","div","num","mul","Utils","input","value","istart","istop","ostart","ostop","ceil","floor","random","src","srcPosition","dst","dstPosition","start","slice","Array","prototype","fade","lerp","grad","hash","x","y","z","noise","permutation","X","Y","Z","A","AA","AB","B","BA","BB","y0","y1","y2","y3","mu","mu2","a0","cos","PI","AbstractGeometricObject","mesh","inverse","buildMesh","points","normals","cross","normalize","faces","n1","n2","n3","v1","v2","v3","transformedPoints","transformedNormals","getMesh","Torus","invert","super","STEPS2","frame","torusFunction","frame2","up","right","pos","sin","j","alpha","Interpolator","current","Matrix3f","m11","m12","m13","m21","m22","m23","m31","m32","m33","angle","matrix","xScale","yScale","zScale","multiplyMatrix","multiply","vector","Matrix4f","m14","m24","m34","m41","m42","m43","m44","setIdentityMatrix","transpose","computeNormalMatrix","inverseTranslation","constructIdentityMatrix","scale1","sqrt","scale2","scale3","inverseRotation","getInverseRotation","getRotation","planePoint","planeNormal","lightPosition","dot","NdotL","shadowMatrix","tx","ty","tz","setTranslationMatrix","setXRotationMatrix","setZRotationMatrix","setScaleMatrix","sx","sy","sz","setYRotationMatrix","setRotationMatrix","s","normalize2","multiply2","matrix2","multiplyHom","multiplyHomArr","multiplyHomArr2","multiplyArr","Vector2f","perp","vec","scal","reci","Vector3f","mult","scale","sub2","vec1","vec2","add2","cross2","Vector4f","componentWiseMul","AbstractScannlineTriangleRasterizer","temp","drawTriangleDDA","framebuffer","p1","p2","p3","fillLongRightTriangle","fillLongLeftTriangle","AbstractTriangleRasterizer","TexturedAlphaBlendingTriangleRasterizer","pipeline","yDistanceLeft","yDistanceRight","slope1","slope2","tslope1u","tslope2u","tslope1v","tslope2v","zslope1","zslope2","curz1","curz2","curu1","curv1","curu2","curv2","xPosition","xPosition2","yPosition","framebufferIndex","spanzStep","spanuStep","spanvStep","wStart","uStart","vStart","currentColor","wBuffer","bob","color2","texture","getBilinearFilteredPixelRasterizer","inverseAlpha","TexturedTriangleRasterizer","AbstractRenderingPipeline","NEAR_PLANE_Z","cullMode","BACK","setCullFace","face","setAlpha","isInFrontOfNearPlane","isTriangleCCW","DISABLED","det","isTriangleCCW2","v4","TexturingRenderingPipeline","sphereMapping","triangleRasterizer","vertexArray","setSphereMapping","modelViewMatrix","projectedVertices","setFramebuffer","enableAlphaBlending","disableAlphaBlending","setModelViewMatrix","drawMeshArray","meshes","model","draw","normalMatrix","normals2","points2","vertices","project2","fakeSphere","uv","clipConvexPolygon","zClipTriangle","t1","computeNearPlaneIntersection","ratio","vertex","subject","output","S","point","clipRegion","edge","isInside2","computeIntersection2","AbstractScene","init","Promise","all","onInit","AbstractClipEdge","BottomClipEdge","isInside","minWindow","computeIntersection","factor","textCoord","LeftClipEdge","RightClipEdge","maxWindow","TopClipEdge","Texture","maxWidth","maxHeight","clamp","setClamp","getPixel","getBilinearFilteredPixel","x0","x1","x0y0","x1y0","x0y1","x1y1","col1","col2","getBilinearFilteredPixel2","getPixel2","interpolateComp","getPixelRasterizer","getPixel3","xFrac","yFrac","oneMinusXfrac","oneMinusYfrac","TextureUtils","resolve","Uint32Array","rng","dx","dy","filename","transparency","image","Image","onload","getImageData","onerror","withAlpha","canvas","context","conv","JSRocket","SyncData","_track","getTrack","getIndexForName","name","getTrackLength","createIndex","varName","track","Track","getValue","row","keys","Object","idx","lo","hi","mi","findKeyIndex","k0","k1","interpolation","pow","SyncDevicePlayer","cfg","_urlRequest","_syncData","_eventHandler","load","url","XMLHttpRequest","open","onreadystatechange","urlRequestHandler","send","error","readyState","status","xmlString","key","tLen","kLen","trackList","DOMParser","parseFromString","getElementsByTagName","getAttribute","keyList","parseInt","parseFloat","ready","readXML","responseText","rocketXML","on","evt","handler","SyncDeviceClient","_ws","WebSocket","socketURL","toInt","arr","view","DataView","ArrayBuffer","setUint8","byteLength","getInt8","getInt32","onopen","binaryType","onmessage","queue","Uint8Array","cmd","pause","play","subarray","getFloat32","save","onclose","console","warn","utf8Name","replace","String","fromCharCode","message","charCodeAt","buffer","streamInt","SyncDevice","_device","_previousIntRow","_connected","_config","deviceReady","deviceUpdate","devicePlay","devicePause","mode","setConfig","option","hasOwnProperty","getConfig","Cowbell","Player","Audio","audio","body","createPlayer","containerElement","opts","getElementById","ui","UI","Basic","player","playerOpts","trackOpts","jQuery","fn","cowbell","each","OpenMPTGenerator","audioCtx","modulePtr","leftBufferPtr","rightBufferPtr","initModule","byteArray","Int8Array","ptrToFile","libopenmpt","_malloc","asciiToStack","str","stackStr","stackAlloc","writeAsciiToMemory","HEAPU8","set","_openmpt_module_create_from_memory","stack","stackSave","_openmpt_module_ctl_set","stackRestore","duration","_openmpt_module_get_duration_seconds","cleanup","_openmpt_module_destroy","_free","onReady","pathToLibOpenMPT","script","onRuntimeInitialized","ensureLibOpenMPT","channelCount","request","log","response","responseType","generateAudio","outputBuffer","outputL","getChannelData","outputR","framesToRender","framesRendered","framesPerChunk","actualFramesPerChunk","_openmpt_module_read_float_stereo","sampleRate","rawAudioLeft","HEAPF32","rawAudioRight","seekable","seek","_openmpt_module_set_position_seconds","reset","OpenMPT","Common","WebAudioPlayer","generatorConstructor","generator","AudioContext","webkitAudioContext","latencyHint","BUFFER_SIZE","HAVE_NOTHING","HAVE_METADATA","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","scriptNode","playStartTimestamp","generatorIsReady","playWasRequestedBeforeReady","hasStartedProcessing","playFromTime","newTime","disconnect","createScriptProcessor","onaudioprocess","paused","event","playbackTime","generatedLength","chan","numberOfChannels","channelData","currentTime","onended","ontimeupdate","onloadedmetadata","connect","destination","state","resume","onplay","pausedAtTrackTime","pausedAtTimestamp","onpause","__defineGetter__","__defineSetter__","close","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","getter","__esModule","definition","o","defineProperty","enumerable","get","chunkId","reduce","promises","globalThis","Function","prop","done","needAttach","scripts","charset","timeout","nc","onScriptComplete","prev","clearTimeout","doneFns","forEach","setTimeout","bind","type","Symbol","toStringTag","scriptUrl","importScripts","location","currentScript","installedChunks","installedChunkData","promise","reject","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","ScaleClipBlitter","drawScaledTextureClip","xp","yp","alphaBlend","xStep","yStep","newHeight","newWidth","yStart","xStart","xTextureStart","xx","yy","alphaScale","index2","textureIndex","framebufferPixel","texturePixel","FlatShadingTriangleRasterizer","drawSpan","distance","LineRasterizerDda","drawLineDDA","xDistance","yDistance","abs","sign","wDelta","drawPixel","LineRasterizerNoZ","drawLineDDANoZ","CohenSutherlandLineClipper","cohenSutherlandLineClipper","col","code1","computeRegionCode","code2","accept","isTrivialAccept","isTrivialReject","REGION_CODE_CENTER","tempCode","tempPoint","REGION_CODE_TOP","REGION_CODE_BOTTOM","REGION_CODE_RIGHT","REGION_CODE_LEFT","regionCode","Framebuffer","camera","texturedTriangleRasterizer","scaleClipBlitter","texturedRenderingPipeline","lineRasterizer","lineRasterizerNo","tmpGlitch","lensFlareVisible","lensFlareStart","lensFlareEnd","imageData","unsignedIntArray","torus","plane","cylinder2","linerClipper","ImageData","Float32Array","arrayBuffer","PIXEL_SIZE_IN_BYTES","Uint8ClampedArray","setTexture","clear","BLACK","clearColorBuffer","fill","drawPixel4","drawPixel3","alpha2","drawPixelAntiAliased","roundedX","roundedY","percent","drawPixelAliased","drawPixelAntiAliasedSpacial","readPixel","drawRect","drawRect2","drawText","text","xpos","firstIndex","drawTextureRectFastAlpha","addReflections","interpolate","drawTextureRect2","xs","ys","xt","yt","texIndex","frIndex","drawTextureColorized","txPixel","drawTextureRectNoAlpha","c1","c2","nAlpha","nInvAlpha","r1","g1","b1","r2","g2","b2","drawTextureRect","pixelWidth","fbPixel","drawTextureRectAdd","pixelate","xoff","yoff","drawBox2","fastFramebufferCopyOffset","dest","offset","fastFramebufferCopy","elapsedTime","drawTexturedBillboard","drawParticle","drawParticle2","imgNum","spritH","drawParticle2Sub","rr","gg","bb","drawParticleNoDepth","drawSoftParticle","zDist","drawFog","fogScale","fogOffset","videoMemorySize","wBufferScale","drawScaledTextureClipBi","drawScaledTextureClipBiAdd","drawScaledTextureClipAdd","drawTexture","SCREEN_WIDTH","SCREEN_HEIGHT","textureRowOffset","framebufferRowOffset","yHeight","xWidth","drawTextureFullscreen","drawTexture3","time","mHeight","drawTextureNoClipAlpha","nearPlaneClipping","t2","project","t3","clearDepthBuffer","drawBox","wireFrameSphereClipping","sphereFunction2","modelViewMartrix","constructScaleMatrix","constructYRotationMatrix","constructXRotationMatrix","constructTranslationMatrix","transformed","colred","colLine","wireFrameTerrain","heightmap","Matrix3","xOff","zOff","drawBoundingSphere","sphere","getRadius","getCenter","drawPlanedeformationTunnelAnim","xdist","ydist","dist","dist2","atan2","color1","cosineInterpolate","final","drawScreenBounds","WHITE","drawParticleStreams","light","sort","size","drawPlaneDeformation","IMG_WIDTH","IMG_HEIGHT","asin","fakeSphere2","tex","theta","phi","FullscreenUtils","fullscreen","exitFullscreen","setStyle","enterFullscreen","el","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullScreen","mozCancelFullScreen","webkitExitFullscreen","Canvas","scene","startTime","boundRenderLoop","oImageSmoothingEnabled","imageSmoothingEnabled","webkitImageSmoothingEnabled","renderLoop","appendTo","toggleFullscreen","then","render","flipBackbuffer","requestAnimationFrame","putImageData","ROW_RATE","BPM","SoundManager","syncDevice","isPlaying","demoMode","musicProperties","sceneData","audioElement","connected","loadMusic","audioPlayer","split","pop","toLowerCase","prepareSync","onSyncReady","newRow","onSyncUpdate","onPlay","onPause","effect","snare","bass","transitionType","transitionValue","isNaN","updateMusic","timeSeconds","timeMilliseconds","click","info","jump","direction","sceneLength","effectJump","Number","toFixed","trunc","toggleSound","ref","isMuted","classList","muted","initTimeline","newLocal","jumpTo","localStorage","getItem","poll","updateRange","TransitionMethods","Particle","_color","_x","_y","TTL","isLiving","BlockFade","ledTexture","transitionFramebufferTo","transitionCircle","transitionWipe","croud","prevMask","curMask","diff","noiseMask","croudMask","particleArray","c3","drawCircle","initDissolve","textureBackground","createCroud","isBackground","bias","xbase","ybase","xnoise","ynoise","pn","PerlinNoise","curBias","_gray","dissolve","renderBuffer","renderBuffer2","particle","it","addColor","putpixel","radius","blockFade","transition","transitionSceneFrom","transitionSceneTo","transitionMethod","BLOCKFADE","CROSSFADE","crossFade","DISSOLVE","FADEIN","fadeIn","FADEOUT","fadeOut","WIPE_LEFT","crossFadeImage","CIRCLE","pixelArray","pixelArrayWidth","blockWidth","horizontalUnits","verticalUnits","fadeArray","blend","transitionImage","startColor","endColor","renderScanlines","shiftAmount","offRed","offGreen","offBlue","strips","verticalPosition","imagePixelR","imagePixelG","imagePixelB","DoublyLinkedList","_start","_end","_length","isEmpty","insertStart","node","next","previous","insertEnd","currentNode","deleteStart","deleteEnd","delete","getNode","toArray","array","DLNode","_data","_next","_previous","CanvasRecorder","recording","canvasRecordingOptions","canvasRecorder","audioTrack","getType","ext","fileExtension","includes","createCanvasRecorder","date","link","toISOString","toTimeString","frameRate","download","recorderOptions","mimeType","audioBitsPerSecond","videoBitsPerSecond","chunks","stream","captureStream","recorder","MediaRecorder","ondataavailable","onstop","blob","Blob","URL","createObjectURL","href","MouseEvent","dispatchEvent","revokeObjectURL","timeslice","stop","dispose","recordVideo","canvasObj","saveVideo","DemoScene","soundManager","sceneList","nodeInstance","stats","canvasRef","timelineRef","sceneRef","timeRef","initControls","allProgress","plug","initScene","outputX","args","constructorName","newNode","initStats","tickerPlayRef","tickerStopRef","tickerNextRef","tickerBackRef","tickerRecordRef","tickerScreenshotRef","tickerVolumeRef","setItem","fileName","toDataURL","anchor","directionToScroll","deltaY","stopPropagation","passive","progressCallback","statsObj","drawStats","innerText","locals","Application","CANVAS_WIDTH","CANVAS_HEIGHT","main"],"sourceRoot":""}