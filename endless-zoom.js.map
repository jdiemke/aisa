{"version":3,"file":"endless-zoom.js","mappings":"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","sources":["webpack://aisa/./src/default-style.css","webpack://aisa/./src/examples/endless-zoom/style.css","webpack://aisa/./node_modules/css-loader/dist/runtime/api.js","webpack://aisa/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://aisa/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://aisa/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://aisa/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://aisa/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://aisa/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://aisa/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://aisa/./src/sound/JSRocket.js","webpack://aisa/./src/sound/cowbell/audio_player.js","webpack://aisa/./src/sound/cowbell/cowbell.js","webpack://aisa/./src/sound/cowbell/openmpt/openmpt_player.js","webpack://aisa/./src/sound/cowbell/web_audio_player.js","webpack://aisa/webpack/bootstrap","webpack://aisa/webpack/runtime/compat get default export","webpack://aisa/webpack/runtime/define property getters","webpack://aisa/webpack/runtime/global","webpack://aisa/webpack/runtime/hasOwnProperty shorthand","webpack://aisa/webpack/runtime/publicPath","webpack://aisa/webpack/runtime/nonce","webpack://aisa/./src/blitter/ScaleClipBlitter.ts","webpack://aisa/./src/core/Color.ts","webpack://aisa/./src/CullFace.ts","webpack://aisa/./src/math/Vector4f.ts","webpack://aisa/./src/geometrical-objects/AbstractGeometricObject.ts","webpack://aisa/./src/math/Vector3f.ts","webpack://aisa/./src/geometrical-objects/Torus.ts","webpack://aisa/./src/math/Vector2f.ts","webpack://aisa/./src/math/Matrix4f.ts","webpack://aisa/./src/math/Matrix3.ts","webpack://aisa/./src/math/Interpolator.ts","webpack://aisa/./src/RandomNumberGenerator.ts","webpack://aisa/./src/rasterizer/AbstractTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/AbstractScanlineTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/FlatShadingTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/line/LineRasterizer.ts","webpack://aisa/./src/rasterizer/line/LineRasterizerNoZ.ts","webpack://aisa/./src/rasterizer/TexturedTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/TexturedAlphaBlendingTriangleRasterizer.ts","webpack://aisa/./src/TextureCoordinate.ts","webpack://aisa/./src/Vertex.ts","webpack://aisa/./src/rendering-pipelines/AbstractRenderingPipeline.ts","webpack://aisa/./src/rendering-pipelines/TexturingRenderingPipeline.ts","webpack://aisa/./src/screen-space-clipping/AbstractClipEdge.ts","webpack://aisa/./src/screen-space-clipping/BottomClipEdge.ts","webpack://aisa/./src/screen-space-clipping/CohenSutherlandLineClipper.ts","webpack://aisa/./src/screen-space-clipping/LeftClipEdge.ts","webpack://aisa/./src/screen-space-clipping/RightClipEdge.ts","webpack://aisa/./src/screen-space-clipping/TopClipEdge.ts","webpack://aisa/./src/texture/Texture.ts","webpack://aisa/./src/Framebuffer.ts","webpack://aisa/./src/fullscreen/FullscreenUtils.ts","webpack://aisa/./src/Canvas.ts","webpack://aisa/./src/rendering-pipelines/TexturedMesh.ts","webpack://aisa/./src/scenes/AbstractScene.ts","webpack://aisa/./src/sound/MusicProperties.ts","webpack://aisa/./src/sound/SoundManager.ts","webpack://aisa/./src/texture/TextureUtils.ts","webpack://aisa/./src/geometrical-objects/TorusKnot.ts","webpack://aisa/./src/shading/fog/Fog.ts","webpack://aisa/./src/shading/fog/LinearFog.ts","webpack://aisa/./src/screen-space-clipping/SutherlandHodgman2DClipper.ts","webpack://aisa/./src/shading/illumination-models/PhongLighting.ts","webpack://aisa/./src/shading/light/Light.ts","webpack://aisa/./src/shading/light/PointLight.ts","webpack://aisa/./src/shading/material/Material.ts","webpack://aisa/./src/rasterizer/ColorInterpolator.ts","webpack://aisa/./src/rasterizer/SlopeInterpolator.ts","webpack://aisa/./src/rasterizer/GouraudShadingTriangleRasterizer.ts","webpack://aisa/./src/rendering-pipelines/GouraudShadingRenderingPipeline.ts","webpack://aisa/./src/examples/torus-knot-tunnel/TorusKnotTunnelScene.ts","webpack://aisa/./src/examples/feedback-radial-blur/FeedbackRadialBlur.ts","webpack://aisa/./src/examples/md2/ModelViewMatrix.ts","webpack://aisa/./src/examples/text-zoomer/TextZoomerScene.ts","webpack://aisa/./src/examples/endless-zoom/style.css?1a81","webpack://aisa/./src/examples/endless-zoom/ThirdPersonCameraScene.ts","webpack://aisa/./src/default-style.css?9c7b","webpack://aisa/./src/examples/endless-zoom/Application.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n    background-color: #000;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/default-style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,sBAAsB;AAC1B\",\"sourcesContent\":[\"body {\\n    background-color: #000;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `button {\n    background-color: #ff66ff;\n    border: none;\n    padding: 10px 30px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    border-radius: 18px;\n    cursor: pointer;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/examples/endless-zoom/style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;IAClB,qBAAqB;IACrB,qBAAqB;IACrB,eAAe;IACf,mBAAmB;IACnB,eAAe;AACnB\",\"sourcesContent\":[\"button {\\n    background-color: #ff66ff;\\n    border: none;\\n    padding: 10px 30px;\\n    text-align: center;\\n    text-decoration: none;\\n    display: inline-block;\\n    font-size: 16px;\\n    border-radius: 18px;\\n    cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","(function (window) {\n\n    if (!window.JSRocket) {\n        window.JSRocket = {};\n    }\n    JSRocket.SyncData = function () {\n\n        \"use strict\";\n\n        var _track = [];\n\n        function getTrack(index) {\n            return _track[index];\n        }\n\n        function getIndexForName(name) {\n            for (var i = 0; i < _track.length; i++) {\n\n                if (_track[i].name === name) {\n                    return i;\n                }\n            }\n\n            return -1;\n        }\n\n        function getTrackLength() {\n            return _track.length;\n        }\n\n        function createIndex(varName) {\n            var track = new JSRocket.Track();\n            track.name = varName;\n\n            _track.push(track);\n        }\n\n        return {\n            getTrack: getTrack,\n            getIndexForName: getIndexForName,\n            getTrackLength: getTrackLength,\n            createIndex: createIndex\n        };\n    };\n    JSRocket.Track = function () {\n\n        \"use strict\";\n\n        var STEP = 0,\n            LINEAR = 1,\n            SMOOTH = 2,\n            RAMP = 3;\n\n        var data = [];\n\n        function findKeyIndex(keys, row) {\n            var lo = 0, hi = keys.length;\n            while (lo < hi) {\n                var mi = ((hi + lo) / 2) | 0;\n\n                if (keys[mi] < row) {\n                    lo = mi + 1;\n                } else if (keys[mi] > row) {\n                    hi = mi;\n                } else {\n                    return mi;\n                }\n            }\n            return lo - 1;\n        }\n\n        function getValue(row) {\n            var keys = Object.keys(data);\n\n            if (!keys.length) {\n                return 0.0;\n            }\n\n            var idx = findKeyIndex(keys, Math.floor(row));\n            if (idx < 0) {\n                return data[keys[0]].value;\n            }\n            if (idx > keys.length - 2) {\n                return data[keys[keys.length - 1]].value;\n            }\n\n            // lookup keys and values\n            var k0 = keys[idx], k1 = keys[idx + 1];\n            var a = data[k0].value;\n            var b = data[k1].value;\n\n            // interpolate\n            var t = (row - k0) / (k1 - k0);\n            switch (data[k0].interpolation) {\n                case 0:\n                    return a;\n                case 1:\n                    return a + (b - a) * t;\n                case 2:\n                    return a + (b - a) * t * t * (3 - 2 * t);\n                case 3:\n                    return a + (b - a) * Math.pow(t, 2.0);\n            }\n        }\n\n        function add(row, value, interpolation) {\n            data[row] = {\n                \"value\": value,\n                \"interpolation\": interpolation\n            };\n        }\n\n        function remove(row) {\n            delete data[row];\n        }\n\n        return {\n            getValue: getValue,\n            add: add,\n            remove: remove\n        };\n    };\n    JSRocket.SyncDevicePlayer = function (cfg) {\n\n        \"use strict\";\n\n        var _urlRequest,\n            _syncData = new JSRocket.SyncData(),\n            _eventHandler = {\n                'ready': function () {\n                },\n                'error': function () {\n                }\n            };\n\n        function load(url) {\n\n            _urlRequest = new XMLHttpRequest();\n\n            if (_urlRequest === null) {\n                _eventHandler.error();\n                return;\n            }\n\n            _urlRequest.open('GET', url, true);\n            _urlRequest.onreadystatechange = urlRequestHandler;\n\n            _urlRequest.send();\n        }\n\n        function urlRequestHandler() {\n\n            if (_urlRequest.readyState === 4) {\n                if (_urlRequest.status < 300) {\n                    readXML(_urlRequest.responseText);\n                } else {\n                    _eventHandler.error();\n                }\n            }\n        }\n\n        function readXML(xmlString) {\n            var key,\n                t = 0, tLen, k = 0, kLen,\n                xml = (new DOMParser()).parseFromString(xmlString, 'text/xml'),\n                tracks = xml.getElementsByTagName('tracks');\n\n            //<tracks>\n            var trackList = tracks[0].getElementsByTagName('track');\n\n            for (t, tLen = trackList.length; t < tLen; t++) {\n\n                var track = getTrack(trackList[t].getAttribute('name')),\n                    keyList = trackList[t].getElementsByTagName('key');\n\n                for (k = 0, kLen = keyList.length; k < kLen; k++) {\n                    key = keyList[k];\n                    track.add(parseInt(key.getAttribute('row'), 10),\n                        parseFloat(key.getAttribute('value')),\n                        parseInt(key.getAttribute('interpolation'), 10));\n\n                }\n            }\n\n            _eventHandler.ready();\n        }\n\n        function getTrack(name) {\n\n            var index = _syncData.getIndexForName(name);\n\n            if (index > -1) {\n                return _syncData.getTrack(index);\n            }\n\n            _syncData.createIndex(name);\n            return _syncData.getTrack(_syncData.getTrackLength() - 1);\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        function nop() {\n\n        }\n\n        if (cfg.rocketXML === \"\" || cfg.rocketXML === undefined || cfg.rocketXML === undefined) {\n            throw (\"[jsRocket] rocketXML is not set, try _syncDevice.setConfig({'rocketXML':'url/To/RocketXML.rocket'})\");\n        } else {\n            load(cfg.rocketXML);\n        }\n\n        return {\n            load: load,\n            getTrack: getTrack,\n            update: nop,\n            on: setEvent\n        };\n    };\n    JSRocket.SyncDeviceClient = function (cfg) {\n\n        \"use strict\";\n\n        var CMD_SET_KEY = 0,\n            CMD_DELETE_KEY = 1,\n            CMD_GET_TRACK = 2,\n            CMD_SET_ROW = 3,\n            CMD_PAUSE = 4,\n            CMD_SAVE_TRACKS = 5;\n\n        var _ws = new WebSocket(cfg.socketURL),\n            _syncData = new JSRocket.SyncData(),\n            _eventHandler = {\n                'ready': function () {\n                },\n                'update': function () {\n                },\n                'play': function () {\n                },\n                'pause': function () {\n                },\n                'save': function () {\n                }\n            };\n\n        function onOpen() {\n\n            _ws.binaryType = \"arraybuffer\";\n            _ws.send('hello, synctracker!');\n        }\n\n        function onMessage(e) {\n\n            var queue = (new Uint8Array(e.data)),\n                cmd = queue[0],\n                track, row, value, interpolation;\n\n            //Handshake\n            if (cmd === 104) {\n\n                _eventHandler.ready();\n\n                //PAUSE\n            } else if (CMD_PAUSE === cmd) {\n\n                if (queue[1] === 1) {\n                    _eventHandler.pause();\n                } else {\n                    _eventHandler.play();\n                }\n\n                //SET_ROW\n            } else if (CMD_SET_ROW === cmd) {\n\n                row = toInt(queue.subarray(1, 5));\n\n                _eventHandler.update(row);\n\n                //SET_KEY\n            } else if (CMD_SET_KEY === cmd) {\n\n                track = toInt(queue.subarray(1, 5));\n                row = toInt(queue.subarray(5, 9));\n\n                //value = Math.round(toFloat(queue.subarray(9, 13)) * 100) / 100; //round to what's seen in Rocket tracks\n                value = toFloat(queue.subarray(9, 13)); //use the values you see in Rocket statusbar\n\n                interpolation = toInt(queue.subarray(13, 14));\n                _syncData.getTrack(track).add(row, value, interpolation);\n\n                //DELETE\n            } else if (CMD_DELETE_KEY === cmd) {\n\n                track = toInt(queue.subarray(1, 5));\n                row = toInt(queue.subarray(5, 9));\n\n                _syncData.getTrack(track).remove(row);\n\n                //SAVE\n            } else if (CMD_SAVE_TRACKS === cmd) {\n                _eventHandler.save();\n            }\n        }\n\n        function onClose(e) {\n            console.warn(\">> connection closed\", e);\n        }\n\n        function onError(e) {\n            console.error(\">> connection error'd\", e);\n        }\n\n        _ws.onopen = onOpen;\n        _ws.onmessage = onMessage;\n        _ws.onclose = onClose;\n        _ws.onerror = onError;\n\n        function getTrack(name) {\n\n            var index = _syncData.getIndexForName(name);\n\n            if (index > -1) {\n                return _syncData.getTrack(index);\n            }\n\n            var utf8Name = encodeURIComponent(name).replace(/%([\\dA-F]{2})/g, function (m, c) {\n                return String.fromCharCode('0x' + c);\n            });\n            var message = [CMD_GET_TRACK,\n                (utf8Name.length >> 24) & 0xFF, (utf8Name.length >> 16) & 0xFF,\n                (utf8Name.length >> 8) & 0xFF, (utf8Name.length) & 0xFF];\n\n            for (var i = 0; i < utf8Name.length; i++) {\n                message.push(utf8Name.charCodeAt(i));\n            }\n\n            _ws.send(new Uint8Array(message).buffer);\n\n            _syncData.createIndex(name);\n            return _syncData.getTrack(_syncData.getTrackLength() - 1);\n        }\n\n        function setRow(row) {\n\n            var streamInt = [(row >> 24) & 0xFF,\n            (row >> 16) & 0xFF,\n            (row >> 8) & 0xFF,\n            (row) & 0xFF];\n\n            _ws.send(new Uint8Array([CMD_SET_ROW, streamInt[0], streamInt[1], streamInt[2], streamInt[3]]).buffer);\n        }\n\n        function toInt(arr) {\n\n            var i = 0,\n                view = new DataView(new ArrayBuffer(arr.length));\n\n            for (; i < arr.length; i++) {\n                view.setUint8(i, arr[i]);\n            }\n\n            if (view.byteLength === 1) {\n                return view.getInt8(0);\n            } else {\n                return view.getInt32(0);\n            }\n        }\n\n        function toFloat(arr) {\n            var view = new DataView(new ArrayBuffer(4));\n            view.setUint8(0, arr[0]);\n            view.setUint8(1, arr[1]);\n            view.setUint8(2, arr[2]);\n            view.setUint8(3, arr[3]);\n\n            return view.getFloat32(0);\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        return {\n            getTrack: getTrack,\n            update: setRow,\n            on: setEvent\n        };\n    };\n\n    JSRocket.SyncDevice = function () {\n\n        \"use strict\";\n\n        var _connected = false,\n            _device,\n            _previousIntRow,\n            _config = {\n                \"socketURL\": \"ws://localhost:1339\",\n                \"rocketXML\": \"\"\n            },\n            _eventHandler = {\n                'ready': function () {\n                },\n                'update': function () {\n                },\n                'play': function () {\n                },\n                'pause': function () {\n                }\n            };\n\n        function init(mode) {\n            if (mode === \"demo\") {\n                _device = new JSRocket.SyncDevicePlayer(_config);\n            } else {\n                _device = new JSRocket.SyncDeviceClient(_config);\n            }\n\n            _device.on('ready', deviceReady);\n            _device.on('update', deviceUpdate);\n            _device.on('play', devicePlay);\n            _device.on('pause', devicePause);\n        }\n\n        function getConfig() {\n            return _config;\n        }\n\n        function setConfig(cfg) {\n            for (var option in cfg) {\n                if (cfg.hasOwnProperty(option)) {\n                    _config[option] = cfg[option];\n                }\n            }\n\n            return _config;\n        }\n\n        function deviceReady() {\n            _connected = true;\n            _eventHandler.ready();\n        }\n\n        function deviceUpdate(row) {\n            _eventHandler.update(row);\n        }\n\n        function devicePlay() {\n            _eventHandler.play();\n        }\n\n        function devicePause() {\n            _eventHandler.pause();\n        }\n\n        function getTrack(name) {\n            if (_connected) {\n                return _device.getTrack(name);\n            } else {\n                return null;\n            }\n        }\n\n        function update(row) {\n            //no need to update rocket on float rows\n            if (Math.floor(row) !== _previousIntRow) {\n                _previousIntRow = Math.floor(row);\n                _device.update(_previousIntRow);\n            }\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        return {\n            init: init,\n            setConfig: setConfig,\n            getConfig: getConfig,\n            getTrack: getTrack,\n            update: update,\n            on: setEvent\n        };\n    };\n\n})(window);\n\n","/* Trivial player for formats that the browser supports natively through the <audio> element,\nsuch as MP3 and OGG */\n\nCowbell.Player.Audio = function() {\n\tthis.Track = function(url) {\n\t\tthis.open = function() {\n\t\t\tvar audio = document.createElement('audio');\n\t\t\taudio.src = url;\n\t\t\tdocument.body.appendChild(audio);\n\n\t\t\treturn audio;\n\t\t};\n\t};\n};\n","window.Cowbell = {\n\t'UI': {},\n\t'Player': {},\n\t'Common': {}\n};\n\nwindow.Cowbell.createPlayer = function(containerElement, opts) {\n\tif (!opts) opts = {};\n\n\tif (typeof(containerElement) == 'string') {\n\t\tcontainerElement = document.getElementById(containerElement);\n\t}\n\n\tvar uiConstructor = opts.ui || Cowbell.UI.Basic;\n\tvar ui = new uiConstructor(containerElement);\n\n\tif (opts.player) {\n\t\tvar player = new opts.player(opts.playerOpts);\n\n\t\tif (opts.url) {\n\t\t\tvar track = new player.Track(opts.url, opts.trackOpts);\n\t\t\tui.open(track);\n\t\t}\n\t}\n\n\treturn ui;\n};\n\nif (window.jQuery) {\n\twindow.jQuery.fn.cowbell = function(opts) {\n\t\tthis.each(function() {\n\t\t\tCowbell.createPlayer(this, opts);\n\t\t});\n\t};\n}\n","/* Player for module formats supported by libopenmpt */\n\n(function() {\n\tfunction OpenMPTGenerator(url, audioCtx, playerOpts, trackOpts) {\n\t\tvar modulePtr, leftBufferPtr, rightBufferPtr;\n\t\tvar maxFramesPerChunk = 4096;\n\t\tvar self = this;\n\t\tif (!playerOpts) playerOpts = {};\n\t\tif (!trackOpts) trackOpts = {};\n\n\t\tfunction initModule(data) {\n\t\t\tvar byteArray = new Int8Array(data);\n\t\t\tvar ptrToFile = libopenmpt._malloc(byteArray.byteLength);\n\t\t\tlibopenmpt.HEAPU8.set(byteArray, ptrToFile);\n\n\t\t\tmodulePtr = libopenmpt._openmpt_module_create_from_memory(ptrToFile, byteArray.byteLength, 0, 0, 0);\n            global.window.modulePtr = modulePtr;\n\t\t\tleftBufferPtr  = libopenmpt._malloc(4 * maxFramesPerChunk);\n\t\t\trightBufferPtr = libopenmpt._malloc(4 * maxFramesPerChunk);\n\n\t\t\tfunction asciiToStack(str) {\n\t\t\t\tvar stackStr = stackAlloc(str.length + 1);\n\t\t\t\twriteAsciiToMemory(str, stackStr);\n\t\t\t\treturn stackStr;\n\t\t\t}\n\t\t\tvar stack = stackSave();\n\t\t\tlibopenmpt._openmpt_module_ctl_set(modulePtr, asciiToStack('render.resampler.emulate_amiga'), asciiToStack('1')); // enable Amiga resampler\n\t\t\tlibopenmpt._openmpt_module_ctl_set(modulePtr, asciiToStack('render.resampler.emulate_amiga_type'), asciiToStack('a1200')); // set emulated Amiga model to A1200\n\t\t\tstackRestore(stack);\n\n\t\t\tself.duration = libopenmpt._openmpt_module_get_duration_seconds(modulePtr);\n\t\t}\n\n\t\tfunction ensureLibOpenMPT(onReady) {\n\t\t\tif (!playerOpts.pathToLibOpenMPT) {\n\t\t\t\tthrow \"pathToLibOpenMPT not specified\";\n\t\t\t}\n\n\t\t\tif (window.libopenmpt && window.libopenmpt._openmpt_module_create_from_memory) {\n\t\t\t\t/* libopenmpt already loaded */\n\t\t\t\tonReady();\n\t\t\t} else {\n\t\t\t\t/* load libopenmpt via <script> tag injection */\n\t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n\t\t\t\tvar script = document.createElement(\"script\");\n\t\t\t\tscript.src = playerOpts.pathToLibOpenMPT;\n\n\t\t\t\twindow.libopenmpt = {\n\t\t\t\t\tonRuntimeInitialized: function() {\n\t\t\t\t\t\tonReady();\n\t\t\t\t\t\thead.removeChild(script);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\thead.appendChild(script);\n\t\t\t}\n\t\t}\n\n\t\tthis.cleanup = function() {\n\t\t\tif (modulePtr) {\n\t\t\t\tlibopenmpt._openmpt_module_destroy(modulePtr);\n\t\t\t}\n\t\t\tif (leftBufferPtr) {\n\t\t\t\tlibopenmpt._free(leftBufferPtr);\n\t\t\t}\n\t\t\tif (rightBufferPtr) {\n\t\t\t\tlibopenmpt._free(rightBufferPtr);\n\t\t\t}\n\t\t};\n\n\t\tthis.load = function(onReady) {\n\t\t\tvar self = this;\n\t\t\tensureLibOpenMPT(function() {\n\t\t\t\tself.channelCount = 2;\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\t\trequest.addEventListener('error', function(e) {\n\t\t\t\t\tconsole.log('XHR error', e);\n\t\t\t\t});\n\n\t\t\t\trequest.addEventListener('load', function(e) {\n\t\t\t\t\tdata = request.response;\n\t\t\t\t\tinitModule(data);\n\t\t\t\t\tonReady();\n\t\t\t\t});\n\n\t\t\t\t/* trigger XHR */\n\t\t\t\trequest.open('GET', url, true);\n\t\t\t\trequest.responseType = \"arraybuffer\";\n\t\t\t\trequest.send();\n\t\t\t});\n\t\t};\n\n\t\tthis.generateAudio = function(outputBuffer) {\n\t\t\tvar outputL = outputBuffer.getChannelData(0);\n\t\t\tvar outputR = outputBuffer.getChannelData(1);\n\t\t\tvar framesToRender = outputBuffer.length;\n\n\t\t\tvar framesRendered = 0;\n\t\t\tvar ended = false;\n\t\t\twhile (framesToRender > 0) {\n\t\t\t\tvar framesPerChunk = Math.min(framesToRender, maxFramesPerChunk);\n\t\t\t\tvar actualFramesPerChunk = libopenmpt._openmpt_module_read_float_stereo(modulePtr, audioCtx.sampleRate, framesPerChunk, leftBufferPtr, rightBufferPtr);\n\t\t\t\tvar rawAudioLeft = libopenmpt.HEAPF32.subarray(leftBufferPtr / 4, leftBufferPtr / 4 + actualFramesPerChunk);\n\t\t\t\tvar rawAudioRight = libopenmpt.HEAPF32.subarray(rightBufferPtr / 4, rightBufferPtr / 4 + actualFramesPerChunk);\n\t\t\t\tfor (var i = 0; i < actualFramesPerChunk; ++i) {\n\t\t\t\t\toutputL[framesRendered + i] = rawAudioLeft[i];\n\t\t\t\t\toutputR[framesRendered + i] = rawAudioRight[i];\n\t\t\t\t}\n\t\t\t\tframesToRender -= actualFramesPerChunk;\n\t\t\t\tframesRendered += actualFramesPerChunk;\n\t\t\t\tif (actualFramesPerChunk < framesPerChunk) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn framesRendered;\n\t\t};\n\n\t\tthis.seekable = true;\n\n\t\tthis.seek = function(position) {\n\t\t\tlibopenmpt._openmpt_module_set_position_seconds(modulePtr, position);\n\t\t};\n\n\t\tthis.reset = function() {\n\t\t\tthis.seek(0);\n\t\t}\n\t}\n\tCowbell.Player.OpenMPT = function(opts) {\n\t\treturn new Cowbell.Common.WebAudioPlayer(OpenMPTGenerator, opts);\n\t};\n})();\n","/*\nWrapper to allow Web Audio createScriptProcessor-based player routines to expose\na subset of the HTML5 Media Element API.\n\nThis wrapper handles the details of buffering, pausing, and keeping track of current play time.\nInner routines only need to implement a simple 'generator' API consisting of filling a buffer\nwith audio data, and seeking to a specified time.\n*/\n\n(function () {\n    var audioCtx;\n    Cowbell.Common.WebAudioPlayer = function (generatorConstructor, playerOpts) {\n        this.Track = function (url, trackOpts) {\n            var generator;\n\n            this.open = function () {\n                var self = {};\n\n                if (!audioCtx) {\n                    var AudioContext = window.AudioContext || window.webkitAudioContext;\n                    audioCtx = new AudioContext({\n                        latencyHint: \"playback\",\n                        sampleRate: 22050\n                      });\n                }\n\n                var BUFFER_SIZE = 4096;\n\n                self.HAVE_NOTHING = 0;\n                self.HAVE_METADATA = 1;\n                self.HAVE_CURRENT_DATA = 2;\n                self.HAVE_FUTURE_DATA = 3;\n                self.HAVE_ENOUGH_DATA = 4;\n                self.readyState = self.HAVE_NOTHING;\n\n                generator = new generatorConstructor(url, audioCtx, playerOpts, trackOpts);\n                var generatorIsReady = false;\n                var playWasRequestedBeforeReady = false;\n                var scriptNode;\n\n                var hasStartedProcessing = false;\n                var playFromTime = 0;\n                var playStartTimestamp;\n                self.paused = true;\n\n                generator.load(function () {\n                    generatorIsReady = true;\n                    self.readyState = self.HAVE_ENOUGH_DATA;\n                    self.duration = generator.duration;\n                    if (generator.seekable) {\n                        self.seekable = {\n                            'length': 1,\n                            'start': function (i) {\n                                if (i !== 0) throw \"Out of range\";\n                                return 0;\n                            },\n                            'end': function (i) {\n                                if (i !== 0) throw \"Out of range\";\n                                return generator.duration;\n                            }\n                        };\n                    } else {\n                        self.seekable = {\n                            'length': 0,\n                            'start': function (i) {\n                                throw \"Out of range\";\n                            },\n                            'end': function (i) {\n                                throw \"Out of range\";\n                            }\n                        };\n                    }\n                    seek(0);\n                    if (self.onloadedmetadata) self.onloadedmetadata();\n                    if (playWasRequestedBeforeReady) self.play();\n                });\n\n                function seek(newTime) {\n                    if (scriptNode) scriptNode.disconnect(0);\n                    if (newTime > 0) {\n                        generator.seek(newTime);\n                    } else {\n                        generator.reset();\n                    }\n                    playFromTime = newTime;\n                    hasStartedProcessing = false;\n                    scriptNode = audioCtx.createScriptProcessor(BUFFER_SIZE, 0, generator.channelCount);\n                    scriptNode.onaudioprocess = generateAudio;\n                    if (!self.paused) {\n                        self.paused = true;\n                        self.play();\n                    }\n                }\n\n                function generateAudio(event) {\n                    if (!hasStartedProcessing) {\n                        playStartTimestamp = event.playbackTime;\n                        hasStartedProcessing = true;\n                    }\n\n                    var generatedLength = generator.generateAudio(event.outputBuffer);\n\n                    if (generatedLength < event.outputBuffer.length) {\n                        /* generate silence for the remainder of the buffer */\n                        for (var chan = 0; chan < event.outputBuffer.numberOfChannels; chan++) {\n                            var channelData = event.outputBuffer.getChannelData(chan);\n                            for (var i = generatedLength; i < event.outputBuffer.length; i++) {\n                                channelData[i] = 0;\n                            }\n                        }\n\n                        if (self.currentTime > self.duration) {\n                            /* we've finished playing (not just generating) the audio */\n                            self.pause();\n                            if (self.onended) self.onended();\n                            seek(0);\n                        }\n                    }\n\n                    if (self.ontimeupdate) self.ontimeupdate();\n                }\n\n                self.play = function () {\n                    if (!generatorIsReady) {\n                        playWasRequestedBeforeReady = true;\n                        return;\n                    }\n                    if (self.paused) {\n                        scriptNode.connect(audioCtx.destination);\n                        self.paused = false;\n                        // If an AudioContext is created prior to the document receiving a user gesture, \n                        // it will be created in the \"suspended\" state, and you will need to call resume() \n                        // after a user gesture is received.\n                        if (audioCtx.state === 'suspended') { audioCtx.resume() };\n                        if (self.onplay) self.onplay();\n\n                        if (hasStartedProcessing) {\n                            playStartTimestamp = audioCtx.currentTime;\n                            playFromTime = pausedAtTrackTime;\n                        }\n                    }\n                };\n\n                self.pause = function () {\n                    if (!self.paused) {\n                        pausedAtTimestamp = audioCtx.currentTime;\n                        pausedAtTrackTime = self.currentTime;\n\n                        scriptNode.disconnect(0);\n                        self.paused = true;\n                        if (self.onpause) self.onpause();\n                    }\n                };\n\n\n                /*\n                hasStartedProcessing = false && self.paused = true  =>  initial state\n                hasStartedProcessing = false && self.paused = false  =>  the instant we just called play()\n                hasStartedProcessing = true && self.paused = false  =>\n                    ready to play if currentTime < playStartTimestamp; playing if currentTime >= playStartTimestamp\n                hasStartedProcessing = true && self.paused = true  => paused\n                */\n\n                self.__defineGetter__('currentTime', function () {\n                    if (!hasStartedProcessing) return playFromTime;\n                    if (self.paused) return pausedAtTrackTime;\n                    if (audioCtx.currentTime < playStartTimestamp) return playFromTime;\n                    return playFromTime + audioCtx.currentTime - playStartTimestamp;\n                });\n\n                self.__defineSetter__('currentTime', function (newTime) {\n                    if (generator.seekable || newTime === 0) {\n                        seek(newTime);\n                    }\n                });\n\n                return self;\n            };\n            this.close = function () {\n                if (generator && generator.cleanup) {\n                    generator.cleanup();\n                }\n            };\n        };\n    };\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.nc = undefined;","import { Framebuffer } from '../Framebuffer';\nimport { Texture } from '../texture/Texture';\n\nexport class ScaleClipBlitter {\n\n    constructor(private framebuffer: Framebuffer) {\n\n    }\n\n    public drawScaledTextureClip(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.framebuffer.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.framebuffer.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.framebuffer.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.framebuffer.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.framebuffer.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.framebuffer.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.framebuffer.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                const xxInt = xx | 0;\n                const yyInt = yy | 0;\n                const textureIndex = xxInt + yyInt * texture.width;\n                // (xxInt > texture.width - 1 ? texture.width - 1 : xxInt) +\n                // (yyInt > texture.height - 1 ? texture.height - 1 : yyInt) * texture.width;\n\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                const inverseAlpha = 1 - alpha;\n\n                const framebufferPixel = this.framebuffer.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.framebuffer.width;\n        }\n    }\n\n}\n","/**\n * Color\n *\n * @export\n * @class Color\n * @see https://www.rapidtables.com/web/color/RGB_Color.html\n * @author Johannes Diemke\n */\nexport class Color {\n\n    public static readonly BLACK: Color = new Color(0, 0, 0, 255);\n    public static readonly WHITE: Color = new Color(255, 255, 255, 255);\n    public static readonly RED: Color = new Color(255, 0, 0, 255);\n    public static readonly GREEN: Color = new Color(0, 255, 0, 255);\n    public static readonly LIME: Color = new Color(0, 255, 0, 255);\n    public static readonly BLUE: Color = new Color(0, 0, 255, 255);\n    public static readonly DARK_BLUE: Color = new Color(0, 0, 64, 255);\n    public static readonly YELLOW: Color = new Color(255, 255, 0, 255);\n    public static readonly CYAN: Color = new Color(0, 255, 255, 255);\n    public static readonly MAGENTA: Color = new Color(255, 0, 255, 255);\n    public static readonly SLATE_GRAY: Color = new Color(112, 128, 144, 255);\n    public static readonly DARK_GRAY: Color = new Color(19, 19, 20, 255);\n    public static readonly ORANGE: Color = new Color(255, 160, 122);\n\n    constructor(public r: number = 0, public g: number = 0, public b: number = 0, public a: number = 255) {\n    }\n\n    public toPackedFormat(): number {\n        return this.r | this.g << 8 | this.b << 16 | this.a << 24;\n    }\n\n    public sub(color: Color): Color {\n        return new Color(this.r - color.r, this.g - color.g, this.b - color.b, 255);\n    }\n\n    public add(color: Color): Color {\n        return new Color(this.r + color.r, this.g + color.g, this.b + color.b, 255);\n    }\n\n    public div(num: number): Color {\n        return new Color(this.r / num, this.g / num, this.b / num, 255);\n    }\n\n    public mul(num: number): Color {\n        return new Color(this.r * num, this.g * num, this.b * num, 255);\n    }\n\n}\n","export enum CullFace {\n    FRONT = 0,\n    BACK = 1,\n    DISABLED\n}\n","export class Vector4f {\n\n    public x: number;\n    public y: number;\n    public z: number;\n    public w: number;\n\n    constructor(x: number, y: number, z: number, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    public sub(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x - vec.x, this.y - vec.y, this.z - vec.z, this.w - vec.w);\n    }\n\n    public add(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x + vec.x, this.y + vec.y, this.z + vec.z, this.w + vec.w);\n    }\n\n    public cross(vec: Vector4f): Vector4f {\n        return new Vector4f(this.y * vec.z - this.z * vec.y,\n            this.z * vec.x - this.x * vec.z,\n            this.x * vec.y - this.y * vec.x, 0.0);\n    }\n\n    public normalize(): Vector4f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n\n    public sub2(vec1: Vector4f, vec2: Vector4f): void {\n        this.x = vec1.x - vec2.x;\n        this.y = vec1.y - vec2.y;\n        this.z = vec1.z - vec2.z;\n    }\n\n    public add2(vec: Vector4f, vec2: Vector4f): void {\n        this.x = vec.x + vec2.x;\n        this.y = vec.y + vec2.y;\n        this.z = vec.z + vec2.z;\n    }\n\n\n    public mul(scal: number): Vector4f {\n        return new Vector4f(this.x * scal, this.y * scal, this.z * scal, this.w);\n    }\n\n    public componentWiseMul(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x * vec.x, this.y * vec.y, this.z * vec.z, this.w * vec.w);\n    }\n\n    public dot(vec: Vector4f): number {\n        return this.x * vec.x + this.y * vec.y + this.z * vec.z;\n    }\n\n    public cross2(vec1: Vector4f, vec2: Vector4f): void {\n        this.x = vec1.y * vec2.z - vec1.z * vec2.y;\n        this.y = vec1.z * vec2.x - vec1.x * vec2.z;\n        this.z = vec1.x * vec2.y - vec1.y * vec2.x;\n    }\n\n    public normalize2(): void {\n        const reci: number = 1.0 / this.length();\n        this.x *= reci;\n        this.y *= reci;\n        this.z *= reci;\n    }\n\n\n}\n","import { Vector4f } from '../math/index';\nimport { FlatShadedFace } from './FlatShadedFace';\nimport { FlatshadedMesh } from './FlatshadedMesh';\n\nexport class AbstractGeometricObject {\n\n    protected mesh: FlatshadedMesh;\n    protected inverse: boolean;\n\n    protected buildMesh(points: Array<Vector4f>, index: Array<number>, inverse: boolean = false): void {\n        this.inverse = inverse;\n        const normals: Array<Vector4f> = new Array<Vector4f>();\n\n        // todo use index array for normals to have less normal objects\n        // compute normal and check wheter the normal already exists. then reuse inded\n        // maybe have a similarity faktor to reuse similar normals\n        for (let i = 0; i < index.length; i += 3) {\n            const normal = points[index[i + 1]].sub(points[index[i]]).cross(points[index[i + 2]].sub(points[index[i]]));\n            normals.push(this.inverse ? normal.normalize().mul(-1) : normal.normalize()); // normalize?\n        }\n\n\n        const faces: Array<FlatShadedFace> = new Array<FlatShadedFace>();\n\n        for (let i = 0; i < index.length; i += 3) {\n\n            faces.push({\n                n1: i / 3,\n                n2: i / 3,\n                n3: i / 3,\n                v1: index[0 + i],\n                v2: index[1 + i],\n                v3: index[2 + i],\n            });\n        }\n\n        // Create class for objects\n        this.mesh = {\n            points,\n            normals,\n            faces,\n            transformedPoints: points.map(() => new Vector4f(0, 0, 0, 0)),\n            transformedNormals: normals.map(() => new Vector4f(0, 0, 0, 0))\n        };\n    }\n\n    public getMesh(): FlatshadedMesh {\n        return this.mesh;\n    }\n\n}\n","export class Vector3f {\n\n    public x: number;\n    public y: number;\n    public z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    public mult(scale: number): Vector3f {\n        return new Vector3f(this.x * scale, this.y * scale, this.z * scale);\n    }\n\n    public sub(vec: Vector3f): Vector3f {\n        return new Vector3f(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n    }\n\n    public sub2(vec1: Vector3f, vec2: Vector3f): void {\n        this.x = vec1.x - vec2.x;\n        this.y = vec1.y - vec2.y;\n        this.z = vec1.z - vec2.z;\n    }\n\n    public mul(scal: number): Vector3f {\n        return new Vector3f(this.x * scal, this.y * scal, this.z * scal);\n    }\n\n    public add(vec: Vector3f): Vector3f {\n        return new Vector3f(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n    }\n\n    public add2(vec: Vector3f, vec2: Vector3f): void {\n        this.x = vec.x + vec2.x;\n        this.y = vec.y + vec2.y;\n        this.z = vec.z + vec2.z;\n    }\n\n    public cross(vec: Vector3f): Vector3f {\n        return new Vector3f(this.y * vec.z - this.z * vec.y,\n            this.z * vec.x - this.x * vec.z,\n            this.x * vec.y - this.y * vec.x);\n    }\n\n    public cross2(vec1: Vector3f, vec2: Vector3f): void {\n        this.x = vec1.y * vec2.z - vec1.z * vec2.y;\n        this.y = vec1.z * vec2.x - vec1.x * vec2.z;\n        this.z = vec1.x * vec2.y - vec1.y * vec2.x;\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    public normalize(): Vector3f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public normalize2(): void {\n        const reci: number = 1.0 / this.length();\n        this.x *= reci;\n        this.y *= reci;\n        this.z *= reci;\n    }\n\n    public dot(vec: Vector3f): number {\n        return this.x * vec.x + this.y * vec.y + this.z * vec.z;\n    }\n\n}\n","import { Vector4f } from '../math/Vector4f';\nimport { AbstractGeometricObject } from './AbstractGeometricObject';\nimport { Vector3f } from '../math/Vector3f';\n\nexport class Torus extends AbstractGeometricObject {\n\n    public constructor(invert: boolean = false) {\n        super();\n\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 15;\n        const STEPS2 = 12;\n        // find a better solution for inversion\n        // maybe configuration by constructor of base class and construction of geometry\n        // in template method pattern method\n        this.inverse = invert;\n\n        for (let i = 0; i < STEPS; i++) {\n            const frame = this.torusFunction(i * 2 * Math.PI / STEPS);\n            const frame2 = this.torusFunction(i * 2 * Math.PI / STEPS + 0.1);\n            const up = new Vector3f(0.0, 4.0, 0);\n            const right = frame2.sub(frame).cross(up);\n\n            for (let r = 0; r < STEPS2; r++) {\n                const pos = up.mul(Math.sin(r * 2 * Math.PI / STEPS2)).add(right.mul(Math.cos(r * 2 * Math.PI / STEPS2))).add(frame);\n                points.push(new Vector4f(pos.x, pos.y, pos.z, 1.0));\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2) % points.length);\n            }\n        }\n\n        this.buildMesh(points, index);\n    }\n\n    public torusFunction(alpha: number): Vector3f {\n        return new Vector3f(Math.sin(alpha) * 10, 0, Math.cos(alpha) * 10);\n    }\n\n}\n","\nexport class Vector2f {\n\n    constructor(public x: number, public y: number) {\n\n    }\n\n    public perp(): Vector2f {\n        return new Vector2f(-this.y, this.x);\n    }\n\n    public sub(vec: Vector2f): Vector2f {\n        return new Vector2f(this.x - vec.x, this.y - vec.y);\n    }\n\n    public mul(scal: number): Vector2f {\n        return new Vector2f(this.x * scal, this.y * scal);\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    public normalize(): Vector2f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public dot(vec: Vector2f): number {\n        return this.x * vec.x + this.y * vec.y;\n    }\n\n}\n","/**\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_00_introduction.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_00_research.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_01_pipeline.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_02_transformations.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_03_projections.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_04_lighting.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_05_rasterization.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_06_texturing.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_07_shadows.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_08_transparencyReflection.pdf\n * https://cg.informatik.uni-freiburg.de/teaching.htm\n * @author Johannes Diemke\n * @since 2017-05-07\n */\n\nimport { Vector3f } from './Vector3f';\nimport { Vector4f } from './Vector4f';\n\nexport class Matrix4f {\n\n    public m11: number;\n    public m12: number;\n    public m13: number;\n    public m14: number;\n\n    public m21: number;\n    public m22: number;\n    public m23: number;\n    public m24: number;\n\n    public m31: number;\n    public m32: number;\n    public m33: number;\n    public m34: number;\n\n    public m41: number;\n    public m42: number;\n    public m43: number;\n    public m44: number;\n\n    static constructIdentityMatrix(): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n\n    public setIdentityMatrix(): void {\n\n\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public transpose(): Matrix4f {\n        const transpose: Matrix4f = new Matrix4f();\n\n        transpose.m11 = this.m11;\n        transpose.m12 = this.m21;\n        transpose.m13 = this.m31;\n        transpose.m14 = this.m41;\n\n        transpose.m21 = this.m12;\n        transpose.m22 = this.m22;\n        transpose.m23 = this.m32;\n        transpose.m24 = this.m42;\n\n        transpose.m31 = this.m13;\n        transpose.m32 = this.m23;\n        transpose.m33 = this.m33;\n        transpose.m34 = this.m43;\n\n        transpose.m41 = this.m14;\n        transpose.m42 = this.m24;\n        transpose.m43 = this.m34;\n        transpose.m44 = this.m44;\n\n        return transpose;\n    }\n\n    public computeNormalMatrix(): Matrix4f {\n        // http://www.lighthouse3d.com/tutorials/glsl-12-tutorial/the-normal-matrix/\n        // https://www.gamedev.net/forums/topic/443040-inverse-of-modelview-matrix/\n        // https://computergraphics.stackexchange.com/questions/1502/why-is-the-transposed-inverse-of-the-model-view-matrix-used-to-transform-the-nor\n        return this.inverse().transpose();\n    }\n\n    public inverse(): Matrix4f {\n        // Inverse hack\n        // - only works when the MV matrix only contains\n        // translation and rotation and scaling that is the same in all directions\n\n        const inverseTranslation: Matrix4f = Matrix4f.constructIdentityMatrix();\n        inverseTranslation.m14 = -this.m14;\n        inverseTranslation.m24 = -this.m24;\n        inverseTranslation.m34 = -this.m34;\n\n        const scale1 = 1.0 / Math.sqrt(this.m11 * this.m11 + this.m12 * this.m12 + this.m13 * this.m13);\n        const scale2 = 1.0 / Math.sqrt(this.m21 * this.m21 + this.m22 * this.m22 + this.m23 * this.m23);\n        const scale3 = 1.0 / Math.sqrt(this.m31 * this.m31 + this.m32 * this.m32 + this.m33 * this.m33);\n        const inverseRotation: Matrix4f = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11 * scale1;\n        inverseRotation.m21 = this.m12 * scale1;\n        inverseRotation.m31 = this.m13 * scale1;\n\n        inverseRotation.m12 = this.m21 * scale2;\n        inverseRotation.m22 = this.m22 * scale2;\n        inverseRotation.m32 = this.m23 * scale2;\n\n        inverseRotation.m13 = this.m31 * scale3;\n        inverseRotation.m23 = this.m32 * scale3;\n        inverseRotation.m33 = this.m33 * scale3;\n\n        return inverseRotation.multiplyMatrix(inverseTranslation);\n    }\n\n    public getInverseRotation(): Matrix4f {\n        const scale = 1.0;\n        const inverseRotation = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11 * scale;\n        inverseRotation.m21 = this.m12 * scale;\n        inverseRotation.m31 = this.m13 * scale;\n\n        inverseRotation.m12 = this.m21 * scale;\n        inverseRotation.m22 = this.m22 * scale;\n        inverseRotation.m32 = this.m23 * scale;\n\n        inverseRotation.m13 = this.m31 * scale;\n        inverseRotation.m23 = this.m32 * scale;\n        inverseRotation.m33 = this.m33 * scale;\n\n        return inverseRotation;\n    }\n\n    public getRotation(): Matrix4f {\n\n        const inverseRotation = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11;\n        inverseRotation.m21 = this.m21;\n        inverseRotation.m31 = this.m31;\n\n        inverseRotation.m12 = this.m12;\n        inverseRotation.m22 = this.m22;\n        inverseRotation.m32 = this.m32;\n\n        inverseRotation.m13 = this.m13;\n        inverseRotation.m23 = this.m23;\n        inverseRotation.m33 = this.m33;\n\n        return inverseRotation;\n    }\n\n    static constructShadowMatrix(): Matrix4f {\n        const planePoint: Vector3f = new Vector3f(0, -1.5, 0);\n        const planeNormal: Vector3f = new Vector3f(0, 1, 0);\n        const lightPosition: Vector3f = new Vector3f(0, 11, 0);\n\n        const d = -planePoint.dot(planeNormal);\n        const NdotL = planeNormal.x * lightPosition.x +\n            planeNormal.y * lightPosition.y +\n            planeNormal.z * lightPosition.z;\n\n        const shadowMatrix: Matrix4f = new Matrix4f();\n\n        shadowMatrix.m11 = NdotL + d - lightPosition.x * planeNormal.x;\n        shadowMatrix.m12 = - lightPosition.x * planeNormal.y;\n        shadowMatrix.m13 = - lightPosition.x * planeNormal.z;\n        shadowMatrix.m14 = - lightPosition.x * d;\n\n        shadowMatrix.m21 = - lightPosition.y * planeNormal.x;\n        shadowMatrix.m22 = NdotL + d - lightPosition.y * planeNormal.y;\n        shadowMatrix.m23 = - lightPosition.y * planeNormal.z;\n        shadowMatrix.m24 = - lightPosition.y * d;\n\n        shadowMatrix.m31 = - lightPosition.z * planeNormal.x;\n        shadowMatrix.m32 = - lightPosition.z * planeNormal.y;\n        shadowMatrix.m33 = NdotL + d - lightPosition.z * planeNormal.z;\n        shadowMatrix.m34 = - lightPosition.z * d;\n\n        shadowMatrix.m41 = - planeNormal.x;\n        shadowMatrix.m42 = - planeNormal.y;\n        shadowMatrix.m43 = - planeNormal.z;\n        shadowMatrix.m44 = NdotL;\n\n        return shadowMatrix;\n\n    }\n\n    static constructTranslationMatrix(tx: number, ty: number, tz: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = tx;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = ty;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = tz;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public setTranslationMatrix(tx: number, ty: number, tz: number): void {\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = tx;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = ty;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = tz;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    static constructXRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = Math.cos(alpha);\n        matrix.m23 = -Math.sin(alpha);\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = Math.sin(alpha);\n        matrix.m33 = Math.cos(alpha);\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public setXRotationMatrix(alpha: number): void {\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = Math.cos(alpha);\n        this.m23 = -Math.sin(alpha);\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = Math.sin(alpha);\n        this.m33 = Math.cos(alpha);\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setZRotationMatrix(alpha: number): void {\n        this.m11 = Math.cos(alpha);\n        this.m12 = -Math.sin(alpha);\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = Math.sin(alpha);\n        this.m22 = Math.cos(alpha);\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setScaleMatrix(sx: number, sy: number, sz: number): void {\n        this.m11 = sx;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = sy;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = sz;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setYRotationMatrix(alpha: number): void {\n        this.m11 = Math.cos(alpha);\n        this.m12 = 0.0;\n        this.m13 = Math.sin(alpha);\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = -Math.sin(alpha);\n        this.m32 = 0.0;\n        this.m33 = Math.cos(alpha);\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n\n    public setRotationMatrix(x: number,y: number,z: number, alpha: number): void {\n        const c = Math.cos(Math.PI * 2 *alpha / 360 );\n        const s = Math.sin(Math.PI * 2 *alpha / 360 );\n        const vector = new Vector3f(x,y,z);\n        vector.normalize2();\n\n        this.m11 = (1.0 - c) * vector.x * vector.x + c;\n        this.m12 = (1.0 - c) * vector.x * vector.y - s * vector.z;\n        this.m13 = (1.0 - c) * vector.x * vector.z + s * vector.y;\n        this.m14 = 0.0;\n\n        this.m21 = (1.0 - c) * vector.x * vector.y + s * vector.z;\n        this.m22 = (1.0 - c) * vector.y * vector.y + c;\n        this.m23 = (1.0 - c) * vector.y * vector.z - s * vector.x;\n        this.m24 = 0.0;\n\n        this.m31 = (1.0 - c) * vector.x * vector.z - s * vector.y;\n        this.m32 = (1.0 - c) * vector.y * vector.z + s * vector.x;\n        this.m33 = (1.0 - c) * vector.z * vector.z + c;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    static constructYRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = Math.cos(alpha);\n        matrix.m12 = 0.0;\n        matrix.m13 = Math.sin(alpha);\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = -Math.sin(alpha);\n        matrix.m32 = 0.0;\n        matrix.m33 = Math.cos(alpha);\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    static constructZRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = Math.cos(alpha);\n        matrix.m12 = -Math.sin(alpha);\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = Math.sin(alpha);\n        matrix.m22 = Math.cos(alpha);\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    static constructScaleMatrix(sx: number, sy: number = sx, sz: number = sy): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = sx;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = sy;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = sz;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public multiplyMatrix(matrix: Matrix4f): Matrix4f {\n        const result = new Matrix4f();\n\n        result.m11 = this.m11 * matrix.m11 + this.m12 * matrix.m21 + this.m13 * matrix.m31 + this.m14 * matrix.m41;\n        result.m21 = this.m21 * matrix.m11 + this.m22 * matrix.m21 + this.m23 * matrix.m31 + this.m24 * matrix.m41;\n        result.m31 = this.m31 * matrix.m11 + this.m32 * matrix.m21 + this.m33 * matrix.m31 + this.m34 * matrix.m41;\n        result.m41 = this.m41 * matrix.m11 + this.m42 * matrix.m21 + this.m43 * matrix.m31 + this.m44 * matrix.m41;\n\n        result.m12 = this.m11 * matrix.m12 + this.m12 * matrix.m22 + this.m13 * matrix.m32 + this.m14 * matrix.m42;\n        result.m22 = this.m21 * matrix.m12 + this.m22 * matrix.m22 + this.m23 * matrix.m32 + this.m24 * matrix.m42;\n        result.m32 = this.m31 * matrix.m12 + this.m32 * matrix.m22 + this.m33 * matrix.m32 + this.m34 * matrix.m42;\n        result.m42 = this.m41 * matrix.m12 + this.m42 * matrix.m22 + this.m43 * matrix.m32 + this.m44 * matrix.m42;\n\n        result.m13 = this.m11 * matrix.m13 + this.m12 * matrix.m23 + this.m13 * matrix.m33 + this.m14 * matrix.m43;\n        result.m23 = this.m21 * matrix.m13 + this.m22 * matrix.m23 + this.m23 * matrix.m33 + this.m24 * matrix.m43;\n        result.m33 = this.m31 * matrix.m13 + this.m32 * matrix.m23 + this.m33 * matrix.m33 + this.m34 * matrix.m43;\n        result.m43 = this.m41 * matrix.m13 + this.m42 * matrix.m23 + this.m43 * matrix.m33 + this.m44 * matrix.m43;\n\n        result.m14 = this.m11 * matrix.m14 + this.m12 * matrix.m24 + this.m13 * matrix.m34 + this.m14 * matrix.m44;\n        result.m24 = this.m21 * matrix.m14 + this.m22 * matrix.m24 + this.m23 * matrix.m34 + this.m24 * matrix.m44;\n        result.m34 = this.m31 * matrix.m14 + this.m32 * matrix.m24 + this.m33 * matrix.m34 + this.m34 * matrix.m44;\n        result.m44 = this.m41 * matrix.m14 + this.m42 * matrix.m24 + this.m43 * matrix.m34 + this.m44 * matrix.m44;\n\n        return result;\n    }\n\n    public multiply2(matrix: Matrix4f, matrix2: Matrix4f): void {\n        this.m11 = matrix.m11 * matrix2.m11 + matrix.m12 * matrix2.m21 + matrix.m13 * matrix2.m31 + matrix.m14 * matrix2.m41;\n        this.m21 = matrix.m21 * matrix2.m11 + matrix.m22 * matrix2.m21 + matrix.m23 * matrix2.m31 + matrix.m24 * matrix2.m41;\n        this.m31 = matrix.m31 * matrix2.m11 + matrix.m32 * matrix2.m21 + matrix.m33 * matrix2.m31 + matrix.m34 * matrix2.m41;\n        this.m41 = matrix.m41 * matrix2.m11 + matrix.m42 * matrix2.m21 + matrix.m43 * matrix2.m31 + matrix.m44 * matrix2.m41;\n\n        this.m12 = matrix.m11 * matrix2.m12 + matrix.m12 * matrix2.m22 + matrix.m13 * matrix2.m32 + matrix.m14 * matrix2.m42;\n        this.m22 = matrix.m21 * matrix2.m12 + matrix.m22 * matrix2.m22 + matrix.m23 * matrix2.m32 + matrix.m24 * matrix2.m42;\n        this.m32 = matrix.m31 * matrix2.m12 + matrix.m32 * matrix2.m22 + matrix.m33 * matrix2.m32 + matrix.m34 * matrix2.m42;\n        this.m42 = matrix.m41 * matrix2.m12 + matrix.m42 * matrix2.m22 + matrix.m43 * matrix2.m32 + matrix.m44 * matrix2.m42;\n\n        this.m13 = matrix.m11 * matrix2.m13 + matrix.m12 * matrix2.m23 + matrix.m13 * matrix2.m33 + matrix.m14 * matrix2.m43;\n        this.m23 = matrix.m21 * matrix2.m13 + matrix.m22 * matrix2.m23 + matrix.m23 * matrix2.m33 + matrix.m24 * matrix2.m43;\n        this.m33 = matrix.m31 * matrix2.m13 + matrix.m32 * matrix2.m23 + matrix.m33 * matrix2.m33 + matrix.m34 * matrix2.m43;\n        this.m43 = matrix.m41 * matrix2.m13 + matrix.m42 * matrix2.m23 + matrix.m43 * matrix2.m33 + matrix.m44 * matrix2.m43;\n\n        this.m14 = matrix.m11 * matrix2.m14 + matrix.m12 * matrix2.m24 + matrix.m13 * matrix2.m34 + matrix.m14 * matrix2.m44;\n        this.m24 = matrix.m21 * matrix2.m14 + matrix.m22 * matrix2.m24 + matrix.m23 * matrix2.m34 + matrix.m24 * matrix2.m44;\n        this.m34 = matrix.m31 * matrix2.m14 + matrix.m32 * matrix2.m24 + matrix.m33 * matrix2.m34 + matrix.m34 * matrix2.m44;\n        this.m44 = matrix.m41 * matrix2.m14 + matrix.m42 * matrix2.m24 + matrix.m43 * matrix2.m34 + matrix.m44 * matrix2.m44;\n    }\n\n    public multiply(vector: Vector3f): Vector3f {\n        return new Vector3f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34);\n    }\n\n    public multiplyHom(vector: Vector4f): Vector4f {\n        return new Vector4f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w,\n            this.m41 * vector.x + this.m42 * vector.y + this.m43 * vector.z + this.m44 * vector.w);\n    }\n\n    public multiplyHomArr(vector: Vector4f, result: Vector4f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w;\n    }\n\n    public multiplyHomArr2(vector: Vector4f, result: Vector4f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w;\n        result.w = this.m41 * vector.x + this.m42 * vector.y + this.m43 * vector.z + this.m44 * vector.w;\n        result.x /= result.w;\n        result.y /= result.w;\n        result.z /= result.w;\n    }\n\n    public multiplyArr(vector: Vector3f, result: Vector3f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34;\n    }\n\n}\n","import { Vector3f } from './Vector3f';\n\nexport class Matrix3f {\n\n    public m11: number;\n    public m12: number;\n    public m13: number;\n\n    public m21: number;\n    public m22: number;\n    public m23: number;\n\n    public m31: number;\n    public m32: number;\n    public m33: number;\n\n    static constructXRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = cos;\n        matrix.m23 = -sin;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = sin;\n        matrix.m33 = cos;\n\n        return matrix;\n    }\n\n    static constructYRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = Math.cos(angle);\n        matrix.m12 = 0.0;\n        matrix.m13 = Math.sin(angle);\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n\n        matrix.m31 = -Math.sin(angle);\n        matrix.m32 = 0.0;\n        matrix.m33 = Math.cos(angle);\n\n        return matrix;\n    }\n\n    static constructZRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = Math.cos(angle);\n        matrix.m12 = -Math.sin(angle);\n        matrix.m13 = 0.0;\n\n        matrix.m21 = Math.sin(angle);\n        matrix.m22 = Math.cos(angle);\n        matrix.m23 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n\n        return matrix;\n    }\n\n    static constructScaleMatrix(xScale: number, yScale: number, zScale: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = xScale;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = yScale;\n        matrix.m23 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = zScale;\n\n        return matrix;\n    }\n\n    public multiplyMatrix(matrix: Matrix3f): Matrix3f {\n        const result = new Matrix3f();\n\n        result.m11 = this.m11 * matrix.m11 + this.m12 * matrix.m21 + this.m13 * matrix.m31;\n        result.m21 = this.m21 * matrix.m11 + this.m22 * matrix.m21 + this.m23 * matrix.m31;\n        result.m31 = this.m31 * matrix.m11 + this.m32 * matrix.m21 + this.m33 * matrix.m31;\n\n        result.m12 = this.m11 * matrix.m12 + this.m12 * matrix.m22 + this.m13 * matrix.m32;\n        result.m22 = this.m21 * matrix.m12 + this.m22 * matrix.m22 + this.m23 * matrix.m32;\n        result.m32 = this.m31 * matrix.m12 + this.m32 * matrix.m22 + this.m33 * matrix.m32;\n\n        result.m13 = this.m11 * matrix.m13 + this.m12 * matrix.m23 + this.m13 * matrix.m33;\n        result.m23 = this.m21 * matrix.m13 + this.m22 * matrix.m23 + this.m23 * matrix.m33;\n        result.m33 = this.m31 * matrix.m13 + this.m32 * matrix.m23 + this.m33 * matrix.m33;\n\n        return result;\n\n    }\n\n    public multiply(vector: Vector3f): Vector3f {\n        return new Vector3f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z);\n    }\n}","export class Interpolator {\n\n    public static interpolate(start: number, end: number, current: number): number {\n        if (current <= start) {\n            return 0;\n        }\n        if (current >= end) {\n            return 1;\n        }\n        return (current - start) / (end - start);\n    }\n\n    public static cosineInterpolate(y1: number, y2: number, mu: number): number {\n        if (mu <= y1) { return 0; }\n        if (mu >= y2) { return 1; }\n        const mu2 = (mu - y1) / (y2 - y1);\n        return (1 - Math.cos(mu2 * Math.PI)) / 2;\n    }\n\n}\n","export default class RandomNumberGenerator {\n\n    private seed: number;\n\n    public constructor() {\n        this.seed = 6;\n    }\n\n    public getFloat(): number {\n        this.seed = (this.seed * 9301 + 49297) % 233280;\n        return this.seed / 233280;\n    }\n\n    public setSeed(seed: number): void {\n        this.seed = seed;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\n\nexport abstract class AbstractTriangleRasterizer {\n\n    public abstract drawTriangleDDA(framebuffer: Framebuffer, p1: Vertex, p2: Vertex, p3: Vertex): void;\n\n}\n","import { Framebuffer } from \"../Framebuffer\";\nimport { Vertex } from \"../Vertex\";\nimport { AbstractTriangleRasterizer } from \"./AbstractTriangleRasterizer\";\n\nexport abstract class AbstractScannlineTriangleRasterizer extends AbstractTriangleRasterizer {\n\n    private temp: Vertex = null;\n    \n    /**\n     * Triangle rasterization using edge-walking strategy for scan-conversion.\n     * Internally DDA is used for edge-walking.\n     */\n    public drawTriangleDDA(framebuffer: Framebuffer, p1: Vertex, p2: Vertex, p3: Vertex): void {\n\n        if (p1.projection.y > p3.projection.y) {\n            this.temp = p1;\n            p1 = p3;\n            p3 = this.temp;\n        }\n\n        if (p1.projection.y > p2.projection.y) {\n            this.temp = p1;\n            p1 = p2;\n            p2 = this.temp;\n        }\n\n        if (p2.projection.y > p3.projection.y) {\n            this.temp = p2;\n            p2 = p3;\n            p3 = this.temp;\n        }\n\n        if (p1.projection.y === p3.projection.y) {\n            return;\n        } else {\n            const x: number = (p3.projection.x - p1.projection.x) * (p2.projection.y - p1.projection.y) /\n                (p3.projection.y - p1.projection.y) + p1.projection.x;\n            if (x > p2.projection.x) {\n                this.fillLongRightTriangle(framebuffer, p1, p2, p3);\n            } else {\n                this.fillLongLeftTriangle(framebuffer,p1,p2,p3);\n            }\n        }\n    }\n\n    protected abstract fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void;\n    protected abstract fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void;\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class FlatShadingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n    private slope1: number;\n    private slope2: number;\n    private zslope1: number;\n    private zslope2: number;\n    private curz1: number;\n    private curz2: number;\n    private xPosition: number;\n    private xPosition2: number;\n    private yPosition: number;\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        const color: number = v1.color.toPackedFormat();\n\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n\n        this.slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        this.slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n\n        this.zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        this.zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n\n        this.curz1 = 1.0 / v1.projection.z;\n        this.curz2 = 1.0 / v1.projection.z;\n\n        this.xPosition = v1.projection.x;\n        this.xPosition2 = v1.projection.x;\n        this.yPosition = v1.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceLeft, color);\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n        this.slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        this.zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n\n        this.xPosition = v2.projection.x;\n        this.yPosition = v2.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceLeft, color);\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        const color: number = v1.color.toPackedFormat();\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        this.slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        this.slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        this.zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        this.zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        this.curz1 = 1.0 / v1.projection.z;\n        this.curz2 = 1.0 / v1.projection.z;\n\n        this.xPosition = v1.projection.x;\n        this.xPosition2 = v1.projection.x;\n        this.yPosition = v1.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceRight, color);\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        this.slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        this.zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        this.curz2 = 1.0 / v2.projection.z;\n        this.xPosition2 = v2.projection.x;\n        this.yPosition = v2.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceRight, color);\n    }\n\n    drawSpan(framebuffer: Framebuffer, distance: number, color: number) {\n        for (let i = 0; i < distance; i++) {\n            const length = (this.xPosition2) - (this.xPosition);\n            const spanzStep = Math.round(this.curz2 - this.curz1) / length;\n            let wStart = this.curz1;\n            for (let j = 0; j < length; j++) {\n                const framebufferIndex = Math.round(this.yPosition) * framebuffer.width + Math.round(this.xPosition + j);\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    framebuffer.framebuffer[framebufferIndex] = color;\n                }\n                wStart += spanzStep;\n            }\n            this.xPosition += this.slope1;\n            this.xPosition2 += this.slope2;\n            this.yPosition++;\n            this.curz1 += this.zslope1;\n            this.curz2 += this.zslope2;\n        }\n    }\n\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { Vector3f } from '../../math';\n\n/**\n * digital differential analyser line drawing algorithm\n * using fixed point math.\n * renders approx 1400 lines per millisecond on my machine\n */\nexport class LineRasterizerDda {\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public drawLineDDA(start: Vector3f, end: Vector3f, color: number): void {\n        const xDistance: number = end.x - start.x;\n        const yDistance: number = end.y - start.y;\n\n        let dx: number;\n        let dy: number;\n        let length: number;\n\n        if (Math.abs(xDistance) > Math.abs(yDistance)) {\n            dx = Math.sign(xDistance);\n            dy = yDistance / Math.abs(xDistance);\n            length = Math.abs(xDistance);\n        } else {\n            dx = xDistance / Math.abs(yDistance);\n            dy = Math.sign(yDistance);\n            length = Math.abs(yDistance);\n        }\n\n        let xPosition: number = start.x;\n        let yPosition: number = start.y;\n\n        // w=1/z interpolation for z-buffer\n        let wStart = 1 / (start.z);\n        const wDelta = (1 / end.z - 1 / start.z) / length;\n\n        for (let i = 0; i <= length; i++) {\n            if (wStart < this.framebuffer.wBuffer[Math.round(xPosition) + Math.round(yPosition) * this.framebuffer.width]) {\n                this.framebuffer.wBuffer[Math.round(xPosition) + Math.round(yPosition) * this.framebuffer.width] = wStart;\n                this.framebuffer.drawPixel(Math.round(xPosition), Math.round(yPosition), color);\n            }\n            xPosition += dx;\n            yPosition += dy;\n            wStart += wDelta;\n        }\n    }\n\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { Vector3f } from '../../math';\n\nexport class LineRasterizerNoZ {\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public drawLineDDANoZ(start: Vector3f, end: Vector3f, color: number): void {\n        const xDistance: number = end.x - start.x;\n        const yDistance: number = end.y - start.y;\n\n        let dx: number;\n        let dy: number;\n        let length: number;\n\n        if (Math.abs(xDistance) > Math.abs(yDistance)) {\n            dx = Math.sign(xDistance);\n            dy = yDistance / Math.abs(xDistance);\n            length = Math.abs(xDistance);\n        } else {\n            dx = xDistance / Math.abs(yDistance);\n            dy = Math.sign(yDistance);\n            length = Math.abs(yDistance);\n        }\n\n        let xPosition: number = start.x;\n        let yPosition: number = start.y;\n\n        for (let i = 0; i <= length; i++) {\n\n            this.framebuffer.drawPixel(Math.round(xPosition), Math.round(yPosition), color);\n\n            xPosition += dx;\n            yPosition += dy;\n\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class TexturedTriangleRasterizer extends AbstractScannlineTriangleRasterizer{\n\n    // requires\n    // bob und wbuffer\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        // left slope\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n        let slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        let tslope1u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope1v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        let zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        let curz1 = 1.0 / v1.projection.z;\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let xPosition = v1.projection.x;\n\n        // right slope\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n        const slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n        const tslope2u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n        const tslope2v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n        const zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        let curz2 = 1.0 / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n        let xPosition2 = v1.projection.x;\n\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   //color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n\n        if (yDistanceLeft === 0) {\n            return;\n        }\n\n        slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n        tslope1u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceLeft;\n        tslope1v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceLeft;\n\n        curz1 = 1.0 / v2.projection.z;\n        curu1 = v2.textureCoordinate.u / v2.projection.z;\n        curv1 = v2.textureCoordinate.v / v2.projection.z;\n        xPosition = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   //color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        let slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        const slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        const tslope1u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope2u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        const tslope1v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        let tslope2v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n\n\n        let zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        const zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   //color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        tslope2u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceRight;\n        tslope2v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceRight;\n\n        curz2 = 1.0 / v2.projection.z;\n\n        curu2 = v2.textureCoordinate.u / v2.projection.z;\n        curv2 = v2.textureCoordinate.v / v2.projection.z;\n\n        xPosition2 = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                  // color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { AbstractRenderingPipeline } from '../rendering-pipelines/AbstractRenderingPipeline';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class TexturedAlphaBlendingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n\n\n    // requires\n    // bob und wbuffer\n    constructor(private framebuffer: Framebuffer, private pipeline: AbstractRenderingPipeline) {\n        super();\n    }\n\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n\n\n\n\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n\n        let slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        const slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n\n        let tslope1u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        const tslope2u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        let tslope1v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        const tslope2v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n\n        let zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        const zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                const currentColor = this.framebuffer.framebuffer[framebufferIndex];\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n\n                    // TODO: move out of loops!\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (currentColor >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (currentColor >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (currentColor >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n\n        if (yDistanceLeft === 0) {\n            return;\n        }\n\n        slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n        tslope1u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceLeft;\n        tslope1v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceLeft;\n\n        curz1 = 1.0 / v2.projection.z;\n        curu1 = v2.textureCoordinate.u / v2.projection.z;\n        curv1 = v2.textureCoordinate.v / v2.projection.z;\n        xPosition = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer,  v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        let slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        const slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        const tslope1u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope2u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        const tslope1v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v  / v1.projection.z) / yDistanceLeft;\n        let tslope2v = (v2.textureCoordinate.v  / v2.projection.z - v1.textureCoordinate.v  / v1.projection.z) / yDistanceRight;\n\n\n        let zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        const zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        tslope2u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceRight;\n        tslope2v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceRight;\n\n        curz2 = 1.0 / v2.projection.z;\n\n        curu2 = v2.textureCoordinate.u / v2.projection.z;\n        curv2 = v2.textureCoordinate.v / v2.projection.z;\n\n        xPosition2 = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n}\n","export class TextureCoordinate {\n    public u: number;\n    public v: number;\n\n    constructor(u?: number, v?: number) {\n        this.u = u;\n        this.v = v;\n    }\n}\n","import { Color } from './core/Color';\nimport { Vector4f } from './math/index';\nimport { TextureCoordinate } from './TextureCoordinate';\n\nexport class Vertex {\n    public position: Vector4f;\n    public projection: Vector4f = new Vector4f(0,0,0);\n    public normal: Vector4f;\n    public color: Color;\n    public textureCoordinate: TextureCoordinate = new TextureCoordinate();\n}\n","import { CullFace } from '../CullFace';\nimport { Framebuffer } from '../Framebuffer';\n\nexport class AbstractRenderingPipeline {\n\n    public NEAR_PLANE_Z: number = -1.7;\n    public alpha: number;\n    private cullMode: CullFace = CullFace.BACK;\n\n    constructor(protected framebuffer: Framebuffer) { }\n\n    public setCullFace(face: CullFace): void {\n        this.cullMode = face;\n    }\n\n    public setAlpha(alpha: number): void {\n        this.alpha = Math.max(Math.min(alpha, 1.0), 0.0);\n    }\n\n    public isInFrontOfNearPlane(p: { x: number; y: number; z: number }): boolean {\n        return p.z < this.NEAR_PLANE_Z;\n    }\n\n    /**\n     * based on signed polygon area computation:\n     * http://www.faqs.org/faqs/graphics/algorithms-faq/\n     * https://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-points-are-in-clockwise-order\n     * http://csharphelper.com/blog/2014/07/calculate-the-area-of-a-polygon-in-c/\n     * http://mathworld.wolfram.com/PolygonArea.html\n     *\n     * @private\n     * @param {{ x: number, y: number, z: number }} v1\n     * @param {{ x: number, y: number, z: number }} v2\n     * @param {{ x: number, y: number, z: number }} v3\n     * @returns {boolean}\n     * @memberof Framebuffer\n     *\n     */\n    public isTriangleCCW(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number }): boolean {\n        if (this.cullMode == CullFace.DISABLED) {\n            return true;\n        }\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v1.y - v1.x * v3.y;\n        if (this.cullMode == CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n    public isTriangleCCW2(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number },\n        v4: { x: number, y: number, z: number }): boolean {\n            if (this.cullMode == CullFace.DISABLED) {\n                return true;\n            }\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v4.y - v4.x * v3.y +\n            v4.x * v1.y - v1.x * v4.y;\n        if (this.cullMode === CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Matrix4f } from '../math/Matrix4f';\nimport { Vector4f } from '../math/Vector4f';\nimport { AbstractTriangleRasterizer } from '../rasterizer/AbstractTriangleRasterizer';\nimport { TexturedAlphaBlendingTriangleRasterizer } from '../rasterizer/TexturedAlphaBlendingTriangleRasterizer';\nimport { TexturedTriangleRasterizer } from '../rasterizer/TexturedTriangleRasterizer';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractRenderingPipeline } from './AbstractRenderingPipeline';\nimport { TexturedMesh } from './TexturedMesh';\n\nexport class TexturingRenderingPipeline extends AbstractRenderingPipeline {\n\n    private sphereMapping: boolean = false;\n    public triangleRasterizer: AbstractTriangleRasterizer = null;\n\n    private vertexArray: Array<Vertex> = new Array<Vertex>(\n        new Vertex(), new Vertex(), new Vertex()\n    );\n    setSphereMapping(sphereMapping: boolean) {\n        this.sphereMapping = sphereMapping;\n    }\n\n    private modelViewMatrix: Matrix4f;\n\n    private projectedVertices: Array<Vector4f> = new Array<Vector4f>(\n        new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1)\n    );\n\n    constructor(framebuffer: Framebuffer) {\n        super(framebuffer);\n        this.setAlpha(1.0);\n        this.triangleRasterizer = new TexturedTriangleRasterizer(framebuffer);\n    }\n\n    public setFramebuffer(framebuffer: Framebuffer) {\n        this.framebuffer = framebuffer;\n    }\n\n    public enableAlphaBlending(): void {\n        this.triangleRasterizer = new TexturedAlphaBlendingTriangleRasterizer(this.framebuffer, this);\n    }\n\n    public disableAlphaBlending(): void {\n        this.triangleRasterizer = new TexturedTriangleRasterizer(this.framebuffer);\n    }\n\n    public setModelViewMatrix(matrix: Matrix4f): void {\n        this.modelViewMatrix = matrix;\n    }\n\n    public drawMeshArray(framebuffer: Framebuffer, meshes: Array<TexturedMesh>): void {\n        for (let j: number = 0; j < meshes.length; j++) {\n            const model: TexturedMesh = meshes[j];\n            this.draw(framebuffer, model);\n        }\n    }\n\n    public draw(framebuffer: Framebuffer, mesh: TexturedMesh): void {\n        if (mesh.normals) {\n            const normalMatrix: Matrix4f = this.modelViewMatrix.computeNormalMatrix();\n\n            for (let i: number = 0; i < mesh.normals.length; i++) {\n                normalMatrix.multiplyHomArr(mesh.normals[i], mesh.normals2[i]);\n            }\n        }\n\n        for (let i: number = 0; i < mesh.points.length; i++) {\n            this.modelViewMatrix.multiplyHomArr(mesh.points[i], mesh.points2[i]);\n        }\n\n        for (let i: number = 0; i < mesh.faces.length; i++) {\n            const v1: Vector4f = mesh.points2[mesh.faces[i].vertices[0]];\n            const v2: Vector4f = mesh.points2[mesh.faces[i].vertices[1]];\n            const v3: Vector4f = mesh.points2[mesh.faces[i].vertices[2]];\n\n            if (this.isInFrontOfNearPlane(v1) &&\n                this.isInFrontOfNearPlane(v2) &&\n                this.isInFrontOfNearPlane(v3)) {\n\n                this.project2(v1, this.projectedVertices[0]);\n                this.project2(v2, this.projectedVertices[1]);\n                this.project2(v3, this.projectedVertices[2]);\n\n                if (this.isTriangleCCW(\n                    this.projectedVertices[0],\n                    this.projectedVertices[1],\n                    this.projectedVertices[2])) {\n\n                    this.vertexArray[0].projection = this.projectedVertices[0]; // p1 is Vector3f\n                    this.vertexArray[1].projection = this.projectedVertices[1];\n                    this.vertexArray[2].projection = this.projectedVertices[2];\n\n                    if (this.sphereMapping) {\n                        const n1: Vector4f = mesh.normals2[mesh.faces[i].normals[0]];\n                        const n2: Vector4f = mesh.normals2[mesh.faces[i].normals[1]];\n                        const n3: Vector4f = mesh.normals2[mesh.faces[i].normals[2]];\n                        framebuffer.fakeSphere(n1, this.vertexArray[0]);\n                        framebuffer.fakeSphere(n2, this.vertexArray[1]);\n                        framebuffer.fakeSphere(n3, this.vertexArray[2]);\n                    } else {\n                        this.vertexArray[0].textureCoordinate = mesh.uv[mesh.faces[i].uv[0]];\n                        this.vertexArray[1].textureCoordinate = mesh.uv[mesh.faces[i].uv[1]];\n                        this.vertexArray[2].textureCoordinate = mesh.uv[mesh.faces[i].uv[2]];\n                    }\n\n                    this.clipConvexPolygon(framebuffer, this.vertexArray);\n                }\n            } else if (!this.isInFrontOfNearPlane(v1) &&\n                !this.isInFrontOfNearPlane(v2) &&\n                !this.isInFrontOfNearPlane(v3)) {\n                continue;\n            } else {\n                this.vertexArray[0].position = v1; // v1 is Vector4f\n                this.vertexArray[0].textureCoordinate = mesh.uv[mesh.faces[i].uv[0]];\n\n                this.vertexArray[1].position = v2;\n                this.vertexArray[1].textureCoordinate = mesh.uv[mesh.faces[i].uv[1]];\n\n                this.vertexArray[2].position = v3;\n                this.vertexArray[2].textureCoordinate = mesh.uv[mesh.faces[i].uv[2]];\n\n                this.zClipTriangle(framebuffer, this.vertexArray);\n            }\n        }\n    }\n\n    public project2(t1: { x: number, y: number, z: number }, result: Vector4f): void {\n        result.x = Math.round((this.framebuffer.width / 2) + (292 * t1.x / (-t1.z)));\n        result.y = Math.round((this.framebuffer.height / 2) - (t1.y * 292 / (-t1.z)));\n        result.z = t1.z;\n    }\n\n    public computeNearPlaneIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const ratio: number = (this.NEAR_PLANE_Z - p1.position.z) / (p2.position.z - p1.position.z);\n        const vertex: Vertex = new Vertex();\n\n        vertex.position = new Vector4f(\n            ratio * (p2.position.x - p1.position.x) + p1.position.x,\n            ratio * (p2.position.y - p1.position.y) + p1.position.y,\n            this.NEAR_PLANE_Z\n        );\n\n        vertex.textureCoordinate = new TextureCoordinate(\n            ratio * (p2.textureCoordinate.u - p1.textureCoordinate.u) + p1.textureCoordinate.u,\n            ratio * (p2.textureCoordinate.v - p1.textureCoordinate.v) + p1.textureCoordinate.v\n        );\n\n        return vertex;\n    }\n\n    public zClipTriangle(framebuffer: Framebuffer, subject: Array<Vertex>): void {\n        const input: Array<Vertex> = subject;\n        const output: Array<Vertex> = new Array<Vertex>();\n        let S: Vertex = input[input.length - 1];\n\n        for (let i: number = 0; i < input.length; i++) {\n            const point: Vertex = input[i];\n            if (this.isInFrontOfNearPlane(point.position)) {\n                if (!this.isInFrontOfNearPlane(S.position)) {\n                    output.push(this.computeNearPlaneIntersection(S, point));\n                }\n                output.push(point);\n            } else if (this.isInFrontOfNearPlane(S.position)) {\n                output.push(this.computeNearPlaneIntersection(S, point));\n            }\n            S = point;\n        }\n\n        if (output.length < 3) {\n            return;\n        }\n\n        for (let j: number = 0; j < output.length; j++) {\n            this.project2(output[j].position, output[j].projection);\n        }\n\n        if (output.length === 3 &&\n            !this.isTriangleCCW(output[0].projection, output[1].projection, output[2].projection)) {\n            return;\n        }\n\n        if (output.length === 4 &&\n            !this.isTriangleCCW2(\n                output[0].projection,\n                output[1].projection,\n                output[2].projection,\n                output[3].projection\n            )) {\n            return;\n        }\n\n        this.clipConvexPolygon(framebuffer, output);\n    }\n\n\n    public clipConvexPolygon(framebuffer: Framebuffer, subject: Array<Vertex>): void {\n\n        let output = subject;\n\n        for (let j = 0; j < framebuffer.clipRegion.length; j++) {\n            const edge = framebuffer.clipRegion[j];\n            const input = output;\n            output = new Array<Vertex>();\n            let S = input[input.length - 1];\n\n            for (let i = 0; i < input.length; i++) {\n                const point = input[i];\n                if (edge.isInside2(point)) {\n                    if (!edge.isInside2(S)) {\n                        output.push(edge.computeIntersection2(S, point));\n                    }\n                    output.push(point);\n                } else if (edge.isInside2(S)) {\n                    output.push(edge.computeIntersection2(S, point));\n                }\n                S = point;\n            }\n        }\n\n        if (output.length < 3) {\n            return;\n        }\n\n        // triangulate new point set\n        for (let i = 0; i < output.length - 2; i++) {\n            this.triangleRasterizer.drawTriangleDDA(framebuffer, output[0], output[1 + i], output[2 + i]);\n        }\n    }\n\n}\n","import { Vertex } from '../Vertex';\n\n// TODO:\n// - use polymorphism in order to have different intersection methods\n// - one for plain clipping / one for tex coords / one for multitexturing / gouraud shading etc\nexport abstract class AbstractClipEdge {\n\n    public abstract isInside(p: Vertex): boolean;\n    public abstract isInside2(p: Vertex): boolean;\n    public abstract computeIntersection(p1: Vertex, p2: Vertex): Vertex;\n    public abstract computeIntersection2(p1: Vertex, p2: Vertex): Vertex;\n    public abstract computeIntersection3(p1: Vertex, p2: Vertex): Vertex;\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\n\nexport class BottomClipEdge extends AbstractClipEdge {\n\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.y >= this.framebuffer.minWindow.y;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.y >= this.framebuffer.minWindow.y;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        // since this is for flat shading no interpolation is required\n        const factor: number = (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(\n            Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * factor),\n            this.framebuffer.minWindow.y,\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.minWindow.y,\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)));\n\n        const textCoord: TextureCoordinate = new TextureCoordinate();\n        const z: number = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n    public computeIntersection3(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.minWindow.y,\n                0);\n\n        const textCoord: TextureCoordinate = new TextureCoordinate();\n\n        textCoord.u = (p1.textureCoordinate.u  + (p2.textureCoordinate.u  - p1.textureCoordinate.u ) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y));\n        textCoord.v = (p1.textureCoordinate.v  + (p2.textureCoordinate.v  - p1.textureCoordinate.v ) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y));\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector3f } from '../math/Vector3f';\n\nexport class CohenSutherlandLineClipper {\n\n    public static REGION_CODE_CENTER = 0b0000;\n    public static REGION_CODE_LEFT = 0b0001;\n    public static REGION_CODE_RIGHT = 0b0010;\n    public static REGION_CODE_BOTTOM = 0b0100;\n    public static REGION_CODE_TOP = 0b1000;\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public cohenSutherlandLineClipper(start: Vector3f, end: Vector3f, col: number) {\n        let p1: Vector3f = new Vector3f(start.x, start.y, start.z);\n        let p2: Vector3f = new Vector3f(end.x, end.y, end.z);\n\n        let code1: number = this.computeRegionCode(p1);\n        let code2: number = this.computeRegionCode(p2);\n\n        let accept: boolean = false;\n        let done: boolean = false;\n\n        while (!done) {\n\n            if (this.isTrivialAccept(code1, code2)) {\n                accept = true;\n                done = true;\n            } else if (this.isTrivialReject(code1, code2)) {\n                done = true;\n            } else {\n\n                if (code1 === CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    const tempCode: number = code1;\n                    code1 = code2;\n                    code2 = tempCode;\n\n                    const tempPoint: Vector3f = p1;\n                    p1 = p2;\n                    p2 = tempPoint;\n                }\n\n                if ((code1 & CohenSutherlandLineClipper.REGION_CODE_TOP) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.x = (p1.x + (p2.x - p1.x) * (this.framebuffer.maxWindow.y - p1.y) / (p2.y - p1.y));\n                    p1.y = this.framebuffer.maxWindow.y;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_BOTTOM) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.x = (p1.x + (p2.x - p1.x) * (this.framebuffer.minWindow.y - p1.y) / (p2.y - p1.y));\n                    p1.y = this.framebuffer.minWindow.y;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_RIGHT) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.y = (p1.y + (p2.y - p1.y) * (this.framebuffer.maxWindow.x - p1.x) / (p2.x - p1.x));\n                    p1.x = this.framebuffer.maxWindow.x;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_LEFT) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.y = (p1.y + (p2.y - p1.y) * (this.framebuffer.minWindow.x - p1.x) / (p2.x - p1.x));\n                    p1.x = this.framebuffer.minWindow.x;\n                }\n\n                code1 = this.computeRegionCode(p1);\n            }\n        }\n\n        if (accept) {\n            this.framebuffer.drawLineDDA(p1, p2, col);\n        }\n    }\n\n    public isTrivialAccept(code1: number, code2: number): boolean {\n        return (code1 | code2) === CohenSutherlandLineClipper.REGION_CODE_CENTER;\n    }\n\n    public isTrivialReject(code1: number, code2: number): boolean {\n        return (code1 & code2) !== CohenSutherlandLineClipper.REGION_CODE_CENTER;\n    }\n\n    public computeRegionCode(point: Vector3f): number {\n        let regionCode: number = CohenSutherlandLineClipper.REGION_CODE_CENTER;\n\n        if (point.x < this.framebuffer.minWindow.x) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_LEFT;\n        } else if (point.x > this.framebuffer.maxWindow.x) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_RIGHT;\n        }\n\n        if (point.y < this.framebuffer.minWindow.y) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_BOTTOM;\n        } else if (point.y > this.framebuffer.maxWindow.y) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_TOP;\n        }\n\n        return regionCode;\n    }\n\n}\n","import { AbstractClipEdge } from './AbstractClipEdge';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math/Vector4f';\n\nexport class LeftClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.x >= 0;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.x >= 0;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(this.framebuffer.minWindow.x,\n            Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * factor),\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.minWindow.x,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n    public computeIntersection3(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.minWindow.x,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n               0);\n\n        const textCoord = new TextureCoordinate();\n\n        textCoord.u = (p1.textureCoordinate.u  + (p2.textureCoordinate.u - p1.textureCoordinate.u) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) ;\n        textCoord.v = (p1.textureCoordinate.v  + (p2.textureCoordinate.v  - p1.textureCoordinate.v) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) ;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\nimport { Vector4f } from '../math/Vector4f';\n\nexport class RightClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.x < this.framebuffer.width;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.x < this.framebuffer.width;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(this.framebuffer.maxWindow.x + 1,\n            Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * factor),\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.maxWindow.x + 1,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n    // no 3d clipping\n    public computeIntersection3(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.maxWindow.x + 1,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                0);\n\n        const textCoord = new TextureCoordinate();\n        textCoord.u = (p1.textureCoordinate.u + (p2.textureCoordinate.u - p1.textureCoordinate.u) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x));\n        textCoord.v = (p1.textureCoordinate.v + (p2.textureCoordinate.v - p1.textureCoordinate.v) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x));\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\n\nexport class TopClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.y < this.framebuffer.maxWindow.y + 1;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.y < this.framebuffer.maxWindow.y + 1;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y);\n        // this interpolation is not perspective correct but linear!!\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(\n            Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * factor),\n            this.framebuffer.maxWindow.y + 1,\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.maxWindow.y + 1,\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n    public computeIntersection3(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.maxWindow.y + 1,\n                0);\n\n        const textCoord = new TextureCoordinate();\n        textCoord.u = (p1.textureCoordinate.u  + (p2.textureCoordinate.u  - p1.textureCoordinate.u ) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) ;\n        textCoord.v = (p1.textureCoordinate.v  + (p2.textureCoordinate.v  - p1.textureCoordinate.v ) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y));\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n\n}\n","export class Texture {\n\n\n    public texture: Uint32Array;\n    public width: number;\n    public height: number;\n    public maxWidth: number;\n    public maxHeight: number;\n    private clamp: boolean = false;\n\n    setClamp(clamp: boolean) {\n        this.clamp = clamp;\n    }\n    constructor(texture?: Uint32Array, width?: number, height?: number) {\n        this.texture = texture;\n        this.width = width;\n        this.height = height;\n        this.maxHeight = (height-1) |0;\n        this.maxWidth = (width-1)|0;\n    }\n\n    public getPixel(texture: Texture, x: number, y: number): number {\n        return texture.texture[(x & 0xff) + (y & 0xff) * 256];\n    }\n\n    public getBilinearFilteredPixel(x: number, y: number): number {\n        const x0 = (((x | 0) % 256) + 256) % 256;\n        const x1 = ((((x + 1) | 0) % 256) + 256) % 256;\n        const y0 = (((y | 0) % 256) + 256) % 256;\n        const y1 = ((((y + 1) | 0) % 256) + 256) % 256;\n\n        const x0y0 = this.getPixel(this, x0, y0) & 0xff;\n        const x1y0 = this.getPixel(this, x1, y0) & 0xff;\n        const x0y1 = this.getPixel(this, x0, y1) & 0xff;\n        const x1y1 = this.getPixel(this, x1, y1) & 0xff;\n\n        const col1 = x0y0 * (1 - (x - Math.floor(x))) + (x1y0 * ((x - Math.floor(x))));\n        const col2 = x0y1 * (1 - (x - Math.floor(x))) + (x1y1 * ((x - Math.floor(x))));\n        const col = col1 * (1 - (y - Math.floor(y))) + (col2 * ((y - Math.floor(y))));\n\n        return col;\n    }\n\n    public getBilinearFilteredPixel2(x: number, y: number) {\n\n        let x0;\n        let  x1 ;\n        let  y0;\n        let y1 ;\n\n        if (this.clamp) {\n            x = Math.max(Math.min(x, this.width - 1), 0);\n            y = Math.max(Math.min(y, this.height - 1), 0);\n\n            //x= ((x%this.width)+ this.width) % this.width;\n            //y= ((y%this.height)+ this.height) % this.height;\n\n\n            x0 = Math.floor(x);\n            x1 =  Math.max(Math.min(x0+1, this.width - 1), 0);\n              y0 = Math.floor(y);\n             y1 =Math.max(Math.min(y0+1, this.height - 1), 0);\n        } else {\n            x= ((x%this.width)+ this.width) % this.width;\n            y= ((y%this.height)+ this.height) % this.height;\n\n\n        x0 = x | 0;\n        x1 = (x+ 1 | 0)%this.width ;\n          y0 = y | 0;\n         y1 = (y+ 1 | 0)%this.height ;\n        }\n\n\n\n        const x0y0 = this.getPixel2(this, x0, y0);\n        const x1y0 = this.getPixel2(this, x1, y0);\n        const x0y1 = this.getPixel2(this, x0, y1);\n        const x1y1 = this.getPixel2(this, x1, y1);\n\n        return this.interpolateComp(x, y, x0y0, x1y0 , x0y1, x1y1 );\n    }\n\n    public getPixel2(texture: Texture, x: number, y: number): number {\n        return this.texture[x + y * this.width];\n    }\n\n    /**\n     * highly optimized version only for power of 2 textures\n     */\n    public getBilinearFilteredPixelRasterizer(x: number, y: number) {\n        let x0 = x | 0;\n        let x1 = (x | 0) + 1;\n        let y0 = y | 0;\n        let y1 = (y | 0) + 1;\n\n        let x0y0: number;\n        let x1y0: number;\n        let x0y1: number;\n        let x1y1: number;\n\n        if (this.clamp) {\n             x0 = Math.max(Math.min(x0, this.width - 1), 0);\n             x1 = Math.max(Math.min(x1, this.width - 1), 0);\n             y0 = Math.max(Math.min(y0, this.height - 1), 0);\n             y1 = Math.max(Math.min(y1, this.height - 1), 0);\n\n             x0y0 = this.getPixel2(this, x0, y0);\n             x1y0 = this.getPixel2(this, x1, y0);\n             x0y1 = this.getPixel2(this, x0, y1);\n             x1y1 = this.getPixel2(this, x1, y1);\n        } else {\n            x0y0 = this.getPixelRasterizer(this, x0, y0);\n            x1y0 = this.getPixelRasterizer(this, x1, y0);\n            x0y1 = this.getPixelRasterizer(this, x0, y1);\n            x1y1 = this.getPixelRasterizer(this, x1, y1);\n        }\n        return this.interpolateComp(x, y, x0y0, x1y0, x0y1, x1y1);\n    }\n\n    public getPixelRasterizer(texture: Texture, x: number, y: number): number {\n        return this.texture[(x & (this.width-1)) + (y&(this.height-1)) * this.width];\n    }\n\n    public getPixel3(texture: Texture, x: number, y: number): number {\n        return this.texture[\n            (((x % this.width) + this.width) % this.width) +\n            (((y % this.height) + this.height) % this.height) * this.width];\n    }\n\n    private interpolateComp(x, y, x0y0, x1y0, x0y1, x1y1): number {\n        // reuse these values for all color components\n        const xFrac = x - (x | 0);\n        const yFrac = y - (y | 0);\n        const oneMinusXfrac = 1 - xFrac;\n        const oneMinusYfrac = 1 - yFrac;\n\n        const x0y0_r = x0y0 & 0xff;\n        const x1y0_r = x1y0 & 0xff;\n        const x0y1_r = x0y1 & 0xff;\n        const x1y1_r = x1y1 & 0xff;\n\n        const col1_r = x0y0_r * oneMinusXfrac + x1y0_r * xFrac;\n        const col2_r = x0y1_r * oneMinusXfrac + x1y1_r * xFrac;\n        const col_r = col1_r * oneMinusYfrac + (col2_r * yFrac);\n\n        const x0y0_g = x0y0 >> 8 & 0xff;\n        const x1y0_g = x1y0 >> 8 & 0xff;\n        const x0y1_g = x0y1 >> 8 & 0xff;\n        const x1y1_g = x1y1 >> 8 & 0xff;\n\n        const col1_g = x0y0_g * oneMinusXfrac + x1y0_g * xFrac;\n        const col2_g = x0y1_g * oneMinusXfrac + x1y1_g * xFrac;\n        const col_g = col1_g * oneMinusYfrac + (col2_g * yFrac);\n\n        const x0y0_b = x0y0 >> 16 & 0xff;\n        const x1y0_b = x1y0 >> 16 & 0xff;\n        const x0y1_b = x0y1 >> 16 & 0xff;\n        const x1y1_b = x1y1 >> 16 & 0xff;\n\n        const col1_b = x0y0_b * oneMinusXfrac + x1y0_b * xFrac;\n        const col2_b = x0y1_b * oneMinusXfrac + x1y1_b * xFrac;\n        const col_b = col1_b * oneMinusYfrac + (col2_b * yFrac);\n\n        const x0y0_a = x0y0 >> 24 & 0xff;\n        const x1y0_a = x1y0 >> 24 & 0xff;\n        const x0y1_a = x0y1 >> 24 & 0xff;\n        const x1y1_a = x1y1 >> 24 & 0xff;\n\n        const col1_a = x0y0_a * oneMinusXfrac + x1y0_a * xFrac;\n        const col2_a = x0y1_a * oneMinusXfrac + x1y1_a * xFrac;\n        const col_a = col1_a * oneMinusYfrac + (col2_a * yFrac);\n\n        return col_r | col_g << 8 | col_b << 16 | col_a << 24;\n    }\n\n}\n","\nimport { ScaleClipBlitter } from './blitter/ScaleClipBlitter';\nimport { ControllableCamera } from './camera';\nimport { Color } from './core/Color';\nimport { CullFace } from './CullFace';\nimport { Torus } from './geometrical-objects/Torus';\nimport { Matrix3f, Matrix4f, Vector2f, Vector3f, Vector4f } from './math';\nimport { Interpolator } from './math/Interpolator';\nimport { Sphere } from './math/Sphere';\nimport RandomNumberGenerator from './RandomNumberGenerator';\nimport { FlatShadingTriangleRasterizer } from './rasterizer/FlatShadingTriangleRasterizer';\nimport { LineRasterizerDda } from './rasterizer/line/LineRasterizer';\nimport { LineRasterizerNoZ } from './rasterizer/line/LineRasterizerNoZ';\nimport { TexturedAlphaBlendingTriangleRasterizer } from './rasterizer/TexturedAlphaBlendingTriangleRasterizer';\nimport { TexturedTriangleRasterizer } from './rasterizer/TexturedTriangleRasterizer';\nimport { TexturingRenderingPipeline } from './rendering-pipelines/TexturingRenderingPipeline';\nimport { AbstractClipEdge } from './screen-space-clipping/AbstractClipEdge';\nimport { BottomClipEdge } from './screen-space-clipping/BottomClipEdge';\nimport { CohenSutherlandLineClipper } from './screen-space-clipping/CohenSutherlandLineClipper';\nimport { LeftClipEdge } from './screen-space-clipping/LeftClipEdge';\nimport { RightClipEdge } from './screen-space-clipping/RightClipEdge';\nimport { TopClipEdge } from './screen-space-clipping/TopClipEdge';\nimport { Texture } from './texture/Texture';\nimport { TextureCoordinate } from './TextureCoordinate';\nimport { Vertex } from './Vertex';\n\n/*\nimport { FlatShadingRenderingPipeline } from './rendering-pipelines/FlatShadingRenderingPipeline';\nimport { TexturingRenderingPipeline } from './rendering-pipelines/TexturingRenderingPipeline';\nimport { BlenderJsonParser } from './blender/BlenderJsonParser';\nimport { Material } from './shading/material/Material';\nimport { PointLight } from './shading/light/PointLight';\n*/\n\n\n// let labJson2 = <any>require('@assets/lab2.json');\n// let bakedJson = <any>require('@assets/abstract.json');\n\nexport class Framebuffer {\n\n    public static PIXEL_SIZE_IN_BYTES = 4;\n\n    public minWindow: Vector2f;\n    public maxWindow: Vector2f;\n\n\n    public framebuffer: Uint32Array;\n    public wBuffer: Float32Array;\n\n    public cullMode: CullFace = CullFace.BACK;\n\n    public camera: ControllableCamera;\n    public bob: Texture;\n    public triangleRasterizer = new FlatShadingTriangleRasterizer(this);\n    public texturedTriangleRasterizer = new TexturedTriangleRasterizer(this);\n   \n    public scaleClipBlitter = new ScaleClipBlitter(this);\n    // public renderingPipeline: FlatShadingRenderingPipeline;\n     public texturedRenderingPipeline: TexturingRenderingPipeline;\n    public lineRasterizer = new LineRasterizerDda(this);\n    public lineRasterizerNo = new LineRasterizerNoZ(this);\n    public tmpGlitch: Uint32Array;\n\n    public lensFlareVisible: boolean = false;\n    public lensFlareStart = 0;\n    public lensFlareEnd = 0;\n\n    public width: number;\n    public height: number;\n    private imageData: ImageData;\n    private unsignedIntArray: Uint8ClampedArray;\n\n    private torus = new Torus();\n\n    private plane: {\n        points: Vector4f[];\n        points2: Vector4f[];\n        normals: Vector4f[];\n        normals2: Vector4f[];\n        index:Array<number>;\n    };\n\n    private cylinder2: {\n        points: Vector4f[];\n        points2: Vector4f[];\n        normals: Vector4f[];\n        normals2: Vector4f[];\n        index:Array<number>;\n    };\n\n    private linerClipper = new CohenSutherlandLineClipper(this);\n    public clipRegion = Array<AbstractClipEdge>();\n    private texture = new Texture();\n\n    constructor(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n\n        this.imageData = new ImageData(width, height);\n        this.wBuffer = new Float32Array(width * height);\n        const arrayBuffer = new ArrayBuffer(this.width * this.height * Framebuffer.PIXEL_SIZE_IN_BYTES);\n        this.unsignedIntArray = new Uint8ClampedArray(arrayBuffer);\n        this.framebuffer = new Uint32Array(arrayBuffer);\n        this.tmpGlitch = new Uint32Array(width * height);\n        // this.renderingPipeline = new FlatShadingRenderingPipeline(this);\n     this.texturedRenderingPipeline = new TexturingRenderingPipeline(this);\n        this.minWindow = new Vector2f(0, 0);\n        this.maxWindow = new Vector2f(width - 1, height - 1);\n\n        this.clipRegion = new Array<AbstractClipEdge>(\n            new RightClipEdge(this),\n            new LeftClipEdge(this),\n            new BottomClipEdge(this),\n            new TopClipEdge(this)\n        );\n    }\n\n    public setCullFace(face: CullFace): void {\n        this.cullMode = face;\n    }\n\n    public setTexture(texture: Texture): void {\n        this.bob = texture;\n    }\n\n    /*\n    public precompute(texture: Texture): void {\n        // this.blengetBlenderScene(hoodlumJson, false);\n\n         //this.cylinder = this.createCylinder();\n\n        // this.sphereDisp = this.createSphereDistplaced(texture);\n    }\n    */\n\n    public getImageData(): ImageData {\n        this.imageData.data.set(this.unsignedIntArray);\n        return this.imageData;\n    }\n\n    public clear() {\n        const color: number = Color.BLACK.toPackedFormat();\n        const count: number = this.width * this.height;\n        for (let i = 0; i < count; i++) {\n            this.framebuffer[i] = color;\n        }\n    }\n\n    public clearColorBuffer(color: number) {\n        this.framebuffer.fill(color);\n    }\n\n    public drawPixel(x: number, y: number, color: number) {\n        this.framebuffer[x + y * this.width] = color;\n\n    }\n    public drawPixel4(x: number, y: number, color: number, alpha: number) {\n        const index: number = x + y * this.width;\n        const inverseAlpha = 1 - alpha;\n        const r = (((this.framebuffer[index] >> 0) & 0xff) * (inverseAlpha)\n            + ((color >> 0) & 0xff) * (alpha)) | 0;\n        const g = (((this.framebuffer[index] >> 8) & 0xff) * (inverseAlpha) +\n            ((color >> 8) & 0xff) * (alpha)) | 0;\n        const b = (((this.framebuffer[index] >> 16) & 0xff) * (inverseAlpha) +\n            ((color >> 16) & 0xff) * (alpha)) | 0;\n        this.framebuffer[x + y * this.width] = r | (g << 8) | (b << 16) | (255 << 24);\n\n    }\n\n    public drawPixel3(x: number, y: number, color: number, alpha2: number) {\n\n        const index: number = x + y * this.width;\n        const alpha = ((color >> 24) & 0xff) / 255 * alpha2;\n        const inverseAlpha = 1 - alpha;\n\n        const r = (((this.framebuffer[index] >> 0) & 0xff) * (inverseAlpha)\n            + ((color >> 0) & 0xff) * (alpha)) | 0;\n        const g = (((this.framebuffer[index] >> 8) & 0xff) * (inverseAlpha) +\n            ((color >> 8) & 0xff) * (alpha)) | 0;\n        const b = (((this.framebuffer[index] >> 16) & 0xff) * (inverseAlpha) +\n            ((color >> 16) & 0xff) * (alpha)) | 0;\n\n        this.framebuffer[index] = r | (g << 8) | (b << 16) | (255 << 24);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * blended with the framebuffer background\n     *\n     * @param  {x} number                 this can be a float\n     * @param  {y} number                 this can be a float\n     * @param  {color} number             color to blend into framebuffer\n     */\n    drawPixelAntiAliased(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        const roundedX = Math.floor(x);\n        const roundedY = Math.floor(y);\n        const percentX = 1 - Math.abs(x - roundedX);\n        const percentY = 1 - Math.abs(y - roundedY);\n        const percent = percentX * percentY;\n        this.drawPixel3(roundedX, roundedY, color, percent);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * to the framebuffer background\n     */\n    drawPixelAliased(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        const roundedX = Math.round(x);\n        const roundedY = Math.round(y)\n        this.drawPixel(roundedX, roundedY, color);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * blended with the framebuffer background in a 4x4 matrix\n     * https://en.wikipedia.org/wiki/Spatial_anti-aliasing\n     */\n    drawPixelAntiAliasedSpacial(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        for (let roundedX = Math.floor(x); roundedX <= Math.ceil(x); roundedX++) {\n            for (let roundedY = Math.floor(y); roundedY <= Math.ceil(y); roundedY++) {\n                const percentX = 1 - Math.abs(x - roundedX);\n                const percentY = 1 - Math.abs(y - roundedY);\n                const percent = percentX * percentY;\n                this.drawPixel4(roundedX, roundedY, color, percent);\n            }\n        }\n    }\n\n    public readPixel(x: number, y: number): number {\n        return this.framebuffer[x + y * this.width];\n    }\n\n    public drawRect(x, y, width, color) {\n        let start = x + y * this.width;\n\n        for (let i = 0; i < width; i++) {\n            this.framebuffer[start++] = color;\n        }\n    }\n\n    public drawRect2(x: number, y: number, width: number, height: number, color: number) {\n        let start = x + y * this.width;\n        for (let j = 0; j < height; j++) {\n            for (let i = 0; i < width; i++) {\n\n                this.framebuffer[start++] = color;\n\n            }\n            start += this.width - width;\n        }\n    }\n\n    public drawText(x: number, y: number, text: string, texture: Texture): void {\n        let xpos = x;\n        const firstIndex = ' '.charCodeAt(0);\n        for (let i = 0; i < text.length; i++) {\n            const index = text.charCodeAt(i) - firstIndex;\n            const tx = Math.floor(index % 32) * 8;\n            const ty = Math.floor(index / 32) * 8;\n            this.drawTextureRectFastAlpha(xpos, y, tx, ty, 8, 8, texture);\n            xpos += 8;\n        }\n    }\n\n    public addReflections() {\n        const start = 150;\n        for (let i = 0; i < 50; i++) {\n            for (let x = 0; x < this.width; x++) {\n                this.framebuffer[(start + i) * this.width + x] = this.framebuffer[(start - i * 3 - 1) * this.width + x +\n                    Interpolator.interpolate(0, 50, i) * (Math.sin(Date.now() * 0.002 + i * 0.2) * 14) | 0];\n            }\n        }\n    }\n\n    public drawTextureRect2(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture, alpha2: number): void {\n        for (let w = 0; w < width; w++) {\n            for (let h = 0; h < height; h++) {\n                const texIndex = (xt + w) + ((yt + h) * texture.width);\n                const frIndex = (xs + w) + ((ys + h) * this.width);\n                const alpha = ((texture.texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (((this.framebuffer[frIndex] >> 0) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 0) & 0xff) * (alpha)) | 0;\n                const g = (((this.framebuffer[frIndex] >> 8) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 8) & 0xff) * (alpha)) | 0;\n                const b = (((this.framebuffer[frIndex] >> 16) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 16) & 0xff) * (alpha)) | 0;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n            }\n        }\n    }\n\n    public drawTextureRectFastAlpha(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const color = texture.texture[texIndex];\n                if (color & 0xff000000) {\n                    this.framebuffer[frIndex] = color;\n                }\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n\n    public drawTextureColorized(x: number, y: number, texture: Texture, color: Color): void {\n\n        let frIndex = x + y * this.width;\n        let texIndex = 0;\n\n        for (let h = 0; h < texture.height; h++) {\n            for (let w = 0; w < texture.width; w++) {\n                const txPixel = texture.texture[texIndex];\n\n\n                const r = (txPixel >> 0 & 0xff) * color.r / 255;\n                const g = (txPixel >> 8 & 0xff) * color.g / 255;\n                const b = (txPixel >> 16 & 0xff) * color.b / 255;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                texIndex++;\n                frIndex++;\n            }\n\n            frIndex += this.width - texture.width;\n        }\n    }\n\n    public drawTextureRectNoAlpha(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                this.framebuffer[frIndex] = texture.texture[texIndex];\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    /**\n     * Transitions from one pixel to another using alpha\n     *\n     * @param  {number} c1\n     * @param  {number} c2\n     * @param  {number} alpha number ranging from 0-255\n     * @return {number}     color blended difference between c1 and c2\n     */\n    public static blend(c1: number, c2: number, nAlpha: number): number {\n\n        if (0 === nAlpha) {\n            return c1;\n        }\n\n        if (255 === nAlpha) {\n            return c2;\n        }\n\n        const nInvAlpha: number = 255 - nAlpha;\n\n        const r1: number = (c1 & 0x00FF0000) >> 16;\n        const r2: number = (c2 & 0x00FF0000) >> 16;\n        const r: number = (r2 * nAlpha + r1 * nInvAlpha) >> 8;\n\n        const g1: number = (c1 & 0x0000FF00) >> 8;\n        const g2: number = (c2 & 0x0000FF00) >> 8;\n        const g: number = (g2 * nAlpha + g1 * nInvAlpha) >> 8;\n\n        const b1: number = (c1 & 0x000000FF);\n        const b2: number = (c2 & 0x000000FF);\n        const b: number = (b2 * nAlpha + b1 * nInvAlpha) >> 8;\n\n        return 0xff000000 | r << 16 | g << 8 | b;\n    }\n\n\n    public static addColor(c1: number, c2: number) {\n        //int a1 = (c1 >> 24) & 0xff;\n        const r1 = (c1 >> 16) & 0xFF;\n        const g1 = (c1 >>  8) & 0xFF;\n        const b1 =  c1        & 0xFF;\n\n        const r2 = (c2 >> 16) & 0xFF;\n        const g2 = (c2 >>  8) & 0xFF;\n        const b2 =  c2        & 0xFF;\n\n        const r = r1 + r2 < 0xFF ? r1 + r2 : 0xFF;\n        const g = g1 + g2 < 0xFF ? g1 + g2 : 0xFF;\n        const b = b1 + b2 < 0xFF ? b1 + b2 : 0xFF;\n\n        return (0xFF << 24 | r << 16 | g << 8 | b);\n      }\n\n    public drawTextureRect(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Uint32Array, pixelWidth: number, alpha2: number): void {\n        let texIndex = xt + yt * pixelWidth;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const alpha = ((texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n                const inverseAlpha = 1 - alpha;\n\n                const fbPixel = this.framebuffer[frIndex];\n                const txPixel = texture[texIndex];\n\n                const r = (fbPixel >> 0 & 0xff) * inverseAlpha + (txPixel >> 0 & 0xff) * alpha;\n                const g = (fbPixel >> 8 & 0xff) * inverseAlpha + (txPixel >> 8 & 0xff) * alpha;\n                const b = (fbPixel >> 16 & 0xff) * inverseAlpha + (txPixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += pixelWidth - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    public drawTextureRectAdd(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture, alpha2: number): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const alpha = ((texture.texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n\n                const fbPixel = this.framebuffer[frIndex];\n                const txPixel = texture.texture[texIndex];\n\n                const r = Math.min(255, (fbPixel >> 0 & 0xff) + (txPixel >> 0 & 0xff) * alpha);\n                const g = Math.min(255, (fbPixel >> 8 & 0xff) + (txPixel >> 8 & 0xff) * alpha);\n                const b = Math.min(255, (fbPixel >> 16 & 0xff) + (txPixel >> 16 & 0xff) * alpha);\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    public pixelate() {\n        const xoff = 200;\n        const yoff = 50;\n\n        for (let x = 0; x < 10; x++) {\n            for (let y = 0; y < 10; y++) {\n                this.drawBox2(x * 10 + xoff, y * 10 + yoff, 10, 10, this.readPixel(x * 10 + xoff, y * 10 + yoff));\n            }\n        }\n        this.drawLineDDA(new Vector3f(xoff, yoff, -0.3), new Vector3f(xoff + 20 * 5, yoff, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff, yoff + 20 * 5, -0.3), new Vector3f(xoff + 20 * 5, yoff + 20 * 5, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff, yoff, -0.3), new Vector3f(xoff, yoff + 20 * 5, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff + 20 * 5, yoff, -0.3), new Vector3f(xoff + 20 * 5, yoff + 20 * 5, -0.3), 0xffffffff);\n    }\n\n    public fastFramebufferCopyOffset(src: Uint32Array, dest: Uint32Array, offset = 0) {\n        let i = this.width * this.height / 32 + 1;\n        let k = this.width * this.height;\n        let l = this.width * (this.height - offset);\n        while (--i) {\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n        }\n    }\n\n    // 6 times faster than the slow method that clips and does alpha blending\n    public fastFramebufferCopy(dest: Uint32Array, src: Uint32Array) {\n        dest.set(src);\n    }\n\n    public noise(elapsedTime: number, texture: Texture, scale: number = 0.07): void {\n        const rng = new RandomNumberGenerator();\n        rng.setSeed(elapsedTime);\n        for (let y = 0; y < this.height; y++) {\n            this.drawTextureRect(0, y, Math.floor(rng.getFloat() * (texture.texture.length - this.width)), 0, this.width, 1, texture.texture, texture.width, scale);\n        }\n    }\n\n    public drawTexturedBillboard(xp: number, yp: number, width: number, height: number, texture: Texture, z: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n                    this.wBuffer[index2] = z;\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const r = (this.framebuffer[index2] >> 0 & 0xff) + (texture.texture[textureIndex] >> 0 & 0xff);\n                    const g = (this.framebuffer[index2] >> 8 & 0xff) + (texture.texture[textureIndex] >> 8 & 0xff);\n                    const b = (this.framebuffer[index2] >> 16 & 0xff) + (texture.texture[textureIndex] >> 16 & 0xff);\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += yStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle(xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle2(\n        xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number,\n        imgNum: number = 0, spritH: number): void {\n        const xStep = texture.width / width;\n        const yStep = spritH / height;\n        let xx = 0;\n        let yy = 0;\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n        let xTextureStart: number;\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, spritH - 1) * texture.width +\n                        spritH * texture.width * imgNum;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle2Sub(\n        xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number,\n        imgNum: number = 0, spritH: number, rr:number=1,gg:number=1,bb:number=1) : void {\n        const xStep = texture.width / width;\n        const yStep = spritH / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > this.height - 1 ||\n            xp + width < 0 ||\n            xp > this.width - 1) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - (this.height), 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - (this.height - 1), 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = Math.ceil((width + xp) - Math.max(xp + width - (this.width), 0));\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = Math.ceil(width - Math.max(xp + width - (this.width - 1), 0));\n        }\n\n        const sub: number = Math.ceil(xp) - xp;\n        const suby: number = Math.ceil(yp) - yp;\n        xTextureStart += sub * xStep;\n        yy += suby * yStep;\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = Math.ceil(xStart) + Math.ceil(yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(Math.round(xx) | 0, texture.width - 1) +\n                        Math.min(Math.round(yy) | 0, spritH - 1) * texture.width +\n                        spritH * texture.width * imgNum;\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha*rr;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha*gg;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha*bb;\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticleNoDepth(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > this.height - 1 ||\n            xp + width < 0 ||\n            xp > this.width - 1) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n\n                const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                const inverseAlpha = 1 - alpha;\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawSoftParticle(xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n                    // float scale = 0.2f;\n                    // float fade = clamp((depthMapDepth.x-depth)*scale, 0.0, 1.0);\n                    const zDist = Math.min(Math.max(((1 / z - 1 / this.wBuffer[index2])), 0.0), 1.0);\n                    // this.wBuffer[index2] = z;\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale * zDist;\n                    const inverseAlpha = 1 - alpha;\n\n                    const r = (this.framebuffer[index2] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer[index2] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer[index2] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawFog(color: Color, fogScale: number, fogOffset: number): void {\n        const videoMemorySize: number = this.width * this.height;\n        const wBufferScale: number = -fogScale;\n\n        for (let index: number = 0; index < videoMemorySize; index++) {\n            const alpha = Math.max(Math.min(wBufferScale * (1 / this.wBuffer[index] + fogOffset), 1.0), 0.0);\n            const inverseAlpha = 1.0 - alpha;\n\n            const r = (this.framebuffer[index] >> 0 & 0xff) * inverseAlpha + color.r * alpha;\n            const g = (this.framebuffer[index] >> 8 & 0xff) * inverseAlpha + color.g * alpha;\n            const b = (this.framebuffer[index] >> 16 & 0xff) * inverseAlpha + color.b * alpha;\n\n            this.framebuffer[index] = r | (g << 8) | (b << 16) | (255 << 24);\n        }\n    }\n\n    public drawScaledTextureClipBi(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n               // console.log(xx, yy);\n                // let textureIndex = //Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n                const color = texture.getBilinearFilteredPixel2(xx, yy);\n\n                const alpha = 255 * alphaScale;\n                const inverseAlpha = 1 - alpha;\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = color;\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawScaledTextureClipBiAdd(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                // let textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n                const color = texture.getBilinearFilteredPixel2(xx, yy);\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = color;\n\n                const r = Math.min((framebufferPixel >> 0 & 0xff) + (texturePixel >> 0 & 0xff) * alphaBlend, 255);\n                const g = Math.min((framebufferPixel >> 8 & 0xff) + (texturePixel >> 8 & 0xff) * alphaBlend, 255);\n                const b = Math.min((framebufferPixel >> 16 & 0xff) + (texturePixel >> 16 & 0xff) * alphaBlend, 255);\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawScaledTextureClipAdd(xp: number, yp: number, width: number, height: number, texture: Texture, alpha: number = 1.0): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = Math.min((framebufferPixel >> 0 & 0xff) + (texturePixel >> 0 & 0xff) * alpha, 255);\n                const g = Math.min((framebufferPixel >> 8 & 0xff) + (texturePixel >> 8 & 0xff) * alpha, 255);\n                const b = Math.min((framebufferPixel >> 16 & 0xff) + (texturePixel >> 16 & 0xff) * alpha, 255);\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawTexture(x: number, y: number, texture: Texture, alpha2: number) {\n        const SCREEN_WIDTH = this.width;\n        const SCREEN_HEIGHT = this.height;\n\n        let framebufferIndex: number = Math.max(x, 0) + Math.max(y, 0) * this.width;\n        let textureIndex: number = Math.max(0, 0 - x) + Math.max(0, 0 - y) * texture.width;\n\n        const width: number = Math.min(texture.width, SCREEN_WIDTH - x) - Math.max(0, 0 - x);\n        const height: number = Math.min(texture.height, SCREEN_HEIGHT - y) - Math.max(0, 0 - y);\n\n        const textureRowOffset = texture.width - width;\n        const framebufferRowOffset = this.width - width;\n\n        const div = 1 / 255 * alpha2;\n\n        for (let yHeight: number = 0; yHeight < height; yHeight++) {\n            for (let xWidth: number = 0; xWidth < width; xWidth++) {\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * div;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            textureIndex += textureRowOffset;\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n    public drawTextureFullscreen(texture: Texture, alpha2: number) {\n\n        let framebufferIndex: number = 0;\n        const inverseAlpha = 1 - alpha2;\n        for (let y: number = 0; y < this.width * this.height; y++) {\n\n            const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 0 & 0xff) * alpha2;\n            const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 8 & 0xff) * alpha2;\n            const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 16 & 0xff) * alpha2;\n\n            this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n            framebufferIndex++;\n        }\n    }\n\n    public drawTexture3(x: number, y: number, texture: Texture, alpha2: number, time: number) {\n        const SCREEN_WIDTH = this.width;\n        const SCREEN_HEIGHT = this.height;\n\n        let framebufferIndex: number = Math.max(x, 0) + Math.max(y, 0) * this.width;\n        let textureIndex: number = Math.max(0, 0 - x) + Math.max(0, 0 - y) * texture.width;\n\n        const width: number = Math.min(texture.width, SCREEN_WIDTH - x) - Math.max(0, 0 - x);\n        const height: number = Math.min(texture.height, SCREEN_HEIGHT - y) - Math.max(0, 0 - y);\n\n        const textureRowOffset = texture.width - width;\n        const framebufferRowOffset = this.width - width;\n\n        const div = 1 / 255 * alpha2;\n\n        const mHeight = Math.floor(height * Math.max(Math.min(1, time), 0));\n\n        for (let yHeight: number = 0; yHeight < mHeight; yHeight++) {\n            for (let xWidth: number = 0; xWidth < width; xWidth++) {\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * div;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            textureIndex += textureRowOffset;\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n    public drawTextureNoClipAlpha(x: number, y: number, texture: Texture): void {\n        let framebufferIndex: number = x + y * this.width;\n        let textureIndex: number = 0;\n\n        const framebufferRowOffset = this.width - texture.width;\n\n        for (let yHeight = 0; yHeight < texture.height; yHeight++) {\n            for (let xWidth = 0; xWidth < texture.width; xWidth++) {\n                const color = texture.texture[textureIndex];\n\n                if (color & 0xff000000) {\n                    this.framebuffer[framebufferIndex] = color;\n                }\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n     // https://math.stackexchange.com/questions/859454/maximum-number-of-vertices-in-intersection-of-triangle-with-box/\n     public nearPlaneClipping(t1: Vector3f, t2: Vector3f, color: number): void {\n        const NEAR_PLANE_Z = -1.7;\n\n        if (t1.z < NEAR_PLANE_Z && t2.z < NEAR_PLANE_Z) {\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t1), this.project(t2), color);\n        } else if (t1.z > NEAR_PLANE_Z && t2.z > NEAR_PLANE_Z) {\n            return;\n        } else if (t1.z < NEAR_PLANE_Z) {\n            const ratio = (NEAR_PLANE_Z - t1.z) / (t2.z - t1.z);\n            const t3 = new Vector3f(ratio * (t2.x - t1.x) + t1.x, ratio * (t2.y - t1.y) + t1.y, NEAR_PLANE_Z);\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t1), this.project(t3), color);\n        } else if (t2.z < NEAR_PLANE_Z) {\n            const ratio = (NEAR_PLANE_Z - t2.z) / (t1.z - t2.z);\n            const t3 = new Vector3f(ratio * (t1.x - t2.x) + t2.x, ratio * (t1.y - t2.y) + t2.y, NEAR_PLANE_Z);\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t2), this.project(t3), color);\n        }\n    }\n\n    public project(t1: { x: number, y: number, z: number }): Vector3f {\n        return new Vector3f(Math.round((this.width / 2) + (292 * t1.x / (-t1.z))),\n            Math.round((this.height / 2) - (t1.y * 292 / (-t1.z))),\n            t1.z);\n    }\n\n    public clearDepthBuffer(): void {\n        this.wBuffer.fill(-1 / 900);\n    }\n\n    public drawBox() {\n        const height = this.maxWindow.y - this.minWindow.y + 1;\n        const width = this.maxWindow.x - this.minWindow.x + 1;\n        let index = this.minWindow.y * this.width + this.minWindow.x;\n        for (let i = 0; i < height; i++) {\n            this.framebuffer.fill(255 << 24 | 55 << 16 | 55 << 8 | 55, index, index + width);\n            index += this.width;\n        }\n    }\n\n    public drawBox2(x1: number, y1: number, width: number, height: number, color: number) {\n\n        let index = y1 * this.width + x1;\n        for (let i = 0; i < height; i++) {\n            this.framebuffer.fill(color, index, index + width);\n            index += this.width;\n        }\n    }\n\n    // TODO: implement subpixel accuracy\n    // https://github.com/specht/cruiser\n    public wireFrameSphereClipping(elapsedTime: number): void {\n\n        this.wBuffer.fill(100);\n\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 16;\n        const STEPS2 = 16;\n\n        // TODO: move into setup method\n        for (let i = 0; i <= STEPS; i++) {\n            for (let r = 0; r < STEPS2; r++) {\n                points.push(this.sphereFunction2(-i * Math.PI / STEPS - Math.PI / 2, -r * 2 * Math.PI / STEPS2));\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2)); // 2\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 1\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2)); // 4\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 5\n            }\n        }\n\n        // Create MV Matrix\n        const scale = 10.8 + 5 * (Math.sin(elapsedTime * 0.16) + 1) / 2;\n        let modelViewMartrix = Matrix4f.constructScaleMatrix(scale, scale, scale).multiplyMatrix(Matrix4f.constructYRotationMatrix(elapsedTime * 0.08));\n        modelViewMartrix = modelViewMartrix.multiplyMatrix(Matrix4f.constructXRotationMatrix(elapsedTime * 0.08));\n        modelViewMartrix = Matrix4f.constructTranslationMatrix(0 + 20 * Math.sin(elapsedTime * 0.04), 5 * Math.sin(elapsedTime * 0.06), -22).multiplyMatrix(modelViewMartrix);\n\n        const points2: Array<Vector3f> = new Array<Vector3f>();\n\n        for (let p = 0; p < points.length; p++) {\n            const transformed = modelViewMartrix.multiplyHom(points[p]);\n\n            const x = transformed.x;\n            const y = transformed.y;\n            const z = transformed.z;\n\n            const xx = (this.width * 0.5) + (x / (-z * 0.0078));\n            const yy = (this.height * 0.5) + (y / (-z * 0.0078));\n\n            points2.push(new Vector3f(xx, yy, z));\n        }\n\n        // draw clip region\n        const colred = 255 << 24 | 230 << 16 | this.height << 16 | this.height;\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.minWindow.y - 1, 0), new Vector3f(this.minWindow.x - 1, this.maxWindow.y + 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.maxWindow.x + 1, this.minWindow.y - 1, 0), new Vector3f(this.maxWindow.x + 1, this.maxWindow.y + 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.minWindow.y - 1, 0), new Vector3f(this.maxWindow.x + 1, this.minWindow.y - 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.maxWindow.y + 1, 0), new Vector3f(this.maxWindow.x + 2, this.maxWindow.y + 1, 0), colred);\n\n        this.drawBox();\n\n        for (let i = 0; i < index.length; i += 3) {\n            const v1 = points2[index[i]];\n            const v2 = points2[index[i + 1]];\n            const v3 = points2[index[i + 2]];\n\n            const colLine = 255 << 24 | 255 << 16 | 255 << 8 | 255;\n            if (this.isTriangleCCW(v1, v2, v3)) {\n                this.linerClipper.cohenSutherlandLineClipper(v1, v2, colLine);\n                this.linerClipper.cohenSutherlandLineClipper(v1, v3, colLine);\n                this.linerClipper.cohenSutherlandLineClipper(v3, v2, colLine);\n            }\n        }\n    }\n\n    public isTriangleCCW(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number }): boolean {\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v1.y - v1.x * v3.y;\n        if (this.cullMode === CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n        public wireFrameTerrain(elapsedTime: number, heightmap: Texture): void {\n\n            this.clearDepthBuffer();\n\n            const index: Array<number> = [\n            ];\n\n            const points: Array<Vector3f> = [];\n            for (let y = 0; y < 256; y++) {\n                for (let x = 0; x < 256; x++) {\n                    points.push(new Vector3f((x - 128) * 20.0, (heightmap.texture[x + y * 256] & 0x000000ff) * 128 / 256 - 70, (y - 128) * 20.0));\n                }\n            }\n\n            for (let y = 0; y < 256; y += 1) {\n                for (let x = 0; x < 256 - 1; x += 1) {\n                    index.push(0 + x + (y * 256));\n                    index.push(1 + x + (y * 256));\n                }\n            }\n\n            for (let x = 0; x < 256; x += 1) {\n                for (let y = 0; y < 256 - 1; y += 1) {\n\n                    index.push(x + ((y + 0) * 256));\n                    index.push(x + ((y + 1) * 256));\n                }\n            }\n\n            const modelViewMartrix = Matrix3f.constructYRotationMatrix(elapsedTime * 0.003);\n\n            const points2: Array<Vector3f> = new Array<Vector3f>();\n\n            const xOff = + Math.cos(elapsedTime * 0.000001) * 128 * 20;\n            const zOff = Math.sin(elapsedTime * 0.000001) * 128 * 20;\n            points.forEach(element => {\n                const transformed = modelViewMartrix.multiply(element);\n\n                const x = transformed.x + xOff;\n                const y = transformed.y;\n                const z = transformed.z + zOff; // TODO: use translation matrix!\n\n                points2.push(new Vector3f(x, y, z));\n            });\n\n            for (let i = 0; i < index.length; i += 2) {\n                const scale = (1 - Math.min(255, -points2[index[i]].z * 0.9) / 255);\n                const color = (255 * scale) << 8 | 100 * scale | (this.height * scale) << 16 | 255 << 24;\n                this.nearPlaneClipping(points2[index[i]], points2[index[i + 1]], color);\n            }\n        }\n\n    public drawBoundingSphere(sphere: Sphere, matrix: Matrix4f, color: number): void {\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 8;\n        const STEPS2 = 8;\n\n        // TODO: move into setup method\n        for (let i = 0; i <= STEPS; i++) {\n            for (let r = 0; r < STEPS2; r++) {\n\n                const pos = this.sphereFunction2(-i * Math.PI / STEPS - Math.PI / 2, -r * 2 * Math.PI / STEPS2).mul(sphere.getRadius() + 0.01).add(sphere.getCenter());\n                pos.w = 1;\n\n                points.push(pos);\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2)); // 2\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 1\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2)); // 4\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 5\n            }\n        }\n\n        const modelViewMartrix = matrix;\n\n        const points2: Array<Vector3f> = new Array<Vector3f>();\n\n        for (let p = 0; p < points.length; p++) {\n            const transformed = modelViewMartrix.multiplyHom(points[p]);\n            points2.push(new Vector3f(transformed.x, transformed.y, transformed.z));\n        }\n\n        for (let i = 0; i < index.length; i += 3) {\n\n            const v1 = points2[index[i]];\n            const v2 = points2[index[i + 1]];\n            const v3 = points2[index[i + 2]];\n\n            this.nearPlaneClipping(v1, v2, color);\n            this.nearPlaneClipping(v1, v3, color);\n            this.nearPlaneClipping(v3, v2, color);\n\n        }\n    }\n    public drawPlanedeformationTunnelAnim(elapsedTime: number, texture: Texture) {\n\n        let i = 0;\n        for (let y = 0; y < this.height; y++) {\n            for (let x = 0; x < this.width; x++) {\n                const xdist = (x - this.width / 2);\n                const ydist = (y - this.height / 2);\n                const dist = 256 * 0.2 / Math.max(1.0, Math.sqrt(xdist * xdist + ydist * ydist));\n                const dist2 = dist + elapsedTime * 0.002;\n                const angle = (Math.atan2(xdist, ydist) / Math.PI + 1.0) * 16 + elapsedTime * 0.00069;\n\n                const color1 = texture.texture[(dist2 & 0x1f) + (angle & 0x1f) * 32];\n                // darkening can be done with alpha blended texture\n                const scale = 1 - Interpolator.cosineInterpolate(1.0, 6.0, dist);\n                const r = ((color1 >> 0) & 0xff) * scale;\n                const g = ((color1 >> 8) & 0xff) * scale;\n                const b = ((color1 >> 16) & 0xff) * scale;\n                const final = r | g << 8 | b << 16;\n\n                this.framebuffer[i++] = final;\n            }\n        }\n    }\n\n    public drawPlaneDeformation(elapsedTime: number, texture: Texture): void {\n        // optimize\n        // power of two modulo with &\n        // this.framebuffer.clearColor(new Color());\n        // precompute LUD + render to half size backbuffer\n        const IMG_WIDTH = texture.width;\n        const IMG_HEIGHT = texture.height;\n\n        let framebufferIndex = 0;\n\n        for (let y = 0; y < this.height; y++) {\n            const yy = (-1.00 + 2.00 * y / this.height);\n\n            for (let x = 0; x < this.width; x++) {\n\n                const xx = (-1.00 + 2.00 * x / this.width);\n\n                // magic formulas here\n                const u = ((xx / Math.abs(yy)) * IMG_WIDTH * 0.05) | 0;\n                const v = (1.0 / Math.abs(yy) * IMG_HEIGHT * 0.05 + elapsedTime * 0.008) | 0;\n\n                const scale = 1 - Math.max(Math.min(1 / Math.abs(yy) * 0.2, 1), 0);\n                let color = texture.texture[(u & 0xff) + (v & 0xff) * IMG_WIDTH];\n                const r = ((color >> 0) & 0xff) * scale;\n                const g = ((color >> 8) & 0xff) * scale;\n                const b = ((color >> 16) & 0xff) * scale;\n                color = (255 << 24) | (b << 16) | (g << 8) | (r << 0);\n\n                this.framebuffer[framebufferIndex++] = color;\n            }\n        }\n    }\n\n    public torusFunction(alpha: number): Vector3f {\n        return new Vector3f(Math.sin(alpha) * 10, 0, Math.cos(alpha) * 10);\n    }\n\n    public fakeSphere(normal: Vector4f, vertex: Vertex): void {\n        // https://www.mvps.org/directx/articles/spheremap.htm\n        // vertex.textureCoordinate.u = 0.5 + normal.x * 0.5;\n        // vertex.textureCoordinate.v = 0.5 - normal.y * 0.5;\n        vertex.textureCoordinate.u = 0.5 + Math.asin(normal.x) / Math.PI;\n        vertex.textureCoordinate.v = 0.5 - Math.asin(normal.y) / Math.PI;\n    }\n\n    public fakeSphere2(normal: Vector3f, tex: TextureCoordinate): void {\n        tex.u = 0.5 + Math.asin(normal.x) / Math.PI;\n        tex.v = 0.5 - Math.asin(normal.y) / Math.PI;\n    }\n\n    public drawLineDDA(start: Vector3f, end: Vector3f, color: number): void {\n        this.lineRasterizer.drawLineDDA(start, end, color);\n    }\n\n    public drawLineDDANoZ(start: Vector3f, end: Vector3f, color: number): void {\n        this.lineRasterizerNo.drawLineDDANoZ(start, end, color);\n    }\n\n    private sphereFunction2(theta: number, phi: number): Vector4f {\n        const pos = new Vector4f(Math.cos(theta) * Math.cos(phi),\n            Math.cos(theta) * Math.sin(phi),\n            Math.sin(theta), 1.0);\n\n        return pos;\n    }\n\n}\n","export class FullscreenUtils {\n\n    public static toggleFullscreen(element: Element): void {\n        if (!this.fullscreen) {\n            FullscreenUtils.enterFullscreen(element);\n            this.fullscreen = true;\n            this.setStyle(element, 'cursor: none');\n        } else {\n            FullscreenUtils.exitFullscreen();\n            this.fullscreen = false;\n            this.setStyle(element, 'cursor: zoom-in');\n        }\n    }\n\n    private static setStyle(el, css) {\n        el.setAttribute('style', el.getAttribute('style') + ';' + css);\n    }\n\n    public static enterFullscreen(element: Element): void {\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.mozRequestFullScreen) {\n            element.mozRequestFullScreen();\n        } else if (element.msRequestFullscreen) {\n            element.msRequestFullscreen();\n        } else if (element.webkitRequestFullScreen) {\n            element.webkitRequestFullScreen();\n        }\n    }\n\n    public static exitFullscreen(): void {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    }\n\n    private static fullscreen: boolean = false;\n\n}\n","import { Framebuffer } from './Framebuffer';\nimport { FullscreenUtils } from './fullscreen/FullscreenUtils';\nimport { AbstractScene } from './scenes/AbstractScene';\n\nexport class Canvas {\n\n    public framebuffer: Framebuffer;\n    private canvas: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D;\n    private startTime: number;\n    private boundRenderLoop: FrameRequestCallback;\n\n    constructor(width: number, height: number, private scene: AbstractScene) {\n        this.canvas = document.createElement('canvas');\n\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.canvas.id = 'aisa-canvas';\n\n        this.canvas.style.cssText = 'image-rendering: optimizeSpeed;' + // FireFox < 6.0\n            'image-rendering: -moz-crisp-edges;' + // FireFox\n            'image-rendering: -o-crisp-edges;' +  // Opera\n            'image-rendering: -webkit-crisp-edges;' + // Chrome\n            'image-rendering: crisp-edges;' + // Chrome\n            'image-rendering: -webkit-optimize-contrast;' + // Safari\n            'image-rendering: pixelated; ' + // Future browsers\n            '-ms-interpolation-mode: nearest-neighbor;'; // IE\n\n        this.canvas.style.width = `${width * 2}px`;\n        this.canvas.style.height = `${height * 2}px`;\n\n        this.context = this.canvas.getContext('2d');\n\n        // FIXME: make this cross browser compatible!\n        (this.context as any).oImageSmoothingEnabled = false;\n        this.context.imageSmoothingEnabled = false;\n        (this.context as any).webkitImageSmoothingEnabled = false;\n\n        this.framebuffer = new Framebuffer(width, height);\n        this.boundRenderLoop = this.renderLoop.bind(this);\n    }\n\n    public init(): void {\n        // add canvas element to target element\n        this.appendTo(document.getElementById('aisa'));\n\n        // Add fullscreen toggle on click\n        this.canvas.addEventListener('click', (event: MouseEvent) => {\n            event.preventDefault();\n            FullscreenUtils.toggleFullscreen(this.canvas);\n        });\n\n        // Init scene and start rendering\n        this.scene.init(this.framebuffer).then(\n            () => {\n                this.scene.onInit();\n                this.startTime = Date.now();\n                this.renderLoop();\n            }\n        );\n    }\n\n    public renderLoop(): void {\n        this.scene.render(this.framebuffer, Date.now() - this.startTime);\n        this.flipBackbuffer();\n        requestAnimationFrame(this.boundRenderLoop);\n    }\n\n    public flipBackbuffer(): void {\n        this.context.putImageData(this.framebuffer.getImageData(), 0, 0);\n    }\n\n    public appendTo(element: HTMLElement): void {\n        element.appendChild(this.canvas);\n    }\n\n}\n","import { Vector4f } from '../math/Vector4f';\nimport { TextureCoordinate } from '../TextureCoordinate';\n\nexport class TexturedMesh {\n\n    public points: Array<Vector4f>;\n    public normals?: Array<Vector4f>;\n    public uv: Array<TextureCoordinate>;\n\n    public faces: Array<{\n        vertices: Array<number>,\n        normals?: Array<number>\n        uv: Array<number>\n    }>;\n\n    public points2: Array<Vector4f>;\n    public normals2?: Array<Vector4f>;\n\n}\n","import { Framebuffer } from './../Framebuffer';\n\nexport abstract class AbstractScene {\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public init(framebuffer: Framebuffer): Promise<any> {\n        return Promise.all([]);\n    }\n\n    public onInit(): void {\n\n    }\n\n    public abstract render(framebuffer: Framebuffer, time: number): void;\n\n}\n","export interface musicProperties {\n    timeSeconds: number;\n    timeMilliseconds: number;\n    sceneData: sceneData;\n}\n\n// scene variables | things you set through jsRocket\nexport interface sceneData {\n    effect: any;\n    transitionType: any;\n    transitionValue: any;\n    snare: any;\n    bass: any;\n}\n\n// Beats per minute of your demo tune\nexport const BPM = 125;\n\n// The resolution between two beats, four is usually fine,- eight adds a bit more finer control\nexport const ROWS_PER_BEAT = 6;\n\n// we calculate this now, so we can translate between rows and seconds later on\nexport const ROW_RATE = BPM / 60 * ROWS_PER_BEAT;\n","import './JSRocket';\nimport './cowbell/cowbell'\nimport './cowbell/audio_player'\nimport './cowbell/web_audio_player'\nimport './cowbell/openmpt/openmpt_player'\nimport {\n    musicProperties,\n    ROW_RATE,\n    sceneData\n} from './MusicProperties';\nexport class SoundManager {\n\n    public syncDevice;\n    public isPlaying = false;\n    public demoMode: boolean;\n    public row = 0;    // the current row we're on\n\n    //  container for audio values to be used by effects (time, bass, effect, transitions)\n    public musicProperties: musicProperties;\n    public sceneData: sceneData;\n    public audioElement: HTMLAudioElement;\n\n    public constructor() {\n\n        // Initialize JS Rocket\n        this.syncDevice = new JSRocket.SyncDevice();\n        this.syncDevice.connected = false;\n\n    }\n\n    /**\n     * Load audio files supported by cowbell\n     *\n     * @param {string} filename     audio file to load\n     * @returns {Promise<void>}     promise\n     */\n    public loadMusic(filename: string): Promise<void> {\n        return new Promise((resolve) => {\n\n            const fileExtension = filename.split('.').pop().toLowerCase();\n            let audioPlayer;\n\n            switch (fileExtension) {\n                case 'it':\n                case 'xm':\n                case 's3m':\n                case 'mod':\n                    audioPlayer = new Cowbell.Player.OpenMPT({\n                        'pathToLibOpenMPT': './openmpt/libopenmpt.js'\n                    });\n                    break;\n                case 'ogg':\n                case 'mp3':\n                default:\n                    audioPlayer = new Cowbell.Player.Audio();\n                    break;\n            }\n            const track = new audioPlayer.Track(filename);\n            this.audioElement = track.open();\n            resolve();\n        });\n    }\n\n    /**\n     * Load XML file for music syncronization for use with JS Rocket\n     *\n     * @param {string} filename      XML file to load\n     * @param {string} demoMode      use true for release mode (uses file) | false when using rocket editor\n     * @returns {Promise<void>}      promise\n     */\n    prepareSync(filename: string, demoMode: boolean): Promise<void> {\n        this.demoMode = demoMode;\n        return new Promise((resolve) => {\n            if (this.demoMode) {\n                this.syncDevice.setConfig({\n                    'rocketXML': filename\n                });\n                this.syncDevice.init('demo');\n\n            } else {\n                this.syncDevice.init();\n            }\n\n            // XML file from JS Rocket library was loaded and parsed, make sure your ogg is ready\n            this.syncDevice.on('ready', () => this.onSyncReady());\n\n            // [JS Rocket - Arrow keys] whenever you change the row, a value or interpolation mode this will get called\n            this.syncDevice.on('update', (newRow: number) => this.onSyncUpdate(newRow));\n\n            // [JS Rocket - Spacebar] in Rocket calls one of those\n            this.syncDevice.on('play', () => this.onPlay());\n            this.syncDevice.on('pause', () => this.onPause());\n            resolve()\n        });\n    }\n\n    onSyncReady() {\n        this.syncDevice.connected = true;\n\n        this.sceneData = {\n            effect: this.syncDevice.getTrack('effect'),\n            snare: this.syncDevice.getTrack('snare'),\n            bass: this.syncDevice.getTrack('bass'),\n            transitionType: this.syncDevice.getTrack('transitionType'),\n            transitionValue: this.syncDevice.getTrack('transitionValue')\n        }\n    }\n\n    // row is only given if you navigate, or change a value on the row in Rocket\n    // on interpolation change (hit [i]) no row value is sent, as the current there is the upper row of your block\n    onSyncUpdate(newRow: number) {\n        if (!isNaN(newRow)) {\n            this.row = newRow;\n        }\n        this.audioElement.currentTime = newRow / ROW_RATE;\n    }\n\n    updateMusic() {\n        // show message if rocket app is not running in background\n        if (!this.syncDevice.connected && !this.demoMode) {\n            return;\n        }\n\n        // update music properties\n        this.musicProperties = {\n            timeSeconds: (this.audioElement?.currentTime) || 0,\n            timeMilliseconds: (this.audioElement?.currentTime) * 1000,\n            sceneData: {\n                effect: this.sceneData.effect.getValue(this.row),\n                transitionType: this.sceneData.transitionType.getValue(this.row),\n                transitionValue: this.sceneData.transitionValue.getValue(this.row),\n                snare: this.sceneData.snare.getValue(this.row),\n                bass: this.sceneData.bass.getValue(this.row),\n            }\n        }\n\n        this.row = this.musicProperties.timeSeconds * ROW_RATE;\n\n        // update JS rocket\n        if (this.audioElement && this.audioElement.paused === false) {\n            // otherwise we may jump into a point in the audio where there's\n            // no timeframe, resulting in Rocket setting row 2 and we report\n            // row 1 back - thus Rocket spasming out\n\n            // this informs Rocket where we are\n            this.syncDevice.update(this.row);\n        }\n\n        // stop once timeline reaches end\n        if (Math.floor(this.audioElement.duration) === Math.floor(this.musicProperties.timeSeconds)) {\n            document.getElementById('ticker_stop').click();\n        }\n    }\n\n    onPlay() {\n        if (!this.isPlaying && this.audioElement) {\n            if (this.audioElement.currentTime) {\n                this.audioElement.currentTime = this.row / ROW_RATE;\n            }\n            this.isPlaying = true;\n            this.audioElement.play();\n        }\n        console.log('[onPlay]');\n    }\n\n    onPause() {\n        this.row = this.audioElement.currentTime * ROW_RATE;\n        if (!this.audioElement.paused && this.isPlaying) {\n            this.audioElement.pause();\n            this.isPlaying = false;\n        }\n        console.info('[onPause]');\n    }\n\n    /**\n     * find the prev/next effect and jump to it\n     *\n     * @param   {number} time       where we are in the audio timeline\n     * @param   {number} direction  direction to skip -1 goes backwards.  1 goes forward\n     */\n    public jump(time: number, direction: number, sceneLength: number) {\n        this.row = time * ROW_RATE;\n        const effectJump = Number(this.sceneData.effect.getValue(this.row).toFixed(1));\n        if (Math.trunc(Number(this.musicProperties.sceneData.effect)) !== Math.trunc(effectJump) && effectJump >= 1) {\n            // if running into transition effect 2.5..then keep searching and only land on whole numbers\n            if (parseInt(effectJump.toString(), 10) !== effectJump) {\n                this.jump(time + (0.12 * direction), direction, sceneLength);\n            } else {\n                this.seek(time);\n            }\n        } else {\n            if (time >= 0 && effectJump < sceneLength - 3) {\n                this.jump(time + (0.12 * direction), direction, sceneLength);\n            } else {\n                // go back to the beginning\n                this.seek(0);\n            }\n        }\n    }\n\n    /**\n     * Jumps to a point in the audio timeline in milliseconds\n     *\n     * @param  {number} time            time in milliseconds\n     */\n    public seek(time: number) {\n        this.audioElement.currentTime = time;\n        // update rocket editor position to new timeline location\n        if (!this.demoMode) {\n            this.syncDevice.update(this.audioElement.currentTime * ROW_RATE);\n        }\n    }\n\n    /**\n     * Turns music volume on or off\n     *\n     * @param  {HTMLElement} ref         volume icon to toggle\n     * @param  {boolean} isMuted         on or off\n     */\n    public toggleSound(ref: HTMLElement, isMuted: boolean) {\n        if (isMuted) {\n            ref.setAttribute('title', 'enable sound');\n            ref.classList.remove('fa-volume-up');\n            ref.classList.add('fa-volume-off');\n        } else {\n            ref.setAttribute('title', 'mute sound');\n            ref.classList.remove('fa-volume-off');\n            ref.classList.add('fa-volume-up');\n        }\n        this.audioElement.muted = isMuted;\n    }\n\n    /**\n     * Restore position of timeline & mute preferences on reloads\n     */\n    public initTimeline() {\n        // jump to last position on timeline for local development reloading\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const newLocal = this;\n        const jumpTo = Number(localStorage.getItem('lastTime')) || 0;\n\n        // poll for mod player since library does not use promises\n        if ((window as any).libopenmpt) {\n            (function poll() {\n                // check if mod was loaded then seek\n                if ((window as any).modulePtr) {\n\n                    // openmpt does not support volume control or muting\n                    document.getElementById('ticker_volume').style.display = 'none';\n                    newLocal.updateRange(newLocal.audioElement.duration);\n                    newLocal.seek(jumpTo);\n                    return;\n                }\n                setTimeout(poll, 150);\n            })();\n        } else {\n            newLocal.audioElement.onloadedmetadata = function () {\n                newLocal.updateRange(newLocal.audioElement.duration);\n            };\n            newLocal.seek(jumpTo);\n        }\n\n        // remember last sound preferences\n        const isMuted = localStorage.getItem('soundToggle') === 'true';\n        this.toggleSound(document.getElementById('ticker_volume'), isMuted);\n    }\n\n    /**\n     * Set timeline slider max range\n     *\n     * @param  {number} value         length time in seconds\n     */\n    private updateRange(value: number) {\n        (document.getElementById(\"timeline\") as HTMLInputElement).max = String(Math.floor(value) * 1000);\n    }\n\n    /*\n    // todo: add effect # markers to timeline\n    fetch(rocketData.default).then(response => response.text())\n        .then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\n        .then(data => {\n            const tracks: Element[] = Array.from(data.documentElement.getElementsByTagName(\"track\"));\n            tracks.forEach((element) => {\n                if (element.getAttribute(\"name\") === 'effect') {\n                    const keys: Element[] = Array.from(element.getElementsByTagName(\"key\"));\n                    keys.forEach((elementKey) => {\n                        const p = document.createElement(\"option\");\n                        const value = elementKey.getAttribute('row').valueOf();\n                        const label = elementKey.getAttribute('value').valueOf();\n\n                        // remap rows to a range between 0 and 1000\n                        const newValue = Utils.map(Number(label), 0, 1520, 0, 1000);\n\n                        p.value = value;\n                        p.label = label;\n                        // this.tickmarkRef.appendChild(p);\n                    })\n                }\n            });\n        });\n        */\n\n}\n","import RandomNumberGenerator from '../RandomNumberGenerator';\nimport { Texture } from './Texture';\n\nexport class TextureUtils {\n\n    public static generateProceduralNoise(): Promise<Texture> {\n        return new Promise<Texture>((resolve: (value?: Texture) => void): void => {\n            const texture: Texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng: RandomNumberGenerator = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let i: number = 0; i < 256 * 256; i++) {\n                const scale: number = rng.getFloat();\n                texture.texture[i] = 200 * scale | 255 * scale << 8 | 205 * scale << 16 | 255 << 24;\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static generateProceduralParticleTexture(): Promise<Texture> {\n        return new Promise((resolve: (value?: Texture) => void): void => {\n            const texture: Texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng: RandomNumberGenerator = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let y: number = 0; y < 256; y++) {\n                for (let x: number = 0; x < 256; x++) {\n                    const dx: number = 127 - x;\n                    const dy: number = 127 - y;\n                    const r: number = Math.sqrt(dx * dx + dy * dy) / 127;\n                    let c: number = 1 - r;\n                    c = c * c * c;\n                    if (r > 1) {\n                        c = 0;\n                    }\n                    c = Math.min(1, c * 2.9);\n\n                    texture.texture[x + y * 256] = 235 | 255 << 8 | 235 << 16 | (c * 255) << 24;\n                }\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static generateProceduralParticleTexture2(): Promise<Texture> {\n        return new Promise((resolve) => {\n            const texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let y = 0; y < 256; y++) {\n                for (let x = 0; x < 256; x++) {\n                    const dx = 127 - x;\n                    const dy = 127 - y;\n                    const r = Math.sqrt(dx * dx + dy * dy) / 127;\n                    let c = 1 - r;\n                    c = c * c;\n                    if (r > 1) { c = 0; }\n                    c = Math.min(1, c * 40);\n                    texture.texture[x + y * 256] = 255 | 205 << 8 | 255 << 16 | (c * 255) << 24;\n                }\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static load(filename: string, transparency: boolean): Promise<Texture> {\n        return new Promise<Texture>((resolve: (texture?: Texture) => void): void => {\n            const image: HTMLImageElement = new Image();\n            image.onload = (): void => {\n                const texture: Texture = new Texture();\n                texture.texture = this.getImageData(image, transparency);\n                texture.width = image.width;\n                texture.height = image.height;\n                resolve(texture);\n            };\n            image.onerror = (): void => resolve();\n            image.src = filename;\n        });\n    }\n\n    private static getImageData(image: HTMLImageElement, withAlpha: boolean = false): Uint32Array {\n        const canvas: HTMLCanvasElement = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const context: CanvasRenderingContext2D = canvas.getContext('2d');\n        context.drawImage(image, 0, 0);\n        const data: Uint8ClampedArray = context.getImageData(0, 0, image.width, image.height).data;\n        const conv: Uint32Array = new Uint32Array(data.length / 4);\n        let c: number = 0;\n        for (let i: number = 0; i < data.length; i += 4) {\n            if (withAlpha) {\n                conv[c] = (data[i + 3] << 24) | (data[i + 2] << 16) | (data[i + 1] << 8) | data[i + 0];\n            } else {\n                conv[c] = (255 << 24) | (data[i + 2] << 16) | (data[i + 1] << 8) | data[i + 0];\n            }\n\n            c++;\n        }\n        return conv;\n    }\n\n}\n","import { Vector4f } from '../math/Vector4f';\nimport { AbstractGeometricObject } from './AbstractGeometricObject';\n\nexport class TorusKnot extends AbstractGeometricObject {\n\n    public constructor(inverse: boolean = false) {\n        super();\n\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 80;\n        const STEPS2 = 8;\n        for (let i = 0; i < STEPS; i++) {\n            const frame = this.torusFunction3(i * 2 * Math.PI / STEPS);\n            const frame2 = this.torusFunction3(i * 2 * Math.PI / STEPS + 0.1);\n\n            const tangent = frame2.sub(frame);\n            let up = frame.add(frame2).normalize();\n            const right = tangent.cross(up).normalize().mul(26.4);\n            up = right.cross(tangent).normalize().mul(26.4);\n\n            for (let r = 0; r < STEPS2; r++) {\n                const pos = up.mul(Math.sin(r * 2 * Math.PI / STEPS2)).add(right.mul(Math.cos(r * 2 * Math.PI / STEPS2))).add(frame);\n                points.push(pos.mul(1));\n            }\n        }\n\n        const index: Array<number> = [];\n\n\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2) % points.length); // 2\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2) % points.length); // 1\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2) % points.length); // 3\n\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2) % points.length); // 4\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2) % points.length); // 3\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2) % points.length); // 5\n            }\n        }\n\n        this.buildMesh(points, index, inverse);\n    }\n\n    private torusFunction3(alpha: number): Vector4f {\n        const p = 2\n        const q = 3;\n        const r = 0.5 * (2 + Math.sin(q * alpha));\n        return new Vector4f(r * Math.cos(p * alpha),\n            r * Math.cos(q * alpha),\n            r * Math.sin(p * alpha)).mul(70);\n    }\n\n}\n","import { Vector4f } from '../../math/index';\n\nexport abstract class Fog {\n\n    public abstract computeVertexColor(color: Vector4f, vertex: Vector4f): Vector4f;\n\n}\n","import { Vector4f } from '../../math/index';\nimport { Fog } from './Fog';\n\nexport class LinearFog extends Fog {\n\n    private zStart: number;\n    private zEnd: number;\n    private fogColor: Vector4f;\n\n    public constructor(zStart: number, zEnd: number, fogColor: Vector4f) {\n        super();\n        this.zStart = zStart;\n        this.zEnd = zEnd;\n        this.fogColor = fogColor;\n    }\n\n    public computeVertexColor(color: Vector4f, vertex: Vector4f): Vector4f {\n        if (vertex.z >= this.zStart) {\n            return color;\n        } else if (vertex.z <= this.zEnd) {\n            return this.fogColor;\n        } else {\n            const f: number = (this.zEnd - vertex.z) / (this.zEnd - this.zStart);\n            return new Vector4f(\n                color.x * f + this.fogColor.x * (1 - f),\n                color.y * f + this.fogColor.y * (1 - f),\n                color.z * f + this.fogColor.z * (1 - f)\n            );\n        }\n    }\n\n}\n","\nimport { AbstractClipEdge } from './AbstractClipEdge';\nimport { RightClipEdge } from './RightClipEdge';\nimport { LeftClipEdge } from './LeftClipEdge';\nimport { BottomClipEdge } from './BottomClipEdge';\nimport { TopClipEdge } from './TopClipEdge';\nimport { Vertex } from '../Vertex';\nimport { Framebuffer } from '../Framebuffer';\n\nexport class SutherlandHodgman2DClipper {\n\n\n    private clipRegion: Array<AbstractClipEdge>;\n\n    constructor(private framebuffer: Framebuffer) {\n        this.clipRegion = new Array<AbstractClipEdge>(\n            new RightClipEdge(framebuffer),\n            new LeftClipEdge(framebuffer),\n            new BottomClipEdge(framebuffer),\n            new TopClipEdge(framebuffer)\n        );\n\n    }\n\n    /**\n     * FIXME: optimize by minimizing creation of new arrays\n     *\n     * @param {Array<Vertex>} subject\n     * @return {Array<Vertex>}\n     */\n    public clipConvexPolygon(subject: Array<Vertex>): Array<Vertex> {\n\n        let output = subject;\n\n        for (let j = 0; j < this.clipRegion.length; j++) {\n            const edge: AbstractClipEdge = this.clipRegion[j];\n            const input = output;\n            output = new Array<Vertex>();\n            let S = input[input.length - 1];\n\n            for (let i = 0; i < input.length; i++) {\n                const point = input[i];\n                if (edge.isInside(point)) {\n                    if (!edge.isInside(S)) {\n                        output.push(edge.computeIntersection(S, point));\n                    }\n                    output.push(point);\n                } else if (edge.isInside(S)) {\n                    output.push(edge.computeIntersection(S, point));\n                }\n                S = point;\n            }\n        }\n\n        return output;\n    }\n\n}\n","import { Vector4f } from '../../math/index';\nimport { PointLight } from '../light/PointLight';\nimport { Material } from '../material/Material';\n\nexport class PhongLighting {\n\n    public computeColor(mat: Material, lights: Array<PointLight>, normal: Vector4f, vertex: Vector4f): Vector4f {\n        let finalColor: Vector4f = new Vector4f(0, 0, 0);\n\n        for (let x: number = 0; x < lights.length; x++) {\n            const light: PointLight = lights[x];\n            const ambientIntensity: Vector4f = this.computeAmbientIntensity(mat, light);\n            const diffuseIntensity: Vector4f = this.computeDiffuseIntensity(mat, light, normal, vertex);\n            const specularIntensity: Vector4f = this.computeSpecularIntensity(mat, light, normal, vertex);\n\n            finalColor = finalColor.add(ambientIntensity)\n                .add(diffuseIntensity)\n                .add(specularIntensity);\n        }\n\n        return finalColor;\n    }\n\n    private computeAmbientIntensity(mat: Material, l: PointLight): Vector4f {\n        return mat.ambientColor.componentWiseMul(l.ambientIntensity);\n    }\n\n    private computeDiffuseIntensity(mat: Material, l: PointLight, normal: Vector4f, vertex: Vector4f): Vector4f {\n        const lightDirection: Vector4f = l.position.sub(vertex).normalize();\n        const scale: number = Math.min(Math.max(normal.dot(lightDirection), 0), 1.0);\n        return mat.diffuseColor.componentWiseMul(l.diffuseIntensity).mul(scale);\n    }\n\n    private computeSpecularIntensity(mat: Material, l: PointLight, normal: Vector4f, vertex: Vector4f): Vector4f {\n        const lightDirection: Vector4f = l.position.sub(vertex).normalize();\n        const r: Vector4f = normal.mul(normal.dot(lightDirection) * 2.0).sub(lightDirection);\n        const v: Vector4f = vertex.mul(-1).normalize();\n        const scale: number = Math.pow(Math.max(r.dot(v), 0), mat.shininess);\n        return mat.specularColor.componentWiseMul(l.specularIntensity).mul(scale);\n    }\n\n}\n","import { Vector4f } from '../../math/index';\n\nexport abstract class Light {\n\n    public ambientIntensity: Vector4f;\n    public diffuseIntensity: Vector4f;\n    public specularIntensity: Vector4f;\n\n}\n","import { Vector4f } from '../../math/index';\nimport { Light } from './Light';\n\nexport class PointLight extends Light {\n\n    public position: Vector4f;\n\n}\n","import { Vector4f } from '../../math/index';\n\nexport class Material {\n\n    public ambientColor: Vector4f;\n    public diffuseColor: Vector4f;\n    public specularColor: Vector4f;\n    public emissiveColor: Vector4f;\n\n    public shininess: number;\n\n}\n","import { Color } from '../core/Color';\n\nexport class ColorInterpolator {\n\n    public startColor: Color = new Color();\n    public colorSlope: Color = new Color();\n\n    public setup(c1: Color, c2: Color, distance: number): void {\n        this.colorSlope.r = (c2.r - c1.r) / distance;\n        this.colorSlope.g = (c2.g - c1.g) / distance;\n        this.colorSlope.b = (c2.b - c1.b) / distance;\n\n        this.startColor.r = c1.r;\n        this.startColor.g = c1.g;\n        this.startColor.b = c1.b;\n    }\n\n    public advance(): void {\n        this.startColor.r += this.colorSlope.r;\n        this.startColor.g += this.colorSlope.g;\n        this.startColor.b += this.colorSlope.b;\n    }\n\n}\n","import { Vertex } from '../Vertex';\n\nexport class SlopeInterpolator {\n\n    yDistance: number;\n    slope: number;\n    zslope: number;\n    currentZ: number;\n    currentX: number;\n    yStart: number;\n\n    setup(top: Vertex, bottom: Vertex) {\n        this.yDistance = bottom.projection.y - top.projection.y;\n        this.slope = (bottom.projection.x - top.projection.x) / this.yDistance;\n        this.zslope = (1 / bottom.projection.z - 1 / top.projection.z) / this.yDistance;\n        this.currentZ = 1.0 / top.projection.z;\n        this.currentX = top.projection.x;\n        this.yStart = top.projection.y;\n    }\n\n    advance() {\n        this.currentX += this.slope;\n        this.currentZ += this.zslope;\n    }\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\nimport { ColorInterpolator } from './ColorInterpolator';\nimport { SlopeInterpolator } from './SlopeInterpolator';\n\nexport class GouraudShadingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n\n    private colorInterpolator1: ColorInterpolator = new ColorInterpolator();\n    private colorInterpolator2: ColorInterpolator = new ColorInterpolator();\n    private colorInterpolator3: ColorInterpolator = new ColorInterpolator();\n    private rowColorInterpolator: ColorInterpolator = new ColorInterpolator();\n    private leftSlope: SlopeInterpolator = new SlopeInterpolator();\n    private rightSlope: SlopeInterpolator = new SlopeInterpolator();\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        this.leftSlope.setup(v1, v2);\n        this.rightSlope.setup(v1, v3);\n        this.colorInterpolator1.setup(v1.color, v2.color, this.leftSlope.yDistance);\n        this.colorInterpolator2.setup(v1.color, v3.color, this.rightSlope.yDistance);\n        this.drawSpan(framebuffer, this.leftSlope, this.colorInterpolator1, this.colorInterpolator2, this.leftSlope, this.rightSlope);\n\n        this.leftSlope.setup(v2, v3);\n        this.colorInterpolator3.setup(v2.color, v3.color, this.leftSlope.yDistance);\n        this.drawSpan(framebuffer, this.leftSlope, this.colorInterpolator3, this.colorInterpolator2,this.leftSlope, this.rightSlope);\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        this.leftSlope.setup(v1, v3);\n        this.rightSlope.setup(v1, v2);\n        this.colorInterpolator2.setup(v1.color, v2.color, this.rightSlope.yDistance);\n        this.colorInterpolator1.setup(v1.color, v3.color, this.leftSlope.yDistance);\n        this.drawSpan(framebuffer, this.rightSlope, this.colorInterpolator1, this.colorInterpolator2,this.leftSlope, this.rightSlope);\n\n        this.rightSlope.setup(v2, v3);\n        this.colorInterpolator3.setup(v2.color, v3.color, this.rightSlope.yDistance);\n        this.drawSpan(framebuffer, this.rightSlope, this.colorInterpolator1, this.colorInterpolator3,this.leftSlope, this.rightSlope);\n    }\n\n    drawSpan(framebuffer: Framebuffer, shortSlope: SlopeInterpolator, colorInterpolator1: ColorInterpolator, colorInterpolator2: ColorInterpolator,\n        leftSlope: SlopeInterpolator, rightSlope: SlopeInterpolator) {\n        \n        let yPosition = shortSlope.yStart;\n        for (let i = 0; i < shortSlope.yDistance; i++) {\n            const length = Math.round(rightSlope.currentX) - Math.round(leftSlope.currentX);\n            this.rowColorInterpolator.setup(colorInterpolator1.startColor, colorInterpolator2.startColor, length);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(leftSlope.currentX);\n            const spanzStep = (rightSlope.currentZ - leftSlope.currentZ) / length;\n            let wStart = leftSlope.currentZ;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    framebuffer.framebuffer[framebufferIndex] = this.rowColorInterpolator.startColor.toPackedFormat();\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                this.rowColorInterpolator.advance();\n            }\n\n            leftSlope.advance()\n            rightSlope.advance();\n           \n            colorInterpolator1.advance();\n            colorInterpolator2.advance();\n\n            yPosition++;\n        }\n    }\n\n}\n","import { Color } from '../core/Color';\nimport { Framebuffer } from '../Framebuffer';\nimport { FlatshadedMesh } from '../geometrical-objects/FlatshadedMesh';\nimport { Vector4f } from '../math/index';\nimport { Matrix4f } from '../math/Matrix4f';\nimport { SutherlandHodgman2DClipper } from '../screen-space-clipping/SutherlandHodgman2DClipper';\nimport { Fog } from '../shading/fog/Fog';\nimport { PhongLighting } from '../shading/illumination-models/PhongLighting';\nimport { PointLight } from '../shading/light/PointLight';\nimport { Material } from '../shading/material/Material';\nimport { Vertex } from '../Vertex';\nimport { AbstractRenderingPipeline } from './AbstractRenderingPipeline';\nimport { AbstractTriangleRasterizer } from '../rasterizer/AbstractTriangleRasterizer';\nimport { GouraudShadingTriangleRasterizer } from '../rasterizer/GouraudShadingTriangleRasterizer';\n\n/**\n * TODO:\n * - object with position, rotation, material, color\n * - remove tempp matrix objects: instead store one global MV  matrix and manipulate\n *   it directly without generating temp amtrices every frame\n * - no lighting for culled triangles\n * - only z clip if necessary (no clip, fully visible)\n * Optimization:\n * - no shading / only texture mapping (use function pointers to set correct rasterization function)\n * - use delta step method from black art of 3d programming\n * - generate object only once\n * - dont use temp arrays / instead use always the same array preallocated\n */\nexport class GouraudShadingRenderingPipeline extends AbstractRenderingPipeline {\n\n    private fog: Fog = null;\n    private lights: Array<PointLight> = null;\n    private material: Material = null;\n    private lighting: boolean = true;\n    private color: Color = Color.WHITE;\n\n    // it is possible to change the rasterizer here for\n    // flat, gouroud, texture mapping etc.. should be done with clipper as well!\n    private triangleRasterizer: AbstractTriangleRasterizer = null;\n    private clipper: SutherlandHodgman2DClipper;\n\n    private projectedVertices: Array<Vector4f> = new Array<Vector4f>(\n        new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1)\n    );\n\n    private vertexArray: Array<Vertex> = new Array<Vertex>(\n        new Vertex(), new Vertex(), new Vertex()\n    );\n\n    public constructor(framebuffer: Framebuffer) {\n        super(framebuffer);\n        this.clipper = new SutherlandHodgman2DClipper(framebuffer);\n\n        const light1: PointLight = new PointLight();\n        light1.ambientIntensity = new Vector4f(1, 1, 1, 1);\n        light1.diffuseIntensity = new Vector4f(1, 1, 1, 1);\n        light1.specularIntensity = new Vector4f(1, 1, 1, 1);\n        light1.position = new Vector4f(3, 0, -2, 1);\n\n        const light2: PointLight = new PointLight();\n        light2.ambientIntensity = new Vector4f(0, 0, 1, 1);\n        light2.diffuseIntensity = new Vector4f(0, 0.6, 1, 1);\n        light2.specularIntensity = new Vector4f(0.8, 0.8, 0.8, 1);\n        light2.position = new Vector4f(0, -380, -180, 1);\n\n        this.lights = [light1, light2];\n\n        const mat: Material = new Material();\n        mat.ambientColor = new Vector4f(0.12, 0.14, 0.1, 0);\n        mat.diffuseColor = new Vector4f(0.38, 0.4, 0.4, 1);\n        mat.specularColor = new Vector4f(0.8, 0.5, 0.5, 0);\n        mat.shininess = 2;\n\n        this.material = mat;\n        this.triangleRasterizer = new GouraudShadingTriangleRasterizer(framebuffer);\n    }\n\n    public setFramebuffer(framebuffer: Framebuffer) {\n        this.framebuffer = framebuffer;\n    }\n\n    public setFog(fog: Fog): void {\n        this.fog = fog;\n    }\n\n    public setLights(lights: Array<PointLight>): void {\n        this.lights = lights;\n    }\n\n    public enableLighting(enable: boolean): void {\n        this.lighting = enable;\n    }\n\n    public setMaterial(material: Material): void {\n        this.material = material;\n    }\n\n    public setColor(color: Color): void {\n        this.color = color;\n    }\n\n    public drawMeshArray(framebuffer: Framebuffer, meshes: Array<FlatshadedMesh>, modelViewMartrix: Matrix4f): void {\n        for (let j: number = 0; j < meshes.length; j++) {\n            const model: FlatshadedMesh = meshes[j];\n            this.draw(framebuffer, model,modelViewMartrix);\n        }\n    }\n\n\n    public draw(framebuffer: Framebuffer, mesh: FlatshadedMesh, modelViewMartrix: Matrix4f): void {\n\n        const normalMatrix: Matrix4f = modelViewMartrix.computeNormalMatrix();\n\n        for (let i: number = 0; i < mesh.normals.length; i++) {\n            normalMatrix.multiplyHomArr(mesh.normals[i], mesh.transformedNormals[i]);\n        }\n\n        for (let i: number = 0; i < mesh.points.length; i++) {\n            modelViewMartrix.multiplyHomArr(mesh.points[i], mesh.transformedPoints[i]);\n        }\n\n        for (let i: number = 0; i < mesh.faces.length; i++) {\n            const v1: Vector4f = mesh.transformedPoints[mesh.faces[i].v1];\n            const v2: Vector4f = mesh.transformedPoints[mesh.faces[i].v2];\n            const v3: Vector4f = mesh.transformedPoints[mesh.faces[i].v3];\n\n            const normal1: Vector4f = mesh.transformedNormals[mesh.faces[i].n1];\n            const normal2: Vector4f = mesh.transformedNormals[mesh.faces[i].n2];\n            const normal3: Vector4f = mesh.transformedNormals[mesh.faces[i].n3];\n\n            if (this.isInFrontOfNearPlane(v1) &&\n                this.isInFrontOfNearPlane(v2) &&\n                this.isInFrontOfNearPlane(v3)) {\n\n                this.project2(v1, this.projectedVertices[0]);\n                this.project2(v2, this.projectedVertices[1]);\n                this.project2(v3, this.projectedVertices[2]);\n\n                this.vertexArray[0].position = v1;\n                this.vertexArray[0].projection = this.projectedVertices[0];\n                this.vertexArray[0].normal = normal1;\n\n                this.vertexArray[1].position = v2;\n                this.vertexArray[1].projection = this.projectedVertices[1];\n                this.vertexArray[1].normal = normal2;\n\n                this.vertexArray[2].position = v3;\n                this.vertexArray[2].projection = this.projectedVertices[2];\n                this.vertexArray[2].normal = normal3;\n\n                this.renderConvexPolygon(framebuffer, this.vertexArray, true);\n            } else if (!this.isInFrontOfNearPlane(v1) &&\n                !this.isInFrontOfNearPlane(v2) &&\n                !this.isInFrontOfNearPlane(v3)) {\n                continue;\n            } else {\n                this.vertexArray[0].position = v1;\n                this.vertexArray[1].position = v2;\n                this.vertexArray[2].position = v3;\n\n                if (this.lighting) {\n                    this.vertexArray[0].color = this.computeColor(normal1, v1);\n                    this.vertexArray[1].color = this.computeColor(normal2, v2);\n                    this.vertexArray[2].color = this.computeColor(normal3, v3);\n                } else {\n                    this.vertexArray[0].color = this.color;\n                    this.vertexArray[1].color = this.color;\n                    this.vertexArray[2].color = this.color;\n                }\n\n                const output: Array<Vertex> = this.zClipTriangle(this.vertexArray);\n\n                if (output.length < 3) {\n                    return;\n                }\n\n                for (let j: number = 0; j < output.length; j++) {\n                    output[j].projection = this.project(output[j].position);\n                }\n\n                this.renderConvexPolygon(framebuffer, output, false);\n            }\n        }\n    }\n\n    public project(t1: { x: number, y: number, z: number }): Vector4f {\n        return new Vector4f(\n            Math.round((this.framebuffer.width / 2) + (292 * t1.x / (-t1.z))),\n            Math.round((this.framebuffer.height / 2) - (t1.y * 292 / (-t1.z))),\n            t1.z\n        );\n    }\n\n    public project2(t1: { x: number, y: number, z: number }, result: Vector4f): void {\n        result.x = Math.round((this.framebuffer.width / 2) + (292 * t1.x / (-t1.z)));\n        result.y = Math.round((this.framebuffer.height / 2) - (t1.y * 292 / (-t1.z)));\n        result.z = t1.z;\n    }\n\n    public computeNearPlaneIntersection(p1: Vertex, p2: Vertex): Vertex {\n        // TODO: interpolate color linear\n        const ratio: number = (this.NEAR_PLANE_Z - p1.position.z) / (p2.position.z - p1.position.z);\n        const vertex: Vertex = new Vertex();\n        vertex.position = new Vector4f(\n            ratio * (p2.position.x - p1.position.x) + p1.position.x,\n            ratio * (p2.position.y - p1.position.y) + p1.position.y,\n            this.NEAR_PLANE_Z\n        );\n        vertex.color = p2.color.sub(p1.color).mul(ratio).add(p1.color);\n        return vertex;\n    }\n\n    public zClipTriangle(subject: Array<Vertex>): Array<Vertex> {\n        const input: Array<Vertex> = subject;\n        const output: Array<Vertex> = new Array<Vertex>();\n        let S: Vertex = input[input.length - 1];\n\n        for (let i: number = 0; i < input.length; i++) {\n            const point: Vertex = input[i];\n            if (this.isInFrontOfNearPlane(point.position)) {\n                if (!this.isInFrontOfNearPlane(S.position)) {\n                    output.push(this.computeNearPlaneIntersection(S, point));\n                }\n                output.push(point);\n            } else if (this.isInFrontOfNearPlane(S.position)) {\n                output.push(this.computeNearPlaneIntersection(S, point));\n            }\n            S = point;\n        }\n\n        return output;\n    }\n\n    private renderConvexPolygon(framebuffer: Framebuffer, projected: Array<Vertex>, late: boolean = false): void {\n        if (projected.length === 3 &&\n            !this.isTriangleCCW(\n                projected[0].projection,\n                projected[1].projection,\n                projected[2].projection)) {\n            return;\n        }\n\n        if (late) {\n            if (this.lighting) {\n                this.vertexArray[0].color = this.computeColor(this.vertexArray[0].normal, this.vertexArray[0].position);\n                this.vertexArray[1].color = this.computeColor(this.vertexArray[1].normal, this.vertexArray[1].position);\n                this.vertexArray[2].color = this.computeColor(this.vertexArray[2].normal, this.vertexArray[2].position);\n            } else {\n                this.vertexArray[0].color = this.color;\n                this.vertexArray[1].color = this.color;\n                this.vertexArray[2].color = this.color;\n            }\n\n        }\n\n        if (projected.length === 4 &&\n            !this.isTriangleCCW2(\n                projected[0].projection,\n                projected[1].projection,\n                projected[2].projection,\n                projected[3].projection)\n        ) {\n            return;\n        }\n\n        const clippedPolygon: Array<Vertex> = this.clipper.clipConvexPolygon(projected);\n\n        if (clippedPolygon.length < 3) {\n            return;\n        }\n\n        this.triangulateConvexPolygon(framebuffer, clippedPolygon);\n    }\n\n    private triangulateConvexPolygon(framebuffer:Framebuffer, clippedPolygon: Array<Vertex>): void {\n        for (let j: number = 0; j < clippedPolygon.length - 2; j++) {\n            this.triangleRasterizer.drawTriangleDDA(\n                framebuffer,\n                clippedPolygon[0],\n                clippedPolygon[1 + j],\n                clippedPolygon[2 + j]\n            );\n        }\n    }\n\n    private computeColor(normal: Vector4f, vertex: Vector4f): Color {\n\n        // TODO: if lighting is enabled use mat and light\n        // else use Color set\n\n        let vertexColor: Vector4f = new PhongLighting().computeColor(this.material, this.lights, normal, vertex);\n\n        if (this.fog !== null) {\n            vertexColor = this.fog.computeVertexColor(vertexColor, vertex);\n        }\n\n        return new Color(\n            Math.min(255, vertexColor.x * 255),\n            Math.min(255, vertexColor.y * 255),\n            Math.min(255, vertexColor.z * 255),\n            255\n        );\n    }\n\n}\n","import { CullFace } from '../../CullFace';\nimport { Framebuffer } from '../../Framebuffer';\nimport { TorusKnot } from '../../geometrical-objects/TorusKnot';\nimport { Matrix4f } from '../../math/Matrix4f';\nimport { Vector4f } from '../../math/Vector4f';\nimport { AbstractScene } from '../../scenes/AbstractScene';\nimport { Fog } from '../../shading/fog/Fog';\nimport { LinearFog } from '../../shading/fog/LinearFog';\nimport { Texture } from '../../texture/Texture';\nimport { TextureUtils } from '../../texture/TextureUtils';\nimport RandomNumberGenerator from '../../RandomNumberGenerator';\nimport { GouraudShadingRenderingPipeline } from '../../rendering-pipelines/GouraudShadingRenderingPipeline';\n\nexport class TorusKnotTunnelScene extends AbstractScene {\n\n    private noise: Texture;\n    private particleTexture: Texture;\n    private cocoon: Texture;\n    private torusKnot: TorusKnot = new TorusKnot(true);\n    private fog: Fog = new LinearFog(-50, -240, new Vector4f(0.67, 0.4, 0.5, 1.0));\n    private renderingPipeline: GouraudShadingRenderingPipeline;\n\n    public init(framebuffer: Framebuffer): Promise<any> {\n        this.renderingPipeline = new GouraudShadingRenderingPipeline(framebuffer);\n        this.renderingPipeline.setCullFace(CullFace.FRONT);\n        this.renderingPipeline.setFog(this.fog);\n\n        return Promise.all([\n            TextureUtils.generateProceduralNoise().then((texture: Texture) => this.noise = texture),\n            TextureUtils.load(require('@assets/cocoon.png'), false).then(\n                (texture: Texture) => this.cocoon = texture\n            ),\n            TextureUtils.generateProceduralParticleTexture2().then(\n                (texture: Texture) => this.particleTexture = texture\n            ),\n        ]);\n    }\n\n    public render(framebuffer: Framebuffer, time: number): void {\n        this.renderingPipeline.setCullFace(CullFace.FRONT);\n        this.torusTunnel(framebuffer, time * 0.019);\n        framebuffer.drawScaledTextureClipAdd(\n            framebuffer.width / 2 - this.cocoon.width / 2,\n            framebuffer.height / 2 - this.cocoon.height / 2,\n            this.cocoon.width, this.cocoon.height, this.cocoon, 0.67);\n\n        // framebuffer.noise(time, this.noise);\n        this.glitchScreen(framebuffer, time * 5, this.noise);\n    }\n\n    public glitchScreen(framebuffer: Framebuffer, elapsedTime: number, texture: Texture, noise: boolean = true): void {\n\n        const glitchFactor = (Math.sin(elapsedTime * 0.00002) * 0.9 + 0.1);\n        const rng = new RandomNumberGenerator();\n        rng.setSeed((elapsedTime / 250) | 0);\n        const texture2 = new Texture();\n        texture2.height = framebuffer.height;\n        texture2.width = framebuffer.width;\n        texture2.texture = framebuffer.framebuffer;\n\n\n        const blockWidth = 20;\n        const horizontalUnits = Math.floor(framebuffer.width / blockWidth);\n        const verticalUnits = Math.floor(framebuffer.height / blockWidth);\n\n        for (let x = 0; x < horizontalUnits; x++) {\n            for (let y = 0; y < verticalUnits; y++) {\n                if (rng.getFloat() > 0.25) {\n                    continue;\n                }\n\n                framebuffer.drawTextureRect(blockWidth * (horizontalUnits - x), blockWidth * ((horizontalUnits * rng.getFloat()) | 0), blockWidth * x, blockWidth * y, blockWidth, blockWidth, texture2.texture, texture2.width, 0.03 + 0.35 * glitchFactor);\n            }\n        }\n\n        if (noise) {\n            for (let x = 0; x < horizontalUnits; x++) {\n                for (let y = 0; y < verticalUnits; y++) {\n                    framebuffer.drawTextureRect(x * blockWidth, y * blockWidth, blockWidth * (Math.round(elapsedTime / 100 + x + y) % 12), 0, blockWidth, blockWidth, texture.texture, texture.width, 0.1 + 0.3 * glitchFactor);\n                }\n            }\n        }\n\n        framebuffer.fastFramebufferCopy(framebuffer.tmpGlitch, framebuffer.framebuffer);\n\n        // now distort the tmpGlitch buffer and render to framebuffer again\n\n        const rng2 = new RandomNumberGenerator();\n\n        for (let k = 0; k < 8; k++) {\n            let yStart = Math.round(rng.getFloat() * 180);\n            const size = 3 + Math.round(rng.getFloat() * 20);\n            rng2.setSeed((elapsedTime / 250) | 0);\n            const scale = rng2.getFloat() * glitchFactor;\n            const off = rng.getFloat() * glitchFactor;\n            for (let y = 0; y < size; y++) {\n                const offset = Math.abs(Math.round(off * 25) + Math.round(rng2.getFloat() * 3)\n                    + Math.round(Math.cos(y * 0.01 + elapsedTime * 0.002 + off) * scale * 5));\n\n                let index = yStart * framebuffer.width;\n                let glIndex = yStart * framebuffer.width + framebuffer.width - offset;\n\n                for (let i = 0; i < Math.max(0, offset); i++) {\n                    framebuffer.framebuffer[index++] = framebuffer.tmpGlitch[glIndex++];\n                }\n\n                glIndex = yStart * framebuffer.width;\n                const count = framebuffer.width - offset;\n\n                for (let i = 0; i < count; i++) {\n                    framebuffer.framebuffer[index++] = framebuffer.tmpGlitch[glIndex++];\n                }\n                yStart++;\n            }\n        }\n    }\n\n    public torusTunnel(framebuffer: Framebuffer, elapsedTime: number): void {\n        framebuffer.clearDepthBuffer();\n\n        const scale = 1.0;\n        const lookAhead: number = 0.4;\n\n        const frame = this.torusFunction3(elapsedTime * 0.02);\n        const frame2 = this.torusFunction3(elapsedTime * 0.02 + lookAhead);\n\n        const tangent = frame2.sub(frame).normalize();\n        let up = frame.add(frame2).normalize();\n        const right = tangent.cross(up).normalize();\n        up = right.cross(tangent).normalize();\n\n        const translation = Matrix4f.constructIdentityMatrix();\n        // translation vector\n        translation.m14 = -frame.x;\n        translation.m24 = -frame.y;\n        translation.m34 = -frame.z;\n\n        const rotation = Matrix4f.constructIdentityMatrix();\n        // x vector\n        rotation.m11 = right.x;\n        rotation.m21 = right.y;\n        rotation.m31 = right.z;\n\n        // y vector\n        rotation.m12 = up.x;\n        rotation.m22 = up.y;\n        rotation.m32 = up.z;\n\n        // z vector\n        rotation.m13 = -tangent.x;\n        rotation.m23 = -tangent.y;\n        rotation.m33 = -tangent.z;\n\n        const finalMatrix = rotation.transpose().multiplyMatrix(translation);\n\n        let modelViewMartrix = Matrix4f.constructScaleMatrix(scale, scale, scale).multiplyMatrix(Matrix4f.constructYRotationMatrix(elapsedTime * 0.035));\n        modelViewMartrix = Matrix4f.constructTranslationMatrix(0, 0, -10).multiplyMatrix(modelViewMartrix.multiplyMatrix(Matrix4f.constructXRotationMatrix(elapsedTime * 0.04)));\n        modelViewMartrix = Matrix4f.constructZRotationMatrix(elapsedTime * 0.01).multiplyMatrix(finalMatrix);\n\n        this.renderingPipeline.draw(framebuffer, this.torusKnot.getMesh(), modelViewMartrix);\n    }\n\n    private torusFunction3(alpha: number): Vector4f {\n        const p = 2;\n        const q = 3;\n        const r = 0.5 * (2 + Math.sin(q * alpha));\n        return new Vector4f(r * Math.cos(p * alpha),\n            r * Math.cos(q * alpha),\n            r * Math.sin(p * alpha)).mul(70);\n    }\n\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { AbstractScene } from '../../scenes/AbstractScene';\nimport { Texture } from '../../texture';\nimport { TorusKnotTunnelScene } from '../torus-knot-tunnel/TorusKnotTunnelScene';\n\nexport class FeedbackRadialBlur extends AbstractScene {\n\n    private tunnelScene: TorusKnotTunnelScene = new TorusKnotTunnelScene();\n    private accumulationBuffer: Uint32Array;\n\n    public init(framebuffer: Framebuffer): Promise<any> {\n        this.accumulationBuffer = new Uint32Array(framebuffer.width * framebuffer.height);\n\n        return Promise.all([\n            this.tunnelScene.init(framebuffer)\n        ]);\n    }\n\n    public render(framebuffer: Framebuffer, time: number): void {\n        this.tunnelScene.render(framebuffer, time);\n        this.applyRadialBlur(framebuffer, time);\n    }\n\n    public applyRadialBlur(framebuffer: Framebuffer, time: number): void {\n        const texture: Texture = new Texture();\n\n        texture.texture = this.accumulationBuffer;\n        texture.width = framebuffer.width;\n        texture.height = framebuffer.height;\n\n        const scaleX = 1.018;\n        const scaleY = 1.018;\n        const width = framebuffer.width * scaleX;\n        const height = framebuffer.height* scaleY;\n\n        const alphaScale = (Math.sin(time * 0.00005) * 0.5) + 0.5;\n\n        framebuffer.drawScaledTextureClipBi(\n            Math.round(framebuffer.width / 2 - width / 2),\n            Math.round(framebuffer.height / 2 - height / 2),\n            width, height, texture, 1.0 * alphaScale\n        );\n\n        framebuffer.fastFramebufferCopy(this.accumulationBuffer, framebuffer.framebuffer);\n    }\n\n}\n","import { Matrix4f } from '../../math/index';\n\n/**\n * The primary purpose of the model view matrix class is to reduce\n * the instanciation of temporary matrix classes by reusing existing instances.\n */\nexport class ModelViewMatrix {\n\n    private currtentMatrix: Matrix4f;\n    private tempMatrix: Matrix4f;\n    private temp: Matrix4f;\n    private transformation: Matrix4f;\n\n    public constructor() {\n        this.currtentMatrix = new Matrix4f();\n        this.tempMatrix = new Matrix4f();\n        this.temp = new Matrix4f();\n        this.transformation = new Matrix4f();\n    }\n\n    public getMatrix(): Matrix4f {\n        return this.currtentMatrix;\n    }\n\n    public setIdentity(): void {\n        this.currtentMatrix.setIdentityMatrix();\n    }\n\n    public multMatrix(mat: Matrix4f): void {\n        this.currtentMatrix = this.currtentMatrix.multiplyMatrix(mat);\n    }\n\n    public translate(x: number, y: number, z: number): void {\n        this.transformation.setTranslationMatrix(x, y, z);\n        this.applyMat();\n    }\n\n    public scal(x: number, y: number, z: number): void {\n        this.transformation.setScaleMatrix(x, y, z);\n        this.applyMat();\n    }\n\n    public xRotate(x: number): void {\n        this.transformation.setXRotationMatrix(x);\n        this.applyMat();\n    }\n\n    public zRotate(x: number): void {\n        this.transformation.setZRotationMatrix(x);\n        this.applyMat();\n    }\n\n    public yRotate(x: number): void {\n        this.transformation.setYRotationMatrix(x);\n        this.applyMat();\n    }\n\n    public rotate(x,y,z, angle: number): void {\n        this.transformation.setRotationMatrix(x,y,z,angle);\n        this.applyMat();\n    }\n\n    private applyMat(): void {\n\n        this.tempMatrix.multiply2(this.currtentMatrix, this.transformation);\n        // switch back and front\n        this.temp = this.currtentMatrix;\n        this.currtentMatrix = this.tempMatrix;\n        this.tempMatrix = this.temp;\n    }\n\n}\n","import { Color } from '../../core/Color';\nimport { Framebuffer } from '../../Framebuffer';\nimport { Interpolator } from '../../math/Interpolator';\nimport RandomNumberGenerator from '../../RandomNumberGenerator';\nimport { AbstractScene } from '../../scenes/AbstractScene';\nimport { Texture, TextureUtils } from '../../texture';\n\nexport class TextZoomerScene extends AbstractScene {\n\n    private noise: Texture;\n    private micro: Texture;\n\n    public init(): Promise<any> {\n\n        return Promise.all([\n            TextureUtils.load(require('@assets/microstrange.png'), false).then(texture => this.micro = texture),\n            TextureUtils.generateProceduralNoise().then(texture => this.noise = texture)\n        ]);\n    }\n\n\n    public render(framebuffer: Framebuffer, time: number): void {\n        framebuffer.clearColorBuffer(Color.BLACK.toPackedFormat());\n        this.effect(framebuffer, time, 0.3);\n    }\n    public effect(framebuffer: Framebuffer, time: number, noise: number) {\n        framebuffer.noise(time, this.noise, noise);\n        time *= .3;\n        const count = (time * 0.0018);\n        const index = (count | 0) % 100;\n        let scale = (count - (count | 0));\n        const alpha = (Interpolator.cosineInterpolate(0, 0.2, scale) * (1 - Interpolator.cosineInterpolate(0.8, 1.0, scale))) * 0.75;\n        scale = 1 * 3 / (scale * 50);\n        const width = (this.micro.width * scale * 6) | 0;\n        const height = (this.micro.height * scale * 6) | 0;\n        const rng = new RandomNumberGenerator();\n        rng.setSeed(22);\n        const pos = [];\n        for (let i = 0; i < 100; i++) {\n            pos.push({ x: rng.getFloat(), y: rng.getFloat() });\n        }\n\n        const xpos = 20 + (320 - 40) * pos[index].x;\n        const ypos = 20 + (200 - 40) * pos[index].y;\n        framebuffer.drawScaledTextureClipBiAdd(\n            Math.round(xpos - width / 2),\n            Math.round(ypos - height / 2),\n            width, height, this.micro, alpha);\n    }\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Color } from '../../core/Color';\nimport { CullFace } from '../../CullFace';\nimport { Framebuffer } from '../../Framebuffer';\nimport { Vector4f } from '../../math/index';\nimport { TexturedMesh } from '../../rendering-pipelines/TexturedMesh';\nimport { TexturingRenderingPipeline } from '../../rendering-pipelines/TexturingRenderingPipeline';\nimport { AbstractScene } from '../../scenes/AbstractScene';\nimport { SoundManager } from '../../sound/SoundManager';\nimport { Texture } from '../../texture/Texture';\nimport { TextureUtils } from '../../texture/TextureUtils';\nimport { TextureCoordinate } from '../../TextureCoordinate';\nimport { FeedbackRadialBlur } from '../feedback-radial-blur/FeedbackRadialBlur';\nimport { ModelViewMatrix } from '../md2/ModelViewMatrix';\nimport { TextZoomScene } from '../text-zoom/TextZoomScene';\nimport { TextZoomerScene } from '../text-zoomer/TextZoomerScene';\n\nimport './style.css';\n\nexport class ThirdPersonCameraScene extends AbstractScene {\n\n    private static readonly CLEAR_COLOR: number = Color.BLACK.toPackedFormat();\n\n    private soundManager: SoundManager = new SoundManager();\n    private ground: Texture;\n    private modelViewMatrix: ModelViewMatrix = new ModelViewMatrix();\n    private floor: TexturedMesh;\n    public textureBackground: Texture;\n    private texturedRenderingPipeline: TexturingRenderingPipeline;\n    private scene: FeedbackRadialBlur;\n    private scene2: TextZoomerScene;\n\n    public init(framebuffer: Framebuffer): Promise<any> {\n        this.texturedRenderingPipeline = new TexturingRenderingPipeline(framebuffer);\n        this.texturedRenderingPipeline.enableAlphaBlending();\n        this.texturedRenderingPipeline.setAlpha(1.2);\n        this.scene = new FeedbackRadialBlur();\n        this.scene2 = new TextZoomerScene();\n\n        this.texturedRenderingPipeline.setCullFace(CullFace.DISABLED);\n\n        return Promise.all([\n            this.scene.init(framebuffer),\n            this.scene2.init(),\n            this.soundManager.loadMusic(require(\"@assets/music/muffler_-_aphrodisiae.mod\")),\n            TextureUtils.load(require('@assets/psychadelic.png'), false).then(\n                (texture: Texture) => this.textureBackground = texture\n            ),\n            TextureUtils.load(require('@assets/eye.png'), true).then(\n                (texture: Texture) => this.ground = texture)\n        ]);\n    }\n\n    public onInit(): void {\n\n\n        const mesh: TexturedMesh = new TexturedMesh();\n        const size = 10.0;\n        const height = 0;\n        mesh.points = [\n            new Vector4f(-size, -height, size),\n            new Vector4f(size, -height, size),\n            new Vector4f(size, -height, -size),\n            new Vector4f(-size, -height, -size),\n        ];\n        mesh.uv = [\n            new TextureCoordinate(0, 0),\n            new TextureCoordinate(1.0, 0),\n            new TextureCoordinate(1.0, 1.0),\n            new TextureCoordinate(0, 1.0)\n        ];\n        mesh.points2 = mesh.points.map(() => new Vector4f(0, 0, 0, 0));\n        mesh.faces = [\n            {\n                uv: [0, 1, 2],\n                vertices: [0, 1, 2]\n            },\n            {\n                uv: [2, 3, 0],\n                vertices: [2, 3, 0]\n            }\n        ];\n        this.floor = mesh;\n\n        const button: HTMLButtonElement = document.createElement(\"button\");\n        button.textContent = \"Start Music\";\n        document.getElementsByTagName(\"body\")[0].appendChild(button);\n        button.addEventListener (\"click\", ()=> {\n\n            this.soundManager.onPause();\n            this.soundManager.onPlay()\n        });\n    }\n\n\n\n    public render(framebuffer: Framebuffer, time: number): void {\n        framebuffer.clearColorBuffer(ThirdPersonCameraScene.CLEAR_COLOR);\n     //   framebuffer.clearDepthBuffer();\n\n     //framebuffer.drawScaledTextureClipBi(0,0,this.textureBackground.width, this.textureBackground.height, this.textureBackground, 1.0);\n\n\n\n       framebuffer.setTexture(this.ground);\n\n        for( let i=0; i < 1; i++) {\n            framebuffer.clearDepthBuffer();\n\n            this.modelViewMatrix.setIdentity();\n\n            this.modelViewMatrix.translate(0,0,-70+((time*0.06)%70));\n            this.texturedRenderingPipeline.setAlpha(((time*0.06)%70)/70);\n           this.modelViewMatrix.zRotate((time*0.006)%70);\n            this.modelViewMatrix.rotate(1, 0, 0,90);\n            this.texturedRenderingPipeline.setModelViewMatrix(this.modelViewMatrix.getMatrix());\n\n            this.texturedRenderingPipeline.draw(framebuffer, this.floor);\n        }\n        this.scene2.effect(framebuffer, time,(Math.sin(time*0.0002)*0.5 +0.5)*0.2+0.1);\n        this.scene.applyRadialBlur(framebuffer,time);\n\n\n       // framebuffer.drawFog(new Color(20,20,20,45),0.04, 0.15);\n    }\n\n    private computeModelViewTransformation(time: number): void {\n\n    }\n\n\n\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./default-style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./default-style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Canvas } from '../../Canvas';\nimport { ThirdPersonCameraScene } from './ThirdPersonCameraScene';\n\nimport './../../default-style.css';\n\nclass Application {\n\n    public main(): void {\n        const canvas: Canvas = new Canvas(320, 200, new ThirdPersonCameraScene());\n        canvas.init();\n    }\n\n}\n\nnew Application().main();\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","JSRocket","SyncData","_track","getTrack","getIndexForName","name","getTrackLength","createIndex","varName","track","Track","getValue","row","keys","Object","idx","lo","hi","mi","findKeyIndex","Math","floor","value","k0","k1","a","b","t","interpolation","pow","add","SyncDevicePlayer","cfg","_urlRequest","_syncData","_eventHandler","load","url","XMLHttpRequest","open","onreadystatechange","urlRequestHandler","send","error","readyState","status","xmlString","key","tLen","kLen","trackList","DOMParser","parseFromString","getElementsByTagName","getAttribute","keyList","parseInt","parseFloat","ready","readXML","responseText","rocketXML","on","evt","handler","SyncDeviceClient","_ws","WebSocket","socketURL","toInt","arr","view","DataView","ArrayBuffer","setUint8","byteLength","getInt8","getInt32","onopen","binaryType","onmessage","queue","Uint8Array","cmd","pause","play","subarray","getFloat32","save","onclose","console","warn","onerror","utf8Name","replace","m","c","String","fromCharCode","message","charCodeAt","buffer","streamInt","SyncDevice","_device","_previousIntRow","_connected","_config","deviceReady","deviceUpdate","devicePlay","devicePause","init","mode","setConfig","option","hasOwnProperty","getConfig","Cowbell","Player","Audio","audio","src","body","createPlayer","containerElement","opts","getElementById","ui","UI","Basic","player","playerOpts","trackOpts","jQuery","fn","cowbell","each","OpenMPTGenerator","audioCtx","modulePtr","leftBufferPtr","rightBufferPtr","self","initModule","byteArray","Int8Array","ptrToFile","libopenmpt","_malloc","asciiToStack","str","stackStr","stackAlloc","writeAsciiToMemory","HEAPU8","set","_openmpt_module_create_from_memory","g","stack","stackSave","_openmpt_module_ctl_set","stackRestore","duration","_openmpt_module_get_duration_seconds","cleanup","_openmpt_module_destroy","_free","onReady","pathToLibOpenMPT","script","onRuntimeInitialized","ensureLibOpenMPT","channelCount","request","addEventListener","log","response","responseType","generateAudio","outputBuffer","outputL","getChannelData","outputR","framesToRender","framesRendered","framesPerChunk","min","actualFramesPerChunk","_openmpt_module_read_float_stereo","sampleRate","rawAudioLeft","HEAPF32","rawAudioRight","seekable","seek","position","_openmpt_module_set_position_seconds","reset","OpenMPT","Common","WebAudioPlayer","generatorConstructor","generator","AudioContext","webkitAudioContext","latencyHint","BUFFER_SIZE","HAVE_NOTHING","HAVE_METADATA","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","scriptNode","playStartTimestamp","generatorIsReady","playWasRequestedBeforeReady","hasStartedProcessing","playFromTime","newTime","disconnect","createScriptProcessor","onaudioprocess","paused","event","playbackTime","generatedLength","chan","numberOfChannels","channelData","currentTime","onended","ontimeupdate","onloadedmetadata","connect","destination","state","resume","onplay","pausedAtTrackTime","pausedAtTimestamp","onpause","__defineGetter__","__defineSetter__","close","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","globalThis","Function","prop","prototype","call","scriptUrl","importScripts","location","currentScript","scripts","p","nc","ScaleClipBlitter","framebuffer","constructor","drawScaledTextureClip","xp","yp","width","height","texture","alphaBlend","xStep","yStep","newHeight","newWidth","yStart","xStart","xTextureStart","xx","yy","max","alphaScale","index2","y","x","textureIndex","alpha","inverseAlpha","framebufferPixel","texturePixel","r","Color","static","toPackedFormat","sub","color","div","num","mul","CullFace","Vector4f","z","w","vec","cross","normalize","reci","sqrt","sub2","vec1","vec2","add2","scal","componentWiseMul","dot","cross2","normalize2","AbstractGeometricObject","mesh","inverse","buildMesh","points","normals","Array","normal","faces","n1","n2","n3","v1","v2","v3","transformedPoints","transformedNormals","getMesh","Vector3f","mult","scale","Torus","invert","super","STEPS2","frame","torusFunction","PI","frame2","up","right","pos","sin","cos","j","Vector2f","perp","Matrix4f","m11","m12","m13","m14","m21","m22","m23","m24","m31","m32","m33","m34","m41","m42","m43","m44","constructIdentityMatrix","matrix","setIdentityMatrix","transpose","computeNormalMatrix","inverseTranslation","scale1","scale2","scale3","inverseRotation","multiplyMatrix","getInverseRotation","getRotation","constructShadowMatrix","planePoint","planeNormal","lightPosition","NdotL","shadowMatrix","constructTranslationMatrix","tx","ty","tz","setTranslationMatrix","constructXRotationMatrix","setXRotationMatrix","setZRotationMatrix","setScaleMatrix","sx","sy","sz","setYRotationMatrix","setRotationMatrix","s","vector","constructYRotationMatrix","constructZRotationMatrix","constructScaleMatrix","multiply2","matrix2","multiply","multiplyHom","multiplyHomArr","multiplyHomArr2","multiplyArr","Matrix3f","angle","xScale","yScale","zScale","Interpolator","interpolate","start","end","current","cosineInterpolate","y1","y2","mu","mu2","RandomNumberGenerator","seed","getFloat","setSeed","AbstractTriangleRasterizer","AbstractScannlineTriangleRasterizer","temp","drawTriangleDDA","p1","p2","p3","projection","fillLongRightTriangle","fillLongLeftTriangle","FlatShadingTriangleRasterizer","slope1","slope2","zslope1","zslope2","curz1","curz2","xPosition","xPosition2","yPosition","yDistanceLeft","yDistanceRight","drawSpan","distance","spanzStep","round","wStart","framebufferIndex","wBuffer","LineRasterizerDda","drawLineDDA","xDistance","yDistance","dx","dy","abs","sign","wDelta","drawPixel","LineRasterizerNoZ","drawLineDDANoZ","TexturedTriangleRasterizer","tslope1u","textureCoordinate","u","tslope1v","v","curu1","curv1","tslope2u","tslope2v","curu2","curv2","spanuStep","spanvStep","uStart","vStart","bob","color2","TexturedAlphaBlendingTriangleRasterizer","pipeline","currentColor","getBilinearFilteredPixelRasterizer","TextureCoordinate","Vertex","AbstractRenderingPipeline","NEAR_PLANE_Z","cullMode","BACK","setCullFace","face","setAlpha","isInFrontOfNearPlane","isTriangleCCW","DISABLED","det","isTriangleCCW2","v4","TexturingRenderingPipeline","sphereMapping","triangleRasterizer","vertexArray","setSphereMapping","modelViewMatrix","projectedVertices","setFramebuffer","enableAlphaBlending","disableAlphaBlending","setModelViewMatrix","drawMeshArray","meshes","model","draw","normalMatrix","normals2","points2","vertices","project2","fakeSphere","uv","clipConvexPolygon","zClipTriangle","t1","computeNearPlaneIntersection","ratio","vertex","subject","input","output","S","point","clipRegion","edge","isInside2","computeIntersection2","AbstractClipEdge","BottomClipEdge","isInside","minWindow","computeIntersection","factor","textCoord","computeIntersection3","CohenSutherlandLineClipper","cohenSutherlandLineClipper","col","code1","computeRegionCode","code2","accept","done","isTrivialAccept","isTrivialReject","REGION_CODE_CENTER","tempCode","tempPoint","REGION_CODE_TOP","maxWindow","REGION_CODE_BOTTOM","REGION_CODE_RIGHT","REGION_CODE_LEFT","regionCode","LeftClipEdge","RightClipEdge","TopClipEdge","Texture","maxWidth","maxHeight","clamp","setClamp","getPixel","getBilinearFilteredPixel","x0","x1","y0","x0y0","x1y0","x0y1","x1y1","col1","col2","getBilinearFilteredPixel2","getPixel2","interpolateComp","getPixelRasterizer","getPixel3","xFrac","yFrac","oneMinusXfrac","oneMinusYfrac","Framebuffer","camera","texturedTriangleRasterizer","scaleClipBlitter","texturedRenderingPipeline","lineRasterizer","lineRasterizerNo","tmpGlitch","lensFlareVisible","lensFlareStart","lensFlareEnd","imageData","unsignedIntArray","torus","plane","cylinder2","linerClipper","ImageData","Float32Array","arrayBuffer","PIXEL_SIZE_IN_BYTES","Uint8ClampedArray","Uint32Array","setTexture","getImageData","clear","BLACK","clearColorBuffer","fill","drawPixel4","drawPixel3","alpha2","drawPixelAntiAliased","roundedX","roundedY","percent","drawPixelAliased","drawPixelAntiAliasedSpacial","ceil","readPixel","drawRect","drawRect2","drawText","text","xpos","firstIndex","drawTextureRectFastAlpha","addReflections","Date","now","drawTextureRect2","xs","ys","xt","yt","h","texIndex","frIndex","drawTextureColorized","txPixel","drawTextureRectNoAlpha","blend","c1","c2","nAlpha","nInvAlpha","addColor","r1","g1","b1","r2","g2","b2","drawTextureRect","pixelWidth","fbPixel","drawTextureRectAdd","pixelate","xoff","yoff","drawBox2","fastFramebufferCopyOffset","dest","offset","l","fastFramebufferCopy","noise","elapsedTime","rng","drawTexturedBillboard","drawParticle","drawParticle2","imgNum","spritH","drawParticle2Sub","rr","gg","bb","drawParticleNoDepth","drawSoftParticle","zDist","drawFog","fogScale","fogOffset","videoMemorySize","wBufferScale","drawScaledTextureClipBi","drawScaledTextureClipBiAdd","drawScaledTextureClipAdd","drawTexture","SCREEN_WIDTH","SCREEN_HEIGHT","textureRowOffset","framebufferRowOffset","yHeight","xWidth","drawTextureFullscreen","drawTexture3","time","mHeight","drawTextureNoClipAlpha","nearPlaneClipping","t2","project","t3","clearDepthBuffer","drawBox","wireFrameSphereClipping","sphereFunction2","modelViewMartrix","transformed","colred","colLine","wireFrameTerrain","heightmap","xOff","zOff","forEach","drawBoundingSphere","sphere","getRadius","getCenter","drawPlanedeformationTunnelAnim","xdist","ydist","dist","dist2","atan2","color1","final","drawPlaneDeformation","IMG_WIDTH","IMG_HEIGHT","asin","fakeSphere2","tex","theta","phi","FullscreenUtils","toggleFullscreen","fullscreen","exitFullscreen","setStyle","enterFullscreen","el","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullScreen","mozCancelFullScreen","webkitExitFullscreen","Canvas","scene","canvas","context","startTime","boundRenderLoop","getContext","oImageSmoothingEnabled","imageSmoothingEnabled","webkitImageSmoothingEnabled","renderLoop","bind","appendTo","preventDefault","then","onInit","render","flipBackbuffer","requestAnimationFrame","putImageData","TexturedMesh","AbstractScene","Promise","all","ROW_RATE","BPM","SoundManager","syncDevice","isPlaying","demoMode","musicProperties","sceneData","audioElement","connected","loadMusic","filename","resolve","audioPlayer","split","pop","toLowerCase","prepareSync","onSyncReady","newRow","onSyncUpdate","onPlay","onPause","effect","snare","bass","transitionType","transitionValue","isNaN","updateMusic","timeSeconds","timeMilliseconds","click","info","jump","direction","sceneLength","effectJump","Number","toFixed","trunc","toggleSound","ref","isMuted","classList","muted","initTimeline","newLocal","jumpTo","localStorage","getItem","poll","display","updateRange","setTimeout","TextureUtils","generateProceduralNoise","generateProceduralParticleTexture","generateProceduralParticleTexture2","transparency","image","Image","onload","withAlpha","drawImage","conv","TorusKnot","torusFunction3","tangent","Fog","LinearFog","zStart","zEnd","fogColor","computeVertexColor","f","SutherlandHodgman2DClipper","PhongLighting","computeColor","mat","lights","finalColor","light","ambientIntensity","computeAmbientIntensity","diffuseIntensity","computeDiffuseIntensity","specularIntensity","computeSpecularIntensity","ambientColor","lightDirection","diffuseColor","shininess","specularColor","Light","PointLight","Material","emissiveColor","ColorInterpolator","startColor","colorSlope","setup","advance","SlopeInterpolator","slope","zslope","currentZ","currentX","top","bottom","GouraudShadingTriangleRasterizer","colorInterpolator1","colorInterpolator2","colorInterpolator3","rowColorInterpolator","leftSlope","rightSlope","shortSlope","GouraudShadingRenderingPipeline","fog","material","lighting","WHITE","clipper","light1","light2","setFog","setLights","enableLighting","enable","setMaterial","setColor","normal1","normal2","normal3","renderConvexPolygon","projected","late","clippedPolygon","triangulateConvexPolygon","vertexColor","TorusKnotTunnelScene","particleTexture","cocoon","torusKnot","renderingPipeline","FRONT","torusTunnel","glitchScreen","glitchFactor","texture2","blockWidth","horizontalUnits","verticalUnits","rng2","size","off","glIndex","translation","rotation","finalMatrix","FeedbackRadialBlur","tunnelScene","accumulationBuffer","applyRadialBlur","ModelViewMatrix","currtentMatrix","tempMatrix","transformation","getMatrix","setIdentity","multMatrix","translate","applyMat","xRotate","zRotate","yRotate","rotate","TextZoomerScene","micro","ypos","locals","ThirdPersonCameraScene","soundManager","ground","textureBackground","scene2","button","textContent","CLEAR_COLOR","computeModelViewTransformation","main"],"sourceRoot":""}