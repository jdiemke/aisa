{"version":3,"file":"room.js","mappings":"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","sources":["webpack://aisa/./src/default-style.css","webpack://aisa/./src/examples/room/style.css","webpack://aisa/./node_modules/css-loader/dist/runtime/api.js","webpack://aisa/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://aisa/./src/default-style.css?9c7b","webpack://aisa/./src/examples/room/style.css?d215","webpack://aisa/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://aisa/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://aisa/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://aisa/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://aisa/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://aisa/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://aisa/./src/Canvas.ts","webpack://aisa/./src/CullFace.ts","webpack://aisa/./src/Framebuffer.ts","webpack://aisa/./src/RandomNumberGenerator.ts","webpack://aisa/./src/TextureCoordinate.ts","webpack://aisa/./src/Vertex.ts","webpack://aisa/./src/blender/BlenderJsonParser.ts","webpack://aisa/./src/blitter/ScaleClipBlitter.ts","webpack://aisa/./src/core/Color.ts","webpack://aisa/./src/examples/room/RoomScene.ts","webpack://aisa/./src/fullscreen/FullscreenUtils.ts","webpack://aisa/./src/geometrical-objects/AbstractGeometricObject.ts","webpack://aisa/./src/geometrical-objects/Torus.ts","webpack://aisa/./src/math/Geometry.ts","webpack://aisa/./src/math/Interpolator.ts","webpack://aisa/./src/math/Matrix3.ts","webpack://aisa/./src/math/Matrix4f.ts","webpack://aisa/./src/math/Sphere.ts","webpack://aisa/./src/math/Vector2f.ts","webpack://aisa/./src/math/Vector3f.ts","webpack://aisa/./src/math/Vector4f.ts","webpack://aisa/./src/math/index.ts","webpack://aisa/./src/model/blender/BlenderLoader.ts","webpack://aisa/./src/rasterizer/AbstractScanlineTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/AbstractTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/ColorInterpolator.ts","webpack://aisa/./src/rasterizer/FlatShadingTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/GouraudShadingTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/SlopeInterpolator.ts","webpack://aisa/./src/rasterizer/TexturedAlphaBlendingTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/TexturedTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/line/LineRasterizer.ts","webpack://aisa/./src/rasterizer/line/LineRasterizerNoZ.ts","webpack://aisa/./src/rendering-pipelines/AbstractRenderingPipeline.ts","webpack://aisa/./src/rendering-pipelines/GouraudShadingRenderingPipeline.ts","webpack://aisa/./src/rendering-pipelines/TexturingRenderingPipeline.ts","webpack://aisa/./src/scenes/AbstractScene.ts","webpack://aisa/./src/screen-space-clipping/AbstractClipEdge.ts","webpack://aisa/./src/screen-space-clipping/BottomClipEdge.ts","webpack://aisa/./src/screen-space-clipping/CohenSutherlandLineClipper.ts","webpack://aisa/./src/screen-space-clipping/LeftClipEdge.ts","webpack://aisa/./src/screen-space-clipping/RightClipEdge.ts","webpack://aisa/./src/screen-space-clipping/SutherlandHodgman2DClipper.ts","webpack://aisa/./src/screen-space-clipping/TopClipEdge.ts","webpack://aisa/./src/shading/illumination-models/PhongLighting.ts","webpack://aisa/./src/shading/light/Light.ts","webpack://aisa/./src/shading/light/PointLight.ts","webpack://aisa/./src/shading/material/Material.ts","webpack://aisa/./src/sound/MusicProperties.ts","webpack://aisa/./src/sound/SoundManager.ts","webpack://aisa/./src/special-effects/LensFlare.ts","webpack://aisa/./src/texture/Texture.ts","webpack://aisa/./src/texture/TextureUtils.ts","webpack://aisa/./src/texture/index.ts","webpack://aisa/./src/sound/JSRocket.js","webpack://aisa/./src/sound/cowbell/audio_player.js","webpack://aisa/./src/sound/cowbell/cowbell.js","webpack://aisa/./src/sound/cowbell/openmpt/openmpt_player.js","webpack://aisa/./src/sound/cowbell/web_audio_player.js","webpack://aisa/webpack/bootstrap","webpack://aisa/webpack/runtime/compat get default export","webpack://aisa/webpack/runtime/define property getters","webpack://aisa/webpack/runtime/global","webpack://aisa/webpack/runtime/hasOwnProperty shorthand","webpack://aisa/webpack/runtime/make namespace object","webpack://aisa/webpack/runtime/publicPath","webpack://aisa/webpack/runtime/nonce","webpack://aisa/./src/examples/room/Application.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n    background-color: #000;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/default-style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,sBAAsB;AAC1B\",\"sourcesContent\":[\"body {\\n    background-color: #000;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `button {\n    background-color: #ff66ff;\n    border: none;\n    padding: 10px 30px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    border-radius: 18px;\n    cursor: pointer;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/examples/room/style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;IAClB,qBAAqB;IACrB,qBAAqB;IACrB,eAAe;IACf,mBAAmB;IACnB,eAAe;AACnB\",\"sourcesContent\":[\"button {\\n    background-color: #ff66ff;\\n    border: none;\\n    padding: 10px 30px;\\n    text-align: center;\\n    text-decoration: none;\\n    display: inline-block;\\n    font-size: 16px;\\n    border-radius: 18px;\\n    cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./default-style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./default-style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","import { Framebuffer } from './Framebuffer';\nimport { FullscreenUtils } from './fullscreen/FullscreenUtils';\nimport { AbstractScene } from './scenes/AbstractScene';\n\nexport class Canvas {\n\n    public framebuffer: Framebuffer;\n    private canvas: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D;\n    private startTime: number;\n    private boundRenderLoop: FrameRequestCallback;\n\n    constructor(width: number, height: number, private scene: AbstractScene) {\n        this.canvas = document.createElement('canvas');\n\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.canvas.id = 'aisa-canvas';\n\n        this.canvas.style.cssText = 'image-rendering: optimizeSpeed;' + // FireFox < 6.0\n            'image-rendering: -moz-crisp-edges;' + // FireFox\n            'image-rendering: -o-crisp-edges;' +  // Opera\n            'image-rendering: -webkit-crisp-edges;' + // Chrome\n            'image-rendering: crisp-edges;' + // Chrome\n            'image-rendering: -webkit-optimize-contrast;' + // Safari\n            'image-rendering: pixelated; ' + // Future browsers\n            '-ms-interpolation-mode: nearest-neighbor;'; // IE\n\n        this.canvas.style.width = `${width * 2}px`;\n        this.canvas.style.height = `${height * 2}px`;\n\n        this.context = this.canvas.getContext('2d');\n\n        // FIXME: make this cross browser compatible!\n        (this.context as any).oImageSmoothingEnabled = false;\n        this.context.imageSmoothingEnabled = false;\n        (this.context as any).webkitImageSmoothingEnabled = false;\n\n        this.framebuffer = new Framebuffer(width, height);\n        this.boundRenderLoop = this.renderLoop.bind(this);\n    }\n\n    public init(): void {\n        // add canvas element to target element\n        this.appendTo(document.getElementById('aisa'));\n\n        // Add fullscreen toggle on click\n        this.canvas.addEventListener('click', (event: MouseEvent) => {\n            event.preventDefault();\n            FullscreenUtils.toggleFullscreen(this.canvas);\n        });\n\n        // Init scene and start rendering\n        this.scene.init(this.framebuffer).then(\n            () => {\n                this.scene.onInit();\n                this.startTime = Date.now();\n                this.renderLoop();\n            }\n        );\n    }\n\n    public renderLoop(): void {\n        this.scene.render(this.framebuffer, Date.now() - this.startTime);\n        this.flipBackbuffer();\n        requestAnimationFrame(this.boundRenderLoop);\n    }\n\n    public flipBackbuffer(): void {\n        this.context.putImageData(this.framebuffer.getImageData(), 0, 0);\n    }\n\n    public appendTo(element: HTMLElement): void {\n        element.appendChild(this.canvas);\n    }\n\n}\n","export enum CullFace {\n    FRONT = 0,\n    BACK = 1\n}\n","\nimport { ScaleClipBlitter } from './blitter/ScaleClipBlitter';\nimport { ControllableCamera } from './camera';\nimport { Color } from './core/Color';\nimport { CullFace } from './CullFace';\nimport { Torus } from './geometrical-objects/Torus';\nimport { Matrix3f, Matrix4f, Vector2f, Vector3f, Vector4f } from './math';\nimport { Interpolator } from './math/Interpolator';\nimport { Sphere } from './math/Sphere';\nimport RandomNumberGenerator from './RandomNumberGenerator';\nimport { FlatShadingTriangleRasterizer } from './rasterizer/FlatShadingTriangleRasterizer';\nimport { LineRasterizerDda } from './rasterizer/line/LineRasterizer';\nimport { LineRasterizerNoZ } from './rasterizer/line/LineRasterizerNoZ';\nimport { TexturedTriangleRasterizer } from './rasterizer/TexturedTriangleRasterizer';\nimport { TexturingRenderingPipeline } from './rendering-pipelines/TexturingRenderingPipeline';\nimport { AbstractClipEdge } from './screen-space-clipping/AbstractClipEdge';\nimport { BottomClipEdge } from './screen-space-clipping/BottomClipEdge';\nimport { CohenSutherlandLineClipper } from './screen-space-clipping/CohenSutherlandLineClipper';\nimport { LeftClipEdge } from './screen-space-clipping/LeftClipEdge';\nimport { RightClipEdge } from './screen-space-clipping/RightClipEdge';\nimport { TopClipEdge } from './screen-space-clipping/TopClipEdge';\nimport { Texture } from './texture/Texture';\nimport { TextureCoordinate } from './TextureCoordinate';\nimport { Vertex } from './Vertex';\n\n/*\nimport { FlatShadingRenderingPipeline } from './rendering-pipelines/FlatShadingRenderingPipeline';\nimport { TexturingRenderingPipeline } from './rendering-pipelines/TexturingRenderingPipeline';\nimport { BlenderJsonParser } from './blender/BlenderJsonParser';\nimport { Material } from './shading/material/Material';\nimport { PointLight } from './shading/light/PointLight';\n*/\n\n\n// let labJson2 = <any>require('./assets/lab2.json');\n// let bakedJson = <any>require('./assets/abstract.json');\n\nexport class Framebuffer {\n\n    public static PIXEL_SIZE_IN_BYTES = 4;\n\n    public minWindow: Vector2f;\n    public maxWindow: Vector2f;\n\n\n    public framebuffer: Uint32Array;\n    public wBuffer: Float32Array;\n\n    public cullMode: CullFace = CullFace.BACK;\n\n    public camera: ControllableCamera;\n    public bob: Texture;\n    public triangleRasterizer = new FlatShadingTriangleRasterizer(this);\n    public texturedTriangleRasterizer = new TexturedTriangleRasterizer(this);\n\n    public scaleClipBlitter = new ScaleClipBlitter(this);\n    // public renderingPipeline: FlatShadingRenderingPipeline;\n     public texturedRenderingPipeline: TexturingRenderingPipeline;\n    public lineRasterizer = new LineRasterizerDda(this);\n    public lineRasterizerNo = new LineRasterizerNoZ(this);\n    public tmpGlitch: Uint32Array;\n\n    public lensFlareVisible: boolean = false;\n    public lensFlareStart = 0;\n    public lensFlareEnd = 0;\n\n    public width: number;\n    public height: number;\n    private imageData: ImageData;\n    private unsignedIntArray: Uint8ClampedArray;\n\n    private torus = new Torus();\n\n    private plane: {\n        points: Vector4f[];\n        points2: Vector4f[];\n        normals: Vector4f[];\n        normals2: Vector4f[];\n        index:Array<number>;\n    };\n\n    private cylinder2: {\n        points: Vector4f[];\n        points2: Vector4f[];\n        normals: Vector4f[];\n        normals2: Vector4f[];\n        index:Array<number>;\n    };\n\n    private linerClipper = new CohenSutherlandLineClipper(this);\n    public clipRegion = Array<AbstractClipEdge>();\n    private texture = new Texture();\n\n    constructor(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n\n        this.imageData = new ImageData(width, height);\n        this.wBuffer = new Float32Array(width * height);\n        const arrayBuffer = new ArrayBuffer(this.width * this.height * Framebuffer.PIXEL_SIZE_IN_BYTES);\n        this.unsignedIntArray = new Uint8ClampedArray(arrayBuffer);\n        this.framebuffer = new Uint32Array(arrayBuffer);\n        this.tmpGlitch = new Uint32Array(width * height);\n        // this.renderingPipeline = new FlatShadingRenderingPipeline(this);\n     this.texturedRenderingPipeline = new TexturingRenderingPipeline(this);\n        this.minWindow = new Vector2f(0, 0);\n        this.maxWindow = new Vector2f(width - 1, height - 1);\n\n        this.clipRegion = new Array<AbstractClipEdge>(\n            new RightClipEdge(this),\n            new LeftClipEdge(this),\n            new BottomClipEdge(this),\n            new TopClipEdge(this)\n        );\n    }\n\n    public setCullFace(face: CullFace): void {\n        this.cullMode = face;\n    }\n\n    public setTexture(texture: Texture): void {\n        this.bob = texture;\n    }\n\n    /*\n    public precompute(texture: Texture): void {\n        // this.blengetBlenderScene(hoodlumJson, false);\n\n         //this.cylinder = this.createCylinder();\n\n        // this.sphereDisp = this.createSphereDistplaced(texture);\n    }\n    */\n\n    public getImageData(): ImageData {\n        this.imageData.data.set(this.unsignedIntArray);\n        return this.imageData;\n    }\n\n    public clear() {\n        const color: number = Color.BLACK.toPackedFormat();\n        const count: number = this.width * this.height;\n        for (let i = 0; i < count; i++) {\n            this.framebuffer[i] = color;\n        }\n    }\n\n    public clearColorBuffer(color: number) {\n        this.framebuffer.fill(color);\n    }\n\n    public drawPixel(x: number, y: number, color: number) {\n        this.framebuffer[x + y * this.width] = color;\n\n    }\n    public drawPixel4(x: number, y: number, color: number, alpha: number) {\n        const index: number = x + y * this.width;\n        const inverseAlpha = 1 - alpha;\n        const r = (((this.framebuffer[index] >> 0) & 0xff) * (inverseAlpha)\n            + ((color >> 0) & 0xff) * (alpha)) | 0;\n        const g = (((this.framebuffer[index] >> 8) & 0xff) * (inverseAlpha) +\n            ((color >> 8) & 0xff) * (alpha)) | 0;\n        const b = (((this.framebuffer[index] >> 16) & 0xff) * (inverseAlpha) +\n            ((color >> 16) & 0xff) * (alpha)) | 0;\n        this.framebuffer[x + y * this.width] = r | (g << 8) | (b << 16) | (255 << 24);\n\n    }\n\n    public drawPixel3(x: number, y: number, color: number, alpha2: number) {\n\n        const index: number = x + y * this.width;\n        const alpha = ((color >> 24) & 0xff) / 255 * alpha2;\n        const inverseAlpha = 1 - alpha;\n\n        const r = (((this.framebuffer[index] >> 0) & 0xff) * (inverseAlpha)\n            + ((color >> 0) & 0xff) * (alpha)) | 0;\n        const g = (((this.framebuffer[index] >> 8) & 0xff) * (inverseAlpha) +\n            ((color >> 8) & 0xff) * (alpha)) | 0;\n        const b = (((this.framebuffer[index] >> 16) & 0xff) * (inverseAlpha) +\n            ((color >> 16) & 0xff) * (alpha)) | 0;\n\n        this.framebuffer[index] = r | (g << 8) | (b << 16) | (255 << 24);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * blended with the framebuffer background\n     *\n     * @param  {x} number                 this can be a float\n     * @param  {y} number                 this can be a float\n     * @param  {color} number             color to blend into framebuffer\n     */\n    drawPixelAntiAliased(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        const roundedX = Math.floor(x);\n        const roundedY = Math.floor(y);\n        const percentX = 1 - Math.abs(x - roundedX);\n        const percentY = 1 - Math.abs(y - roundedY);\n        const percent = percentX * percentY;\n        this.drawPixel3(roundedX, roundedY, color, percent);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * to the framebuffer background\n     */\n    drawPixelAliased(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        const roundedX = Math.round(x);\n        const roundedY = Math.round(y)\n        this.drawPixel(roundedX, roundedY, color);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * blended with the framebuffer background in a 4x4 matrix\n     * https://en.wikipedia.org/wiki/Spatial_anti-aliasing\n     */\n    drawPixelAntiAliasedSpacial(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        for (let roundedX = Math.floor(x); roundedX <= Math.ceil(x); roundedX++) {\n            for (let roundedY = Math.floor(y); roundedY <= Math.ceil(y); roundedY++) {\n                const percentX = 1 - Math.abs(x - roundedX);\n                const percentY = 1 - Math.abs(y - roundedY);\n                const percent = percentX * percentY;\n                this.drawPixel4(roundedX, roundedY, color, percent);\n            }\n        }\n    }\n\n    public readPixel(x: number, y: number): number {\n        return this.framebuffer[x + y * this.width];\n    }\n\n    public drawRect(x, y, width, color) {\n        let start = x + y * this.width;\n\n        for (let i = 0; i < width; i++) {\n            this.framebuffer[start++] = color;\n        }\n    }\n\n    public drawRect2(x: number, y: number, width: number, height: number, color: number) {\n        let start = x + y * this.width;\n        for (let j = 0; j < height; j++) {\n            for (let i = 0; i < width; i++) {\n\n                this.framebuffer[start++] = color;\n\n            }\n            start += this.width - width;\n        }\n    }\n\n    public drawText(x: number, y: number, text: string, texture: Texture): void {\n        let xpos = x;\n        const firstIndex = ' '.charCodeAt(0);\n        for (let i = 0; i < text.length; i++) {\n            const index = text.charCodeAt(i) - firstIndex;\n            const tx = Math.floor(index % 32) * 8;\n            const ty = Math.floor(index / 32) * 8;\n            this.drawTextureRectFastAlpha(xpos, y, tx, ty, 8, 8, texture);\n            xpos += 8;\n        }\n    }\n\n    public addReflections() {\n        const start = 150;\n        for (let i = 0; i < 50; i++) {\n            for (let x = 0; x < this.width; x++) {\n                this.framebuffer[(start + i) * this.width + x] = this.framebuffer[(start - i * 3 - 1) * this.width + x +\n                    Interpolator.interpolate(0, 50, i) * (Math.sin(Date.now() * 0.002 + i * 0.2) * 14) | 0];\n            }\n        }\n    }\n\n    public drawTextureRect2(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture, alpha2: number): void {\n        for (let w = 0; w < width; w++) {\n            for (let h = 0; h < height; h++) {\n                const texIndex = (xt + w) + ((yt + h) * texture.width);\n                const frIndex = (xs + w) + ((ys + h) * this.width);\n                const alpha = ((texture.texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (((this.framebuffer[frIndex] >> 0) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 0) & 0xff) * (alpha)) | 0;\n                const g = (((this.framebuffer[frIndex] >> 8) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 8) & 0xff) * (alpha)) | 0;\n                const b = (((this.framebuffer[frIndex] >> 16) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 16) & 0xff) * (alpha)) | 0;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n            }\n        }\n    }\n\n    public drawTextureRectFastAlpha(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const color = texture.texture[texIndex];\n                if (color & 0xff000000) {\n                    this.framebuffer[frIndex] = color;\n                }\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n\n    public drawTextureColorized(x: number, y: number, texture: Texture, color: Color): void {\n\n        let frIndex = x + y * this.width;\n        let texIndex = 0;\n\n        for (let h = 0; h < texture.height; h++) {\n            for (let w = 0; w < texture.width; w++) {\n                const txPixel = texture.texture[texIndex];\n\n\n                const r = (txPixel >> 0 & 0xff) * color.r / 255;\n                const g = (txPixel >> 8 & 0xff) * color.g / 255;\n                const b = (txPixel >> 16 & 0xff) * color.b / 255;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                texIndex++;\n                frIndex++;\n            }\n\n            frIndex += this.width - texture.width;\n        }\n    }\n\n    public drawTextureRectNoAlpha(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                this.framebuffer[frIndex] = texture.texture[texIndex];\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    /**\n     * Transitions from one pixel to another using alpha\n     *\n     * @param  {number} c1\n     * @param  {number} c2\n     * @param  {number} alpha number ranging from 0-255\n     * @return {number}     color blended difference between c1 and c2\n     */\n    public static blend(c1: number, c2: number, nAlpha: number): number {\n\n        if (0 === nAlpha) {\n            return c1;\n        }\n\n        if (255 === nAlpha) {\n            return c2;\n        }\n\n        const nInvAlpha: number = 255 - nAlpha;\n\n        const r1: number = (c1 & 0x00FF0000) >> 16;\n        const r2: number = (c2 & 0x00FF0000) >> 16;\n        const r: number = (r2 * nAlpha + r1 * nInvAlpha) >> 8;\n\n        const g1: number = (c1 & 0x0000FF00) >> 8;\n        const g2: number = (c2 & 0x0000FF00) >> 8;\n        const g: number = (g2 * nAlpha + g1 * nInvAlpha) >> 8;\n\n        const b1: number = (c1 & 0x000000FF);\n        const b2: number = (c2 & 0x000000FF);\n        const b: number = (b2 * nAlpha + b1 * nInvAlpha) >> 8;\n\n        return 0xff000000 | r << 16 | g << 8 | b;\n    }\n\n\n    public static addColor(c1: number, c2: number) {\n        //int a1 = (c1 >> 24) & 0xff;\n        const r1 = (c1 >> 16) & 0xFF;\n        const g1 = (c1 >>  8) & 0xFF;\n        const b1 =  c1        & 0xFF;\n\n        const r2 = (c2 >> 16) & 0xFF;\n        const g2 = (c2 >>  8) & 0xFF;\n        const b2 =  c2        & 0xFF;\n\n        const r = r1 + r2 < 0xFF ? r1 + r2 : 0xFF;\n        const g = g1 + g2 < 0xFF ? g1 + g2 : 0xFF;\n        const b = b1 + b2 < 0xFF ? b1 + b2 : 0xFF;\n\n        return (0xFF << 24 | r << 16 | g << 8 | b);\n      }\n\n    public drawTextureRect(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Uint32Array, pixelWidth: number, alpha2: number): void {\n        let texIndex = xt + yt * pixelWidth;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const alpha = ((texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n                const inverseAlpha = 1 - alpha;\n\n                const fbPixel = this.framebuffer[frIndex];\n                const txPixel = texture[texIndex];\n\n                const r = (fbPixel >> 0 & 0xff) * inverseAlpha + (txPixel >> 0 & 0xff) * alpha;\n                const g = (fbPixel >> 8 & 0xff) * inverseAlpha + (txPixel >> 8 & 0xff) * alpha;\n                const b = (fbPixel >> 16 & 0xff) * inverseAlpha + (txPixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += pixelWidth - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    public drawTextureRectAdd(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture, alpha2: number): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const alpha = ((texture.texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n\n                const fbPixel = this.framebuffer[frIndex];\n                const txPixel = texture.texture[texIndex];\n\n                const r = Math.min(255, (fbPixel >> 0 & 0xff) + (txPixel >> 0 & 0xff) * alpha);\n                const g = Math.min(255, (fbPixel >> 8 & 0xff) + (txPixel >> 8 & 0xff) * alpha);\n                const b = Math.min(255, (fbPixel >> 16 & 0xff) + (txPixel >> 16 & 0xff) * alpha);\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    public pixelate() {\n        const xoff = 200;\n        const yoff = 50;\n\n        for (let x = 0; x < 10; x++) {\n            for (let y = 0; y < 10; y++) {\n                this.drawBox2(x * 10 + xoff, y * 10 + yoff, 10, 10, this.readPixel(x * 10 + xoff, y * 10 + yoff));\n            }\n        }\n        this.drawLineDDA(new Vector3f(xoff, yoff, -0.3), new Vector3f(xoff + 20 * 5, yoff, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff, yoff + 20 * 5, -0.3), new Vector3f(xoff + 20 * 5, yoff + 20 * 5, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff, yoff, -0.3), new Vector3f(xoff, yoff + 20 * 5, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff + 20 * 5, yoff, -0.3), new Vector3f(xoff + 20 * 5, yoff + 20 * 5, -0.3), 0xffffffff);\n    }\n\n    public fastFramebufferCopyOffset(src: Uint32Array, dest: Uint32Array, offset = 0) {\n        let i = this.width * this.height / 32 + 1;\n        let k = this.width * this.height;\n        let l = this.width * (this.height - offset);\n        while (--i) {\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n        }\n    }\n\n    // 6 times faster than the slow method that clips and does alpha blending\n    public fastFramebufferCopy(dest: Uint32Array, src: Uint32Array) {\n        dest.set(src);\n    }\n\n    public noise(elapsedTime: number, texture: Texture, scale: number = 0.07): void {\n        const rng = new RandomNumberGenerator();\n        rng.setSeed(elapsedTime);\n        for (let y = 0; y < this.height; y++) {\n            this.drawTextureRect(0, y, Math.floor(rng.getFloat() * (texture.texture.length - this.width)), 0, this.width, 1, texture.texture, texture.width, scale);\n        }\n    }\n\n    public drawTexturedBillboard(xp: number, yp: number, width: number, height: number, texture: Texture, z: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n                    this.wBuffer[index2] = z;\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const r = (this.framebuffer[index2] >> 0 & 0xff) + (texture.texture[textureIndex] >> 0 & 0xff);\n                    const g = (this.framebuffer[index2] >> 8 & 0xff) + (texture.texture[textureIndex] >> 8 & 0xff);\n                    const b = (this.framebuffer[index2] >> 16 & 0xff) + (texture.texture[textureIndex] >> 16 & 0xff);\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += yStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle(xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle2(\n        xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number,\n        imgNum: number = 0, spritH: number): void {\n        const xStep = texture.width / width;\n        const yStep = spritH / height;\n        let xx = 0;\n        let yy = 0;\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n        let xTextureStart: number;\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, spritH - 1) * texture.width +\n                        spritH * texture.width * imgNum;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle2Sub(\n        xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number,\n        imgNum: number = 0, spritH: number, rr:number=1,gg:number=1,bb:number=1) : void {\n        const xStep = texture.width / width;\n        const yStep = spritH / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > this.height - 1 ||\n            xp + width < 0 ||\n            xp > this.width - 1) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - (this.height), 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - (this.height - 1), 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = Math.ceil((width + xp) - Math.max(xp + width - (this.width), 0));\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = Math.ceil(width - Math.max(xp + width - (this.width - 1), 0));\n        }\n\n        const sub: number = Math.ceil(xp) - xp;\n        const suby: number = Math.ceil(yp) - yp;\n        xTextureStart += sub * xStep;\n        yy += suby * yStep;\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = Math.ceil(xStart) + Math.ceil(yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(Math.round(xx) | 0, texture.width - 1) +\n                        Math.min(Math.round(yy) | 0, spritH - 1) * texture.width +\n                        spritH * texture.width * imgNum;\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha*rr;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha*gg;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha*bb;\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticleNoDepth(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > this.height - 1 ||\n            xp + width < 0 ||\n            xp > this.width - 1) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n\n                const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                const inverseAlpha = 1 - alpha;\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawSoftParticle(xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n                    // float scale = 0.2f;\n                    // float fade = clamp((depthMapDepth.x-depth)*scale, 0.0, 1.0);\n                    const zDist = Math.min(Math.max(((1 / z - 1 / this.wBuffer[index2])), 0.0), 1.0);\n                    // this.wBuffer[index2] = z;\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale * zDist;\n                    const inverseAlpha = 1 - alpha;\n\n                    const r = (this.framebuffer[index2] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer[index2] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer[index2] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawFog(color: Color, fogScale: number, fogOffset: number): void {\n        const videoMemorySize: number = this.width * this.height;\n        const wBufferScale: number = -fogScale;\n\n        for (let index: number = 0; index < videoMemorySize; index++) {\n            const alpha = Math.max(Math.min(wBufferScale * (1 / this.wBuffer[index] + fogOffset), 1.0), 0.0);\n            const inverseAlpha = 1.0 - alpha;\n\n            const r = (this.framebuffer[index] >> 0 & 0xff) * inverseAlpha + color.r * alpha;\n            const g = (this.framebuffer[index] >> 8 & 0xff) * inverseAlpha + color.g * alpha;\n            const b = (this.framebuffer[index] >> 16 & 0xff) * inverseAlpha + color.b * alpha;\n\n            this.framebuffer[index] = r | (g << 8) | (b << 16) | (255 << 24);\n        }\n    }\n\n    public drawScaledTextureClipBi(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                // let textureIndex = //Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n                const color = texture.getBilinearFilteredPixel2(xx, yy);\n\n                const alpha = 255 * alphaScale;\n                const inverseAlpha = 1 - alpha;\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = color;\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawScaledTextureClipBiAdd(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                // let textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n                const color = texture.getBilinearFilteredPixel2(xx, yy);\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = color;\n\n                const r = Math.min((framebufferPixel >> 0 & 0xff) + (texturePixel >> 0 & 0xff) * alphaBlend, 255);\n                const g = Math.min((framebufferPixel >> 8 & 0xff) + (texturePixel >> 8 & 0xff) * alphaBlend, 255);\n                const b = Math.min((framebufferPixel >> 16 & 0xff) + (texturePixel >> 16 & 0xff) * alphaBlend, 255);\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawScaledTextureClipAdd(xp: number, yp: number, width: number, height: number, texture: Texture, alpha: number = 1.0): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = Math.min((framebufferPixel >> 0 & 0xff) + (texturePixel >> 0 & 0xff) * alpha, 255);\n                const g = Math.min((framebufferPixel >> 8 & 0xff) + (texturePixel >> 8 & 0xff) * alpha, 255);\n                const b = Math.min((framebufferPixel >> 16 & 0xff) + (texturePixel >> 16 & 0xff) * alpha, 255);\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawTexture(x: number, y: number, texture: Texture, alpha2: number) {\n        const SCREEN_WIDTH = this.width;\n        const SCREEN_HEIGHT = this.height;\n\n        let framebufferIndex: number = Math.max(x, 0) + Math.max(y, 0) * this.width;\n        let textureIndex: number = Math.max(0, 0 - x) + Math.max(0, 0 - y) * texture.width;\n\n        const width: number = Math.min(texture.width, SCREEN_WIDTH - x) - Math.max(0, 0 - x);\n        const height: number = Math.min(texture.height, SCREEN_HEIGHT - y) - Math.max(0, 0 - y);\n\n        const textureRowOffset = texture.width - width;\n        const framebufferRowOffset = this.width - width;\n\n        const div = 1 / 255 * alpha2;\n\n        for (let yHeight: number = 0; yHeight < height; yHeight++) {\n            for (let xWidth: number = 0; xWidth < width; xWidth++) {\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * div;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            textureIndex += textureRowOffset;\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n    public drawTextureFullscreen(texture: Texture, alpha2: number) {\n\n        let framebufferIndex: number = 0;\n        const inverseAlpha = 1 - alpha2;\n        for (let y: number = 0; y < this.width * this.height; y++) {\n\n            const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 0 & 0xff) * alpha2;\n            const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 8 & 0xff) * alpha2;\n            const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 16 & 0xff) * alpha2;\n\n            this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n            framebufferIndex++;\n        }\n    }\n\n    public drawTexture3(x: number, y: number, texture: Texture, alpha2: number, time: number) {\n        const SCREEN_WIDTH = this.width;\n        const SCREEN_HEIGHT = this.height;\n\n        let framebufferIndex: number = Math.max(x, 0) + Math.max(y, 0) * this.width;\n        let textureIndex: number = Math.max(0, 0 - x) + Math.max(0, 0 - y) * texture.width;\n\n        const width: number = Math.min(texture.width, SCREEN_WIDTH - x) - Math.max(0, 0 - x);\n        const height: number = Math.min(texture.height, SCREEN_HEIGHT - y) - Math.max(0, 0 - y);\n\n        const textureRowOffset = texture.width - width;\n        const framebufferRowOffset = this.width - width;\n\n        const div = 1 / 255 * alpha2;\n\n        const mHeight = Math.floor(height * Math.max(Math.min(1, time), 0));\n\n        for (let yHeight: number = 0; yHeight < mHeight; yHeight++) {\n            for (let xWidth: number = 0; xWidth < width; xWidth++) {\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * div;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            textureIndex += textureRowOffset;\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n    public drawTextureNoClipAlpha(x: number, y: number, texture: Texture): void {\n        let framebufferIndex: number = x + y * this.width;\n        let textureIndex: number = 0;\n\n        const framebufferRowOffset = this.width - texture.width;\n\n        for (let yHeight = 0; yHeight < texture.height; yHeight++) {\n            for (let xWidth = 0; xWidth < texture.width; xWidth++) {\n                const color = texture.texture[textureIndex];\n\n                if (color & 0xff000000) {\n                    this.framebuffer[framebufferIndex] = color;\n                }\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n     // https://math.stackexchange.com/questions/859454/maximum-number-of-vertices-in-intersection-of-triangle-with-box/\n     public nearPlaneClipping(t1: Vector3f, t2: Vector3f, color: number): void {\n        const NEAR_PLANE_Z = -1.7;\n\n        if (t1.z < NEAR_PLANE_Z && t2.z < NEAR_PLANE_Z) {\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t1), this.project(t2), color);\n        } else if (t1.z > NEAR_PLANE_Z && t2.z > NEAR_PLANE_Z) {\n            return;\n        } else if (t1.z < NEAR_PLANE_Z) {\n            const ratio = (NEAR_PLANE_Z - t1.z) / (t2.z - t1.z);\n            const t3 = new Vector3f(ratio * (t2.x - t1.x) + t1.x, ratio * (t2.y - t1.y) + t1.y, NEAR_PLANE_Z);\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t1), this.project(t3), color);\n        } else if (t2.z < NEAR_PLANE_Z) {\n            const ratio = (NEAR_PLANE_Z - t2.z) / (t1.z - t2.z);\n            const t3 = new Vector3f(ratio * (t1.x - t2.x) + t2.x, ratio * (t1.y - t2.y) + t2.y, NEAR_PLANE_Z);\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t2), this.project(t3), color);\n        }\n    }\n\n    public project(t1: { x: number, y: number, z: number }): Vector3f {\n        return new Vector3f(Math.round((this.width / 2) + (292 * t1.x / (-t1.z))),\n            Math.round((this.height / 2) - (t1.y * 292 / (-t1.z))),\n            t1.z);\n    }\n\n    public clearDepthBuffer(): void {\n        this.wBuffer.fill(-1 / 900);\n    }\n\n    public drawBox() {\n        const height = this.maxWindow.y - this.minWindow.y + 1;\n        const width = this.maxWindow.x - this.minWindow.x + 1;\n        let index = this.minWindow.y * this.width + this.minWindow.x;\n        for (let i = 0; i < height; i++) {\n            this.framebuffer.fill(255 << 24 | 55 << 16 | 55 << 8 | 55, index, index + width);\n            index += this.width;\n        }\n    }\n\n    public drawBox2(x1: number, y1: number, width: number, height: number, color: number) {\n\n        let index = y1 * this.width + x1;\n        for (let i = 0; i < height; i++) {\n            this.framebuffer.fill(color, index, index + width);\n            index += this.width;\n        }\n    }\n\n    // TODO: implement subpixel accuracy\n    // https://github.com/specht/cruiser\n    public wireFrameSphereClipping(elapsedTime: number): void {\n\n        this.wBuffer.fill(100);\n\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 16;\n        const STEPS2 = 16;\n\n        // TODO: move into setup method\n        for (let i = 0; i <= STEPS; i++) {\n            for (let r = 0; r < STEPS2; r++) {\n                points.push(this.sphereFunction2(-i * Math.PI / STEPS - Math.PI / 2, -r * 2 * Math.PI / STEPS2));\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2)); // 2\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 1\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2)); // 4\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 5\n            }\n        }\n\n        // Create MV Matrix\n        const scale = 10.8 + 5 * (Math.sin(elapsedTime * 0.16) + 1) / 2;\n        let modelViewMartrix = Matrix4f.constructScaleMatrix(scale, scale, scale).multiplyMatrix(Matrix4f.constructYRotationMatrix(elapsedTime * 0.08));\n        modelViewMartrix = modelViewMartrix.multiplyMatrix(Matrix4f.constructXRotationMatrix(elapsedTime * 0.08));\n        modelViewMartrix = Matrix4f.constructTranslationMatrix(0 + 20 * Math.sin(elapsedTime * 0.04), 5 * Math.sin(elapsedTime * 0.06), -22).multiplyMatrix(modelViewMartrix);\n\n        const points2: Array<Vector3f> = new Array<Vector3f>();\n\n        for (let p = 0; p < points.length; p++) {\n            const transformed = modelViewMartrix.multiplyHom(points[p]);\n\n            const x = transformed.x;\n            const y = transformed.y;\n            const z = transformed.z;\n\n            const xx = (this.width * 0.5) + (x / (-z * 0.0078));\n            const yy = (this.height * 0.5) + (y / (-z * 0.0078));\n\n            points2.push(new Vector3f(xx, yy, z));\n        }\n\n        // draw clip region\n        const colred = 255 << 24 | 230 << 16 | this.height << 16 | this.height;\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.minWindow.y - 1, 0), new Vector3f(this.minWindow.x - 1, this.maxWindow.y + 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.maxWindow.x + 1, this.minWindow.y - 1, 0), new Vector3f(this.maxWindow.x + 1, this.maxWindow.y + 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.minWindow.y - 1, 0), new Vector3f(this.maxWindow.x + 1, this.minWindow.y - 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.maxWindow.y + 1, 0), new Vector3f(this.maxWindow.x + 2, this.maxWindow.y + 1, 0), colred);\n\n        this.drawBox();\n\n        for (let i = 0; i < index.length; i += 3) {\n            const v1 = points2[index[i]];\n            const v2 = points2[index[i + 1]];\n            const v3 = points2[index[i + 2]];\n\n            const colLine = 255 << 24 | 255 << 16 | 255 << 8 | 255;\n            if (this.isTriangleCCW(v1, v2, v3)) {\n                this.linerClipper.cohenSutherlandLineClipper(v1, v2, colLine);\n                this.linerClipper.cohenSutherlandLineClipper(v1, v3, colLine);\n                this.linerClipper.cohenSutherlandLineClipper(v3, v2, colLine);\n            }\n        }\n    }\n\n    public isTriangleCCW(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number }): boolean {\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v1.y - v1.x * v3.y;\n        if (this.cullMode === CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n        public wireFrameTerrain(elapsedTime: number, heightmap: Texture): void {\n\n            this.clearDepthBuffer();\n\n            const index: Array<number> = [\n            ];\n\n            const points: Array<Vector3f> = [];\n            for (let y = 0; y < 256; y++) {\n                for (let x = 0; x < 256; x++) {\n                    points.push(new Vector3f((x - 128) * 20.0, (heightmap.texture[x + y * 256] & 0x000000ff) * 128 / 256 - 70, (y - 128) * 20.0));\n                }\n            }\n\n            for (let y = 0; y < 256; y += 1) {\n                for (let x = 0; x < 256 - 1; x += 1) {\n                    index.push(0 + x + (y * 256));\n                    index.push(1 + x + (y * 256));\n                }\n            }\n\n            for (let x = 0; x < 256; x += 1) {\n                for (let y = 0; y < 256 - 1; y += 1) {\n\n                    index.push(x + ((y + 0) * 256));\n                    index.push(x + ((y + 1) * 256));\n                }\n            }\n\n            const modelViewMartrix = Matrix3f.constructYRotationMatrix(elapsedTime * 0.003);\n\n            const points2: Array<Vector3f> = new Array<Vector3f>();\n\n            const xOff = + Math.cos(elapsedTime * 0.000001) * 128 * 20;\n            const zOff = Math.sin(elapsedTime * 0.000001) * 128 * 20;\n            points.forEach(element => {\n                const transformed = modelViewMartrix.multiply(element);\n\n                const x = transformed.x + xOff;\n                const y = transformed.y;\n                const z = transformed.z + zOff; // TODO: use translation matrix!\n\n                points2.push(new Vector3f(x, y, z));\n            });\n\n            for (let i = 0; i < index.length; i += 2) {\n                const scale = (1 - Math.min(255, -points2[index[i]].z * 0.9) / 255);\n                const color = (255 * scale) << 8 | 100 * scale | (this.height * scale) << 16 | 255 << 24;\n                this.nearPlaneClipping(points2[index[i]], points2[index[i + 1]], color);\n            }\n        }\n\n    public drawBoundingSphere(sphere: Sphere, matrix: Matrix4f, color: number): void {\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 8;\n        const STEPS2 = 8;\n\n        // TODO: move into setup method\n        for (let i = 0; i <= STEPS; i++) {\n            for (let r = 0; r < STEPS2; r++) {\n\n                const pos = this.sphereFunction2(-i * Math.PI / STEPS - Math.PI / 2, -r * 2 * Math.PI / STEPS2).mul(sphere.getRadius() + 0.01).add(sphere.getCenter());\n                pos.w = 1;\n\n                points.push(pos);\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2)); // 2\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 1\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2)); // 4\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 5\n            }\n        }\n\n        const modelViewMartrix = matrix;\n\n        const points2: Array<Vector3f> = new Array<Vector3f>();\n\n        for (let p = 0; p < points.length; p++) {\n            const transformed = modelViewMartrix.multiplyHom(points[p]);\n            points2.push(new Vector3f(transformed.x, transformed.y, transformed.z));\n        }\n\n        for (let i = 0; i < index.length; i += 3) {\n\n            const v1 = points2[index[i]];\n            const v2 = points2[index[i + 1]];\n            const v3 = points2[index[i + 2]];\n\n            this.nearPlaneClipping(v1, v2, color);\n            this.nearPlaneClipping(v1, v3, color);\n            this.nearPlaneClipping(v3, v2, color);\n\n        }\n    }\n    public drawPlanedeformationTunnelAnim(elapsedTime: number, texture: Texture) {\n\n        let i = 0;\n        for (let y = 0; y < this.height; y++) {\n            for (let x = 0; x < this.width; x++) {\n                const xdist = (x - this.width / 2);\n                const ydist = (y - this.height / 2);\n                const dist = 256 * 0.2 / Math.max(1.0, Math.sqrt(xdist * xdist + ydist * ydist));\n                const dist2 = dist + elapsedTime * 0.002;\n                const angle = (Math.atan2(xdist, ydist) / Math.PI + 1.0) * 16 + elapsedTime * 0.00069;\n\n                const color1 = texture.texture[(dist2 & 0x1f) + (angle & 0x1f) * 32];\n                // darkening can be done with alpha blended texture\n                const scale = 1 - Interpolator.cosineInterpolate(1.0, 6.0, dist);\n                const r = ((color1 >> 0) & 0xff) * scale;\n                const g = ((color1 >> 8) & 0xff) * scale;\n                const b = ((color1 >> 16) & 0xff) * scale;\n                const final = r | g << 8 | b << 16;\n\n                this.framebuffer[i++] = final;\n            }\n        }\n    }\n\n\n    public drawScreenBounds(framebuffer: Framebuffer): void {\n        const color: number = Color.WHITE.toPackedFormat();\n        const width: number = this.width / 2;\n        const height: number = this.height / 2;\n\n        framebuffer.drawLineDDANoZ(\n            new Vector3f(width / 2, height / 2, 0),\n            new Vector3f(width / 2 + width, height / 2, -100),\n            color\n        );\n\n        framebuffer.drawLineDDANoZ(\n            new Vector3f(width / 2, height / 2, 0),\n            new Vector3f(width / 2, height / 2 + height, -100),\n            color\n        );\n\n        framebuffer.drawLineDDANoZ(\n            new Vector3f(width / 2 + width, height / 2, 0),\n            new Vector3f(width / 2 + width, height / 2 + height, -100),\n            color\n        );\n\n        framebuffer.drawLineDDANoZ(\n            new Vector3f(width / 2, height / 2 + height, 0),\n            new Vector3f(width / 2 + width, height / 2 + height, -100),\n            color\n        );\n    }\n\n    public drawParticleStreams(framebuffer: Framebuffer, elapsedTime: number, texture: Texture, light: Vector3f) {\n\n        const points: Array<Vector3f> = new Array<Vector3f>();\n        const points2: Array<Vector3f> = new Array<Vector3f>(points.length);\n        const transformed = framebuffer.project(light);\n\n        points2.push(transformed);\n        points2.sort((a, b) => {\n            return a.z - b.z;\n        });\n\n        points2.forEach(element => {\n            // let size = -(2.0 * 192 / (element.z));\n            const size = -(80.3 * 192 / (element.z));\n\n            framebuffer.drawParticle2(\n                Math.round(element.x - size / 2),\n                Math.round(element.y - size / 2),\n                Math.round(size), Math.round(size), texture, 1 / element.z, 1.0, 0, 200);\n        });\n\n    }\n\n    public drawPlaneDeformation(elapsedTime: number, texture: Texture): void {\n        // optimize\n        // power of two modulo with &\n        // this.framebuffer.clearColor(new Color());\n        // precompute LUD + render to half size backbuffer\n        const IMG_WIDTH = texture.width;\n        const IMG_HEIGHT = texture.height;\n\n        let framebufferIndex = 0;\n\n        for (let y = 0; y < this.height; y++) {\n            const yy = (-1.00 + 2.00 * y / this.height);\n\n            for (let x = 0; x < this.width; x++) {\n\n                const xx = (-1.00 + 2.00 * x / this.width);\n\n                // magic formulas here\n                const u = ((xx / Math.abs(yy)) * IMG_WIDTH * 0.05) | 0;\n                const v = (1.0 / Math.abs(yy) * IMG_HEIGHT * 0.05 + elapsedTime * 0.008) | 0;\n\n                const scale = 1 - Math.max(Math.min(1 / Math.abs(yy) * 0.2, 1), 0);\n                let color = texture.texture[(u & 0xff) + (v & 0xff) * IMG_WIDTH];\n                const r = ((color >> 0) & 0xff) * scale;\n                const g = ((color >> 8) & 0xff) * scale;\n                const b = ((color >> 16) & 0xff) * scale;\n                color = (255 << 24) | (b << 16) | (g << 8) | (r << 0);\n\n                this.framebuffer[framebufferIndex++] = color;\n            }\n        }\n    }\n\n    public torusFunction(alpha: number): Vector3f {\n        return new Vector3f(Math.sin(alpha) * 10, 0, Math.cos(alpha) * 10);\n    }\n\n    public fakeSphere(normal: Vector4f, vertex: Vertex): void {\n        // https://www.mvps.org/directx/articles/spheremap.htm\n        // vertex.textureCoordinate.u = 0.5 + normal.x * 0.5;\n        // vertex.textureCoordinate.v = 0.5 - normal.y * 0.5;\n        vertex.textureCoordinate.u = 0.5 + Math.asin(normal.x) / Math.PI;\n        vertex.textureCoordinate.v = 0.5 - Math.asin(normal.y) / Math.PI;\n    }\n\n    public fakeSphere2(normal: Vector3f, tex: TextureCoordinate): void {\n        tex.u = 0.5 + Math.asin(normal.x) / Math.PI;\n        tex.v = 0.5 - Math.asin(normal.y) / Math.PI;\n    }\n\n    public drawLineDDA(start: Vector3f, end: Vector3f, color: number): void {\n        this.lineRasterizer.drawLineDDA(start, end, color);\n    }\n\n    public drawLineDDANoZ(start: Vector3f, end: Vector3f, color: number): void {\n        this.lineRasterizerNo.drawLineDDANoZ(start, end, color);\n    }\n\n    private sphereFunction2(theta: number, phi: number): Vector4f {\n        const pos = new Vector4f(Math.cos(theta) * Math.cos(phi),\n            Math.cos(theta) * Math.sin(phi),\n            Math.sin(theta), 1.0);\n\n        return pos;\n    }\n\n}\n","export default class RandomNumberGenerator {\n\n    private seed: number;\n\n    public constructor() {\n        this.seed = 6;\n    }\n\n    public getFloat(): number {\n        this.seed = (this.seed * 9301 + 49297) % 233280;\n        return this.seed / 233280;\n    }\n\n    public setSeed(seed: number): void {\n        this.seed = seed;\n    }\n\n}\n","export class TextureCoordinate {\n    public u: number;\n    public v: number;\n\n    constructor(u?: number, v?: number) {\n        this.u = u;\n        this.v = v;\n    }\n}\n","import { Color } from './core/Color';\nimport { Vector4f } from './math/index';\nimport { TextureCoordinate } from './TextureCoordinate';\n\nexport class Vertex {\n    public position: Vector4f;\n    public projection: Vector4f = new Vector4f(0,0,0);\n    public normal: Vector4f;\n    public color: Color;\n    public textureCoordinate: TextureCoordinate = new TextureCoordinate();\n}\n","import { FlatShadedFace } from '../geometrical-objects/FlatShadedFace';\nimport { FlatshadedMesh } from '../geometrical-objects/FlatshadedMesh';\nimport { Vector4f } from '../math/index';\nimport { BlenderScene } from './BlenderScene';\nimport { Face } from './face';\nimport { Mesh } from './mesh';\nimport { Vector } from './vector';\nimport { TexturedMesh } from '../rendering-pipelines/TexturedMesh';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { ComputationalGeometryUtils } from '../math/Geometry';\nimport { TexCoord } from './tex-coord';\n\nexport class BlenderJsonParser {\n\n    public static parse(blenderScene: BlenderScene, invert: boolean = false): Array<FlatshadedMesh> {\n        const scene: Array<FlatshadedMesh> = [];\n\n        blenderScene.forEach((object: Mesh) => {\n            const points: Array<Vector4f> = new Array<Vector4f>();\n            const normals: Array<Vector4f> = new Array<Vector4f>();\n\n            object.vertices.forEach((v: Vector) => {\n                points.push(new Vector4f(v.x, v.y, v.z).mul(1));\n            });\n\n            object.normals.forEach((v: Vector) => {\n                normals.push(\n                    invert ? new Vector4f(v.x, v.y, v.z).normalize().mul(-1) : new Vector4f(v.x, v.y, v.z).normalize()\n                );\n            });\n\n            const faces: Array<FlatShadedFace> = [];\n            object.faces.forEach((f: Face) => {\n                faces.push({\n                    n1: f.normals[0],\n                    n2: f.normals[1],\n                    n3: f.normals[2],\n                    v1: f.vertices[0],\n                    v2: f.vertices[1],\n                    v3: f.vertices[2],\n                });\n            });\n\n            const obj: FlatshadedMesh = {\n                faces,\n                normals,\n                points,\n                transformedNormals: normals.map(() => new Vector4f(0, 0, 0, 0)),\n                transformedPoints: points.map(() => new Vector4f(0, 0, 0, 0)),\n            };\n\n            scene.push(obj);\n        });\n\n        return scene;\n    }\n\n    public static getBlenderScene(\n        file: BlenderScene, disp: boolean = true): Array<TexturedMesh> {\n        const scene: Array<TexturedMesh> = [];\n\n        file.forEach((object: Mesh) => {\n            const points: Array<Vector4f> = new Array<Vector4f>();\n            const normals: Array<Vector4f> = new Array<Vector4f>();\n            let coords: Array<TextureCoordinate>;\n\n            if (object.uv) {\n                coords = [];\n                object.uv.forEach((v: TexCoord) => {\n                    const uv: TextureCoordinate = new TextureCoordinate();\n                    uv.u = v.u;\n                    uv.v = 1.0 - v.v;\n                    coords.push(uv);\n                });\n            }\n\n            object.vertices.forEach((v: Vector) => {\n                // some transformation in order for the vertices to be in worldspace\n                if (disp)\n                    points.push(new Vector4f(v.x, v.y, v.z).mul(2).add(new Vector4f(0, -2.7, 0, 0)));\n                else\n                    points.push(new Vector4f(v.x, v.y, v.z).mul(2));\n            });\n\n            object.normals.forEach((v: Vector) => {\n                normals.push(new Vector4f(v.x, v.y, v.z));\n            });\n\n            const sphere = new ComputationalGeometryUtils().computeBoundingSphere(points);\n            sphere.getCenter().w = 1;\n\n            // Create class for objects\n            const obj = {\n                points,\n                normals,\n                uv: coords,           // NO!!!\n                faces: object.faces, // NOO!!!\n                points2: points.map(() => new Vector4f(0, 0, 0, 0)),\n                normals2: normals.map(() => new Vector4f(0, 0, 0, 0)),\n                boundingSphere: sphere, // NO!!!\n                name: object.name /// NO!\n            };\n            scene.push(obj);\n        });\n\n        return scene;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Texture } from '../texture/Texture';\n\nexport class ScaleClipBlitter {\n\n    constructor(private framebuffer: Framebuffer) {\n\n    }\n\n    public drawScaledTextureClip(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.framebuffer.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.framebuffer.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.framebuffer.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.framebuffer.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.framebuffer.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.framebuffer.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.framebuffer.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                const xxInt = xx | 0;\n                const yyInt = yy | 0;\n                const textureIndex = xxInt + yyInt * texture.width;\n                // (xxInt > texture.width - 1 ? texture.width - 1 : xxInt) +\n                // (yyInt > texture.height - 1 ? texture.height - 1 : yyInt) * texture.width;\n\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                const inverseAlpha = 1 - alpha;\n\n                const framebufferPixel = this.framebuffer.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.framebuffer.width;\n        }\n    }\n\n}\n","/**\n * Color\n *\n * @export\n * @class Color\n * @see https://www.rapidtables.com/web/color/RGB_Color.html\n * @author Johannes Diemke\n */\nexport class Color {\n\n    public static readonly BLACK: Color = new Color(0, 0, 0, 255);\n    public static readonly WHITE: Color = new Color(255, 255, 255, 255);\n    public static readonly RED: Color = new Color(255, 0, 0, 255);\n    public static readonly GREEN: Color = new Color(0, 255, 0, 255);\n    public static readonly LIME: Color = new Color(0, 255, 0, 255);\n    public static readonly BLUE: Color = new Color(0, 0, 255, 255);\n    public static readonly DARK_BLUE: Color = new Color(0, 0, 64, 255);\n    public static readonly YELLOW: Color = new Color(255, 255, 0, 255);\n    public static readonly CYAN: Color = new Color(0, 255, 255, 255);\n    public static readonly MAGENTA: Color = new Color(255, 0, 255, 255);\n    public static readonly SLATE_GRAY: Color = new Color(112, 128, 144, 255);\n    public static readonly DARK_GRAY: Color = new Color(19, 19, 20, 255);\n    public static readonly ORANGE: Color = new Color(255, 160, 122);\n\n    constructor(public r: number = 0, public g: number = 0, public b: number = 0, public a: number = 255) {\n    }\n\n    public toPackedFormat(): number {\n        return this.r | this.g << 8 | this.b << 16 | this.a << 24;\n    }\n\n    public sub(color: Color): Color {\n        return new Color(this.r - color.r, this.g - color.g, this.b - color.b, 255);\n    }\n\n    public add(color: Color): Color {\n        return new Color(this.r + color.r, this.g + color.g, this.b + color.b, 255);\n    }\n\n    public div(num: number): Color {\n        return new Color(this.r / num, this.g / num, this.b / num, 255);\n    }\n\n    public mul(num: number): Color {\n        return new Color(this.r * num, this.g * num, this.b * num, 255);\n    }\n\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { Matrix4f, Vector3f, Vector4f } from '../../math';\nimport { AbstractScene } from '../../scenes/AbstractScene';\nimport { Texture, TextureUtils } from '../../texture';\nimport { Material } from '../../shading/material/Material';\nimport { BlenderLoader } from './../../model/blender/BlenderLoader';\nimport { FlatshadedMesh } from '../../geometrical-objects/FlatshadedMesh';\nimport { GouraudShadingRenderingPipeline } from '../../rendering-pipelines/GouraudShadingRenderingPipeline';\nimport { LensFlare } from '../../special-effects/LensFlare';\nimport { Interpolator } from '../../math/Interpolator';\nimport { SoundManager } from '../../sound/SoundManager';\n\nimport './style.css';\n\nexport class RoomScene extends AbstractScene {\n\n    private noise: Texture;\n    private accumulationBuffer: Uint32Array;\n    private texture10: Texture;\n    private texture11: Texture;\n    private texture13: Texture;\n    private dirt: Texture;\n    private blenderObj4: Array<FlatshadedMesh>;\n    private blenderObj5: Array<FlatshadedMesh>;\n    private renderingPipeline: GouraudShadingRenderingPipeline;\n    private soundManager: SoundManager = new SoundManager();\n\n    public init(framebuffer: Framebuffer): Promise<any> {\n        this.renderingPipeline = new GouraudShadingRenderingPipeline(framebuffer);\n        this.renderingPipeline.setFramebuffer(framebuffer);\n        this.accumulationBuffer = new Uint32Array(framebuffer.width * framebuffer.height);\n\n        return Promise.all([\n            this.soundManager.loadMusic(require(\"../../assets/music/K303XPRS.xm\")),\n            //\"../../assets/music/keith303_-_into_the_unknown.xm\")),\n            BlenderLoader.load(require('../../assets/jsx/room.jsx')).then(\n                (mesh: Array<FlatshadedMesh>) => this.blenderObj4 = mesh\n            ),\n            BlenderLoader.load(require('../../assets/jsx/hoodlum.jsx')).then(\n                (mesh: Array<FlatshadedMesh>) => this.blenderObj5 = mesh\n            ),\n            TextureUtils.generateProceduralNoise().then(texture => this.noise = texture),\n            TextureUtils.load(require('../../assets/spark.png'), true).then(texture => this.texture10 = texture),\n            TextureUtils.load(require('../../assets/ring.png'), true).then(texture => this.texture11 = texture),\n            TextureUtils.load(require('../../assets/bokeh.png'), true).then(texture => this.texture13 = texture),\n            TextureUtils.load(require('../../assets/dirt.png'), true).then(texture => this.dirt = texture)\n        ]);\n    }\n\n    public onInit(): void {\n        const button: HTMLButtonElement = document.createElement(\"button\");\n        button.textContent = \"Start Music\";\n        document.getElementsByTagName(\"body\")[0].appendChild(button);\n        button.addEventListener (\"click\", ()=> this.soundManager.onPlay());\n    }\n\n    public render(framebuffer: Framebuffer): void {\n        const time: number = Date.now();\n\n        this.drawBlenderScene5(framebuffer, time * 2, [\n            { tex: this.texture11, scale: 2.3, alpha: 0.5 * 1.9 },\n            { tex: this.texture13, scale: 1.6, alpha: 0.25 * 1.9 },\n            { tex: this.texture13, scale: 1.15, alpha: 0.25 * 1.9 },\n            { tex: this.texture13, scale: 0.7, alpha: 0.22 * 1.9 },\n            { tex: this.texture13, scale: -0.4, alpha: 0.22 * 1.9 },\n        ], this.dirt, this.texture10);\n\n        // Motion Blur\n        const texture3 = new Texture(this.accumulationBuffer, 320, 200);\n        framebuffer.drawTexture(0, 0, texture3, 0.80);\n        framebuffer.fastFramebufferCopy(this.accumulationBuffer, framebuffer.framebuffer);\n        framebuffer.noise(time, this.noise);\n    }\n\n    public drawBlenderScene5(framebuffer: Framebuffer, elapsedTime: number, texture: Array<{ tex: Texture, scale: number, alpha: number }>, dirt: Texture,\n        spark: Texture): void {\n\n        framebuffer.clearDepthBuffer();\n\n        const camera: Matrix4f =\n            Matrix4f.constructTranslationMatrix(0, 0, -40 + (Math.sin(elapsedTime * 0.0006) * 0.5 + 0.5) * 2).multiplyMatrix(\n                Matrix4f.constructXRotationMatrix((Math.sin(elapsedTime * 0.00014) * 0.5 + 0.5) * 0.5 - 0.2).multiplyMatrix(\n                    Matrix4f.constructYRotationMatrix(-elapsedTime * 0.0002).multiplyMatrix(\n\n                        Matrix4f.constructTranslationMatrix(0, -10, 0)\n                    )));\n\n        let mv: Matrix4f = camera.multiplyMatrix(Matrix4f.constructScaleMatrix(17, 17, 17));\n\n        const mat1: Material = new Material();\n        mat1.ambientColor = new Vector4f(0.12, 0.12, 0.12, 0);\n        mat1.diffuseColor = new Vector4f(0.4, 0.4, 0.4, 1);\n        mat1.specularColor = new Vector4f(0.8, 0.5, 0.5, 0);\n        mat1.shininess = 2;\n\n        const mat2: Material = new Material();\n        mat2.ambientColor = new Vector4f(0.12, 0.24, 0.1, 0);\n        mat2.diffuseColor = new Vector4f(0.38, 0.4, 0.4, 1);\n        mat2.specularColor = new Vector4f(1.0, 1.0, 1.0, 0);\n        mat2.shininess = 3;\n\n        const mat3: Material = new Material();\n        mat3.ambientColor = new Vector4f(0.03, 0.02, 0.02, 0);\n        mat3.diffuseColor = new Vector4f(0.38, 0.4, 0.4, 1);\n        mat3.specularColor = new Vector4f(1.0, 1.0, 1.0, 0);\n        mat3.shininess = 100;\n\n\n        for (let j = 0; j < this.blenderObj4.length; j++) {\n            const model = this.blenderObj4[j];\n            if (j !== 0 && j !== 2) {\n                this.renderingPipeline.setMaterial(mat1);\n                this.renderingPipeline.draw(framebuffer, model, mv);\n            }\n\n            if (j === 0) {\n                this.renderingPipeline.setMaterial(mat2);\n                this.renderingPipeline.draw(framebuffer, model, mv);\n            }\n            if (j === 2) {\n                this.renderingPipeline.setMaterial(mat3);\n                this.renderingPipeline.draw(framebuffer, model, mv);\n            }\n        }\n\n        mv = camera.multiplyMatrix(\n            Matrix4f.constructTranslationMatrix(0, 14.2, -4).multiplyMatrix(Matrix4f.constructScaleMatrix(10, 10, 10).multiplyMatrix(\n                Matrix4f.constructXRotationMatrix(\n                    Math.PI * 2 * Interpolator.cosineInterpolate(0, 1300, Math.floor(elapsedTime * 0.7) % 4000)))\n            ));\n\n        const mat4: Material = new Material();\n        mat4.ambientColor = new Vector4f(0.0, 0.0, 0.0, 0);\n        mat4.diffuseColor = new Vector4f(1.0, 0.7, 0.5, 1);\n        mat4.specularColor = new Vector4f(0.6, 0.6, 0.6, 0);\n        mat4.shininess = 80;\n        const model2 = this.blenderObj5[0];\n        this.renderingPipeline.setMaterial(mat4);\n        this.renderingPipeline.draw(framebuffer, model2, mv);\n\n        const scale: number = 8 * 3;\n        mv = camera.multiplyMatrix(\n            Matrix4f.constructTranslationMatrix(0, 19, 0).multiplyMatrix(\n                Matrix4f.constructScaleMatrix(scale, scale, scale)));\n\n        const light = camera.multiply(new Vector3f(20, 19, -90));\n        const lensflareScreenSpace = framebuffer.project(light);\n\n        framebuffer.drawParticleStreams(framebuffer, elapsedTime, spark, light );\n\n        LensFlare.drawLensFlare(framebuffer, lensflareScreenSpace, elapsedTime * 0.15, texture, dirt);\n    }\n\n}\n","export class FullscreenUtils {\n\n    public static toggleFullscreen(element: Element): void {\n        if (!this.fullscreen) {\n            FullscreenUtils.enterFullscreen(element);\n            this.fullscreen = true;\n            this.setStyle(element, 'cursor: none');\n        } else {\n            FullscreenUtils.exitFullscreen();\n            this.fullscreen = false;\n            this.setStyle(element, 'cursor: zoom-in');\n        }\n    }\n\n    private static setStyle(el, css) {\n        el.setAttribute('style', el.getAttribute('style') + ';' + css);\n    }\n\n    public static enterFullscreen(element: Element): void {\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.mozRequestFullScreen) {\n            element.mozRequestFullScreen();\n        } else if (element.msRequestFullscreen) {\n            element.msRequestFullscreen();\n        } else if (element.webkitRequestFullScreen) {\n            element.webkitRequestFullScreen();\n        }\n    }\n\n    public static exitFullscreen(): void {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    }\n\n    private static fullscreen: boolean = false;\n\n}\n","import { Vector4f } from '../math/index';\nimport { FlatShadedFace } from './FlatShadedFace';\nimport { FlatshadedMesh } from './FlatshadedMesh';\n\nexport class AbstractGeometricObject {\n\n    protected mesh: FlatshadedMesh;\n    protected inverse: boolean;\n\n    protected buildMesh(points: Array<Vector4f>, index: Array<number>, inverse: boolean = false): void {\n        this.inverse = inverse;\n        const normals: Array<Vector4f> = new Array<Vector4f>();\n\n        // todo use index array for normals to have less normal objects\n        // compute normal and check wheter the normal already exists. then reuse inded\n        // maybe have a similarity faktor to reuse similar normals\n        for (let i = 0; i < index.length; i += 3) {\n            const normal = points[index[i + 1]].sub(points[index[i]]).cross(points[index[i + 2]].sub(points[index[i]]));\n            normals.push(this.inverse ? normal.normalize().mul(-1) : normal.normalize()); // normalize?\n        }\n\n\n        const faces: Array<FlatShadedFace> = new Array<FlatShadedFace>();\n\n        for (let i = 0; i < index.length; i += 3) {\n\n            faces.push({\n                n1: i / 3,\n                n2: i / 3,\n                n3: i / 3,\n                v1: index[0 + i],\n                v2: index[1 + i],\n                v3: index[2 + i],\n            });\n        }\n\n        // Create class for objects\n        this.mesh = {\n            points,\n            normals,\n            faces,\n            transformedPoints: points.map(() => new Vector4f(0, 0, 0, 0)),\n            transformedNormals: normals.map(() => new Vector4f(0, 0, 0, 0))\n        };\n    }\n\n    public getMesh(): FlatshadedMesh {\n        return this.mesh;\n    }\n\n}\n","import { Vector4f } from '../math/Vector4f';\nimport { AbstractGeometricObject } from './AbstractGeometricObject';\nimport { Vector3f } from '../math/Vector3f';\n\nexport class Torus extends AbstractGeometricObject {\n\n    public constructor(invert: boolean = false) {\n        super();\n\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 15;\n        const STEPS2 = 12;\n        // find a better solution for inversion\n        // maybe configuration by constructor of base class and construction of geometry\n        // in template method pattern method\n        this.inverse = invert;\n\n        for (let i = 0; i < STEPS; i++) {\n            const frame = this.torusFunction(i * 2 * Math.PI / STEPS);\n            const frame2 = this.torusFunction(i * 2 * Math.PI / STEPS + 0.1);\n            const up = new Vector3f(0.0, 4.0, 0);\n            const right = frame2.sub(frame).cross(up);\n\n            for (let r = 0; r < STEPS2; r++) {\n                const pos = up.mul(Math.sin(r * 2 * Math.PI / STEPS2)).add(right.mul(Math.cos(r * 2 * Math.PI / STEPS2))).add(frame);\n                points.push(new Vector4f(pos.x, pos.y, pos.z, 1.0));\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2) % points.length);\n            }\n        }\n\n        this.buildMesh(points, index);\n    }\n\n    public torusFunction(alpha: number): Vector3f {\n        return new Vector3f(Math.sin(alpha) * 10, 0, Math.cos(alpha) * 10);\n    }\n\n}\n","import { Vector4f } from './index';\nimport { Sphere } from './Sphere';\n\nexport class ComputationalGeometryUtils {\n\n    public computeBoundingSphere(vertices: Array<Vector4f>): Sphere {\n\n        if (vertices.length === 0) {\n            throw new Error('More than one vertex required.');\n        }\n\n        if (vertices.length === 1) {\n            return new Sphere(vertices[0], 0);\n        }\n\n        let center = new Vector4f(0, 0, 0, 0);\n        let radius = 0;\n\n        vertices.forEach(point => {\n            center = center.add(new Vector4f(point.x, point.y, point.z, 0.0));\n        });\n\n        center = center.mul(1.0 / vertices.length);\n\n        vertices.forEach(point => {\n            radius = Math.max(radius, center.sub(point).length());\n        });\n\n        return new Sphere(center, radius);\n    }\n\n}\n","export class Interpolator {\n\n    public static interpolate(start: number, end: number, current: number): number {\n        if (current <= start) {\n            return 0;\n        }\n        if (current >= end) {\n            return 1;\n        }\n        return (current - start) / (end - start);\n    }\n\n    public static cosineInterpolate(y1: number, y2: number, mu: number): number {\n        if (mu <= y1) { return 0; }\n        if (mu >= y2) { return 1; }\n        const mu2 = (mu - y1) / (y2 - y1);\n        return (1 - Math.cos(mu2 * Math.PI)) / 2;\n    }\n\n}\n","import { Vector3f } from './Vector3f';\n\nexport class Matrix3f {\n\n    public m11: number;\n    public m12: number;\n    public m13: number;\n\n    public m21: number;\n    public m22: number;\n    public m23: number;\n\n    public m31: number;\n    public m32: number;\n    public m33: number;\n\n    static constructXRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = cos;\n        matrix.m23 = -sin;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = sin;\n        matrix.m33 = cos;\n\n        return matrix;\n    }\n\n    static constructYRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = Math.cos(angle);\n        matrix.m12 = 0.0;\n        matrix.m13 = Math.sin(angle);\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n\n        matrix.m31 = -Math.sin(angle);\n        matrix.m32 = 0.0;\n        matrix.m33 = Math.cos(angle);\n\n        return matrix;\n    }\n\n    static constructZRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = Math.cos(angle);\n        matrix.m12 = -Math.sin(angle);\n        matrix.m13 = 0.0;\n\n        matrix.m21 = Math.sin(angle);\n        matrix.m22 = Math.cos(angle);\n        matrix.m23 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n\n        return matrix;\n    }\n\n    static constructScaleMatrix(xScale: number, yScale: number, zScale: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = xScale;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = yScale;\n        matrix.m23 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = zScale;\n\n        return matrix;\n    }\n\n    public multiplyMatrix(matrix: Matrix3f): Matrix3f {\n        const result = new Matrix3f();\n\n        result.m11 = this.m11 * matrix.m11 + this.m12 * matrix.m21 + this.m13 * matrix.m31;\n        result.m21 = this.m21 * matrix.m11 + this.m22 * matrix.m21 + this.m23 * matrix.m31;\n        result.m31 = this.m31 * matrix.m11 + this.m32 * matrix.m21 + this.m33 * matrix.m31;\n\n        result.m12 = this.m11 * matrix.m12 + this.m12 * matrix.m22 + this.m13 * matrix.m32;\n        result.m22 = this.m21 * matrix.m12 + this.m22 * matrix.m22 + this.m23 * matrix.m32;\n        result.m32 = this.m31 * matrix.m12 + this.m32 * matrix.m22 + this.m33 * matrix.m32;\n\n        result.m13 = this.m11 * matrix.m13 + this.m12 * matrix.m23 + this.m13 * matrix.m33;\n        result.m23 = this.m21 * matrix.m13 + this.m22 * matrix.m23 + this.m23 * matrix.m33;\n        result.m33 = this.m31 * matrix.m13 + this.m32 * matrix.m23 + this.m33 * matrix.m33;\n\n        return result;\n\n    }\n\n    public multiply(vector: Vector3f): Vector3f {\n        return new Vector3f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z);\n    }\n}","/**\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_00_introduction.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_00_research.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_01_pipeline.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_02_transformations.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_03_projections.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_04_lighting.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_05_rasterization.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_06_texturing.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_07_shadows.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_08_transparencyReflection.pdf\n * https://cg.informatik.uni-freiburg.de/teaching.htm\n * @author Johannes Diemke\n * @since 2017-05-07\n */\n\nimport { Vector3f } from './Vector3f';\nimport { Vector4f } from './Vector4f';\n\nexport class Matrix4f {\n\n    public m11: number;\n    public m12: number;\n    public m13: number;\n    public m14: number;\n\n    public m21: number;\n    public m22: number;\n    public m23: number;\n    public m24: number;\n\n    public m31: number;\n    public m32: number;\n    public m33: number;\n    public m34: number;\n\n    public m41: number;\n    public m42: number;\n    public m43: number;\n    public m44: number;\n\n    static constructIdentityMatrix(): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n\n    public setIdentityMatrix(): void {\n\n\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public transpose(): Matrix4f {\n        const transpose: Matrix4f = new Matrix4f();\n\n        transpose.m11 = this.m11;\n        transpose.m12 = this.m21;\n        transpose.m13 = this.m31;\n        transpose.m14 = this.m41;\n\n        transpose.m21 = this.m12;\n        transpose.m22 = this.m22;\n        transpose.m23 = this.m32;\n        transpose.m24 = this.m42;\n\n        transpose.m31 = this.m13;\n        transpose.m32 = this.m23;\n        transpose.m33 = this.m33;\n        transpose.m34 = this.m43;\n\n        transpose.m41 = this.m14;\n        transpose.m42 = this.m24;\n        transpose.m43 = this.m34;\n        transpose.m44 = this.m44;\n\n        return transpose;\n    }\n\n    public computeNormalMatrix(): Matrix4f {\n        // http://www.lighthouse3d.com/tutorials/glsl-12-tutorial/the-normal-matrix/\n        // https://www.gamedev.net/forums/topic/443040-inverse-of-modelview-matrix/\n        // https://computergraphics.stackexchange.com/questions/1502/why-is-the-transposed-inverse-of-the-model-view-matrix-used-to-transform-the-nor\n        return this.inverse().transpose();\n    }\n\n    public inverse(): Matrix4f {\n        // Inverse hack\n        // - only works when the MV matrix only contains\n        // translation and rotation and scaling that is the same in all directions\n\n        const inverseTranslation: Matrix4f = Matrix4f.constructIdentityMatrix();\n        inverseTranslation.m14 = -this.m14;\n        inverseTranslation.m24 = -this.m24;\n        inverseTranslation.m34 = -this.m34;\n\n        const scale1 = 1.0 / Math.sqrt(this.m11 * this.m11 + this.m12 * this.m12 + this.m13 * this.m13);\n        const scale2 = 1.0 / Math.sqrt(this.m21 * this.m21 + this.m22 * this.m22 + this.m23 * this.m23);\n        const scale3 = 1.0 / Math.sqrt(this.m31 * this.m31 + this.m32 * this.m32 + this.m33 * this.m33);\n        const inverseRotation: Matrix4f = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11 * scale1;\n        inverseRotation.m21 = this.m12 * scale1;\n        inverseRotation.m31 = this.m13 * scale1;\n\n        inverseRotation.m12 = this.m21 * scale2;\n        inverseRotation.m22 = this.m22 * scale2;\n        inverseRotation.m32 = this.m23 * scale2;\n\n        inverseRotation.m13 = this.m31 * scale3;\n        inverseRotation.m23 = this.m32 * scale3;\n        inverseRotation.m33 = this.m33 * scale3;\n\n        return inverseRotation.multiplyMatrix(inverseTranslation);\n    }\n\n    public getInverseRotation(): Matrix4f {\n        const scale = 1.0;\n        const inverseRotation = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11 * scale;\n        inverseRotation.m21 = this.m12 * scale;\n        inverseRotation.m31 = this.m13 * scale;\n\n        inverseRotation.m12 = this.m21 * scale;\n        inverseRotation.m22 = this.m22 * scale;\n        inverseRotation.m32 = this.m23 * scale;\n\n        inverseRotation.m13 = this.m31 * scale;\n        inverseRotation.m23 = this.m32 * scale;\n        inverseRotation.m33 = this.m33 * scale;\n\n        return inverseRotation;\n    }\n\n    public getRotation(): Matrix4f {\n\n        const inverseRotation = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11;\n        inverseRotation.m21 = this.m21;\n        inverseRotation.m31 = this.m31;\n\n        inverseRotation.m12 = this.m12;\n        inverseRotation.m22 = this.m22;\n        inverseRotation.m32 = this.m32;\n\n        inverseRotation.m13 = this.m13;\n        inverseRotation.m23 = this.m23;\n        inverseRotation.m33 = this.m33;\n\n        return inverseRotation;\n    }\n\n    static constructShadowMatrix(): Matrix4f {\n        const planePoint: Vector3f = new Vector3f(0, -1.5, 0);\n        const planeNormal: Vector3f = new Vector3f(0, 1, 0);\n        const lightPosition: Vector3f = new Vector3f(0, 11, 0);\n\n        const d = -planePoint.dot(planeNormal);\n        const NdotL = planeNormal.x * lightPosition.x +\n            planeNormal.y * lightPosition.y +\n            planeNormal.z * lightPosition.z;\n\n        const shadowMatrix: Matrix4f = new Matrix4f();\n\n        shadowMatrix.m11 = NdotL + d - lightPosition.x * planeNormal.x;\n        shadowMatrix.m12 = - lightPosition.x * planeNormal.y;\n        shadowMatrix.m13 = - lightPosition.x * planeNormal.z;\n        shadowMatrix.m14 = - lightPosition.x * d;\n\n        shadowMatrix.m21 = - lightPosition.y * planeNormal.x;\n        shadowMatrix.m22 = NdotL + d - lightPosition.y * planeNormal.y;\n        shadowMatrix.m23 = - lightPosition.y * planeNormal.z;\n        shadowMatrix.m24 = - lightPosition.y * d;\n\n        shadowMatrix.m31 = - lightPosition.z * planeNormal.x;\n        shadowMatrix.m32 = - lightPosition.z * planeNormal.y;\n        shadowMatrix.m33 = NdotL + d - lightPosition.z * planeNormal.z;\n        shadowMatrix.m34 = - lightPosition.z * d;\n\n        shadowMatrix.m41 = - planeNormal.x;\n        shadowMatrix.m42 = - planeNormal.y;\n        shadowMatrix.m43 = - planeNormal.z;\n        shadowMatrix.m44 = NdotL;\n\n        return shadowMatrix;\n\n    }\n\n    static constructTranslationMatrix(tx: number, ty: number, tz: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = tx;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = ty;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = tz;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public setTranslationMatrix(tx: number, ty: number, tz: number): void {\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = tx;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = ty;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = tz;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    static constructXRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = Math.cos(alpha);\n        matrix.m23 = -Math.sin(alpha);\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = Math.sin(alpha);\n        matrix.m33 = Math.cos(alpha);\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public setXRotationMatrix(alpha: number): void {\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = Math.cos(alpha);\n        this.m23 = -Math.sin(alpha);\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = Math.sin(alpha);\n        this.m33 = Math.cos(alpha);\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setZRotationMatrix(alpha: number): void {\n        this.m11 = Math.cos(alpha);\n        this.m12 = -Math.sin(alpha);\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = Math.sin(alpha);\n        this.m22 = Math.cos(alpha);\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setScaleMatrix(sx: number, sy: number, sz: number): void {\n        this.m11 = sx;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = sy;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = sz;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setYRotationMatrix(alpha: number): void {\n        this.m11 = Math.cos(alpha);\n        this.m12 = 0.0;\n        this.m13 = Math.sin(alpha);\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = -Math.sin(alpha);\n        this.m32 = 0.0;\n        this.m33 = Math.cos(alpha);\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    static constructYRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = Math.cos(alpha);\n        matrix.m12 = 0.0;\n        matrix.m13 = Math.sin(alpha);\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = -Math.sin(alpha);\n        matrix.m32 = 0.0;\n        matrix.m33 = Math.cos(alpha);\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    static constructZRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = Math.cos(alpha);\n        matrix.m12 = -Math.sin(alpha);\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = Math.sin(alpha);\n        matrix.m22 = Math.cos(alpha);\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    static constructScaleMatrix(sx: number, sy: number = sx, sz: number = sy): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = sx;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = sy;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = sz;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public multiplyMatrix(matrix: Matrix4f): Matrix4f {\n        const result = new Matrix4f();\n\n        result.m11 = this.m11 * matrix.m11 + this.m12 * matrix.m21 + this.m13 * matrix.m31 + this.m14 * matrix.m41;\n        result.m21 = this.m21 * matrix.m11 + this.m22 * matrix.m21 + this.m23 * matrix.m31 + this.m24 * matrix.m41;\n        result.m31 = this.m31 * matrix.m11 + this.m32 * matrix.m21 + this.m33 * matrix.m31 + this.m34 * matrix.m41;\n        result.m41 = this.m41 * matrix.m11 + this.m42 * matrix.m21 + this.m43 * matrix.m31 + this.m44 * matrix.m41;\n\n        result.m12 = this.m11 * matrix.m12 + this.m12 * matrix.m22 + this.m13 * matrix.m32 + this.m14 * matrix.m42;\n        result.m22 = this.m21 * matrix.m12 + this.m22 * matrix.m22 + this.m23 * matrix.m32 + this.m24 * matrix.m42;\n        result.m32 = this.m31 * matrix.m12 + this.m32 * matrix.m22 + this.m33 * matrix.m32 + this.m34 * matrix.m42;\n        result.m42 = this.m41 * matrix.m12 + this.m42 * matrix.m22 + this.m43 * matrix.m32 + this.m44 * matrix.m42;\n\n        result.m13 = this.m11 * matrix.m13 + this.m12 * matrix.m23 + this.m13 * matrix.m33 + this.m14 * matrix.m43;\n        result.m23 = this.m21 * matrix.m13 + this.m22 * matrix.m23 + this.m23 * matrix.m33 + this.m24 * matrix.m43;\n        result.m33 = this.m31 * matrix.m13 + this.m32 * matrix.m23 + this.m33 * matrix.m33 + this.m34 * matrix.m43;\n        result.m43 = this.m41 * matrix.m13 + this.m42 * matrix.m23 + this.m43 * matrix.m33 + this.m44 * matrix.m43;\n\n        result.m14 = this.m11 * matrix.m14 + this.m12 * matrix.m24 + this.m13 * matrix.m34 + this.m14 * matrix.m44;\n        result.m24 = this.m21 * matrix.m14 + this.m22 * matrix.m24 + this.m23 * matrix.m34 + this.m24 * matrix.m44;\n        result.m34 = this.m31 * matrix.m14 + this.m32 * matrix.m24 + this.m33 * matrix.m34 + this.m34 * matrix.m44;\n        result.m44 = this.m41 * matrix.m14 + this.m42 * matrix.m24 + this.m43 * matrix.m34 + this.m44 * matrix.m44;\n\n        return result;\n    }\n\n    public multiply2(matrix: Matrix4f, matrix2: Matrix4f): void {\n        this.m11 = matrix.m11 * matrix2.m11 + matrix.m12 * matrix2.m21 + matrix.m13 * matrix2.m31 + matrix.m14 * matrix2.m41;\n        this.m21 = matrix.m21 * matrix2.m11 + matrix.m22 * matrix2.m21 + matrix.m23 * matrix2.m31 + matrix.m24 * matrix2.m41;\n        this.m31 = matrix.m31 * matrix2.m11 + matrix.m32 * matrix2.m21 + matrix.m33 * matrix2.m31 + matrix.m34 * matrix2.m41;\n        this.m41 = matrix.m41 * matrix2.m11 + matrix.m42 * matrix2.m21 + matrix.m43 * matrix2.m31 + matrix.m44 * matrix2.m41;\n\n        this.m12 = matrix.m11 * matrix2.m12 + matrix.m12 * matrix2.m22 + matrix.m13 * matrix2.m32 + matrix.m14 * matrix2.m42;\n        this.m22 = matrix.m21 * matrix2.m12 + matrix.m22 * matrix2.m22 + matrix.m23 * matrix2.m32 + matrix.m24 * matrix2.m42;\n        this.m32 = matrix.m31 * matrix2.m12 + matrix.m32 * matrix2.m22 + matrix.m33 * matrix2.m32 + matrix.m34 * matrix2.m42;\n        this.m42 = matrix.m41 * matrix2.m12 + matrix.m42 * matrix2.m22 + matrix.m43 * matrix2.m32 + matrix.m44 * matrix2.m42;\n\n        this.m13 = matrix.m11 * matrix2.m13 + matrix.m12 * matrix2.m23 + matrix.m13 * matrix2.m33 + matrix.m14 * matrix2.m43;\n        this.m23 = matrix.m21 * matrix2.m13 + matrix.m22 * matrix2.m23 + matrix.m23 * matrix2.m33 + matrix.m24 * matrix2.m43;\n        this.m33 = matrix.m31 * matrix2.m13 + matrix.m32 * matrix2.m23 + matrix.m33 * matrix2.m33 + matrix.m34 * matrix2.m43;\n        this.m43 = matrix.m41 * matrix2.m13 + matrix.m42 * matrix2.m23 + matrix.m43 * matrix2.m33 + matrix.m44 * matrix2.m43;\n\n        this.m14 = matrix.m11 * matrix2.m14 + matrix.m12 * matrix2.m24 + matrix.m13 * matrix2.m34 + matrix.m14 * matrix2.m44;\n        this.m24 = matrix.m21 * matrix2.m14 + matrix.m22 * matrix2.m24 + matrix.m23 * matrix2.m34 + matrix.m24 * matrix2.m44;\n        this.m34 = matrix.m31 * matrix2.m14 + matrix.m32 * matrix2.m24 + matrix.m33 * matrix2.m34 + matrix.m34 * matrix2.m44;\n        this.m44 = matrix.m41 * matrix2.m14 + matrix.m42 * matrix2.m24 + matrix.m43 * matrix2.m34 + matrix.m44 * matrix2.m44;\n    }\n\n    public multiply(vector: Vector3f): Vector3f {\n        return new Vector3f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34);\n    }\n\n    public multiplyHom(vector: Vector4f): Vector4f {\n        return new Vector4f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w,\n            this.m41 * vector.x + this.m42 * vector.y + this.m43 * vector.z + this.m44 * vector.w);\n    }\n\n    public multiplyHomArr(vector: Vector4f, result: Vector4f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w;\n    }\n\n    public multiplyHomArr2(vector: Vector4f, result: Vector4f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w;\n        result.w = this.m41 * vector.x + this.m42 * vector.y + this.m43 * vector.z + this.m44 * vector.w;\n        result.x /= result.w;\n        result.y /= result.w;\n        result.z /= result.w;\n    }\n\n    public multiplyArr(vector: Vector3f, result: Vector3f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34;\n    }\n\n}\n","import { BoundingVolume } from './BoundingVolume';\nimport { Vector4f } from './index';\nimport { Matrix4f } from './Matrix4f';\nimport { Plane } from './Plane';\n\nexport class Sphere implements BoundingVolume {\n\n    private center: Vector4f;\n    private radius: number;\n\n    public constructor(position: Vector4f, radius: number) {\n        this.center = position;\n        this.radius = radius;\n    }\n\n    /**\n     *\n     * @param {Plane} plane\n     * @returns {boolean}\n     * @memberof Sphere\n     */\n    public isInsidePositiveHalfSpace(plane: Plane): boolean {\n        return plane.getNormal().dot(this.center) - plane.getDistance() > - this.radius;\n    }\n\n    public getTran(mat: Matrix4f): Vector4f {\n        return mat.multiplyHom(this.center);\n    }\n\n    public getRadius(): number {\n        return this.radius;\n    }\n\n    public getCenter(): Vector4f {\n        return this.center;\n    }\n\n}\n","\nexport class Vector2f {\n\n    constructor(public x: number, public y: number) {\n\n    }\n\n    public perp(): Vector2f {\n        return new Vector2f(-this.y, this.x);\n    }\n\n    public sub(vec: Vector2f): Vector2f {\n        return new Vector2f(this.x - vec.x, this.y - vec.y);\n    }\n\n    public mul(scal: number): Vector2f {\n        return new Vector2f(this.x * scal, this.y * scal);\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    public normalize(): Vector2f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public dot(vec: Vector2f): number {\n        return this.x * vec.x + this.y * vec.y;\n    }\n\n}\n","export class Vector3f {\n\n    public x: number;\n    public y: number;\n    public z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    public mult(scale: number): Vector3f {\n        return new Vector3f(this.x * scale, this.y * scale, this.z * scale);\n    }\n\n    public sub(vec: Vector3f): Vector3f {\n        return new Vector3f(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n    }\n\n    public sub2(vec1: Vector3f, vec2: Vector3f): void {\n        this.x = vec1.x - vec2.x;\n        this.y = vec1.y - vec2.y;\n        this.z = vec1.z - vec2.z;\n    }\n\n    public mul(scal: number): Vector3f {\n        return new Vector3f(this.x * scal, this.y * scal, this.z * scal);\n    }\n\n    public add(vec: Vector3f): Vector3f {\n        return new Vector3f(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n    }\n\n    public add2(vec: Vector3f, vec2: Vector3f): void {\n        this.x = vec.x + vec2.x;\n        this.y = vec.y + vec2.y;\n        this.z = vec.z + vec2.z;\n    }\n\n    public cross(vec: Vector3f): Vector3f {\n        return new Vector3f(this.y * vec.z - this.z * vec.y,\n            this.z * vec.x - this.x * vec.z,\n            this.x * vec.y - this.y * vec.x);\n    }\n\n    public cross2(vec1: Vector3f, vec2: Vector3f): void {\n        this.x = vec1.y * vec2.z - vec1.z * vec2.y;\n        this.y = vec1.z * vec2.x - vec1.x * vec2.z;\n        this.z = vec1.x * vec2.y - vec1.y * vec2.x;\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    public normalize(): Vector3f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public normalize2(): void {\n        const reci: number = 1.0 / this.length();\n        this.x *= reci;\n        this.y *= reci;\n        this.z *= reci;\n    }\n\n    public dot(vec: Vector3f): number {\n        return this.x * vec.x + this.y * vec.y + this.z * vec.z;\n    }\n\n}\n","export class Vector4f {\n\n    public x: number;\n    public y: number;\n    public z: number;\n    public w: number;\n\n    constructor(x: number, y: number, z: number, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    public sub(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x - vec.x, this.y - vec.y, this.z - vec.z, this.w - vec.w);\n    }\n\n    public add(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x + vec.x, this.y + vec.y, this.z + vec.z, this.w + vec.w);\n    }\n\n    public cross(vec: Vector4f): Vector4f {\n        return new Vector4f(this.y * vec.z - this.z * vec.y,\n            this.z * vec.x - this.x * vec.z,\n            this.x * vec.y - this.y * vec.x, 0.0);\n    }\n\n    public normalize(): Vector4f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n\n    public sub2(vec1: Vector4f, vec2: Vector4f): void {\n        this.x = vec1.x - vec2.x;\n        this.y = vec1.y - vec2.y;\n        this.z = vec1.z - vec2.z;\n    }\n\n    public add2(vec: Vector4f, vec2: Vector4f): void {\n        this.x = vec.x + vec2.x;\n        this.y = vec.y + vec2.y;\n        this.z = vec.z + vec2.z;\n    }\n\n\n    public mul(scal: number): Vector4f {\n        return new Vector4f(this.x * scal, this.y * scal, this.z * scal, this.w);\n    }\n\n    public componentWiseMul(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x * vec.x, this.y * vec.y, this.z * vec.z, this.w * vec.w);\n    }\n\n    public dot(vec: Vector4f): number {\n        return this.x * vec.x + this.y * vec.y + this.z * vec.z;\n    }\n\n    public cross2(vec1: Vector4f, vec2: Vector4f): void {\n        this.x = vec1.y * vec2.z - vec1.z * vec2.y;\n        this.y = vec1.z * vec2.x - vec1.x * vec2.z;\n        this.z = vec1.x * vec2.y - vec1.y * vec2.x;\n    }\n\n    public normalize2(): void {\n        const reci: number = 1.0 / this.length();\n        this.x *= reci;\n        this.y *= reci;\n        this.z *= reci;\n    }\n\n\n}\n","export { Vector4f } from './Vector4f';\nexport { Vector3f } from './Vector3f';\n\nexport { Matrix3f } from './Matrix3';\nexport { Matrix4f } from './Matrix4f';\nexport { Vector2f } from './Vector2f';\n","import { BlenderJsonParser } from '../../blender/BlenderJsonParser';\nimport { FlatshadedMesh } from '../../geometrical-objects/FlatshadedMesh';\nimport { TexturedMesh } from '../../rendering-pipelines/TexturedMesh';\nimport { BlenderScene } from '../../blender/BlenderScene';\n\n/**\n * Load Wavefront OBJ file that was converted via obj2json utility.\n * to save the convertToMeshArray step\n * renamed to JSX file to load file at runtime\n */\nexport class BlenderLoader {\n\n    public static load(filename: string): Promise<Array<FlatshadedMesh>> {\n        return fetch(filename).then((response: Response) => {\n            return response.json();\n        }).then((meshes: BlenderScene) => {\n            return BlenderJsonParser.parse(meshes);\n        });\n    }\n\n    public static loadWithTexture(filename: string): Promise<Array<TexturedMesh>> {\n        return fetch(filename).then((response: Response) => {\n            return response.json();\n        }).then((meshes: BlenderScene) => {\n            return BlenderJsonParser.getBlenderScene(meshes, false);\n        });\n    }\n\n    private constructor() {\n\n    }\n}\n","import { Framebuffer } from \"../Framebuffer\";\nimport { Vertex } from \"../Vertex\";\nimport { AbstractTriangleRasterizer } from \"./AbstractTriangleRasterizer\";\n\nexport abstract class AbstractScannlineTriangleRasterizer extends AbstractTriangleRasterizer {\n\n    private temp: Vertex = null;\n    \n    /**\n     * Triangle rasterization using edge-walking strategy for scan-conversion.\n     * Internally DDA is used for edge-walking.\n     */\n    public drawTriangleDDA(framebuffer: Framebuffer, p1: Vertex, p2: Vertex, p3: Vertex): void {\n\n        if (p1.projection.y > p3.projection.y) {\n            this.temp = p1;\n            p1 = p3;\n            p3 = this.temp;\n        }\n\n        if (p1.projection.y > p2.projection.y) {\n            this.temp = p1;\n            p1 = p2;\n            p2 = this.temp;\n        }\n\n        if (p2.projection.y > p3.projection.y) {\n            this.temp = p2;\n            p2 = p3;\n            p3 = this.temp;\n        }\n\n        if (p1.projection.y === p3.projection.y) {\n            return;\n        } else {\n            const x: number = (p3.projection.x - p1.projection.x) * (p2.projection.y - p1.projection.y) /\n                (p3.projection.y - p1.projection.y) + p1.projection.x;\n            if (x > p2.projection.x) {\n                this.fillLongRightTriangle(framebuffer, p1, p2, p3);\n            } else {\n                this.fillLongLeftTriangle(framebuffer,p1,p2,p3);\n            }\n        }\n    }\n\n    protected abstract fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void;\n    protected abstract fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void;\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\n\nexport abstract class AbstractTriangleRasterizer {\n\n    public abstract drawTriangleDDA(framebuffer: Framebuffer, p1: Vertex, p2: Vertex, p3: Vertex): void;\n\n}\n","import { Color } from '../core/Color';\n\nexport class ColorInterpolator {\n\n    public startColor: Color = new Color();\n    public colorSlope: Color = new Color();\n\n    public setup(c1: Color, c2: Color, distance: number): void {\n        this.colorSlope.r = (c2.r - c1.r) / distance;\n        this.colorSlope.g = (c2.g - c1.g) / distance;\n        this.colorSlope.b = (c2.b - c1.b) / distance;\n\n        this.startColor.r = c1.r;\n        this.startColor.g = c1.g;\n        this.startColor.b = c1.b;\n    }\n\n    public advance(): void {\n        this.startColor.r += this.colorSlope.r;\n        this.startColor.g += this.colorSlope.g;\n        this.startColor.b += this.colorSlope.b;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class FlatShadingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n    private slope1: number;\n    private slope2: number;\n    private zslope1: number;\n    private zslope2: number;\n    private curz1: number;\n    private curz2: number;\n    private xPosition: number;\n    private xPosition2: number;\n    private yPosition: number;\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        const color: number = v1.color.toPackedFormat();\n\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n\n        this.slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        this.slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n\n        this.zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        this.zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n\n        this.curz1 = 1.0 / v1.projection.z;\n        this.curz2 = 1.0 / v1.projection.z;\n\n        this.xPosition = v1.projection.x;\n        this.xPosition2 = v1.projection.x;\n        this.yPosition = v1.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceLeft, color);\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n        this.slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        this.zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n\n        this.xPosition = v2.projection.x;\n        this.yPosition = v2.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceLeft, color);\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        const color: number = v1.color.toPackedFormat();\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        this.slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        this.slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        this.zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        this.zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        this.curz1 = 1.0 / v1.projection.z;\n        this.curz2 = 1.0 / v1.projection.z;\n\n        this.xPosition = v1.projection.x;\n        this.xPosition2 = v1.projection.x;\n        this.yPosition = v1.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceRight, color);\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        this.slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        this.zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        this.curz2 = 1.0 / v2.projection.z;\n        this.xPosition2 = v2.projection.x;\n        this.yPosition = v2.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceRight, color);\n    }\n\n    drawSpan(framebuffer: Framebuffer, distance: number, color: number) {\n        for (let i = 0; i < distance; i++) {\n            const length = (this.xPosition2) - (this.xPosition);\n            const spanzStep = Math.round(this.curz2 - this.curz1) / length;\n            let wStart = this.curz1;\n            for (let j = 0; j < length; j++) {\n                const framebufferIndex = Math.round(this.yPosition) * framebuffer.width + Math.round(this.xPosition + j);\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    framebuffer.framebuffer[framebufferIndex] = color;\n                }\n                wStart += spanzStep;\n            }\n            this.xPosition += this.slope1;\n            this.xPosition2 += this.slope2;\n            this.yPosition++;\n            this.curz1 += this.zslope1;\n            this.curz2 += this.zslope2;\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\nimport { ColorInterpolator } from './ColorInterpolator';\nimport { SlopeInterpolator } from './SlopeInterpolator';\n\nexport class GouraudShadingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n\n    private colorInterpolator1: ColorInterpolator = new ColorInterpolator();\n    private colorInterpolator2: ColorInterpolator = new ColorInterpolator();\n    private colorInterpolator3: ColorInterpolator = new ColorInterpolator();\n    private rowColorInterpolator: ColorInterpolator = new ColorInterpolator();\n    private leftSlope: SlopeInterpolator = new SlopeInterpolator();\n    private rightSlope: SlopeInterpolator = new SlopeInterpolator();\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        this.leftSlope.setup(v1, v2);\n        this.rightSlope.setup(v1, v3);\n        this.colorInterpolator1.setup(v1.color, v2.color, this.leftSlope.yDistance);\n        this.colorInterpolator2.setup(v1.color, v3.color, this.rightSlope.yDistance);\n        this.drawSpan(framebuffer, this.leftSlope, this.colorInterpolator1, this.colorInterpolator2, this.leftSlope, this.rightSlope);\n\n        this.leftSlope.setup(v2, v3);\n        this.colorInterpolator3.setup(v2.color, v3.color, this.leftSlope.yDistance);\n        this.drawSpan(framebuffer, this.leftSlope, this.colorInterpolator3, this.colorInterpolator2,this.leftSlope, this.rightSlope);\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        this.leftSlope.setup(v1, v3);\n        this.rightSlope.setup(v1, v2);\n        this.colorInterpolator2.setup(v1.color, v2.color, this.rightSlope.yDistance);\n        this.colorInterpolator1.setup(v1.color, v3.color, this.leftSlope.yDistance);\n        this.drawSpan(framebuffer, this.rightSlope, this.colorInterpolator1, this.colorInterpolator2,this.leftSlope, this.rightSlope);\n\n        this.rightSlope.setup(v2, v3);\n        this.colorInterpolator3.setup(v2.color, v3.color, this.rightSlope.yDistance);\n        this.drawSpan(framebuffer, this.rightSlope, this.colorInterpolator1, this.colorInterpolator3,this.leftSlope, this.rightSlope);\n    }\n\n    drawSpan(framebuffer: Framebuffer, shortSlope: SlopeInterpolator, colorInterpolator1: ColorInterpolator, colorInterpolator2: ColorInterpolator,\n        leftSlope: SlopeInterpolator, rightSlope: SlopeInterpolator) {\n        \n        let yPosition = shortSlope.yStart;\n        for (let i = 0; i < shortSlope.yDistance; i++) {\n            const length = Math.round(rightSlope.currentX) - Math.round(leftSlope.currentX);\n            this.rowColorInterpolator.setup(colorInterpolator1.startColor, colorInterpolator2.startColor, length);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(leftSlope.currentX);\n            const spanzStep = (rightSlope.currentZ - leftSlope.currentZ) / length;\n            let wStart = leftSlope.currentZ;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    framebuffer.framebuffer[framebufferIndex] = this.rowColorInterpolator.startColor.toPackedFormat();\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                this.rowColorInterpolator.advance();\n            }\n\n            leftSlope.advance()\n            rightSlope.advance();\n           \n            colorInterpolator1.advance();\n            colorInterpolator2.advance();\n\n            yPosition++;\n        }\n    }\n\n}\n","import { Vertex } from '../Vertex';\n\nexport class SlopeInterpolator {\n\n    yDistance: number;\n    slope: number;\n    zslope: number;\n    currentZ: number;\n    currentX: number;\n    yStart: number;\n\n    setup(top: Vertex, bottom: Vertex) {\n        this.yDistance = bottom.projection.y - top.projection.y;\n        this.slope = (bottom.projection.x - top.projection.x) / this.yDistance;\n        this.zslope = (1 / bottom.projection.z - 1 / top.projection.z) / this.yDistance;\n        this.currentZ = 1.0 / top.projection.z;\n        this.currentX = top.projection.x;\n        this.yStart = top.projection.y;\n    }\n\n    advance() {\n        this.currentX += this.slope;\n        this.currentZ += this.zslope;\n    }\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { AbstractRenderingPipeline } from '../rendering-pipelines/AbstractRenderingPipeline';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class TexturedAlphaBlendingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n    \n\n    // requires\n    // bob und wbuffer\n    constructor(private framebuffer: Framebuffer, private pipeline: AbstractRenderingPipeline) { \n        super();\n    }\n\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n\n\n\n\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n\n        let slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        const slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n\n        let tslope1u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        const tslope2u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        let tslope1v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        const tslope2v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n\n        let zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        const zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                const currentColor = this.framebuffer.framebuffer[framebufferIndex];\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    const u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    const v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    const color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n                    // TODO: move out of loops!\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (currentColor >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (currentColor >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (currentColor >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n\n        if (yDistanceLeft === 0) {\n            return;\n        }\n\n        slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n        tslope1u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceLeft;\n        tslope1v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceLeft;\n\n        curz1 = 1.0 / v2.projection.z;\n        curu1 = v2.textureCoordinate.u / v2.projection.z;\n        curv1 = v2.textureCoordinate.v / v2.projection.z;\n        xPosition = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n\n                    const z = 1 / wStart;\n\n\n                    const u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    const v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    const color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer,  v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        let slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        const slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        const tslope1u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope2u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        const tslope1v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v  / v1.projection.z) / yDistanceLeft;\n        let tslope2v = (v2.textureCoordinate.v  / v2.projection.z - v1.textureCoordinate.v  / v1.projection.z) / yDistanceRight;\n\n\n        let zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        const zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n\n                    const u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    const v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    const color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        tslope2u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceRight;\n        tslope2v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceRight;\n\n        curz2 = 1.0 / v2.projection.z;\n\n        curu2 = v2.textureCoordinate.u / v2.projection.z;\n        curv2 = v2.textureCoordinate.v / v2.projection.z;\n\n        xPosition2 = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    const u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    const v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    const color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class TexturedTriangleRasterizer extends AbstractScannlineTriangleRasterizer{\n\n    // requires\n    // bob und wbuffer\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        // left slope\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n        let slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        let tslope1u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope1v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        let zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        let curz1 = 1.0 / v1.projection.z;\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let xPosition = v1.projection.x;\n\n        // right slope\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n        const slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n        const tslope2u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n        const tslope2v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n        const zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        let curz2 = 1.0 / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n        let xPosition2 = v1.projection.x;\n\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n\n        if (yDistanceLeft === 0) {\n            return;\n        }\n\n        slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n        tslope1u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceLeft;\n        tslope1v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceLeft;\n\n        curz1 = 1.0 / v2.projection.z;\n        curu1 = v2.textureCoordinate.u / v2.projection.z;\n        curv1 = v2.textureCoordinate.v / v2.projection.z;\n        xPosition = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        let slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        const slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        const tslope1u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope2u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        const tslope1v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        let tslope2v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n\n\n        let zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        const zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        tslope2u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceRight;\n        tslope2v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceRight;\n\n        curz2 = 1.0 / v2.projection.z;\n\n        curu2 = v2.textureCoordinate.u / v2.projection.z;\n        curv2 = v2.textureCoordinate.v / v2.projection.z;\n\n        xPosition2 = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { Vector3f } from '../../math';\n\n/**\n * digital differential analyser line drawing algorithm\n * using fixed point math.\n * renders approx 1400 lines per millisecond on my machine\n */\nexport class LineRasterizerDda {\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public drawLineDDA(start: Vector3f, end: Vector3f, color: number): void {\n        const xDistance: number = end.x - start.x;\n        const yDistance: number = end.y - start.y;\n\n        let dx: number;\n        let dy: number;\n        let length: number;\n\n        if (Math.abs(xDistance) > Math.abs(yDistance)) {\n            dx = Math.sign(xDistance);\n            dy = yDistance / Math.abs(xDistance);\n            length = Math.abs(xDistance);\n        } else {\n            dx = xDistance / Math.abs(yDistance);\n            dy = Math.sign(yDistance);\n            length = Math.abs(yDistance);\n        }\n\n        let xPosition: number = start.x;\n        let yPosition: number = start.y;\n\n        // w=1/z interpolation for z-buffer\n        let wStart = 1 / (start.z);\n        const wDelta = (1 / end.z - 1 / start.z) / length;\n\n        for (let i = 0; i <= length; i++) {\n            if (wStart < this.framebuffer.wBuffer[Math.round(xPosition) + Math.round(yPosition) * this.framebuffer.width]) {\n                this.framebuffer.wBuffer[Math.round(xPosition) + Math.round(yPosition) * this.framebuffer.width] = wStart;\n                this.framebuffer.drawPixel(Math.round(xPosition), Math.round(yPosition), color);\n            }\n            xPosition += dx;\n            yPosition += dy;\n            wStart += wDelta;\n        }\n    }\n\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { Vector3f } from '../../math';\n\nexport class LineRasterizerNoZ {\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public drawLineDDANoZ(start: Vector3f, end: Vector3f, color: number): void {\n        const xDistance: number = end.x - start.x;\n        const yDistance: number = end.y - start.y;\n\n        let dx: number;\n        let dy: number;\n        let length: number;\n\n        if (Math.abs(xDistance) > Math.abs(yDistance)) {\n            dx = Math.sign(xDistance);\n            dy = yDistance / Math.abs(xDistance);\n            length = Math.abs(xDistance);\n        } else {\n            dx = xDistance / Math.abs(yDistance);\n            dy = Math.sign(yDistance);\n            length = Math.abs(yDistance);\n        }\n\n        let xPosition: number = start.x;\n        let yPosition: number = start.y;\n\n        for (let i = 0; i <= length; i++) {\n\n            this.framebuffer.drawPixel(Math.round(xPosition), Math.round(yPosition), color);\n\n            xPosition += dx;\n            yPosition += dy;\n\n        }\n    }\n\n}\n","import { CullFace } from '../CullFace';\nimport { Framebuffer } from '../Framebuffer';\n\nexport class AbstractRenderingPipeline {\n\n    public NEAR_PLANE_Z: number = -1.7;\n    public alpha: number;\n    private cullMode: CullFace = CullFace.BACK;\n\n    constructor(protected framebuffer: Framebuffer) { }\n\n    public setCullFace(face: CullFace): void {\n        this.cullMode = face;\n    }\n\n    public setAlpha(alpha: number): void {\n        this.alpha = Math.max(Math.min(alpha, 1.0), 0.0);\n    }\n\n    public isInFrontOfNearPlane(p: { x: number; y: number; z: number }): boolean {\n        return p.z < this.NEAR_PLANE_Z;\n    }\n\n    /**\n     * based on signed polygon area computation:\n     * http://www.faqs.org/faqs/graphics/algorithms-faq/\n     * https://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-points-are-in-clockwise-order\n     * http://csharphelper.com/blog/2014/07/calculate-the-area-of-a-polygon-in-c/\n     * http://mathworld.wolfram.com/PolygonArea.html\n     *\n     * @private\n     * @param {{ x: number, y: number, z: number }} v1\n     * @param {{ x: number, y: number, z: number }} v2\n     * @param {{ x: number, y: number, z: number }} v3\n     * @returns {boolean}\n     * @memberof Framebuffer\n     *\n     */\n    public isTriangleCCW(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number }): boolean {\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v1.y - v1.x * v3.y;\n        if (this.cullMode === CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n    public isTriangleCCW2(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number },\n        v4: { x: number, y: number, z: number }): boolean {\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v4.y - v4.x * v3.y +\n            v4.x * v1.y - v1.x * v4.y;\n        if (this.cullMode === CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n}\n","import { Color } from '../core/Color';\nimport { Framebuffer } from '../Framebuffer';\nimport { FlatshadedMesh } from '../geometrical-objects/FlatshadedMesh';\nimport { Vector4f } from '../math/index';\nimport { Matrix4f } from '../math/Matrix4f';\nimport { SutherlandHodgman2DClipper } from '../screen-space-clipping/SutherlandHodgman2DClipper';\nimport { Fog } from '../shading/fog/Fog';\nimport { PhongLighting } from '../shading/illumination-models/PhongLighting';\nimport { PointLight } from '../shading/light/PointLight';\nimport { Material } from '../shading/material/Material';\nimport { Vertex } from '../Vertex';\nimport { AbstractRenderingPipeline } from './AbstractRenderingPipeline';\nimport { AbstractTriangleRasterizer } from '../rasterizer/AbstractTriangleRasterizer';\nimport { GouraudShadingTriangleRasterizer } from '../rasterizer/GouraudShadingTriangleRasterizer';\n\n/**\n * TODO:\n * - object with position, rotation, material, color\n * - remove tempp matrix objects: instead store one global MV  matrix and manipulate\n *   it directly without generating temp amtrices every frame\n * - no lighting for culled triangles\n * - only z clip if necessary (no clip, fully visible)\n * Optimization:\n * - no shading / only texture mapping (use function pointers to set correct rasterization function)\n * - use delta step method from black art of 3d programming\n * - generate object only once\n * - dont use temp arrays / instead use always the same array preallocated\n */\nexport class GouraudShadingRenderingPipeline extends AbstractRenderingPipeline {\n\n    private fog: Fog = null;\n    private lights: Array<PointLight> = null;\n    private material: Material = null;\n    private lighting: boolean = true;\n    private color: Color = Color.WHITE;\n\n    // it is possible to change the rasterizer here for\n    // flat, gouroud, texture mapping etc.. should be done with clipper as well!\n    private triangleRasterizer: AbstractTriangleRasterizer = null;\n    private clipper: SutherlandHodgman2DClipper;\n\n    private projectedVertices: Array<Vector4f> = new Array<Vector4f>(\n        new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1)\n    );\n\n    private vertexArray: Array<Vertex> = new Array<Vertex>(\n        new Vertex(), new Vertex(), new Vertex()\n    );\n\n    public constructor(framebuffer: Framebuffer) {\n        super(framebuffer);\n        this.clipper = new SutherlandHodgman2DClipper(framebuffer);\n\n        const light1: PointLight = new PointLight();\n        light1.ambientIntensity = new Vector4f(1, 1, 1, 1);\n        light1.diffuseIntensity = new Vector4f(1, 1, 1, 1);\n        light1.specularIntensity = new Vector4f(1, 1, 1, 1);\n        light1.position = new Vector4f(3, 0, -2, 1);\n\n        const light2: PointLight = new PointLight();\n        light2.ambientIntensity = new Vector4f(0, 0, 1, 1);\n        light2.diffuseIntensity = new Vector4f(0, 0.6, 1, 1);\n        light2.specularIntensity = new Vector4f(0.8, 0.8, 0.8, 1);\n        light2.position = new Vector4f(0, -380, -180, 1);\n\n        this.lights = [light1, light2];\n\n        const mat: Material = new Material();\n        mat.ambientColor = new Vector4f(0.12, 0.14, 0.1, 0);\n        mat.diffuseColor = new Vector4f(0.38, 0.4, 0.4, 1);\n        mat.specularColor = new Vector4f(0.8, 0.5, 0.5, 0);\n        mat.shininess = 2;\n\n        this.material = mat;\n        this.triangleRasterizer = new GouraudShadingTriangleRasterizer(framebuffer);\n    }\n\n    public setFramebuffer(framebuffer: Framebuffer) {\n        this.framebuffer = framebuffer;\n    }\n\n    public setFog(fog: Fog): void {\n        this.fog = fog;\n    }\n\n    public setLights(lights: Array<PointLight>): void {\n        this.lights = lights;\n    }\n\n    public enableLighting(enable: boolean): void {\n        this.lighting = enable;\n    }\n\n    public setMaterial(material: Material): void {\n        this.material = material;\n    }\n\n    public setColor(color: Color): void {\n        this.color = color;\n    }\n\n    public drawMeshArray(framebuffer: Framebuffer, meshes: Array<FlatshadedMesh>, modelViewMartrix: Matrix4f): void {\n        for (let j: number = 0; j < meshes.length; j++) {\n            const model: FlatshadedMesh = meshes[j];\n            this.draw(framebuffer, model,modelViewMartrix);\n        }\n    }\n\n\n    public draw(framebuffer: Framebuffer, mesh: FlatshadedMesh, modelViewMartrix: Matrix4f): void {\n\n        const normalMatrix: Matrix4f = modelViewMartrix.computeNormalMatrix();\n\n        for (let i: number = 0; i < mesh.normals.length; i++) {\n            normalMatrix.multiplyHomArr(mesh.normals[i], mesh.transformedNormals[i]);\n        }\n\n        for (let i: number = 0; i < mesh.points.length; i++) {\n            modelViewMartrix.multiplyHomArr(mesh.points[i], mesh.transformedPoints[i]);\n        }\n\n        for (let i: number = 0; i < mesh.faces.length; i++) {\n            const v1: Vector4f = mesh.transformedPoints[mesh.faces[i].v1];\n            const v2: Vector4f = mesh.transformedPoints[mesh.faces[i].v2];\n            const v3: Vector4f = mesh.transformedPoints[mesh.faces[i].v3];\n\n            const normal1: Vector4f = mesh.transformedNormals[mesh.faces[i].n1];\n            const normal2: Vector4f = mesh.transformedNormals[mesh.faces[i].n2];\n            const normal3: Vector4f = mesh.transformedNormals[mesh.faces[i].n3];\n\n            if (this.isInFrontOfNearPlane(v1) &&\n                this.isInFrontOfNearPlane(v2) &&\n                this.isInFrontOfNearPlane(v3)) {\n\n                this.project2(v1, this.projectedVertices[0]);\n                this.project2(v2, this.projectedVertices[1]);\n                this.project2(v3, this.projectedVertices[2]);\n\n                this.vertexArray[0].position = v1;\n                this.vertexArray[0].projection = this.projectedVertices[0];\n                this.vertexArray[0].normal = normal1;\n\n                this.vertexArray[1].position = v2;\n                this.vertexArray[1].projection = this.projectedVertices[1];\n                this.vertexArray[1].normal = normal2;\n\n                this.vertexArray[2].position = v3;\n                this.vertexArray[2].projection = this.projectedVertices[2];\n                this.vertexArray[2].normal = normal3;\n\n                this.renderConvexPolygon(framebuffer, this.vertexArray, true);\n            } else if (!this.isInFrontOfNearPlane(v1) &&\n                !this.isInFrontOfNearPlane(v2) &&\n                !this.isInFrontOfNearPlane(v3)) {\n                continue;\n            } else {\n                this.vertexArray[0].position = v1;\n                this.vertexArray[1].position = v2;\n                this.vertexArray[2].position = v3;\n\n                if (this.lighting) {\n                    this.vertexArray[0].color = this.computeColor(normal1, v1);\n                    this.vertexArray[1].color = this.computeColor(normal2, v2);\n                    this.vertexArray[2].color = this.computeColor(normal3, v3);\n                } else {\n                    this.vertexArray[0].color = this.color;\n                    this.vertexArray[1].color = this.color;\n                    this.vertexArray[2].color = this.color;\n                }\n\n                const output: Array<Vertex> = this.zClipTriangle(this.vertexArray);\n\n                if (output.length < 3) {\n                    return;\n                }\n\n                for (let j: number = 0; j < output.length; j++) {\n                    output[j].projection = this.project(output[j].position);\n                }\n\n                this.renderConvexPolygon(framebuffer, output, false);\n            }\n        }\n    }\n\n    public project(t1: { x: number, y: number, z: number }): Vector4f {\n        return new Vector4f(\n            Math.round((this.framebuffer.width / 2) + (292 * t1.x / (-t1.z))),\n            Math.round((this.framebuffer.height / 2) - (t1.y * 292 / (-t1.z))),\n            t1.z\n        );\n    }\n\n    public project2(t1: { x: number, y: number, z: number }, result: Vector4f): void {\n        result.x = Math.round((this.framebuffer.width / 2) + (292 * t1.x / (-t1.z)));\n        result.y = Math.round((this.framebuffer.height / 2) - (t1.y * 292 / (-t1.z)));\n        result.z = t1.z;\n    }\n\n    public computeNearPlaneIntersection(p1: Vertex, p2: Vertex): Vertex {\n        // TODO: interpolate color linear\n        const ratio: number = (this.NEAR_PLANE_Z - p1.position.z) / (p2.position.z - p1.position.z);\n        const vertex: Vertex = new Vertex();\n        vertex.position = new Vector4f(\n            ratio * (p2.position.x - p1.position.x) + p1.position.x,\n            ratio * (p2.position.y - p1.position.y) + p1.position.y,\n            this.NEAR_PLANE_Z\n        );\n        vertex.color = p2.color.sub(p1.color).mul(ratio).add(p1.color);\n        return vertex;\n    }\n\n    public zClipTriangle(subject: Array<Vertex>): Array<Vertex> {\n        const input: Array<Vertex> = subject;\n        const output: Array<Vertex> = new Array<Vertex>();\n        let S: Vertex = input[input.length - 1];\n\n        for (let i: number = 0; i < input.length; i++) {\n            const point: Vertex = input[i];\n            if (this.isInFrontOfNearPlane(point.position)) {\n                if (!this.isInFrontOfNearPlane(S.position)) {\n                    output.push(this.computeNearPlaneIntersection(S, point));\n                }\n                output.push(point);\n            } else if (this.isInFrontOfNearPlane(S.position)) {\n                output.push(this.computeNearPlaneIntersection(S, point));\n            }\n            S = point;\n        }\n\n        return output;\n    }\n\n    private renderConvexPolygon(framebuffer: Framebuffer, projected: Array<Vertex>, late: boolean = false): void {\n        if (projected.length === 3 &&\n            !this.isTriangleCCW(\n                projected[0].projection,\n                projected[1].projection,\n                projected[2].projection)) {\n            return;\n        }\n\n        if (late) {\n            if (this.lighting) {\n                this.vertexArray[0].color = this.computeColor(this.vertexArray[0].normal, this.vertexArray[0].position);\n                this.vertexArray[1].color = this.computeColor(this.vertexArray[1].normal, this.vertexArray[1].position);\n                this.vertexArray[2].color = this.computeColor(this.vertexArray[2].normal, this.vertexArray[2].position);\n            } else {\n                this.vertexArray[0].color = this.color;\n                this.vertexArray[1].color = this.color;\n                this.vertexArray[2].color = this.color;\n            }\n\n        }\n\n        if (projected.length === 4 &&\n            !this.isTriangleCCW2(\n                projected[0].projection,\n                projected[1].projection,\n                projected[2].projection,\n                projected[3].projection)\n        ) {\n            return;\n        }\n\n        const clippedPolygon: Array<Vertex> = this.clipper.clipConvexPolygon(projected);\n\n        if (clippedPolygon.length < 3) {\n            return;\n        }\n\n        this.triangulateConvexPolygon(framebuffer, clippedPolygon);\n    }\n\n    private triangulateConvexPolygon(framebuffer:Framebuffer, clippedPolygon: Array<Vertex>): void {\n        for (let j: number = 0; j < clippedPolygon.length - 2; j++) {\n            this.triangleRasterizer.drawTriangleDDA(\n                framebuffer,\n                clippedPolygon[0],\n                clippedPolygon[1 + j],\n                clippedPolygon[2 + j]\n            );\n        }\n    }\n\n    private computeColor(normal: Vector4f, vertex: Vector4f): Color {\n\n        // TODO: if lighting is enabled use mat and light\n        // else use Color set\n\n        let vertexColor: Vector4f = new PhongLighting().computeColor(this.material, this.lights, normal, vertex);\n\n        if (this.fog !== null) {\n            vertexColor = this.fog.computeVertexColor(vertexColor, vertex);\n        }\n\n        return new Color(\n            Math.min(255, vertexColor.x * 255),\n            Math.min(255, vertexColor.y * 255),\n            Math.min(255, vertexColor.z * 255),\n            255\n        );\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Matrix4f } from '../math/Matrix4f';\nimport { Vector4f } from '../math/Vector4f';\nimport { AbstractTriangleRasterizer } from '../rasterizer/AbstractTriangleRasterizer';\nimport { TexturedAlphaBlendingTriangleRasterizer } from '../rasterizer/TexturedAlphaBlendingTriangleRasterizer';\nimport { TexturedTriangleRasterizer } from '../rasterizer/TexturedTriangleRasterizer';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractRenderingPipeline } from './AbstractRenderingPipeline';\nimport { TexturedMesh } from './TexturedMesh';\n\nexport class TexturingRenderingPipeline extends AbstractRenderingPipeline {\n\n    private sphereMapping: boolean = false;\n    public triangleRasterizer: AbstractTriangleRasterizer = null;\n\n    private vertexArray: Array<Vertex> = new Array<Vertex>(\n        new Vertex(), new Vertex(), new Vertex()\n    );\n    setSphereMapping(sphereMapping: boolean) {\n        this.sphereMapping = sphereMapping;\n    }\n\n    private modelViewMatrix: Matrix4f;\n\n    private projectedVertices: Array<Vector4f> = new Array<Vector4f>(\n        new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1)\n    );\n\n    constructor(framebuffer: Framebuffer) {\n        super(framebuffer);\n        this.setAlpha(1.0);\n        this.triangleRasterizer = new TexturedTriangleRasterizer(framebuffer);\n    }\n\n    public setFramebuffer(framebuffer: Framebuffer) {\n        this.framebuffer = framebuffer;\n    }\n\n    public enableAlphaBlending(): void {\n        this.triangleRasterizer = new TexturedAlphaBlendingTriangleRasterizer(this.framebuffer, this);\n    }\n\n    public disableAlphaBlending(): void {\n        this.triangleRasterizer = new TexturedTriangleRasterizer(this.framebuffer);\n    }\n\n    public setModelViewMatrix(matrix: Matrix4f): void {\n        this.modelViewMatrix = matrix;\n    }\n\n    public drawMeshArray(framebuffer: Framebuffer, meshes: Array<TexturedMesh>): void {\n        for (let j: number = 0; j < meshes.length; j++) {\n            const model: TexturedMesh = meshes[j];\n            this.draw(framebuffer, model);\n        }\n    }\n\n    public draw(framebuffer: Framebuffer, mesh: TexturedMesh): void {\n        if (mesh.normals) {\n            const normalMatrix: Matrix4f = this.modelViewMatrix.computeNormalMatrix();\n\n            for (let i: number = 0; i < mesh.normals.length; i++) {\n                normalMatrix.multiplyHomArr(mesh.normals[i], mesh.normals2[i]);\n            }\n        }\n\n        for (let i: number = 0; i < mesh.points.length; i++) {\n            this.modelViewMatrix.multiplyHomArr(mesh.points[i], mesh.points2[i]);\n        }\n\n        for (let i: number = 0; i < mesh.faces.length; i++) {\n            const v1: Vector4f = mesh.points2[mesh.faces[i].vertices[0]];\n            const v2: Vector4f = mesh.points2[mesh.faces[i].vertices[1]];\n            const v3: Vector4f = mesh.points2[mesh.faces[i].vertices[2]];\n\n            if (this.isInFrontOfNearPlane(v1) &&\n                this.isInFrontOfNearPlane(v2) &&\n                this.isInFrontOfNearPlane(v3)) {\n\n                this.project2(v1, this.projectedVertices[0]);\n                this.project2(v2, this.projectedVertices[1]);\n                this.project2(v3, this.projectedVertices[2]);\n\n                if (this.isTriangleCCW(\n                    this.projectedVertices[0],\n                    this.projectedVertices[1],\n                    this.projectedVertices[2])) {\n\n                    this.vertexArray[0].projection = this.projectedVertices[0]; // p1 is Vector3f\n                    this.vertexArray[1].projection = this.projectedVertices[1];\n                    this.vertexArray[2].projection = this.projectedVertices[2];\n\n                    if (this.sphereMapping) {\n                        const n1: Vector4f = mesh.normals2[mesh.faces[i].normals[0]];\n                        const n2: Vector4f = mesh.normals2[mesh.faces[i].normals[1]];\n                        const n3: Vector4f = mesh.normals2[mesh.faces[i].normals[2]];\n                        framebuffer.fakeSphere(n1, this.vertexArray[0]);\n                        framebuffer.fakeSphere(n2, this.vertexArray[1]);\n                        framebuffer.fakeSphere(n3, this.vertexArray[2]);\n                    } else {\n                        this.vertexArray[0].textureCoordinate = mesh.uv[mesh.faces[i].uv[0]];\n                        this.vertexArray[1].textureCoordinate = mesh.uv[mesh.faces[i].uv[1]];\n                        this.vertexArray[2].textureCoordinate = mesh.uv[mesh.faces[i].uv[2]];\n                    }\n\n                    this.clipConvexPolygon(framebuffer, this.vertexArray);\n                }\n            } else if (!this.isInFrontOfNearPlane(v1) &&\n                !this.isInFrontOfNearPlane(v2) &&\n                !this.isInFrontOfNearPlane(v3)) {\n                continue;\n            } else {\n                this.vertexArray[0].position = v1; // v1 is Vector4f\n                this.vertexArray[0].textureCoordinate = mesh.uv[mesh.faces[i].uv[0]];\n\n                this.vertexArray[1].position = v2;\n                this.vertexArray[1].textureCoordinate = mesh.uv[mesh.faces[i].uv[1]];\n\n                this.vertexArray[2].position = v3;\n                this.vertexArray[2].textureCoordinate = mesh.uv[mesh.faces[i].uv[2]];\n\n                this.zClipTriangle(framebuffer, this.vertexArray);\n            }\n        }\n    }\n\n    public project2(t1: { x: number, y: number, z: number }, result: Vector4f): void {\n        result.x = Math.round((this.framebuffer.width / 2) + (292 * t1.x / (-t1.z)));\n        result.y = Math.round((this.framebuffer.height / 2) - (t1.y * 292 / (-t1.z)));\n        result.z = t1.z;\n    }\n\n    public computeNearPlaneIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const ratio: number = (this.NEAR_PLANE_Z - p1.position.z) / (p2.position.z - p1.position.z);\n        const vertex: Vertex = new Vertex();\n\n        vertex.position = new Vector4f(\n            ratio * (p2.position.x - p1.position.x) + p1.position.x,\n            ratio * (p2.position.y - p1.position.y) + p1.position.y,\n            this.NEAR_PLANE_Z\n        );\n\n        vertex.textureCoordinate = new TextureCoordinate(\n            ratio * (p2.textureCoordinate.u - p1.textureCoordinate.u) + p1.textureCoordinate.u,\n            ratio * (p2.textureCoordinate.v - p1.textureCoordinate.v) + p1.textureCoordinate.v\n        );\n\n        return vertex;\n    }\n\n    public zClipTriangle(framebuffer: Framebuffer, subject: Array<Vertex>): void {\n        const input: Array<Vertex> = subject;\n        const output: Array<Vertex> = new Array<Vertex>();\n        let S: Vertex = input[input.length - 1];\n\n        for (let i: number = 0; i < input.length; i++) {\n            const point: Vertex = input[i];\n            if (this.isInFrontOfNearPlane(point.position)) {\n                if (!this.isInFrontOfNearPlane(S.position)) {\n                    output.push(this.computeNearPlaneIntersection(S, point));\n                }\n                output.push(point);\n            } else if (this.isInFrontOfNearPlane(S.position)) {\n                output.push(this.computeNearPlaneIntersection(S, point));\n            }\n            S = point;\n        }\n\n        if (output.length < 3) {\n            return;\n        }\n\n        for (let j: number = 0; j < output.length; j++) {\n            this.project2(output[j].position, output[j].projection);\n        }\n\n        if (output.length === 3 &&\n            !this.isTriangleCCW(output[0].projection, output[1].projection, output[2].projection)) {\n            return;\n        }\n\n        if (output.length === 4 &&\n            !this.isTriangleCCW2(\n                output[0].projection,\n                output[1].projection,\n                output[2].projection,\n                output[3].projection\n            )) {\n            return;\n        }\n\n        this.clipConvexPolygon(framebuffer, output);\n    }\n\n\n    public clipConvexPolygon(framebuffer: Framebuffer, subject: Array<Vertex>): void {\n\n        let output = subject;\n\n        for (let j = 0; j < framebuffer.clipRegion.length; j++) {\n            const edge = framebuffer.clipRegion[j];\n            const input = output;\n            output = new Array<Vertex>();\n            let S = input[input.length - 1];\n\n            for (let i = 0; i < input.length; i++) {\n                const point = input[i];\n                if (edge.isInside2(point)) {\n                    if (!edge.isInside2(S)) {\n                        output.push(edge.computeIntersection2(S, point));\n                    }\n                    output.push(point);\n                } else if (edge.isInside2(S)) {\n                    output.push(edge.computeIntersection2(S, point));\n                }\n                S = point;\n            }\n        }\n\n        if (output.length < 3) {\n            return;\n        }\n\n        // triangulate new point set\n        for (let i = 0; i < output.length - 2; i++) {\n            this.triangleRasterizer.drawTriangleDDA(framebuffer, output[0], output[1 + i], output[2 + i]);\n        }\n    }\n\n}\n","import { Framebuffer } from './../Framebuffer';\n\nexport abstract class AbstractScene {\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public init(framebuffer: Framebuffer): Promise<any> {\n        return Promise.all([]);\n    }\n\n    public onInit(): void {\n\n    }\n\n    public abstract render(framebuffer: Framebuffer, time: number): void;\n\n}\n","import { Vertex } from '../Vertex';\n\n// TODO:\n// - use polymorphism in order to have different intersection methods\n// - one for plain clipping / one for tex coords / one for multitexturing / gouraud shading etc\nexport abstract class AbstractClipEdge {\n\n    public abstract isInside(p: Vertex): boolean;\n    public abstract isInside2(p: Vertex): boolean;\n    public abstract computeIntersection(p1: Vertex, p2: Vertex): Vertex;\n    public abstract computeIntersection2(p1: Vertex, p2: Vertex): Vertex;\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\n\nexport class BottomClipEdge extends AbstractClipEdge {\n\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.y >= this.framebuffer.minWindow.y;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.y >= this.framebuffer.minWindow.y;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        // since this is for flat shading no interpolation is required\n        const factor: number = (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(\n            Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * factor),\n            this.framebuffer.minWindow.y,\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.minWindow.y,\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)));\n\n        const textCoord: TextureCoordinate = new TextureCoordinate();\n        const z: number = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector3f } from '../math/Vector3f';\n\nexport class CohenSutherlandLineClipper {\n\n    public static REGION_CODE_CENTER = 0b0000;\n    public static REGION_CODE_LEFT = 0b0001;\n    public static REGION_CODE_RIGHT = 0b0010;\n    public static REGION_CODE_BOTTOM = 0b0100;\n    public static REGION_CODE_TOP = 0b1000;\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public cohenSutherlandLineClipper(start: Vector3f, end: Vector3f, col: number) {\n        let p1: Vector3f = new Vector3f(start.x, start.y, start.z);\n        let p2: Vector3f = new Vector3f(end.x, end.y, end.z);\n\n        let code1: number = this.computeRegionCode(p1);\n        let code2: number = this.computeRegionCode(p2);\n\n        let accept: boolean = false;\n        let done: boolean = false;\n\n        while (!done) {\n\n            if (this.isTrivialAccept(code1, code2)) {\n                accept = true;\n                done = true;\n            } else if (this.isTrivialReject(code1, code2)) {\n                done = true;\n            } else {\n\n                if (code1 === CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    const tempCode: number = code1;\n                    code1 = code2;\n                    code2 = tempCode;\n\n                    const tempPoint: Vector3f = p1;\n                    p1 = p2;\n                    p2 = tempPoint;\n                }\n\n                if ((code1 & CohenSutherlandLineClipper.REGION_CODE_TOP) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.x = (p1.x + (p2.x - p1.x) * (this.framebuffer.maxWindow.y - p1.y) / (p2.y - p1.y));\n                    p1.y = this.framebuffer.maxWindow.y;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_BOTTOM) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.x = (p1.x + (p2.x - p1.x) * (this.framebuffer.minWindow.y - p1.y) / (p2.y - p1.y));\n                    p1.y = this.framebuffer.minWindow.y;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_RIGHT) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.y = (p1.y + (p2.y - p1.y) * (this.framebuffer.maxWindow.x - p1.x) / (p2.x - p1.x));\n                    p1.x = this.framebuffer.maxWindow.x;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_LEFT) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.y = (p1.y + (p2.y - p1.y) * (this.framebuffer.minWindow.x - p1.x) / (p2.x - p1.x));\n                    p1.x = this.framebuffer.minWindow.x;\n                }\n\n                code1 = this.computeRegionCode(p1);\n            }\n        }\n\n        if (accept) {\n            this.framebuffer.drawLineDDA(p1, p2, col);\n        }\n    }\n\n    public isTrivialAccept(code1: number, code2: number): boolean {\n        return (code1 | code2) === CohenSutherlandLineClipper.REGION_CODE_CENTER;\n    }\n\n    public isTrivialReject(code1: number, code2: number): boolean {\n        return (code1 & code2) !== CohenSutherlandLineClipper.REGION_CODE_CENTER;\n    }\n\n    public computeRegionCode(point: Vector3f): number {\n        let regionCode: number = CohenSutherlandLineClipper.REGION_CODE_CENTER;\n\n        if (point.x < this.framebuffer.minWindow.x) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_LEFT;\n        } else if (point.x > this.framebuffer.maxWindow.x) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_RIGHT;\n        }\n\n        if (point.y < this.framebuffer.minWindow.y) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_BOTTOM;\n        } else if (point.y > this.framebuffer.maxWindow.y) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_TOP;\n        }\n\n        return regionCode;\n    }\n\n}\n","import { AbstractClipEdge } from './AbstractClipEdge';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math/Vector4f';\n\nexport class LeftClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.x >= 0;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.x >= 0;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(this.framebuffer.minWindow.x,\n            Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * factor),\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.minWindow.x,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\nimport { Vector4f } from '../math/Vector4f';\n\nexport class RightClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.x < this.framebuffer.width;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.x < this.framebuffer.width;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(this.framebuffer.maxWindow.x + 1,\n            Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * factor),\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.maxWindow.x + 1,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n}\n","\nimport { AbstractClipEdge } from './AbstractClipEdge';\nimport { RightClipEdge } from './RightClipEdge';\nimport { LeftClipEdge } from './LeftClipEdge';\nimport { BottomClipEdge } from './BottomClipEdge';\nimport { TopClipEdge } from './TopClipEdge';\nimport { Vertex } from '../Vertex';\nimport { Framebuffer } from '../Framebuffer';\n\nexport class SutherlandHodgman2DClipper {\n\n\n    private clipRegion: Array<AbstractClipEdge>;\n\n    constructor(private framebuffer: Framebuffer) {\n        this.clipRegion = new Array<AbstractClipEdge>(\n            new RightClipEdge(framebuffer),\n            new LeftClipEdge(framebuffer),\n            new BottomClipEdge(framebuffer),\n            new TopClipEdge(framebuffer)\n        );\n\n    }\n\n    /**\n     * FIXME: optimize by minimizing creation of new arrays\n     *\n     * @param {Array<Vertex>} subject\n     * @return {Array<Vertex>}\n     */\n    public clipConvexPolygon(subject: Array<Vertex>): Array<Vertex> {\n\n        let output = subject;\n\n        for (let j = 0; j < this.clipRegion.length; j++) {\n            const edge: AbstractClipEdge = this.clipRegion[j];\n            const input = output;\n            output = new Array<Vertex>();\n            let S = input[input.length - 1];\n\n            for (let i = 0; i < input.length; i++) {\n                const point = input[i];\n                if (edge.isInside(point)) {\n                    if (!edge.isInside(S)) {\n                        output.push(edge.computeIntersection(S, point));\n                    }\n                    output.push(point);\n                } else if (edge.isInside(S)) {\n                    output.push(edge.computeIntersection(S, point));\n                }\n                S = point;\n            }\n        }\n\n        return output;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\n\nexport class TopClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.y < this.framebuffer.maxWindow.y + 1;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.y < this.framebuffer.maxWindow.y + 1;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y);\n        // this interpolation is not perspective correct but linear!!\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(\n            Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * factor),\n            this.framebuffer.maxWindow.y + 1,\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.maxWindow.y + 1,\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n\n}\n","import { Vector4f } from '../../math/index';\nimport { PointLight } from '../light/PointLight';\nimport { Material } from '../material/Material';\n\nexport class PhongLighting {\n\n    public computeColor(mat: Material, lights: Array<PointLight>, normal: Vector4f, vertex: Vector4f): Vector4f {\n        let finalColor: Vector4f = new Vector4f(0, 0, 0);\n\n        for (let x: number = 0; x < lights.length; x++) {\n            const light: PointLight = lights[x];\n            const ambientIntensity: Vector4f = this.computeAmbientIntensity(mat, light);\n            const diffuseIntensity: Vector4f = this.computeDiffuseIntensity(mat, light, normal, vertex);\n            const specularIntensity: Vector4f = this.computeSpecularIntensity(mat, light, normal, vertex);\n\n            finalColor = finalColor.add(ambientIntensity)\n                .add(diffuseIntensity)\n                .add(specularIntensity);\n        }\n\n        return finalColor;\n    }\n\n    private computeAmbientIntensity(mat: Material, l: PointLight): Vector4f {\n        return mat.ambientColor.componentWiseMul(l.ambientIntensity);\n    }\n\n    private computeDiffuseIntensity(mat: Material, l: PointLight, normal: Vector4f, vertex: Vector4f): Vector4f {\n        const lightDirection: Vector4f = l.position.sub(vertex).normalize();\n        const scale: number = Math.min(Math.max(normal.dot(lightDirection), 0), 1.0);\n        return mat.diffuseColor.componentWiseMul(l.diffuseIntensity).mul(scale);\n    }\n\n    private computeSpecularIntensity(mat: Material, l: PointLight, normal: Vector4f, vertex: Vector4f): Vector4f {\n        const lightDirection: Vector4f = l.position.sub(vertex).normalize();\n        const r: Vector4f = normal.mul(normal.dot(lightDirection) * 2.0).sub(lightDirection);\n        const v: Vector4f = vertex.mul(-1).normalize();\n        const scale: number = Math.pow(Math.max(r.dot(v), 0), mat.shininess);\n        return mat.specularColor.componentWiseMul(l.specularIntensity).mul(scale);\n    }\n\n}\n","import { Vector4f } from '../../math/index';\n\nexport abstract class Light {\n\n    public ambientIntensity: Vector4f;\n    public diffuseIntensity: Vector4f;\n    public specularIntensity: Vector4f;\n\n}\n","import { Vector4f } from '../../math/index';\nimport { Light } from './Light';\n\nexport class PointLight extends Light {\n\n    public position: Vector4f;\n\n}\n","import { Vector4f } from '../../math/index';\n\nexport class Material {\n\n    public ambientColor: Vector4f;\n    public diffuseColor: Vector4f;\n    public specularColor: Vector4f;\n    public emissiveColor: Vector4f;\n\n    public shininess: number;\n\n}\n","export interface musicProperties {\n    timeSeconds: number;\n    timeMilliseconds: number;\n    sceneData: sceneData;\n}\n\n// scene variables | things you set through jsRocket\nexport interface sceneData {\n    effect: any;\n    transitionType: any;\n    transitionValue: any;\n    snare: any;\n    bass: any;\n}\n\n// Beats per minute of your demo tune\nexport const BPM = 125;\n\n// The resolution between two beats, four is usually fine,- eight adds a bit more finer control\nexport const ROWS_PER_BEAT = 6;\n\n// we calculate this now, so we can translate between rows and seconds later on\nexport const ROW_RATE = BPM / 60 * ROWS_PER_BEAT;\n","import './JSRocket';\nimport './cowbell/cowbell'\nimport './cowbell/audio_player'\nimport './cowbell/web_audio_player'\nimport './cowbell/openmpt/openmpt_player'\nimport {\n    musicProperties,\n    ROW_RATE,\n    sceneData\n} from './MusicProperties';\nexport class SoundManager {\n\n    public syncDevice;\n    public isPlaying = false;\n    public demoMode: boolean;\n    public row = 0;    // the current row we're on\n\n    //  container for audio values to be used by effects (time, bass, effect, transitions)\n    public musicProperties: musicProperties;\n    public sceneData: sceneData;\n    public audioElement: HTMLAudioElement;\n\n    public constructor() {\n\n        // Initialize JS Rocket\n        this.syncDevice = new JSRocket.SyncDevice();\n        this.syncDevice.connected = false;\n\n    }\n\n    /**\n     * Load audio files supported by cowbell\n     *\n     * @param {string} filename     audio file to load\n     * @returns {Promise<void>}     promise\n     */\n    public loadMusic(filename: string): Promise<void> {\n        return new Promise((resolve) => {\n\n            const fileExtension = filename.split('.').pop().toLowerCase();\n            let audioPlayer;\n\n            switch (fileExtension) {\n                case 'it':\n                case 'xm':\n                case 's3m':\n                case 'mod':\n                    audioPlayer = new Cowbell.Player.OpenMPT({\n                        'pathToLibOpenMPT': './openmpt/libopenmpt.js'\n                    });\n                    break;\n                case 'ogg':\n                case 'mp3':\n                default:\n                    audioPlayer = new Cowbell.Player.Audio();\n                    break;\n            }\n            const track = new audioPlayer.Track(filename);\n            this.audioElement = track.open();\n            resolve();\n        });\n    }\n\n    /**\n     * Load XML file for music syncronization for use with JS Rocket\n     *\n     * @param {string} filename      XML file to load\n     * @param {string} demoMode      use true for release mode (uses file) | false when using rocket editor\n     * @returns {Promise<void>}      promise\n     */\n    prepareSync(filename: string, demoMode: boolean): Promise<void> {\n        this.demoMode = demoMode;\n        return new Promise((resolve) => {\n            if (this.demoMode) {\n                this.syncDevice.setConfig({\n                    'rocketXML': filename\n                });\n                this.syncDevice.init('demo');\n\n            } else {\n                this.syncDevice.init();\n            }\n\n            // XML file from JS Rocket library was loaded and parsed, make sure your ogg is ready\n            this.syncDevice.on('ready', () => this.onSyncReady());\n\n            // [JS Rocket - Arrow keys] whenever you change the row, a value or interpolation mode this will get called\n            this.syncDevice.on('update', (newRow: number) => this.onSyncUpdate(newRow));\n\n            // [JS Rocket - Spacebar] in Rocket calls one of those\n            this.syncDevice.on('play', () => this.onPlay());\n            this.syncDevice.on('pause', () => this.onPause());\n            resolve()\n        });\n    }\n\n    onSyncReady() {\n        this.syncDevice.connected = true;\n\n        this.sceneData = {\n            effect: this.syncDevice.getTrack('effect'),\n            snare: this.syncDevice.getTrack('snare'),\n            bass: this.syncDevice.getTrack('bass'),\n            transitionType: this.syncDevice.getTrack('transitionType'),\n            transitionValue: this.syncDevice.getTrack('transitionValue')\n        }\n    }\n\n    // row is only given if you navigate, or change a value on the row in Rocket\n    // on interpolation change (hit [i]) no row value is sent, as the current there is the upper row of your block\n    onSyncUpdate(newRow: number) {\n        if (!isNaN(newRow)) {\n            this.row = newRow;\n        }\n        this.audioElement.currentTime = newRow / ROW_RATE;\n    }\n\n    updateMusic() {\n        // show message if rocket app is not running in background\n        if (!this.syncDevice.connected && !this.demoMode) {\n            return;\n        }\n\n        // update music properties\n        this.musicProperties = {\n            timeSeconds: (this.audioElement?.currentTime) || 0,\n            timeMilliseconds: (this.audioElement?.currentTime) * 1000,\n            sceneData: {\n                effect: this.sceneData.effect.getValue(this.row),\n                transitionType: this.sceneData.transitionType.getValue(this.row),\n                transitionValue: this.sceneData.transitionValue.getValue(this.row),\n                snare: this.sceneData.snare.getValue(this.row),\n                bass: this.sceneData.bass.getValue(this.row),\n            }\n        }\n\n        this.row = this.musicProperties.timeSeconds * ROW_RATE;\n\n        // update JS rocket\n        if (this.audioElement && this.audioElement.paused === false) {\n            // otherwise we may jump into a point in the audio where there's\n            // no timeframe, resulting in Rocket setting row 2 and we report\n            // row 1 back - thus Rocket spasming out\n\n            // this informs Rocket where we are\n            this.syncDevice.update(this.row);\n        }\n\n        // stop once timeline reaches end\n        if (Math.floor(this.audioElement.duration) === Math.floor(this.musicProperties.timeSeconds)) {\n            document.getElementById('ticker_stop').click();\n        }\n    }\n\n    onPlay() {\n        if (!this.isPlaying && this.audioElement) {\n            if (this.audioElement.currentTime) {\n                this.audioElement.currentTime = this.row / ROW_RATE;\n            }\n            this.isPlaying = true;\n            this.audioElement.play();\n        }\n        console.log('[onPlay]');\n    }\n\n    onPause() {\n        this.row = this.audioElement.currentTime * ROW_RATE;\n        if (!this.audioElement.paused && this.isPlaying) {\n            this.audioElement.pause();\n            this.isPlaying = false;\n        }\n        console.info('[onPause]');\n    }\n\n    /**\n     * find the prev/next effect and jump to it\n     *\n     * @param   {number} time       where we are in the audio timeline\n     * @param   {number} direction  direction to skip -1 goes backwards.  1 goes forward\n     */\n    public jump(time: number, direction: number, sceneLength: number) {\n        this.row = time * ROW_RATE;\n        const effectJump = Number(this.sceneData.effect.getValue(this.row).toFixed(1));\n        if (Math.trunc(Number(this.musicProperties.sceneData.effect)) !== Math.trunc(effectJump) && effectJump >= 1) {\n            // if running into transition effect 2.5..then keep searching and only land on whole numbers\n            if (parseInt(effectJump.toString(), 10) !== effectJump) {\n                this.jump(time + (0.12 * direction), direction, sceneLength);\n            } else {\n                this.seek(time);\n            }\n        } else {\n            if (time >= 0 && effectJump < sceneLength - 3) {\n                this.jump(time + (0.12 * direction), direction, sceneLength);\n            } else {\n                // go back to the beginning\n                this.seek(0);\n            }\n        }\n    }\n\n    /**\n     * Jumps to a point in the audio timeline in milliseconds\n     *\n     * @param  {number} time            time in milliseconds\n     */\n    public seek(time: number) {\n        this.audioElement.currentTime = time;\n        // update rocket editor position to new timeline location\n        if (!this.demoMode) {\n            this.syncDevice.update(this.audioElement.currentTime * ROW_RATE);\n        }\n    }\n\n    /**\n     * Turns music volume on or off\n     *\n     * @param  {HTMLElement} ref         volume icon to toggle\n     * @param  {boolean} isMuted         on or off\n     */\n    public toggleSound(ref: HTMLElement, isMuted: boolean) {\n        if (isMuted) {\n            ref.setAttribute('title', 'enable sound');\n            ref.classList.remove('fa-volume-up');\n            ref.classList.add('fa-volume-off');\n        } else {\n            ref.setAttribute('title', 'mute sound');\n            ref.classList.remove('fa-volume-off');\n            ref.classList.add('fa-volume-up');\n        }\n        this.audioElement.muted = isMuted;\n    }\n\n    /**\n     * Restore position of timeline & mute preferences on reloads\n     */\n    public initTimeline() {\n        // jump to last position on timeline for local development reloading\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const newLocal = this;\n        const jumpTo = Number(localStorage.getItem('lastTime'));\n\n        // poll for mod player since library does not use promises\n        if ((window as any).libopenmpt) {\n            (function poll() {\n                // check if mod was loaded then seek\n                if ((window as any).modulePtr) {\n\n                    // openmpt does not support volume control or muting\n                    document.getElementById('ticker_volume').style.display = 'none';\n                    newLocal.updateRange(newLocal.audioElement.duration);\n                    newLocal.seek(jumpTo);\n                    return;\n                }\n                setTimeout(poll, 150);\n            })();\n        } else {\n            newLocal.audioElement.onloadedmetadata = function () {\n                newLocal.updateRange(newLocal.audioElement.duration);\n            };\n            newLocal.seek(jumpTo);\n        }\n\n        // remember last sound preferences\n        const isMuted = localStorage.getItem('soundToggle') === 'true';\n        this.toggleSound(document.getElementById('ticker_volume'), isMuted);\n    }\n\n    /**\n     * Set timeline slider max range\n     *\n     * @param  {number} value         length time in seconds\n     */\n    private updateRange(value: number) {\n        (document.getElementById(\"timeline\") as HTMLInputElement).max = String(Math.floor(value) * 1000);\n    }\n\n    /*\n    // todo: add effect # markers to timeline\n    fetch(rocketData.default).then(response => response.text())\n        .then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\n        .then(data => {\n            const tracks: Element[] = Array.from(data.documentElement.getElementsByTagName(\"track\"));\n            tracks.forEach((element) => {\n                if (element.getAttribute(\"name\") === 'effect') {\n                    const keys: Element[] = Array.from(element.getElementsByTagName(\"key\"));\n                    keys.forEach((elementKey) => {\n                        const p = document.createElement(\"option\");\n                        const value = elementKey.getAttribute('row').valueOf();\n                        const label = elementKey.getAttribute('value').valueOf();\n\n                        // remap rows to a range between 0 and 1000\n                        const newValue = Utils.map(Number(label), 0, 1520, 0, 1000);\n\n                        p.value = value;\n                        p.label = label;\n                        // this.tickmarkRef.appendChild(p);\n                    })\n                }\n            });\n        });\n        */\n\n}\n","import { Framebuffer } from \"../Framebuffer\";\nimport { Vector3f } from \"../math\";\nimport { Interpolator } from \"../math/Interpolator\";\nimport { Texture } from \"../texture\";\n\nexport class LensFlare {\n\n    public static drawLensFlare(framebuffer: Framebuffer, screenPos: Vector3f, elapsedTime: number, texture: Array<{ tex: Texture, scale: number, alpha: number }>, dirt: Texture): void {\n        const pos = screenPos;\n\n        if (pos.z < 0 &&\n            pos.x > 0 && pos.x < framebuffer.width &&\n            pos.y > 0 && pos.y < framebuffer.height &&\n            framebuffer.wBuffer[pos.x + (pos.y * framebuffer.width)] > (1 / pos.z)) {\n            if (!framebuffer.lensFlareVisible) {\n                framebuffer.lensFlareVisible = true;\n                framebuffer.lensFlareStart = elapsedTime;\n            }\n        } else {\n            if (framebuffer.lensFlareVisible) {\n                framebuffer.lensFlareVisible = false;\n                framebuffer.lensFlareEnd = elapsedTime;\n            }\n        }\n\n        let scale = Interpolator.interpolate(framebuffer.lensFlareStart, framebuffer.lensFlareStart + 100, elapsedTime);\n        if (framebuffer.lensFlareVisible !== true) {\n            scale *= (1 - Interpolator.interpolate(framebuffer.lensFlareEnd, framebuffer.lensFlareEnd + 100, elapsedTime));\n        }\n        const dir = new Vector3f(framebuffer.width / 2, framebuffer.height / 2, 0).sub(pos);\n\n        if (scale > 0) {\n            for (let i = 0; i < texture.length; i++) {\n                const temp = pos.add(dir.mul(texture[i].scale));\n                framebuffer.drawTexture(Math.round(temp.x) - texture[i].tex.width / 2, Math.round(temp.y) - texture[i].tex.height / 2, texture[i].tex, texture[i].alpha * scale);\n            }\n        }\n\n        // this.drawTextureRectAdd(0, 0, 0, 0, this.width, this.height, dirt, 0.03 + 0.15 * scale);\n        framebuffer.drawScaledTextureClipBi(0, 0, framebuffer.width, framebuffer.height, dirt, 0.15 + 0.20 * scale*0);\n    }\n\n}\n","export class Texture {\n \n\n    public texture: Uint32Array;\n    public width: number;\n    public height: number;\n    public maxWidth: number;\n    public maxHeight: number;\n    private clamp: boolean = false;\n\n    setClamp(clamp: boolean) {\n        this.clamp = clamp;\n    }\n    constructor(texture?: Uint32Array, width?: number, height?: number) {\n        this.texture = texture;\n        this.width = width;\n        this.height = height;\n        this.maxHeight = (height-1) |0;\n        this.maxWidth = (width-1)|0;\n    }\n\n    public getPixel(texture: Texture, x: number, y: number): number {\n        return texture.texture[(x & 0xff) + (y & 0xff) * 256];\n    }\n\n    public getBilinearFilteredPixel(x: number, y: number): number {\n        const x0 = (((x | 0) % 256) + 256) % 256;\n        const x1 = ((((x + 1) | 0) % 256) + 256) % 256;\n        const y0 = (((y | 0) % 256) + 256) % 256;\n        const y1 = ((((y + 1) | 0) % 256) + 256) % 256;\n\n        const x0y0 = this.getPixel(this, x0, y0) & 0xff;\n        const x1y0 = this.getPixel(this, x1, y0) & 0xff;\n        const x0y1 = this.getPixel(this, x0, y1) & 0xff;\n        const x1y1 = this.getPixel(this, x1, y1) & 0xff;\n\n        const col1 = x0y0 * (1 - (x - Math.floor(x))) + (x1y0 * ((x - Math.floor(x))));\n        const col2 = x0y1 * (1 - (x - Math.floor(x))) + (x1y1 * ((x - Math.floor(x))));\n        const col = col1 * (1 - (y - Math.floor(y))) + (col2 * ((y - Math.floor(y))));\n\n        return col;\n    }\n\n    public getBilinearFilteredPixel2(x: number, y: number) {\n\n        let x0 = x | 0;\n        let x1 = (x | 0) + 1;\n        let y0 = y | 0;\n        let y1 = (y | 0) + 1;\n   \n        if (this.clamp) {\n             x0 = Math.max(Math.min(x0, this.width - 1), 0);\n             x1 = Math.max(Math.min(x1, this.width - 1), 0);\n             y0 = Math.max(Math.min(y0, this.height - 1), 0);\n             y1 = Math.max(Math.min(y1, this.height - 1), 0);\n        }\n\n\n        const x0y0 = this.getPixel2(this, x0, y0);\n        const x1y0 = this.getPixel2(this, x1, y0);\n        const x0y1 = this.getPixel2(this, x0, y1);\n        const x1y1 = this.getPixel2(this, x1, y1);\n        \n        return this.interpolateComp(x, y, x0y0 & 0xff, x1y0 & 0xff, x0y1 & 0xff, x1y1 & 0xff)|\n            this.interpolateComp(x, y, x0y0 >> 8 & 0xff, x1y0 >> 8 & 0xff, x0y1 >> 8 & 0xff, x1y1 >> 8 & 0xff) << 8 |\n           this.interpolateComp(x, y, x0y0 >> 16 & 0xff, x1y0 >> 16 & 0xff, x0y1 >> 16 & 0xff, x1y1 >> 16 & 0xff) << 16\n           | 0xff << 24;\n    }\n\n    public getPixel2(texture: Texture, x: number, y: number): number {\n        return this.texture[x + y * this.width];\n    }\n\n    /**\n     * highly optimized version only for power of 2 textures\n     */\n    public getBilinearFilteredPixelRasterizer(x: number, y: number) {\n        let x0 = x | 0;\n        let x1 = (x | 0) + 1;\n        let y0 = y | 0;\n        let y1 = (y | 0) + 1;\n   \n        let x0y0: number;\n        let x1y0: number; \n        let x0y1: number;\n        let x1y1: number;\n\n        if (this.clamp) {\n             x0 = Math.max(Math.min(x0, this.width - 1), 0);\n             x1 = Math.max(Math.min(x1, this.width - 1), 0);\n             y0 = Math.max(Math.min(y0, this.height - 1), 0);\n             y1 = Math.max(Math.min(y1, this.height - 1), 0);\n\n             x0y0 = this.getPixel2(this, x0, y0);\n             x1y0 = this.getPixel2(this, x1, y0);\n             x0y1 = this.getPixel2(this, x0, y1);\n             x1y1 = this.getPixel2(this, x1, y1);\n        } else {\n            x0y0 = this.getPixelRasterizer(this, x0, y0);\n            x1y0 = this.getPixelRasterizer(this, x1, y0);\n            x0y1 = this.getPixelRasterizer(this, x0, y1);\n            x1y1 = this.getPixelRasterizer(this, x1, y1);\n        }\n        return this.interpolateComp(x, y, x0y0, x1y0, x0y1, x1y1);\n    }\n\n    public getPixelRasterizer(texture: Texture, x: number, y: number): number {\n        return this.texture[(x & (this.width-1)) + (y&(this.height-1)) * this.width];\n    }\n\n    public getPixel3(texture: Texture, x: number, y: number): number {\n        return this.texture[\n            (((x % this.width) + this.width) % this.width) +\n            (((y % this.height) + this.height) % this.height) * this.width];\n    }\n\n    private interpolateComp(x, y, x0y0, x1y0, x0y1, x1y1): number {\n        // reuse these values for all color components\n        const xFrac = x - (x | 0);\n        const yFrac = y - (y | 0);\n        const oneMinusXfrac = 1 - xFrac;\n        const oneMinusYfrac = 1 - yFrac;\n\n        const x0y0_r = x0y0 & 0xff;\n        const x1y0_r = x1y0 & 0xff;\n        const x0y1_r = x0y1 & 0xff;\n        const x1y1_r = x1y1 & 0xff;\n        \n        const col1_r = x0y0_r * oneMinusXfrac + x1y0_r * xFrac;\n        const col2_r = x0y1_r * oneMinusXfrac + x1y1_r * xFrac;\n        const col_r = col1_r * oneMinusYfrac + (col2_r * yFrac);\n\n        const x0y0_g = x0y0 >> 8 & 0xff;\n        const x1y0_g = x1y0 >> 8 & 0xff;\n        const x0y1_g = x0y1 >> 8 & 0xff;\n        const x1y1_g = x1y1 >> 8 & 0xff;\n        \n        const col1_g = x0y0_g * oneMinusXfrac + x1y0_g * xFrac;\n        const col2_g = x0y1_g * oneMinusXfrac + x1y1_g * xFrac;\n        const col_g = col1_g * oneMinusYfrac + (col2_g * yFrac);\n\n        const x0y0_b = x0y0 >> 16 & 0xff;\n        const x1y0_b = x1y0 >> 16 & 0xff;\n        const x0y1_b = x0y1 >> 16 & 0xff;\n        const x1y1_b = x1y1 >> 16 & 0xff;\n        \n        const col1_b = x0y0_b * oneMinusXfrac + x1y0_b * xFrac;\n        const col2_b = x0y1_b * oneMinusXfrac + x1y1_b * xFrac;\n        const col_b = col1_b * oneMinusYfrac + (col2_b * yFrac);\n\n        return col_r | col_g << 8 | col_b << 16 | 255 << 24;\n    }\n\n}\n","import RandomNumberGenerator from '../RandomNumberGenerator';\nimport { Texture } from './Texture';\n\nexport class TextureUtils {\n\n    public static generateProceduralNoise(): Promise<Texture> {\n        return new Promise<Texture>((resolve: (value?: Texture) => void): void => {\n            const texture: Texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng: RandomNumberGenerator = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let i: number = 0; i < 256 * 256; i++) {\n                const scale: number = rng.getFloat();\n                texture.texture[i] = 200 * scale | 255 * scale << 8 | 205 * scale << 16 | 255 << 24;\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static generateProceduralParticleTexture(): Promise<Texture> {\n        return new Promise((resolve: (value?: Texture) => void): void => {\n            const texture: Texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng: RandomNumberGenerator = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let y: number = 0; y < 256; y++) {\n                for (let x: number = 0; x < 256; x++) {\n                    const dx: number = 127 - x;\n                    const dy: number = 127 - y;\n                    const r: number = Math.sqrt(dx * dx + dy * dy) / 127;\n                    let c: number = 1 - r;\n                    c = c * c * c;\n                    if (r > 1) {\n                        c = 0;\n                    }\n                    c = Math.min(1, c * 2.9);\n\n                    texture.texture[x + y * 256] = 235 | 255 << 8 | 235 << 16 | (c * 255) << 24;\n                }\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static generateProceduralParticleTexture2(): Promise<Texture> {\n        return new Promise((resolve) => {\n            const texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let y = 0; y < 256; y++) {\n                for (let x = 0; x < 256; x++) {\n                    const dx = 127 - x;\n                    const dy = 127 - y;\n                    const r = Math.sqrt(dx * dx + dy * dy) / 127;\n                    let c = 1 - r;\n                    c = c * c;\n                    if (r > 1) { c = 0; }\n                    c = Math.min(1, c * 40);\n                    texture.texture[x + y * 256] = 255 | 205 << 8 | 255 << 16 | (c * 255) << 24;\n                }\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static load(filename: any, transparency: boolean): Promise<Texture> {\n        return new Promise<Texture>((resolve: (texture?: Texture) => void): void => {\n            const image: HTMLImageElement = new Image();\n            image.onload = (): void => {\n                const texture: Texture = new Texture();\n                texture.texture = this.getImageData(image, transparency);\n                texture.width = image.width;\n                texture.height = image.height;\n                resolve(texture);\n            };\n            image.onerror = (): void => resolve();\n            image.src = filename;\n        });\n    }\n\n    private static getImageData(image: HTMLImageElement, withAlpha: boolean = false): Uint32Array {\n        const canvas: HTMLCanvasElement = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const context: CanvasRenderingContext2D = canvas.getContext('2d');\n        context.drawImage(image, 0, 0);\n        const data: Uint8ClampedArray = context.getImageData(0, 0, image.width, image.height).data;\n        const conv: Uint32Array = new Uint32Array(data.length / 4);\n        let c: number = 0;\n        for (let i: number = 0; i < data.length; i += 4) {\n            if (withAlpha) {\n                conv[c] = (data[i + 3] << 24) | (data[i + 2] << 16) | (data[i + 1] << 8) | data[i + 0];\n            } else {\n                conv[c] = (255 << 24) | (data[i + 2] << 16) | (data[i + 1] << 8) | data[i + 0];\n            }\n\n            c++;\n        }\n        return conv;\n    }\n\n}\n","export { Texture } from './Texture';\nexport { TextureUtils } from './TextureUtils';\n","(function (window) {\n\n    if (!window.JSRocket) {\n        window.JSRocket = {};\n    }\n    JSRocket.SyncData = function () {\n\n        \"use strict\";\n\n        var _track = [];\n\n        function getTrack(index) {\n            return _track[index];\n        }\n\n        function getIndexForName(name) {\n            for (var i = 0; i < _track.length; i++) {\n\n                if (_track[i].name === name) {\n                    return i;\n                }\n            }\n\n            return -1;\n        }\n\n        function getTrackLength() {\n            return _track.length;\n        }\n\n        function createIndex(varName) {\n            var track = new JSRocket.Track();\n            track.name = varName;\n\n            _track.push(track);\n        }\n\n        return {\n            getTrack: getTrack,\n            getIndexForName: getIndexForName,\n            getTrackLength: getTrackLength,\n            createIndex: createIndex\n        };\n    };\n    JSRocket.Track = function () {\n\n        \"use strict\";\n\n        var STEP = 0,\n            LINEAR = 1,\n            SMOOTH = 2,\n            RAMP = 3;\n\n        var data = [];\n\n        function findKeyIndex(keys, row) {\n            var lo = 0, hi = keys.length;\n            while (lo < hi) {\n                var mi = ((hi + lo) / 2) | 0;\n\n                if (keys[mi] < row) {\n                    lo = mi + 1;\n                } else if (keys[mi] > row) {\n                    hi = mi;\n                } else {\n                    return mi;\n                }\n            }\n            return lo - 1;\n        }\n\n        function getValue(row) {\n            var keys = Object.keys(data);\n\n            if (!keys.length) {\n                return 0.0;\n            }\n\n            var idx = findKeyIndex(keys, Math.floor(row));\n            if (idx < 0) {\n                return data[keys[0]].value;\n            }\n            if (idx > keys.length - 2) {\n                return data[keys[keys.length - 1]].value;\n            }\n\n            // lookup keys and values\n            var k0 = keys[idx], k1 = keys[idx + 1];\n            var a = data[k0].value;\n            var b = data[k1].value;\n\n            // interpolate\n            var t = (row - k0) / (k1 - k0);\n            switch (data[k0].interpolation) {\n                case 0:\n                    return a;\n                case 1:\n                    return a + (b - a) * t;\n                case 2:\n                    return a + (b - a) * t * t * (3 - 2 * t);\n                case 3:\n                    return a + (b - a) * Math.pow(t, 2.0);\n            }\n        }\n\n        function add(row, value, interpolation) {\n            data[row] = {\n                \"value\": value,\n                \"interpolation\": interpolation\n            };\n        }\n\n        function remove(row) {\n            delete data[row];\n        }\n\n        return {\n            getValue: getValue,\n            add: add,\n            remove: remove\n        };\n    };\n    JSRocket.SyncDevicePlayer = function (cfg) {\n\n        \"use strict\";\n\n        var _urlRequest,\n            _syncData = new JSRocket.SyncData(),\n            _eventHandler = {\n                'ready': function () {\n                },\n                'error': function () {\n                }\n            };\n\n        function load(url) {\n\n            _urlRequest = new XMLHttpRequest();\n\n            if (_urlRequest === null) {\n                _eventHandler.error();\n                return;\n            }\n\n            _urlRequest.open('GET', url, true);\n            _urlRequest.onreadystatechange = urlRequestHandler;\n\n            _urlRequest.send();\n        }\n\n        function urlRequestHandler() {\n\n            if (_urlRequest.readyState === 4) {\n                if (_urlRequest.status < 300) {\n                    readXML(_urlRequest.responseText);\n                } else {\n                    _eventHandler.error();\n                }\n            }\n        }\n\n        function readXML(xmlString) {\n            var key,\n                t = 0, tLen, k = 0, kLen,\n                xml = (new DOMParser()).parseFromString(xmlString, 'text/xml'),\n                tracks = xml.getElementsByTagName('tracks');\n\n            //<tracks>\n            var trackList = tracks[0].getElementsByTagName('track');\n\n            for (t, tLen = trackList.length; t < tLen; t++) {\n\n                var track = getTrack(trackList[t].getAttribute('name')),\n                    keyList = trackList[t].getElementsByTagName('key');\n\n                for (k = 0, kLen = keyList.length; k < kLen; k++) {\n                    key = keyList[k];\n                    track.add(parseInt(key.getAttribute('row'), 10),\n                        parseFloat(key.getAttribute('value')),\n                        parseInt(key.getAttribute('interpolation'), 10));\n\n                }\n            }\n\n            _eventHandler.ready();\n        }\n\n        function getTrack(name) {\n\n            var index = _syncData.getIndexForName(name);\n\n            if (index > -1) {\n                return _syncData.getTrack(index);\n            }\n\n            _syncData.createIndex(name);\n            return _syncData.getTrack(_syncData.getTrackLength() - 1);\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        function nop() {\n\n        }\n\n        if (cfg.rocketXML === \"\" || cfg.rocketXML === undefined || cfg.rocketXML === undefined) {\n            throw (\"[jsRocket] rocketXML is not set, try _syncDevice.setConfig({'rocketXML':'url/To/RocketXML.rocket'})\");\n        } else {\n            load(cfg.rocketXML);\n        }\n\n        return {\n            load: load,\n            getTrack: getTrack,\n            update: nop,\n            on: setEvent\n        };\n    };\n    JSRocket.SyncDeviceClient = function (cfg) {\n\n        \"use strict\";\n\n        var CMD_SET_KEY = 0,\n            CMD_DELETE_KEY = 1,\n            CMD_GET_TRACK = 2,\n            CMD_SET_ROW = 3,\n            CMD_PAUSE = 4,\n            CMD_SAVE_TRACKS = 5;\n\n        var _ws = new WebSocket(cfg.socketURL),\n            _syncData = new JSRocket.SyncData(),\n            _eventHandler = {\n                'ready': function () {\n                },\n                'update': function () {\n                },\n                'play': function () {\n                },\n                'pause': function () {\n                },\n                'save': function () {\n                }\n            };\n\n        function onOpen() {\n\n            _ws.binaryType = \"arraybuffer\";\n            _ws.send('hello, synctracker!');\n        }\n\n        function onMessage(e) {\n\n            var queue = (new Uint8Array(e.data)),\n                cmd = queue[0],\n                track, row, value, interpolation;\n\n            //Handshake\n            if (cmd === 104) {\n\n                _eventHandler.ready();\n\n                //PAUSE\n            } else if (CMD_PAUSE === cmd) {\n\n                if (queue[1] === 1) {\n                    _eventHandler.pause();\n                } else {\n                    _eventHandler.play();\n                }\n\n                //SET_ROW\n            } else if (CMD_SET_ROW === cmd) {\n\n                row = toInt(queue.subarray(1, 5));\n\n                _eventHandler.update(row);\n\n                //SET_KEY\n            } else if (CMD_SET_KEY === cmd) {\n\n                track = toInt(queue.subarray(1, 5));\n                row = toInt(queue.subarray(5, 9));\n\n                //value = Math.round(toFloat(queue.subarray(9, 13)) * 100) / 100; //round to what's seen in Rocket tracks\n                value = toFloat(queue.subarray(9, 13)); //use the values you see in Rocket statusbar\n\n                interpolation = toInt(queue.subarray(13, 14));\n                _syncData.getTrack(track).add(row, value, interpolation);\n\n                //DELETE\n            } else if (CMD_DELETE_KEY === cmd) {\n\n                track = toInt(queue.subarray(1, 5));\n                row = toInt(queue.subarray(5, 9));\n\n                _syncData.getTrack(track).remove(row);\n\n                //SAVE\n            } else if (CMD_SAVE_TRACKS === cmd) {\n                _eventHandler.save();\n            }\n        }\n\n        function onClose(e) {\n            console.warn(\">> connection closed\", e);\n        }\n\n        function onError(e) {\n            console.error(\">> connection error'd\", e);\n        }\n\n        _ws.onopen = onOpen;\n        _ws.onmessage = onMessage;\n        _ws.onclose = onClose;\n        _ws.onerror = onError;\n\n        function getTrack(name) {\n\n            var index = _syncData.getIndexForName(name);\n\n            if (index > -1) {\n                return _syncData.getTrack(index);\n            }\n\n            var utf8Name = encodeURIComponent(name).replace(/%([\\dA-F]{2})/g, function (m, c) {\n                return String.fromCharCode('0x' + c);\n            });\n            var message = [CMD_GET_TRACK,\n                (utf8Name.length >> 24) & 0xFF, (utf8Name.length >> 16) & 0xFF,\n                (utf8Name.length >> 8) & 0xFF, (utf8Name.length) & 0xFF];\n\n            for (var i = 0; i < utf8Name.length; i++) {\n                message.push(utf8Name.charCodeAt(i));\n            }\n\n            _ws.send(new Uint8Array(message).buffer);\n\n            _syncData.createIndex(name);\n            return _syncData.getTrack(_syncData.getTrackLength() - 1);\n        }\n\n        function setRow(row) {\n\n            var streamInt = [(row >> 24) & 0xFF,\n            (row >> 16) & 0xFF,\n            (row >> 8) & 0xFF,\n            (row) & 0xFF];\n\n            _ws.send(new Uint8Array([CMD_SET_ROW, streamInt[0], streamInt[1], streamInt[2], streamInt[3]]).buffer);\n        }\n\n        function toInt(arr) {\n\n            var i = 0,\n                view = new DataView(new ArrayBuffer(arr.length));\n\n            for (; i < arr.length; i++) {\n                view.setUint8(i, arr[i]);\n            }\n\n            if (view.byteLength === 1) {\n                return view.getInt8(0);\n            } else {\n                return view.getInt32(0);\n            }\n        }\n\n        function toFloat(arr) {\n            var view = new DataView(new ArrayBuffer(4));\n            view.setUint8(0, arr[0]);\n            view.setUint8(1, arr[1]);\n            view.setUint8(2, arr[2]);\n            view.setUint8(3, arr[3]);\n\n            return view.getFloat32(0);\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        return {\n            getTrack: getTrack,\n            update: setRow,\n            on: setEvent\n        };\n    };\n\n    JSRocket.SyncDevice = function () {\n\n        \"use strict\";\n\n        var _connected = false,\n            _device,\n            _previousIntRow,\n            _config = {\n                \"socketURL\": \"ws://localhost:1339\",\n                \"rocketXML\": \"\"\n            },\n            _eventHandler = {\n                'ready': function () {\n                },\n                'update': function () {\n                },\n                'play': function () {\n                },\n                'pause': function () {\n                }\n            };\n\n        function init(mode) {\n            if (mode === \"demo\") {\n                _device = new JSRocket.SyncDevicePlayer(_config);\n            } else {\n                _device = new JSRocket.SyncDeviceClient(_config);\n            }\n\n            _device.on('ready', deviceReady);\n            _device.on('update', deviceUpdate);\n            _device.on('play', devicePlay);\n            _device.on('pause', devicePause);\n        }\n\n        function getConfig() {\n            return _config;\n        }\n\n        function setConfig(cfg) {\n            for (var option in cfg) {\n                if (cfg.hasOwnProperty(option)) {\n                    _config[option] = cfg[option];\n                }\n            }\n\n            return _config;\n        }\n\n        function deviceReady() {\n            _connected = true;\n            _eventHandler.ready();\n        }\n\n        function deviceUpdate(row) {\n            _eventHandler.update(row);\n        }\n\n        function devicePlay() {\n            _eventHandler.play();\n        }\n\n        function devicePause() {\n            _eventHandler.pause();\n        }\n\n        function getTrack(name) {\n            if (_connected) {\n                return _device.getTrack(name);\n            } else {\n                return null;\n            }\n        }\n\n        function update(row) {\n            //no need to update rocket on float rows\n            if (Math.floor(row) !== _previousIntRow) {\n                _previousIntRow = Math.floor(row);\n                _device.update(_previousIntRow);\n            }\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        return {\n            init: init,\n            setConfig: setConfig,\n            getConfig: getConfig,\n            getTrack: getTrack,\n            update: update,\n            on: setEvent\n        };\n    };\n\n})(window);\n\n","/* Trivial player for formats that the browser supports natively through the <audio> element,\nsuch as MP3 and OGG */\n\nCowbell.Player.Audio = function() {\n\tthis.Track = function(url) {\n\t\tthis.open = function() {\n\t\t\tvar audio = document.createElement('audio');\n\t\t\taudio.src = url;\n\t\t\tdocument.body.appendChild(audio);\n\n\t\t\treturn audio;\n\t\t};\n\t};\n};\n","window.Cowbell = {\n\t'UI': {},\n\t'Player': {},\n\t'Common': {}\n};\n\nwindow.Cowbell.createPlayer = function(containerElement, opts) {\n\tif (!opts) opts = {};\n\n\tif (typeof(containerElement) == 'string') {\n\t\tcontainerElement = document.getElementById(containerElement);\n\t}\n\n\tvar uiConstructor = opts.ui || Cowbell.UI.Basic;\n\tvar ui = new uiConstructor(containerElement);\n\n\tif (opts.player) {\n\t\tvar player = new opts.player(opts.playerOpts);\n\n\t\tif (opts.url) {\n\t\t\tvar track = new player.Track(opts.url, opts.trackOpts);\n\t\t\tui.open(track);\n\t\t}\n\t}\n\n\treturn ui;\n};\n\nif (window.jQuery) {\n\twindow.jQuery.fn.cowbell = function(opts) {\n\t\tthis.each(function() {\n\t\t\tCowbell.createPlayer(this, opts);\n\t\t});\n\t};\n}\n","/* Player for module formats supported by libopenmpt */\n\n(function() {\n\tfunction OpenMPTGenerator(url, audioCtx, playerOpts, trackOpts) {\n\t\tvar modulePtr, leftBufferPtr, rightBufferPtr;\n\t\tvar maxFramesPerChunk = 4096;\n\t\tvar self = this;\n\t\tif (!playerOpts) playerOpts = {};\n\t\tif (!trackOpts) trackOpts = {};\n\n\t\tfunction initModule(data) {\n\t\t\tvar byteArray = new Int8Array(data);\n\t\t\tvar ptrToFile = libopenmpt._malloc(byteArray.byteLength);\n\t\t\tlibopenmpt.HEAPU8.set(byteArray, ptrToFile);\n\n\t\t\tmodulePtr = libopenmpt._openmpt_module_create_from_memory(ptrToFile, byteArray.byteLength, 0, 0, 0);\n            global.window.modulePtr = modulePtr;\n\t\t\tleftBufferPtr  = libopenmpt._malloc(4 * maxFramesPerChunk);\n\t\t\trightBufferPtr = libopenmpt._malloc(4 * maxFramesPerChunk);\n\n\t\t\tfunction asciiToStack(str) {\n\t\t\t\tvar stackStr = stackAlloc(str.length + 1);\n\t\t\t\twriteAsciiToMemory(str, stackStr);\n\t\t\t\treturn stackStr;\n\t\t\t}\n\t\t\tvar stack = stackSave();\n\t\t\tlibopenmpt._openmpt_module_ctl_set(modulePtr, asciiToStack('render.resampler.emulate_amiga'), asciiToStack('1')); // enable Amiga resampler\n\t\t\tlibopenmpt._openmpt_module_ctl_set(modulePtr, asciiToStack('render.resampler.emulate_amiga_type'), asciiToStack('a1200')); // set emulated Amiga model to A1200\n\t\t\tstackRestore(stack);\n\n\t\t\tself.duration = libopenmpt._openmpt_module_get_duration_seconds(modulePtr);\n\t\t}\n\n\t\tfunction ensureLibOpenMPT(onReady) {\n\t\t\tif (!playerOpts.pathToLibOpenMPT) {\n\t\t\t\tthrow \"pathToLibOpenMPT not specified\";\n\t\t\t}\n\n\t\t\tif (window.libopenmpt && window.libopenmpt._openmpt_module_create_from_memory) {\n\t\t\t\t/* libopenmpt already loaded */\n\t\t\t\tonReady();\n\t\t\t} else {\n\t\t\t\t/* load libopenmpt via <script> tag injection */\n\t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n\t\t\t\tvar script = document.createElement(\"script\");\n\t\t\t\tscript.src = playerOpts.pathToLibOpenMPT;\n\n\t\t\t\twindow.libopenmpt = {\n\t\t\t\t\tonRuntimeInitialized: function() {\n\t\t\t\t\t\tonReady();\n\t\t\t\t\t\thead.removeChild(script);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\thead.appendChild(script);\n\t\t\t}\n\t\t}\n\n\t\tthis.cleanup = function() {\n\t\t\tif (modulePtr) {\n\t\t\t\tlibopenmpt._openmpt_module_destroy(modulePtr);\n\t\t\t}\n\t\t\tif (leftBufferPtr) {\n\t\t\t\tlibopenmpt._free(leftBufferPtr);\n\t\t\t}\n\t\t\tif (rightBufferPtr) {\n\t\t\t\tlibopenmpt._free(rightBufferPtr);\n\t\t\t}\n\t\t};\n\n\t\tthis.load = function(onReady) {\n\t\t\tvar self = this;\n\t\t\tensureLibOpenMPT(function() {\n\t\t\t\tself.channelCount = 2;\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\t\trequest.addEventListener('error', function(e) {\n\t\t\t\t\tconsole.log('XHR error', e);\n\t\t\t\t});\n\n\t\t\t\trequest.addEventListener('load', function(e) {\n\t\t\t\t\tdata = request.response;\n\t\t\t\t\tinitModule(data);\n\t\t\t\t\tonReady();\n\t\t\t\t});\n\n\t\t\t\t/* trigger XHR */\n\t\t\t\trequest.open('GET', url, true);\n\t\t\t\trequest.responseType = \"arraybuffer\";\n\t\t\t\trequest.send();\n\t\t\t});\n\t\t};\n\n\t\tthis.generateAudio = function(outputBuffer) {\n\t\t\tvar outputL = outputBuffer.getChannelData(0);\n\t\t\tvar outputR = outputBuffer.getChannelData(1);\n\t\t\tvar framesToRender = outputBuffer.length;\n\n\t\t\tvar framesRendered = 0;\n\t\t\tvar ended = false;\n\t\t\twhile (framesToRender > 0) {\n\t\t\t\tvar framesPerChunk = Math.min(framesToRender, maxFramesPerChunk);\n\t\t\t\tvar actualFramesPerChunk = libopenmpt._openmpt_module_read_float_stereo(modulePtr, audioCtx.sampleRate, framesPerChunk, leftBufferPtr, rightBufferPtr);\n\t\t\t\tvar rawAudioLeft = libopenmpt.HEAPF32.subarray(leftBufferPtr / 4, leftBufferPtr / 4 + actualFramesPerChunk);\n\t\t\t\tvar rawAudioRight = libopenmpt.HEAPF32.subarray(rightBufferPtr / 4, rightBufferPtr / 4 + actualFramesPerChunk);\n\t\t\t\tfor (var i = 0; i < actualFramesPerChunk; ++i) {\n\t\t\t\t\toutputL[framesRendered + i] = rawAudioLeft[i];\n\t\t\t\t\toutputR[framesRendered + i] = rawAudioRight[i];\n\t\t\t\t}\n\t\t\t\tframesToRender -= actualFramesPerChunk;\n\t\t\t\tframesRendered += actualFramesPerChunk;\n\t\t\t\tif (actualFramesPerChunk < framesPerChunk) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn framesRendered;\n\t\t};\n\n\t\tthis.seekable = true;\n\n\t\tthis.seek = function(position) {\n\t\t\tlibopenmpt._openmpt_module_set_position_seconds(modulePtr, position);\n\t\t};\n\n\t\tthis.reset = function() {\n\t\t\tthis.seek(0);\n\t\t}\n\t}\n\tCowbell.Player.OpenMPT = function(opts) {\n\t\treturn new Cowbell.Common.WebAudioPlayer(OpenMPTGenerator, opts);\n\t};\n})();\n","/*\nWrapper to allow Web Audio createScriptProcessor-based player routines to expose\na subset of the HTML5 Media Element API.\n\nThis wrapper handles the details of buffering, pausing, and keeping track of current play time.\nInner routines only need to implement a simple 'generator' API consisting of filling a buffer\nwith audio data, and seeking to a specified time.\n*/\n\n(function () {\n    var audioCtx;\n    Cowbell.Common.WebAudioPlayer = function (generatorConstructor, playerOpts) {\n        this.Track = function (url, trackOpts) {\n            var generator;\n\n            this.open = function () {\n                var self = {};\n\n                if (!audioCtx) {\n                    var AudioContext = window.AudioContext || window.webkitAudioContext;\n                    audioCtx = new AudioContext({\n                        latencyHint: \"playback\",\n                        sampleRate: 22050\n                      });\n                }\n\n                var BUFFER_SIZE = 4096;\n\n                self.HAVE_NOTHING = 0;\n                self.HAVE_METADATA = 1;\n                self.HAVE_CURRENT_DATA = 2;\n                self.HAVE_FUTURE_DATA = 3;\n                self.HAVE_ENOUGH_DATA = 4;\n                self.readyState = self.HAVE_NOTHING;\n\n                generator = new generatorConstructor(url, audioCtx, playerOpts, trackOpts);\n                var generatorIsReady = false;\n                var playWasRequestedBeforeReady = false;\n                var scriptNode;\n\n                var hasStartedProcessing = false;\n                var playFromTime = 0;\n                var playStartTimestamp;\n                self.paused = true;\n\n                generator.load(function () {\n                    generatorIsReady = true;\n                    self.readyState = self.HAVE_ENOUGH_DATA;\n                    self.duration = generator.duration;\n                    if (generator.seekable) {\n                        self.seekable = {\n                            'length': 1,\n                            'start': function (i) {\n                                if (i !== 0) throw \"Out of range\";\n                                return 0;\n                            },\n                            'end': function (i) {\n                                if (i !== 0) throw \"Out of range\";\n                                return generator.duration;\n                            }\n                        };\n                    } else {\n                        self.seekable = {\n                            'length': 0,\n                            'start': function (i) {\n                                throw \"Out of range\";\n                            },\n                            'end': function (i) {\n                                throw \"Out of range\";\n                            }\n                        };\n                    }\n                    seek(0);\n                    if (self.onloadedmetadata) self.onloadedmetadata();\n                    if (playWasRequestedBeforeReady) self.play();\n                });\n\n                function seek(newTime) {\n                    if (scriptNode) scriptNode.disconnect(0);\n                    if (newTime > 0) {\n                        generator.seek(newTime);\n                    } else {\n                        generator.reset();\n                    }\n                    playFromTime = newTime;\n                    hasStartedProcessing = false;\n                    scriptNode = audioCtx.createScriptProcessor(BUFFER_SIZE, 0, generator.channelCount);\n                    scriptNode.onaudioprocess = generateAudio;\n                    if (!self.paused) {\n                        self.paused = true;\n                        self.play();\n                    }\n                }\n\n                function generateAudio(event) {\n                    if (!hasStartedProcessing) {\n                        playStartTimestamp = event.playbackTime;\n                        hasStartedProcessing = true;\n                    }\n\n                    var generatedLength = generator.generateAudio(event.outputBuffer);\n\n                    if (generatedLength < event.outputBuffer.length) {\n                        /* generate silence for the remainder of the buffer */\n                        for (var chan = 0; chan < event.outputBuffer.numberOfChannels; chan++) {\n                            var channelData = event.outputBuffer.getChannelData(chan);\n                            for (var i = generatedLength; i < event.outputBuffer.length; i++) {\n                                channelData[i] = 0;\n                            }\n                        }\n\n                        if (self.currentTime > self.duration) {\n                            /* we've finished playing (not just generating) the audio */\n                            self.pause();\n                            if (self.onended) self.onended();\n                            seek(0);\n                        }\n                    }\n\n                    if (self.ontimeupdate) self.ontimeupdate();\n                }\n\n                self.play = function () {\n                    if (!generatorIsReady) {\n                        playWasRequestedBeforeReady = true;\n                        return;\n                    }\n                    if (self.paused) {\n                        scriptNode.connect(audioCtx.destination);\n                        self.paused = false;\n                        // If an AudioContext is created prior to the document receiving a user gesture, \n                        // it will be created in the \"suspended\" state, and you will need to call resume() \n                        // after a user gesture is received.\n                        if (audioCtx.state === 'suspended') { audioCtx.resume() };\n                        if (self.onplay) self.onplay();\n\n                        if (hasStartedProcessing) {\n                            playStartTimestamp = audioCtx.currentTime;\n                            playFromTime = pausedAtTrackTime;\n                        }\n                    }\n                };\n\n                self.pause = function () {\n                    if (!self.paused) {\n                        pausedAtTimestamp = audioCtx.currentTime;\n                        pausedAtTrackTime = self.currentTime;\n\n                        scriptNode.disconnect(0);\n                        self.paused = true;\n                        if (self.onpause) self.onpause();\n                    }\n                };\n\n\n                /*\n                hasStartedProcessing = false && self.paused = true  =>  initial state\n                hasStartedProcessing = false && self.paused = false  =>  the instant we just called play()\n                hasStartedProcessing = true && self.paused = false  =>\n                    ready to play if currentTime < playStartTimestamp; playing if currentTime >= playStartTimestamp\n                hasStartedProcessing = true && self.paused = true  => paused\n                */\n\n                self.__defineGetter__('currentTime', function () {\n                    if (!hasStartedProcessing) return playFromTime;\n                    if (self.paused) return pausedAtTrackTime;\n                    if (audioCtx.currentTime < playStartTimestamp) return playFromTime;\n                    return playFromTime + audioCtx.currentTime - playStartTimestamp;\n                });\n\n                self.__defineSetter__('currentTime', function (newTime) {\n                    if (generator.seekable || newTime === 0) {\n                        seek(newTime);\n                    }\n                });\n\n                return self;\n            };\n            this.close = function () {\n                if (generator && generator.cleanup) {\n                    generator.cleanup();\n                }\n            };\n        };\n    };\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.nc = undefined;","import { Canvas } from '../../Canvas';\nimport { RoomScene } from './RoomScene';\n\nimport './../../default-style.css';\n\nclass Application {\n\n    public static main(): void {\n        const canvas: Canvas = new Canvas(320, 200, new RoomScene());\n        canvas.init();\n    }\n\n}\n\nApplication.main();\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","attributes","styleElement","nonce","setAttribute","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","scene","framebuffer","canvas","context","startTime","boundRenderLoop","constructor","width","height","getContext","oImageSmoothingEnabled","imageSmoothingEnabled","webkitImageSmoothingEnabled","Framebuffer","renderLoop","bind","init","appendTo","getElementById","addEventListener","event","preventDefault","FullscreenUtils","toggleFullscreen","then","onInit","Date","now","render","flipBackbuffer","requestAnimationFrame","putImageData","getImageData","CullFace","static","minWindow","maxWindow","wBuffer","cullMode","BACK","camera","bob","triangleRasterizer","FlatShadingTriangleRasterizer","texturedTriangleRasterizer","TexturedTriangleRasterizer","scaleClipBlitter","ScaleClipBlitter","texturedRenderingPipeline","lineRasterizer","LineRasterizerDda","lineRasterizerNo","LineRasterizerNoZ","tmpGlitch","lensFlareVisible","lensFlareStart","lensFlareEnd","imageData","unsignedIntArray","torus","Torus","plane","cylinder2","linerClipper","CohenSutherlandLineClipper","clipRegion","Array","texture","Texture","ImageData","Float32Array","arrayBuffer","ArrayBuffer","PIXEL_SIZE_IN_BYTES","Uint8ClampedArray","Uint32Array","TexturingRenderingPipeline","Vector2f","RightClipEdge","LeftClipEdge","BottomClipEdge","TopClipEdge","setCullFace","face","setTexture","set","clear","color","Color","BLACK","toPackedFormat","clearColorBuffer","fill","drawPixel","x","y","drawPixel4","alpha","inverseAlpha","r","g","b","drawPixel3","alpha2","drawPixelAntiAliased","roundedX","Math","floor","roundedY","percent","abs","drawPixelAliased","round","drawPixelAntiAliasedSpacial","ceil","readPixel","drawRect","start","drawRect2","j","drawText","text","xpos","firstIndex","charCodeAt","tx","ty","drawTextureRectFastAlpha","addReflections","Interpolator","interpolate","sin","drawTextureRect2","xs","ys","xt","yt","w","h","texIndex","frIndex","drawTextureColorized","txPixel","drawTextureRectNoAlpha","c1","c2","nAlpha","nInvAlpha","r1","g1","b1","r2","g2","b2","drawTextureRect","pixelWidth","fbPixel","drawTextureRectAdd","min","pixelate","xoff","yoff","drawBox2","drawLineDDA","Vector3f","fastFramebufferCopyOffset","src","dest","offset","l","fastFramebufferCopy","noise","elapsedTime","scale","rng","setSeed","getFloat","drawTexturedBillboard","xp","yp","z","xStep","yStep","newHeight","newWidth","yStart","xStart","xTextureStart","xx","yy","max","index2","textureIndex","drawParticle","alphaBlend","alphaScale","framebufferPixel","texturePixel","drawParticle2","imgNum","spritH","drawParticle2Sub","rr","gg","bb","drawParticleNoDepth","drawSoftParticle","zDist","drawFog","fogScale","fogOffset","videoMemorySize","wBufferScale","drawScaledTextureClipBi","getBilinearFilteredPixel2","drawScaledTextureClipBiAdd","drawScaledTextureClipAdd","drawTexture","SCREEN_WIDTH","SCREEN_HEIGHT","framebufferIndex","textureRowOffset","framebufferRowOffset","div","yHeight","xWidth","drawTextureFullscreen","drawTexture3","time","mHeight","drawTextureNoClipAlpha","nearPlaneClipping","t1","t2","NEAR_PLANE_Z","cohenSutherlandLineClipper","project","ratio","t3","clearDepthBuffer","drawBox","x1","y1","wireFrameSphereClipping","points","STEPS2","sphereFunction2","PI","modelViewMartrix","Matrix4f","constructScaleMatrix","multiplyMatrix","constructYRotationMatrix","constructXRotationMatrix","constructTranslationMatrix","points2","p","transformed","multiplyHom","colred","v1","v2","v3","colLine","isTriangleCCW","det","wireFrameTerrain","heightmap","Matrix3f","xOff","cos","zOff","forEach","multiply","drawBoundingSphere","sphere","matrix","pos","mul","getRadius","add","getCenter","drawPlanedeformationTunnelAnim","xdist","ydist","dist","sqrt","dist2","angle","atan2","color1","cosineInterpolate","final","drawScreenBounds","WHITE","drawLineDDANoZ","drawParticleStreams","light","sort","a","size","drawPlaneDeformation","IMG_WIDTH","IMG_HEIGHT","u","v","torusFunction","fakeSphere","normal","vertex","textureCoordinate","asin","fakeSphere2","tex","end","theta","phi","Vector4f","seed","position","projection","TextureCoordinate","blenderScene","invert","object","normals","vertices","normalize","faces","f","n1","n2","n3","transformedNormals","transformedPoints","file","disp","coords","uv","ComputationalGeometryUtils","computeBoundingSphere","normals2","boundingSphere","name","drawScaledTextureClip","sub","num","RoomScene","AbstractScene","accumulationBuffer","texture10","texture11","texture13","dirt","blenderObj4","blenderObj5","renderingPipeline","soundManager","SoundManager","GouraudShadingRenderingPipeline","setFramebuffer","Promise","all","loadMusic","BlenderLoader","load","mesh","TextureUtils","generateProceduralNoise","button","textContent","getElementsByTagName","onPlay","drawBlenderScene5","texture3","spark","mv","mat1","Material","ambientColor","diffuseColor","specularColor","shininess","mat2","mat3","model","setMaterial","draw","mat4","model2","lensflareScreenSpace","LensFlare","drawLensFlare","fullscreen","exitFullscreen","setStyle","enterFullscreen","el","getAttribute","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullScreen","mozCancelFullScreen","webkitExitFullscreen","inverse","buildMesh","cross","getMesh","AbstractGeometricObject","super","frame","frame2","up","right","Sphere","center","radius","point","current","y2","mu","mu2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xScale","yScale","zScale","vector","m14","m24","m34","m41","m42","m43","m44","setIdentityMatrix","transpose","computeNormalMatrix","inverseTranslation","constructIdentityMatrix","scale1","scale2","scale3","inverseRotation","getInverseRotation","getRotation","planePoint","planeNormal","lightPosition","d","dot","NdotL","shadowMatrix","tz","setTranslationMatrix","setXRotationMatrix","setZRotationMatrix","setScaleMatrix","sx","sy","sz","setYRotationMatrix","multiply2","matrix2","multiplyHomArr","multiplyHomArr2","multiplyArr","isInsidePositiveHalfSpace","getNormal","getDistance","getTran","mat","perp","vec","scal","reci","mult","sub2","vec1","vec2","add2","cross2","normalize2","componentWiseMul","filename","fetch","response","json","meshes","BlenderJsonParser","parse","getBlenderScene","AbstractScannlineTriangleRasterizer","AbstractTriangleRasterizer","temp","drawTriangleDDA","p1","p2","p3","fillLongRightTriangle","fillLongLeftTriangle","startColor","colorSlope","setup","distance","advance","slope1","slope2","zslope1","zslope2","curz1","curz2","xPosition","xPosition2","yPosition","yDistanceLeft","yDistanceRight","drawSpan","spanzStep","wStart","GouraudShadingTriangleRasterizer","colorInterpolator1","ColorInterpolator","colorInterpolator2","colorInterpolator3","rowColorInterpolator","leftSlope","SlopeInterpolator","rightSlope","yDistance","shortSlope","currentX","currentZ","slope","zslope","top","bottom","TexturedAlphaBlendingTriangleRasterizer","pipeline","tslope1u","tslope2u","tslope1v","tslope2v","curu1","curv1","curu2","curv2","spanuStep","spanvStep","uStart","vStart","currentColor","color2","getBilinearFilteredPixelRasterizer","xDistance","dx","dy","sign","wDelta","setAlpha","isInFrontOfNearPlane","isTriangleCCW2","v4","AbstractRenderingPipeline","fog","lights","material","lighting","clipper","projectedVertices","vertexArray","Vertex","SutherlandHodgman2DClipper","light1","PointLight","ambientIntensity","diffuseIntensity","specularIntensity","light2","setFog","setLights","enableLighting","enable","setColor","drawMeshArray","normalMatrix","normal1","normal2","normal3","project2","renderConvexPolygon","computeColor","output","zClipTriangle","computeNearPlaneIntersection","subject","input","S","projected","late","clippedPolygon","clipConvexPolygon","triangulateConvexPolygon","vertexColor","PhongLighting","computeVertexColor","sphereMapping","setSphereMapping","modelViewMatrix","enableAlphaBlending","disableAlphaBlending","setModelViewMatrix","edge","isInside2","computeIntersection2","AbstractClipEdge","isInside","computeIntersection","factor","textCoord","col","code1","computeRegionCode","code2","accept","done","isTrivialAccept","isTrivialReject","REGION_CODE_CENTER","tempCode","tempPoint","REGION_CODE_TOP","REGION_CODE_BOTTOM","REGION_CODE_RIGHT","REGION_CODE_LEFT","regionCode","finalColor","computeAmbientIntensity","computeDiffuseIntensity","computeSpecularIntensity","lightDirection","pow","Light","emissiveColor","BPM","ROWS_PER_BEAT","ROW_RATE","syncDevice","isPlaying","demoMode","row","musicProperties","sceneData","audioElement","JSRocket","SyncDevice","connected","resolve","audioPlayer","split","pop","toLowerCase","Cowbell","Player","OpenMPT","Audio","track","Track","open","prepareSync","setConfig","on","onSyncReady","newRow","onSyncUpdate","onPause","effect","getTrack","snare","bass","transitionType","transitionValue","isNaN","currentTime","updateMusic","timeSeconds","timeMilliseconds","getValue","paused","duration","click","play","console","log","pause","info","jump","direction","sceneLength","effectJump","Number","toFixed","trunc","parseInt","seek","toggleSound","ref","isMuted","classList","muted","initTimeline","newLocal","jumpTo","localStorage","getItem","libopenmpt","poll","modulePtr","display","updateRange","setTimeout","onloadedmetadata","value","String","screenPos","dir","maxWidth","maxHeight","clamp","setClamp","getPixel","getBilinearFilteredPixel","x0","y0","x0y0","x1y0","x0y1","x1y1","col1","col2","getPixel2","interpolateComp","getPixelRasterizer","getPixel3","xFrac","yFrac","oneMinusXfrac","oneMinusYfrac","c","transparency","image","Image","onload","onerror","withAlpha","drawImage","conv","SyncData","_track","getIndexForName","getTrackLength","createIndex","varName","keys","Object","idx","lo","hi","mi","findKeyIndex","k0","k1","t","interpolation","SyncDevicePlayer","cfg","_urlRequest","_syncData","_eventHandler","url","XMLHttpRequest","onreadystatechange","urlRequestHandler","send","error","readyState","status","xmlString","key","tLen","kLen","trackList","DOMParser","parseFromString","keyList","parseFloat","ready","readXML","responseText","rocketXML","evt","handler","SyncDeviceClient","_ws","WebSocket","socketURL","toInt","arr","view","DataView","setUint8","byteLength","getInt8","getInt32","onopen","binaryType","onmessage","queue","Uint8Array","cmd","subarray","getFloat32","save","onclose","warn","utf8Name","replace","m","fromCharCode","message","buffer","streamInt","_device","_previousIntRow","_connected","_config","deviceReady","deviceUpdate","devicePlay","devicePause","mode","option","hasOwnProperty","getConfig","audio","body","createPlayer","containerElement","opts","ui","UI","Basic","player","playerOpts","trackOpts","jQuery","fn","cowbell","each","OpenMPTGenerator","audioCtx","leftBufferPtr","rightBufferPtr","self","initModule","byteArray","Int8Array","ptrToFile","_malloc","asciiToStack","str","stackStr","stackAlloc","writeAsciiToMemory","HEAPU8","_openmpt_module_create_from_memory","stack","stackSave","_openmpt_module_ctl_set","stackRestore","_openmpt_module_get_duration_seconds","cleanup","_openmpt_module_destroy","_free","onReady","pathToLibOpenMPT","script","onRuntimeInitialized","ensureLibOpenMPT","channelCount","request","responseType","generateAudio","outputBuffer","outputL","getChannelData","outputR","framesToRender","framesRendered","framesPerChunk","actualFramesPerChunk","_openmpt_module_read_float_stereo","sampleRate","rawAudioLeft","HEAPF32","rawAudioRight","seekable","_openmpt_module_set_position_seconds","reset","Common","WebAudioPlayer","generatorConstructor","generator","AudioContext","webkitAudioContext","latencyHint","BUFFER_SIZE","HAVE_NOTHING","HAVE_METADATA","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","scriptNode","playStartTimestamp","generatorIsReady","playWasRequestedBeforeReady","hasStartedProcessing","playFromTime","newTime","disconnect","createScriptProcessor","onaudioprocess","playbackTime","generatedLength","chan","numberOfChannels","channelData","onended","ontimeupdate","connect","destination","state","resume","onplay","pausedAtTrackTime","pausedAtTimestamp","onpause","__defineGetter__","__defineSetter__","close","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","definition","o","defineProperty","enumerable","get","globalThis","Function","prop","prototype","call","Symbol","toStringTag","scriptUrl","importScripts","location","currentScript","scripts","nc","Canvas","main"],"sourceRoot":""}