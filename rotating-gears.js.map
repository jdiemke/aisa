{"version":3,"file":"rotating-gears.js","mappings":"2FAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,2CAGtC,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,qCAAqC,MAAQ,GAAG,SAAW,yBAAyB,eAAiB,CAAC,4CAA4C,WAAa,MAE7L,S,gFCPIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,mPAWtC,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,qDAAqD,MAAQ,GAAG,SAAW,yHAAyH,eAAiB,CAAC,oPAAoP,WAAa,MAErf,S,wBCZAD,EAAOE,QAAU,SAAUC,GACzB,IAAIC,EAAO,GA4EX,OAzEAA,EAAKC,SAAW,WACd,OAAOC,KAAKC,KAAI,SAAUC,GACxB,IAAIC,EAAU,GACVC,OAA+B,IAAZF,EAAK,GAoB5B,OAnBIA,EAAK,KACPC,GAAW,cAAcE,OAAOH,EAAK,GAAI,QAEvCA,EAAK,KACPC,GAAW,UAAUE,OAAOH,EAAK,GAAI,OAEnCE,IACFD,GAAW,SAASE,OAAOH,EAAK,GAAGI,OAAS,EAAI,IAAID,OAAOH,EAAK,IAAM,GAAI,OAE5EC,GAAWN,EAAuBK,GAC9BE,IACFD,GAAW,KAETD,EAAK,KACPC,GAAW,KAETD,EAAK,KACPC,GAAW,KAENA,CACT,IAAGI,KAAK,GACV,EAGAT,EAAKU,EAAI,SAAWC,EAASC,EAAOC,EAAQC,EAAUC,GAC7B,iBAAZJ,IACTA,EAAU,CAAC,CAAC,KAAMA,OAASK,KAE7B,IAAIC,EAAyB,CAAC,EAC9B,GAAIJ,EACF,IAAK,IAAIK,EAAI,EAAGA,EAAIhB,KAAKM,OAAQU,IAAK,CACpC,IAAIrB,EAAKK,KAAKgB,GAAG,GACP,MAANrB,IACFoB,EAAuBpB,IAAM,EAEjC,CAEF,IAAK,IAAIsB,EAAK,EAAGA,EAAKR,EAAQH,OAAQW,IAAM,CAC1C,IAAIf,EAAO,GAAGG,OAAOI,EAAQQ,IACzBN,GAAUI,EAAuBb,EAAK,WAGrB,IAAVW,SACc,IAAZX,EAAK,KAGdA,EAAK,GAAK,SAASG,OAAOH,EAAK,GAAGI,OAAS,EAAI,IAAID,OAAOH,EAAK,IAAM,GAAI,MAAMG,OAAOH,EAAK,GAAI,MAF/FA,EAAK,GAAKW,GAMVH,IACGR,EAAK,IAGRA,EAAK,GAAK,UAAUG,OAAOH,EAAK,GAAI,MAAMG,OAAOH,EAAK,GAAI,KAC1DA,EAAK,GAAKQ,GAHVR,EAAK,GAAKQ,GAMVE,IACGV,EAAK,IAGRA,EAAK,GAAK,cAAcG,OAAOH,EAAK,GAAI,OAAOG,OAAOH,EAAK,GAAI,KAC/DA,EAAK,GAAKU,GAHVV,EAAK,GAAK,GAAGG,OAAOO,IAMxBd,EAAKL,KAAKS,GACZ,CACF,EACOJ,CACT,C,wBClFAJ,EAAOE,QAAU,SAAUM,GACzB,IAAIC,EAAUD,EAAK,GACfgB,EAAahB,EAAK,GACtB,IAAKgB,EACH,OAAOf,EAET,GAAoB,mBAATgB,KAAqB,CAC9B,IAAIC,EAASD,KAAKE,SAASC,mBAAmBC,KAAKC,UAAUN,MACzDO,EAAO,+DAA+DpB,OAAOe,GAC7EM,EAAgB,OAAOrB,OAAOoB,EAAM,OACxC,MAAO,CAACtB,GAASE,OAAO,CAACqB,IAAgBnB,KAAK,KAChD,CACA,MAAO,CAACJ,GAASI,KAAK,KACxB,C,wBCbA,IAAIoB,EAAc,GAClB,SAASC,EAAqBC,GAE5B,IADA,IAAIC,GAAU,EACLtB,EAAI,EAAGA,EAAImB,EAAYrB,OAAQE,IACtC,GAAImB,EAAYnB,GAAGqB,aAAeA,EAAY,CAC5CC,EAAStB,EACT,KACF,CAEF,OAAOsB,CACT,CACA,SAASC,EAAajC,EAAMkC,GAG1B,IAFA,IAAIC,EAAa,CAAC,EACdC,EAAc,GACT1B,EAAI,EAAGA,EAAIV,EAAKQ,OAAQE,IAAK,CACpC,IAAIN,EAAOJ,EAAKU,GACZb,EAAKqC,EAAQG,KAAOjC,EAAK,GAAK8B,EAAQG,KAAOjC,EAAK,GAClDkC,EAAQH,EAAWtC,IAAO,EAC1BkC,EAAa,GAAGxB,OAAOV,EAAI,KAAKU,OAAO+B,GAC3CH,EAAWtC,GAAMyC,EAAQ,EACzB,IAAIC,EAAoBT,EAAqBC,GACzCS,EAAM,CACRC,IAAKrC,EAAK,GACVQ,MAAOR,EAAK,GACZsC,UAAWtC,EAAK,GAChBU,SAAUV,EAAK,GACfW,MAAOX,EAAK,IAEd,IAA2B,IAAvBmC,EACFV,EAAYU,GAAmBI,aAC/Bd,EAAYU,GAAmBK,QAAQJ,OAClC,CACL,IAAII,EAAUC,EAAgBL,EAAKN,GACnCA,EAAQY,QAAUpC,EAClBmB,EAAYkB,OAAOrC,EAAG,EAAG,CACvBqB,WAAYA,EACZa,QAASA,EACTD,WAAY,GAEhB,CACAP,EAAYzC,KAAKoC,EACnB,CACA,OAAOK,CACT,CACA,SAASS,EAAgBL,EAAKN,GAC5B,IAAIc,EAAMd,EAAQe,OAAOf,GAYzB,OAXAc,EAAIE,OAAOV,GACG,SAAiBW,GAC7B,GAAIA,EAAQ,CACV,GAAIA,EAAOV,MAAQD,EAAIC,KAAOU,EAAOvC,QAAU4B,EAAI5B,OAASuC,EAAOT,YAAcF,EAAIE,WAAaS,EAAOrC,WAAa0B,EAAI1B,UAAYqC,EAAOpC,QAAUyB,EAAIzB,MACzJ,OAEFiC,EAAIE,OAAOV,EAAMW,EACnB,MACEH,EAAII,QAER,CAEF,CACAxD,EAAOE,QAAU,SAAUE,EAAMkC,GAG/B,IAAImB,EAAkBpB,EADtBjC,EAAOA,GAAQ,GADfkC,EAAUA,GAAW,CAAC,GAGtB,OAAO,SAAgBoB,GACrBA,EAAUA,GAAW,GACrB,IAAK,IAAI5C,EAAI,EAAGA,EAAI2C,EAAgB7C,OAAQE,IAAK,CAC/C,IACI6C,EAAQzB,EADKuB,EAAgB3C,IAEjCmB,EAAY0B,GAAOZ,YACrB,CAEA,IADA,IAAIa,EAAqBvB,EAAaqB,EAASpB,GACtCuB,EAAK,EAAGA,EAAKJ,EAAgB7C,OAAQiD,IAAM,CAClD,IACIC,EAAS5B,EADKuB,EAAgBI,IAEK,IAAnC5B,EAAY6B,GAAQf,aACtBd,EAAY6B,GAAQd,UACpBf,EAAYkB,OAAOW,EAAQ,GAE/B,CACAL,EAAkBG,CACpB,CACF,C,uBCjFA,IAAIG,EAAO,CAAC,EA+BZ/D,EAAOE,QAPP,SAA0B8D,EAAQC,GAChC,IAAIC,EAtBN,SAAmBA,GACjB,QAA4B,IAAjBH,EAAKG,GAAyB,CACvC,IAAIC,EAAcC,SAASC,cAAcH,GAGzC,GAAII,OAAOC,mBAAqBJ,aAAuBG,OAAOC,kBAC5D,IAGEJ,EAAcA,EAAYK,gBAAgBC,IAC5C,CAAE,MAAOC,GAEPP,EAAc,IAChB,CAEFJ,EAAKG,GAAUC,CACjB,CACA,OAAOJ,EAAKG,EACd,CAIeS,CAAUX,GACvB,IAAKE,EACH,MAAM,IAAIU,MAAM,2GAElBV,EAAOW,YAAYZ,EACrB,C,wBCvBAjE,EAAOE,QANP,SAA4BoC,GAC1B,IAAIwC,EAAUV,SAASW,cAAc,SAGrC,OAFAzC,EAAQ0C,cAAcF,EAASxC,EAAQ2C,YACvC3C,EAAQ0B,OAAOc,EAASxC,EAAQA,SACzBwC,CACT,C,8BCCA9E,EAAOE,QANP,SAAwCgF,GACtC,IAAIC,EAAmD,KACnDA,GACFD,EAAaE,aAAa,QAASD,EAEvC,C,wBCoDAnF,EAAOE,QAjBP,SAAgBoC,GACd,GAAwB,oBAAb8B,SACT,MAAO,CACLd,OAAQ,WAAmB,EAC3BE,OAAQ,WAAmB,GAG/B,IAAI0B,EAAe5C,EAAQ+C,mBAAmB/C,GAC9C,MAAO,CACLgB,OAAQ,SAAgBV,IAjD5B,SAAesC,EAAc5C,EAASM,GACpC,IAAIC,EAAM,GACND,EAAI1B,WACN2B,GAAO,cAAclC,OAAOiC,EAAI1B,SAAU,QAExC0B,EAAI5B,QACN6B,GAAO,UAAUlC,OAAOiC,EAAI5B,MAAO,OAErC,IAAIN,OAAiC,IAAdkC,EAAIzB,MACvBT,IACFmC,GAAO,SAASlC,OAAOiC,EAAIzB,MAAMP,OAAS,EAAI,IAAID,OAAOiC,EAAIzB,OAAS,GAAI,OAE5E0B,GAAOD,EAAIC,IACPnC,IACFmC,GAAO,KAELD,EAAI5B,QACN6B,GAAO,KAELD,EAAI1B,WACN2B,GAAO,KAET,IAAIC,EAAYF,EAAIE,UAChBA,GAA6B,oBAATrB,OACtBoB,GAAO,uDAAuDlC,OAAOc,KAAKE,SAASC,mBAAmBC,KAAKC,UAAUgB,MAAe,QAKtIR,EAAQgD,kBAAkBzC,EAAKqC,EAAc5C,EAAQA,QACvD,CAoBMiD,CAAML,EAAc5C,EAASM,EAC/B,EACAY,OAAQ,YArBZ,SAA4B0B,GAE1B,GAAgC,OAA5BA,EAAaM,WACf,OAAO,EAETN,EAAaM,WAAWC,YAAYP,EACtC,CAgBMQ,CAAmBR,EACrB,EAEJ,C,wBC9CAlF,EAAOE,QAVP,SAA2B2C,EAAKqC,GAC9B,GAAIA,EAAaS,WACfT,EAAaS,WAAWC,QAAU/C,MAC7B,CACL,KAAOqC,EAAaW,YAClBX,EAAaO,YAAYP,EAAaW,YAExCX,EAAaL,YAAYT,SAAS0B,eAAejD,GACnD,CACF,C,YCZA,SAAWyB,GAEFA,EAAOyB,WACRzB,EAAOyB,SAAW,CAAC,GAEvBA,SAASC,SAAW,WAEhB,aAEA,IAAIC,EAAS,GA4Bb,MAAO,CACHC,SA3BJ,SAAkBvC,GACd,OAAOsC,EAAOtC,EAClB,EA0BIwC,gBAxBJ,SAAyBC,GACrB,IAAK,IAAItF,EAAI,EAAGA,EAAImF,EAAOrF,OAAQE,IAE/B,GAAImF,EAAOnF,GAAGsF,OAASA,EACnB,OAAOtF,EAIf,OAAQ,CACZ,EAgBIuF,eAdJ,WACI,OAAOJ,EAAOrF,MAClB,EAaI0F,YAXJ,SAAqBC,GACjB,IAAIC,EAAQ,IAAIT,SAASU,MACzBD,EAAMJ,KAAOG,EAEbN,EAAOlG,KAAKyG,EAChB,EAQJ,EACAT,SAASU,MAAQ,WAEb,aAEA,IAKI1E,EAAO,GA+DX,MAAO,CACH2E,SA9CJ,SAAkBC,GACd,IAAIC,EAAOC,OAAOD,KAAK7E,GAEvB,IAAK6E,EAAKhG,OACN,OAAO,EAGX,IAAIkG,EAvBR,SAAsBF,EAAMD,GAExB,IADA,IAAII,EAAK,EAAGC,EAAKJ,EAAKhG,OACfmG,EAAKC,GAAI,CACZ,IAAIC,GAAOD,EAAKD,GAAM,EAAK,EAE3B,GAAIH,EAAKK,GAAMN,EACXI,EAAKE,EAAK,MACP,MAAIL,EAAKK,GAAMN,GAGlB,OAAOM,EAFPD,EAAKC,CAGT,CACJ,CACA,OAAOF,EAAK,CAChB,CAScG,CAAaN,EAAMO,KAAKC,MAAMT,IACxC,GAAIG,EAAM,EACN,OAAO/E,EAAK6E,EAAK,IAAIS,MAEzB,GAAIP,EAAMF,EAAKhG,OAAS,EACpB,OAAOmB,EAAK6E,EAAKA,EAAKhG,OAAS,IAAIyG,MAIvC,IAAIC,EAAKV,EAAKE,GAAMS,EAAKX,EAAKE,EAAM,GAChCU,EAAIzF,EAAKuF,GAAID,MACbI,EAAI1F,EAAKwF,GAAIF,MAGbK,GAAKf,EAAMW,IAAOC,EAAKD,GAC3B,OAAQvF,EAAKuF,GAAIK,eACb,KAAK,EACD,OAAOH,EACX,KAAK,EACD,OAAOA,GAAKC,EAAID,GAAKE,EACzB,KAAK,EACD,OAAOF,GAAKC,EAAID,GAAKE,EAAIA,GAAK,EAAI,EAAIA,GAC1C,KAAK,EACD,OAAOF,GAAKC,EAAID,GAAKL,KAAKS,IAAIF,EAAG,GAE7C,EAeIG,IAbJ,SAAalB,EAAKU,EAAOM,GACrB5F,EAAK4E,GAAO,CACR,MAASU,EACT,cAAiBM,EAEzB,EASInE,OAPJ,SAAgBmD,UACL5E,EAAK4E,EAChB,EAOJ,EACAZ,SAAS+B,iBAAmB,SAAUC,GAElC,aAEA,IAAIC,EACAC,EAAY,IAAIlC,SAASC,SACzBkC,EAAgB,CACZ,MAAS,WACT,EACA,MAAS,WACT,GAGR,SAASC,EAAKC,GAIU,QAFpBJ,EAAc,IAAIK,iBAOlBL,EAAYM,KAAK,MAAOF,GAAK,GAC7BJ,EAAYO,mBAAqBC,EAEjCR,EAAYS,QAPRP,EAAcQ,OAQtB,CAEA,SAASF,IAE0B,IAA3BR,EAAYW,aACRX,EAAYY,OAAS,IAQjC,SAAiBC,GACb,IAAIC,EACOC,EAAaC,EAApBtB,EAAI,EAASpG,EAAI,EAKjB2H,GAJM,IAAKC,WAAaC,gBAAgBN,EAAW,YACtCO,qBAAqB,UAGf,GAAGA,qBAAqB,SAE/C,IAAQL,EAAOE,EAAUrI,OAAQ8G,EAAIqB,EAAMrB,IAAK,CAE5C,IAAIlB,EAAQN,EAAS+C,EAAUvB,GAAG2B,aAAa,SAC3CC,EAAUL,EAAUvB,GAAG0B,qBAAqB,OAEhD,IAAK9H,EAAI,EAAG0H,EAAOM,EAAQ1I,OAAQU,EAAI0H,EAAM1H,IACzCwH,EAAMQ,EAAQhI,GACdkF,EAAMqB,IAAI0B,SAAST,EAAIO,aAAa,OAAQ,IACxCG,WAAWV,EAAIO,aAAa,UAC5BE,SAAST,EAAIO,aAAa,iBAAkB,IAGxD,CAEAnB,EAAcuB,OAClB,CA/BYC,CAAQ1B,EAAY2B,cAEpBzB,EAAcQ,QAG1B,CA4BA,SAASxC,EAASE,GAEd,IAAIzC,EAAQsE,EAAU9B,gBAAgBC,GAEtC,OAAIzC,GAAS,EACFsE,EAAU/B,SAASvC,IAG9BsE,EAAU3B,YAAYF,GACf6B,EAAU/B,SAAS+B,EAAU5B,iBAAmB,GAC3D,CAUA,GAAsB,KAAlB0B,EAAI6B,gBAAsCxI,IAAlB2G,EAAI6B,gBAA6CxI,IAAlB2G,EAAI6B,UAC3D,KAAM,sGAKV,OAHIzB,EAAKJ,EAAI6B,WAGN,CACHzB,KAAMA,EACNjC,SAAUA,EACV5C,OAbJ,WAEA,EAYIuG,GAlBJ,SAAkBC,EAAKC,GACnB7B,EAAc4B,GAAOC,CACzB,EAkBJ,EACAhE,SAASiE,iBAAmB,SAAUjC,GAElC,aAEA,IAOIkC,EAAM,IAAIC,UAAUnC,EAAIoC,WACxBlC,EAAY,IAAIlC,SAASC,SACzBkC,EAAgB,CACZ,MAAS,WACT,EACA,OAAU,WACV,EACA,KAAQ,WACR,EACA,MAAS,WACT,EACA,KAAQ,WACR,GA8GR,SAASkC,EAAMC,GAKX,IAHA,IAAIvJ,EAAI,EACJwJ,EAAO,IAAIC,SAAS,IAAIC,YAAYH,EAAIzJ,SAErCE,EAAIuJ,EAAIzJ,OAAQE,IACnBwJ,EAAKG,SAAS3J,EAAGuJ,EAAIvJ,IAGzB,OAAwB,IAApBwJ,EAAKI,WACEJ,EAAKK,QAAQ,GAEbL,EAAKM,SAAS,EAE7B,CAgBA,OAtEAX,EAAIY,OAnEJ,WAEIZ,EAAIa,WAAa,cACjBb,EAAIxB,KAAK,sBACb,EAgEAwB,EAAIc,UA9DJ,SAAmBrG,GAEf,IAEI8B,EAAOG,EAAKU,EAAOM,EAiHV0C,EACTC,EApHAU,EAAQ,IAAKC,WAAWvG,EAAE3C,MAC1BmJ,EAAMF,EAAM,GAIJ,MAARE,EAEAhD,EAAcuB,QAjCN,IAoCayB,EAEJ,IAAbF,EAAM,GACN9C,EAAciD,QAEdjD,EAAckD,OA1CR,IA8CaF,GAEvBvE,EAAMyD,EAAMY,EAAMK,SAAS,EAAG,IAE9BnD,EAAc5E,OAAOqD,IArDX,IAwDauE,GAEvB1E,EAAQ4D,EAAMY,EAAMK,SAAS,EAAG,IAChC1E,EAAMyD,EAAMY,EAAMK,SAAS,EAAG,IAsFrBhB,EAnFOW,EAAMK,SAAS,EAAG,KAoFlCf,EAAO,IAAIC,SAAS,IAAIC,YAAY,KACnCC,SAAS,EAAGJ,EAAI,IACrBC,EAAKG,SAAS,EAAGJ,EAAI,IACrBC,EAAKG,SAAS,EAAGJ,EAAI,IACrBC,EAAKG,SAAS,EAAGJ,EAAI,IAxFjBhD,EA0FGiD,EAAKgB,WAAW,GAxFnB3D,EAAgByC,EAAMY,EAAMK,SAAS,GAAI,KACzCpD,EAAU/B,SAASM,GAAOqB,IAAIlB,EAAKU,EAAOM,IAhE7B,IAmEauD,GAE1B1E,EAAQ4D,EAAMY,EAAMK,SAAS,EAAG,IAChC1E,EAAMyD,EAAMY,EAAMK,SAAS,EAAG,IAE9BpD,EAAU/B,SAASM,GAAOhD,OAAOmD,IApEnB,IAuEauE,GAC3BhD,EAAcqD,MAEtB,EAYAtB,EAAIuB,QAVJ,SAAiB9G,GACb+G,QAAQC,KAAK,uBAAwBhH,EACzC,EASAuF,EAAI0B,QAPJ,SAAiBjH,GACb+G,QAAQ/C,MAAM,wBAAyBhE,EAC3C,EAwEO,CACHwB,SAlEJ,SAAkBE,GAEd,IAAIzC,EAAQsE,EAAU9B,gBAAgBC,GAEtC,GAAIzC,GAAS,EACT,OAAOsE,EAAU/B,SAASvC,GAU9B,IAPA,IAAIiI,EAAWhK,mBAAmBwE,GAAMyF,QAAQ,kBAAkB,SAAUC,EAAGC,GAC3E,OAAOC,OAAOC,aAAa,KAAOF,EACtC,IACIG,EAAU,CAvGE,EAwGXN,EAAShL,QAAU,GAAM,IAAOgL,EAAShL,QAAU,GAAM,IACzDgL,EAAShL,QAAU,EAAK,IAA0B,IAAnBgL,EAAe,QAE1C9K,EAAI,EAAGA,EAAI8K,EAAShL,OAAQE,IACjCoL,EAAQnM,KAAK6L,EAASO,WAAWrL,IAMrC,OAHAmJ,EAAIxB,KAAK,IAAIwC,WAAWiB,GAASE,QAEjCnE,EAAU3B,YAAYF,GACf6B,EAAU/B,SAAS+B,EAAU5B,iBAAmB,EAC3D,EA4CI/C,OA1CJ,SAAgBqD,GAEZ,IAAI0F,EAAY,CAAE1F,GAAO,GAAM,IAC9BA,GAAO,GAAM,IACbA,GAAO,EAAK,IACL,IAAR,GAEAsD,EAAIxB,KAAK,IAAIwC,WAAW,CA3HV,EA2HwBoB,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,KAAKD,OACnG,EAmCIvC,GAPJ,SAAkBC,EAAKC,GACnB7B,EAAc4B,GAAOC,CACzB,EAOJ,EAEAhE,SAASuG,WAAa,WAElB,aAEA,IACIC,EACAC,EAFAC,GAAa,EAGbC,EAAU,CACN,UAAa,sBACb,UAAa,IAEjBxE,EAAgB,CACZ,MAAS,WACT,EACA,OAAU,WACV,EACA,KAAQ,WACR,EACA,MAAS,WACT,GA8BR,SAASyE,IACLF,GAAa,EACbvE,EAAcuB,OAClB,CAEA,SAASmD,EAAajG,GAClBuB,EAAc5E,OAAOqD,EACzB,CAEA,SAASkG,IACL3E,EAAckD,MAClB,CAEA,SAAS0B,IACL5E,EAAciD,OAClB,CAsBA,MAAO,CACH4B,KAjEJ,SAAcC,IAENT,EADS,SAATS,EACU,IAAIjH,SAAS+B,iBAAiB4E,GAE9B,IAAI3G,SAASiE,iBAAiB0C,IAGpC7C,GAAG,QAAS8C,GACpBJ,EAAQ1C,GAAG,SAAU+C,GACrBL,EAAQ1C,GAAG,OAAQgD,GACnBN,EAAQ1C,GAAG,QAASiD,EACxB,EAuDIG,UAjDJ,SAAmBlF,GACf,IAAK,IAAImF,KAAUnF,EACXA,EAAIoF,eAAeD,KACnBR,EAAQQ,GAAUnF,EAAImF,IAI9B,OAAOR,CACX,EA0CIU,UAtDJ,WACI,OAAOV,CACX,EAqDIxG,SAxBJ,SAAkBE,GACd,OAAIqG,EACOF,EAAQrG,SAASE,GAEjB,IAEf,EAmBI9C,OAjBJ,SAAgBqD,GAERQ,KAAKC,MAAMT,KAAS6F,IACpBA,EAAkBrF,KAAKC,MAAMT,GAC7B4F,EAAQjJ,OAAOkJ,GAEvB,EAYI3C,GAVJ,SAAkBC,EAAKC,GACnB7B,EAAc4B,GAAOC,CACzB,EAUJ,CAEH,CAteD,CAseGzF,O,YCneH+I,QAAQC,OAAOC,MAAQ,WACtBjN,KAAKmG,MAAQ,SAAS2B,GACrB9H,KAAKgI,KAAO,WACX,IAAIkF,EAAQpJ,SAASW,cAAc,SAInC,OAHAyI,EAAMC,IAAMrF,EACZhE,SAASsJ,KAAK7I,YAAY2I,GAEnBA,CACR,CACD,CACD,C,YCbAlJ,OAAO+I,QAAU,CAChB,GAAM,CAAC,EACP,OAAU,CAAC,EACX,OAAU,CAAC,GAGZ/I,OAAO+I,QAAQM,aAAe,SAASC,EAAkBC,GACnDA,IAAMA,EAAO,CAAC,GAEa,iBAAtB,IACTD,EAAmBxJ,SAAS0J,eAAeF,IAG5C,IACIG,EAAK,IADWF,EAAKE,IAAMV,QAAQW,GAAGC,OACfL,GAE3B,GAAIC,EAAKK,OAAQ,CAChB,IAAIA,EAAS,IAAIL,EAAKK,OAAOL,EAAKM,YAElC,GAAIN,EAAKzF,IAAK,CACb,IAAI5B,EAAQ,IAAI0H,EAAOzH,MAAMoH,EAAKzF,IAAKyF,EAAKO,WAC5CL,EAAGzF,KAAK9B,EACT,CACD,CAEA,OAAOuH,CACR,EAEIzJ,OAAO+J,SACV/J,OAAO+J,OAAOC,GAAGC,QAAU,SAASV,GACnCvN,KAAKkO,MAAK,WACTnB,QAAQM,aAAarN,KAAMuN,EAC5B,GACD,E,iBC/BD,WACC,SAASY,EAAiBrG,EAAKsG,EAAUP,EAAYC,GACpD,IAAIO,EAAWC,EAAeC,EAE1BC,EAAOxO,KAIX,SAASyO,EAAWhN,GACnB,IAAIiN,EAAY,IAAIC,UAAUlN,GAC1BmN,EAAYC,WAAWC,QAAQJ,EAAUtE,YAQ7C,SAAS2E,EAAaC,GACrB,IAAIC,EAAWC,WAAWF,EAAI1O,OAAS,GAEvC,OADA6O,mBAAmBH,EAAKC,GACjBA,CACR,CAXAJ,WAAWO,OAAOC,IAAIX,EAAWE,GAEjCP,EAAYQ,WAAWS,mCAAmCV,EAAWF,EAAUtE,WAAY,EAAG,EAAG,GACxF,EAAAmF,EAAOvL,OAAOqK,UAAYA,EACnCC,EAAiBO,WAAWC,QAAQ,OACpCP,EAAiBM,WAAWC,QAAQ,OAOpC,IAAIU,EAAQC,YACZZ,WAAWa,wBAAwBrB,EAAWU,EAAa,kCAAmCA,EAAa,MAC3GF,WAAWa,wBAAwBrB,EAAWU,EAAa,uCAAwCA,EAAa,UAChHY,aAAaH,GAEbhB,EAAKoB,SAAWf,WAAWgB,qCAAqCxB,EACjE,CAxBKR,IAAYA,EAAa,CAAC,GAC1BC,IAAWA,EAAY,CAAC,GAkD7B9N,KAAK8P,QAAU,WACVzB,GACHQ,WAAWkB,wBAAwB1B,GAEhCC,GACHO,WAAWmB,MAAM1B,GAEdC,GACHM,WAAWmB,MAAMzB,EAEnB,EAEAvO,KAAK6H,KAAO,SAASoI,GACpB,IAAIzB,EAAOxO,MAtCZ,SAA0BiQ,GACzB,IAAKpC,EAAWqC,iBACf,KAAM,iCAGP,GAAIlM,OAAO6K,YAAc7K,OAAO6K,WAAWS,mCAE1CW,QACM,CAEN,IAAI9L,EAAOL,SAASgF,qBAAqB,QAAQ,GAC7CqH,EAASrM,SAASW,cAAc,UACpC0L,EAAOhD,IAAMU,EAAWqC,iBAExBlM,OAAO6K,WAAa,CACnBuB,qBAAsB,WACrBH,IACA9L,EAAKgB,YAAYgL,EAClB,GAGDhM,EAAKI,YAAY4L,EAClB,CACD,CAgBCE,EAAiB,WAChB7B,EAAK8B,aAAe,EAEpB,IAAIC,EAAU,IAAIxI,eAElBwI,EAAQC,iBAAiB,SAAS,SAASpM,GAC1C+G,QAAQsF,IAAI,YAAarM,EAC1B,IAEAmM,EAAQC,iBAAiB,QAAQ,SAASpM,GACzC3C,KAAO8O,EAAQG,SACfjC,EAAWhN,MACXwO,GACD,IAGAM,EAAQvI,KAAK,MAAOF,GAAK,GACzByI,EAAQI,aAAe,cACvBJ,EAAQpI,MACT,GACD,EAEAnI,KAAK4Q,cAAgB,SAASC,GAO7B,IANA,IAAIC,EAAUD,EAAaE,eAAe,GACtCC,EAAUH,EAAaE,eAAe,GACtCE,EAAiBJ,EAAavQ,OAE9B4Q,EAAiB,EAEdD,EAAiB,GAAG,CAK1B,IAJA,IAAIE,EAAiBtK,KAAKuK,IAAIH,EAjGR,MAkGlBI,EAAuBxC,WAAWyC,kCAAkCjD,EAAWD,EAASmD,WAAYJ,EAAgB7C,EAAeC,GACnIiD,EAAe3C,WAAW4C,QAAQ1G,SAASuD,EAAgB,EAAGA,EAAgB,EAAI+C,GAClFK,EAAgB7C,WAAW4C,QAAQ1G,SAASwD,EAAiB,EAAGA,EAAiB,EAAI8C,GAChF7Q,EAAI,EAAGA,EAAI6Q,IAAwB7Q,EAC3CsQ,EAAQI,EAAiB1Q,GAAKgR,EAAahR,GAC3CwQ,EAAQE,EAAiB1Q,GAAKkR,EAAclR,GAI7C,GAFAyQ,GAAkBI,EAClBH,GAAkBG,EACdA,EAAuBF,EAC1B,KAEF,CACA,OAAOD,CACR,EAEAlR,KAAK2R,UAAW,EAEhB3R,KAAK4R,KAAO,SAASC,GACpBhD,WAAWiD,qCAAqCzD,EAAWwD,EAC5D,EAEA7R,KAAK+R,MAAQ,WACZ/R,KAAK4R,KAAK,EACX,CACD,CACA7E,QAAQC,OAAOgF,QAAU,SAASzE,GACjC,OAAO,IAAIR,QAAQkF,OAAOC,eAAe/D,EAAkBZ,EAC5D,CACA,CAlID,E,YCOA,IACQa,EACJrB,QAAQkF,OAAOC,eAAiB,SAAUC,EAAsBtE,GAC5D7N,KAAKmG,MAAQ,SAAU2B,EAAKgG,GACxB,IAAIsE,EAEJpS,KAAKgI,KAAO,WACR,IAAIwG,EAAO,CAAC,EAEZ,IAAKJ,EAAU,CACX,IAAIiE,EAAerO,OAAOqO,cAAgBrO,OAAOsO,mBACjDlE,EAAW,IAAIiE,EAAa,CACxBE,YAAa,WACbhB,WAAY,OAEpB,CAEA,IAAIiB,EAAc,KAElBhE,EAAKiE,aAAe,EACpBjE,EAAKkE,cAAgB,EACrBlE,EAAKmE,kBAAoB,EACzBnE,EAAKoE,iBAAmB,EACxBpE,EAAKqE,iBAAmB,EACxBrE,EAAKnG,WAAamG,EAAKiE,aAEvBL,EAAY,IAAID,EAAqBrK,EAAKsG,EAAUP,EAAYC,GAChE,IAEIgF,EAIAC,EANAC,GAAmB,EACnBC,GAA8B,EAG9BC,GAAuB,EACvBC,EAAe,EAoCnB,SAASvB,EAAKwB,GACNN,GAAYA,EAAWO,WAAW,GAClCD,EAAU,EACVhB,EAAUR,KAAKwB,GAEfhB,EAAUL,QAEdoB,EAAeC,EACfF,GAAuB,GACvBJ,EAAa1E,EAASkF,sBAAsBd,EAAa,EAAGJ,EAAU9B,eAC3DiD,eAAiB3C,EACvBpC,EAAKgF,SACNhF,EAAKgF,QAAS,EACdhF,EAAK1D,OAEb,CAEA,SAAS8F,EAAc6C,GACdP,IACDH,EAAqBU,EAAMC,aAC3BR,GAAuB,GAG3B,IAAIS,EAAkBvB,EAAUxB,cAAc6C,EAAM5C,cAEpD,GAAI8C,EAAkBF,EAAM5C,aAAavQ,OAAQ,CAE7C,IAAK,IAAIsT,EAAO,EAAGA,EAAOH,EAAM5C,aAAagD,iBAAkBD,IAE3D,IADA,IAAIE,EAAcL,EAAM5C,aAAaE,eAAe6C,GAC3CpT,EAAImT,EAAiBnT,EAAIiT,EAAM5C,aAAavQ,OAAQE,IACzDsT,EAAYtT,GAAK,EAIrBgO,EAAKuF,YAAcvF,EAAKoB,WAExBpB,EAAK3D,QACD2D,EAAKwF,SAASxF,EAAKwF,UACvBpC,EAAK,GAEb,CAEIpD,EAAKyF,cAAczF,EAAKyF,cAChC,CAwDA,OArIAzF,EAAKgF,QAAS,EAEdpB,EAAUvK,MAAK,WACXmL,GAAmB,EACnBxE,EAAKnG,WAAamG,EAAKqE,iBACvBrE,EAAKoB,SAAWwC,EAAUxC,SACtBwC,EAAUT,SACVnD,EAAKmD,SAAW,CACZ,OAAU,EACV,MAAS,SAAUnR,GACf,GAAU,IAANA,EAAS,KAAM,eACnB,OAAO,CACX,EACA,IAAO,SAAUA,GACb,GAAU,IAANA,EAAS,KAAM,eACnB,OAAO4R,EAAUxC,QACrB,GAGJpB,EAAKmD,SAAW,CACZ,OAAU,EACV,MAAS,SAAUnR,GACf,KAAM,cACV,EACA,IAAO,SAAUA,GACb,KAAM,cACV,GAGRoR,EAAK,GACDpD,EAAK0F,kBAAkB1F,EAAK0F,mBAC5BjB,GAA6BzE,EAAK1D,MAC1C,IA+CA0D,EAAK1D,KAAO,WACHkI,EAIDxE,EAAKgF,SACLV,EAAWqB,QAAQ/F,EAASgG,aAC5B5F,EAAKgF,QAAS,EAIS,cAAnBpF,EAASiG,OAAyBjG,EAASkG,SAC3C9F,EAAK+F,QAAQ/F,EAAK+F,SAElBrB,IACAH,EAAqB3E,EAAS2F,YAC9BZ,EAAeqB,oBAdnBvB,GAA8B,CAiBtC,EAEAzE,EAAK3D,MAAQ,WACJ2D,EAAKgF,SACNiB,kBAAoBrG,EAAS2F,YAC7BS,kBAAoBhG,EAAKuF,YAEzBjB,EAAWO,WAAW,GACtB7E,EAAKgF,QAAS,EACVhF,EAAKkG,SAASlG,EAAKkG,UAE/B,EAWAlG,EAAKmG,iBAAiB,eAAe,WACjC,OAAKzB,EACD1E,EAAKgF,OAAegB,kBACpBpG,EAAS2F,YAAchB,EAA2BI,EAC/CA,EAAe/E,EAAS2F,YAAchB,EAHXI,CAItC,IAEA3E,EAAKoG,iBAAiB,eAAe,SAAUxB,IACvChB,EAAUT,UAAwB,IAAZyB,IACtBxB,EAAKwB,EAEb,IAEO5E,CACX,EACAxO,KAAK6U,MAAQ,WACLzC,GAAaA,EAAUtC,SACvBsC,EAAUtC,SAElB,CACJ,CACJ,C,saCvLAgF,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBlU,IAAjBmU,EACH,OAAOA,EAAarV,QAGrB,IAAIF,EAASoV,EAAyBE,GAAY,CACjDrV,GAAIqV,EAEJpV,QAAS,CAAC,GAOX,OAHAsV,EAAoBF,GAAUtV,EAAQA,EAAOE,QAASmV,GAG/CrV,EAAOE,OACf,CCrBAmV,EAAoBI,EAAKzV,IACxB,IAAI0V,EAAS1V,GAAUA,EAAO2V,WAC7B,IAAO3V,EAAiB,QACxB,IAAM,EAEP,OADAqV,EAAoBO,EAAEF,EAAQ,CAAElO,EAAGkO,IAC5BA,CAAM,ECLdL,EAAoBO,EAAI,CAAC1V,EAAS2V,KACjC,IAAI,IAAI/M,KAAO+M,EACXR,EAAoBS,EAAED,EAAY/M,KAASuM,EAAoBS,EAAE5V,EAAS4I,IAC5EjC,OAAOkP,eAAe7V,EAAS4I,EAAK,CAAEkN,YAAY,EAAMC,IAAKJ,EAAW/M,IAE1E,ECNDuM,EAAoBxF,EAAI,WACvB,GAA0B,iBAAfqG,WAAyB,OAAOA,WAC3C,IACC,OAAO5V,MAAQ,IAAI6V,SAAS,cAAb,EAChB,CAAE,MAAOzR,GACR,GAAsB,iBAAXJ,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB+Q,EAAoBS,EAAI,CAAClT,EAAKwT,IAAUvP,OAAOwP,UAAUlJ,eAAemJ,KAAK1T,EAAKwT,G,MCAlF,IAAIG,EACAlB,EAAoBxF,EAAE2G,gBAAeD,EAAYlB,EAAoBxF,EAAE4G,SAAW,IACtF,IAAIrS,EAAWiR,EAAoBxF,EAAEzL,SACrC,IAAKmS,GAAanS,IACbA,EAASsS,gBACZH,EAAYnS,EAASsS,cAAcjJ,MAC/B8I,GAAW,CACf,IAAII,EAAUvS,EAASgF,qBAAqB,UAC5C,GAAGuN,EAAQ/V,OAEV,IADA,IAAIE,EAAI6V,EAAQ/V,OAAS,EAClBE,GAAK,IAAMyV,GAAWA,EAAYI,EAAQ7V,KAAK2M,GAExD,CAID,IAAK8I,EAAW,MAAM,IAAI3R,MAAM,yDAChC2R,EAAYA,EAAU1K,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFwJ,EAAoBuB,EAAIL,C,KClBxBlB,EAAoBwB,QAAKzV,E,mBCGlB,MAAM0V,EAEWC,YAApBC,YAAoBD,GAAA,KAAAA,YAAAA,CAEpB,CAEOE,sBAAsBC,EAAYC,EAAYC,EAAeC,EAAgBC,EAAkBC,GAClG,MAAMC,EAAQF,EAAQF,MAAQA,EACxBK,EAAQH,EAAQD,OAASA,EAC/B,IAGIK,EACAC,EACAC,EACAC,EAkBAC,EAxBAC,EAAK,EACLC,EAAK,EAOT,GAAIb,EAAKE,EAAS,GACdF,EAAM7W,KAAKyW,YAAYM,OAAS,GAChCH,EAAKE,EAAQ,GACbF,EAAM5W,KAAKyW,YAAYK,MAAQ,EAC/B,OAGAD,EAAK,GACLa,EAAKP,GAASN,EACdO,EAAaL,EAASF,EAAMhQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAKyW,YAAYM,OAAQ,GAC5EO,EAAS,IAETA,EAAST,EACTO,EAAYL,EAASlQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAKyW,YAAYM,OAAQ,IAKrEH,EAAK,GACLY,EAAgBC,EAAKP,GAASN,EAC9BS,EAAYP,EAAQF,EAAM/P,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAKyW,YAAYK,MAAO,GACxES,EAAS,IAETC,EAAgB,EAChBD,EAASX,EACTS,EAAWP,EAAQjQ,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAKyW,YAAYK,MAAO,IAGrE,MAAMc,EAAa,EAAI,IAAMX,EAC7B,IAAIY,EAAS,EAAW,EAAW7X,KAAKyW,YAAYK,MACpD,IAAK,IAAIgB,EAAI,EAAGA,EAAIV,EAAWU,IAAK,CAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAUU,IAAK,CAC/B,MAEMC,GAFa,EAALP,IACK,EAALC,GACuBV,EAAQF,MAIvCmB,GAASjB,EAAQA,QAAQgB,IAAiB,GAAK,KAAQJ,EACvDM,EAAe,EAAID,EAEnBE,EAAmBnY,KAAKyW,YAAYA,YAAYoB,GAChDO,EAAepB,EAAQA,QAAQgB,GAE/BK,GAAKF,GAAoB,EAAI,KAAQD,GAAgBE,GAAgB,EAAI,KAAQH,EACjF1I,GAAK4I,GAAoB,EAAI,KAAQD,GAAgBE,GAAgB,EAAI,KAAQH,EACjF9Q,GAAKgR,GAAoB,GAAK,KAAQD,GAAgBE,GAAgB,GAAK,KAAQH,EAEzFjY,KAAKyW,YAAYA,YAAYoB,GAAUQ,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,GAC1EsQ,GAAMP,EACNW,G,CAEJH,GAAMP,EACNM,EAAKD,EACLK,IAAWR,EAAWrX,KAAKyW,YAAYK,K,CAE/C,ECpEG,MAAMwB,EAgBUD,EAAsB9I,EAAsBpI,EAAsBD,EAd9EqR,aAA+B,IAAID,EAAM,EAAG,EAAG,EAAG,KAClDC,aAA+B,IAAID,EAAM,IAAK,IAAK,IAAK,KACxDC,WAA6B,IAAID,EAAM,IAAK,EAAG,EAAG,KAClDC,aAA+B,IAAID,EAAM,EAAG,IAAK,EAAG,KACpDC,YAA8B,IAAID,EAAM,EAAG,IAAK,EAAG,KACnDC,YAA8B,IAAID,EAAM,EAAG,EAAG,IAAK,KACnDC,iBAAmC,IAAID,EAAM,EAAG,EAAG,GAAI,KACvDC,cAAgC,IAAID,EAAM,IAAK,IAAK,EAAG,KACvDC,YAA8B,IAAID,EAAM,EAAG,IAAK,IAAK,KACrDC,eAAiC,IAAID,EAAM,IAAK,EAAG,IAAK,KACxDC,kBAAoC,IAAID,EAAM,IAAK,IAAK,IAAK,KAC7DC,iBAAmC,IAAID,EAAM,GAAI,GAAI,GAAI,KACzDC,cAAgC,IAAID,EAAM,IAAK,IAAK,KAE3D5B,YAAmB2B,EAAY,EAAU9I,EAAY,EAAUpI,EAAY,EAAUD,EAAY,KAA9E,KAAAmR,EAAAA,EAAsB,KAAA9I,EAAAA,EAAsB,KAAApI,EAAAA,EAAsB,KAAAD,EAAAA,CACrF,CAEOsR,iBACH,OAAOxY,KAAKqY,EAAIrY,KAAKuP,GAAK,EAAIvP,KAAKmH,GAAK,GAAKnH,KAAKkH,GAAK,EAC3D,CAEOuR,IAAIC,GACP,OAAO,IAAIJ,EAAMtY,KAAKqY,EAAIK,EAAML,EAAGrY,KAAKuP,EAAImJ,EAAMnJ,EAAGvP,KAAKmH,EAAIuR,EAAMvR,EAAG,IAC3E,CAEOI,IAAImR,GACP,OAAO,IAAIJ,EAAMtY,KAAKqY,EAAIK,EAAML,EAAGrY,KAAKuP,EAAImJ,EAAMnJ,EAAGvP,KAAKmH,EAAIuR,EAAMvR,EAAG,IAC3E,CAEOwR,IAAIC,GACP,OAAO,IAAIN,EAAMtY,KAAKqY,EAAIO,EAAK5Y,KAAKuP,EAAIqJ,EAAK5Y,KAAKmH,EAAIyR,EAAK,IAC/D,CAEOC,IAAID,GACP,OAAO,IAAIN,EAAMtY,KAAKqY,EAAIO,EAAK5Y,KAAKuP,EAAIqJ,EAAK5Y,KAAKmH,EAAIyR,EAAK,IAC/D,EC7CJ,IAAYE,GAAZ,SAAYA,GACR,qBACA,mBACA,0BACH,CAJD,CAAYA,IAAAA,EAAQ,KCAb,MAAMC,EAEFhB,EACAD,EACAkB,EACAC,EAEPvC,YAAYqB,EAAWD,EAAWkB,EAAWC,EAAY,GACrDjZ,KAAK+X,EAAIA,EACT/X,KAAK8X,EAAIA,EACT9X,KAAKgZ,EAAIA,EACThZ,KAAKiZ,EAAIA,CACb,CAEOR,IAAIS,GACP,OAAO,IAAIH,EAAS/Y,KAAK+X,EAAImB,EAAInB,EAAG/X,KAAK8X,EAAIoB,EAAIpB,EAAG9X,KAAKgZ,EAAIE,EAAIF,EAAGhZ,KAAKiZ,EAAIC,EAAID,EACrF,CAEO1R,IAAI2R,GACP,OAAO,IAAIH,EAAS/Y,KAAK+X,EAAImB,EAAInB,EAAG/X,KAAK8X,EAAIoB,EAAIpB,EAAG9X,KAAKgZ,EAAIE,EAAIF,EAAGhZ,KAAKiZ,EAAIC,EAAID,EACrF,CAEOE,MAAMD,GACT,OAAO,IAAIH,EAAS/Y,KAAK8X,EAAIoB,EAAIF,EAAIhZ,KAAKgZ,EAAIE,EAAIpB,EAC9C9X,KAAKgZ,EAAIE,EAAInB,EAAI/X,KAAK+X,EAAImB,EAAIF,EAC9BhZ,KAAK+X,EAAImB,EAAIpB,EAAI9X,KAAK8X,EAAIoB,EAAInB,EAAG,EACzC,CAEOqB,YACH,MAAMC,EAAe,EAAMrZ,KAAKM,SAChC,OAAON,KAAK6Y,IAAIQ,EACpB,CAEO/Y,SACH,OAAOuG,KAAKyS,KAAKtZ,KAAK+X,EAAI/X,KAAK+X,EAAI/X,KAAK8X,EAAI9X,KAAK8X,EAAI9X,KAAKgZ,EAAIhZ,KAAKgZ,EACvE,CAGOO,KAAKC,EAAgBC,GACxBzZ,KAAK+X,EAAIyB,EAAKzB,EAAI0B,EAAK1B,EACvB/X,KAAK8X,EAAI0B,EAAK1B,EAAI2B,EAAK3B,EACvB9X,KAAKgZ,EAAIQ,EAAKR,EAAIS,EAAKT,CAC3B,CAEOU,KAAKR,EAAeO,GACvBzZ,KAAK+X,EAAImB,EAAInB,EAAI0B,EAAK1B,EACtB/X,KAAK8X,EAAIoB,EAAIpB,EAAI2B,EAAK3B,EACtB9X,KAAKgZ,EAAIE,EAAIF,EAAIS,EAAKT,CAC1B,CAGOH,IAAIc,GACP,OAAO,IAAIZ,EAAS/Y,KAAK+X,EAAI4B,EAAM3Z,KAAK8X,EAAI6B,EAAM3Z,KAAKgZ,EAAIW,EAAM3Z,KAAKiZ,EAC1E,CAEOW,iBAAiBV,GACpB,OAAO,IAAIH,EAAS/Y,KAAK+X,EAAImB,EAAInB,EAAG/X,KAAK8X,EAAIoB,EAAIpB,EAAG9X,KAAKgZ,EAAIE,EAAIF,EAAGhZ,KAAKiZ,EAAIC,EAAID,EACrF,CAEOY,IAAIX,GACP,OAAOlZ,KAAK+X,EAAImB,EAAInB,EAAI/X,KAAK8X,EAAIoB,EAAIpB,EAAI9X,KAAKgZ,EAAIE,EAAIF,CAC1D,CAEOc,OAAON,EAAgBC,GAC1BzZ,KAAK+X,EAAIyB,EAAK1B,EAAI2B,EAAKT,EAAIQ,EAAKR,EAAIS,EAAK3B,EACzC9X,KAAK8X,EAAI0B,EAAKR,EAAIS,EAAK1B,EAAIyB,EAAKzB,EAAI0B,EAAKT,EACzChZ,KAAKgZ,EAAIQ,EAAKzB,EAAI0B,EAAK3B,EAAI0B,EAAK1B,EAAI2B,EAAK1B,CAC7C,CAEOgC,aACH,MAAMV,EAAe,EAAMrZ,KAAKM,SAChCN,KAAK+X,GAAKsB,EACVrZ,KAAK8X,GAAKuB,EACVrZ,KAAKgZ,GAAKK,CACd,ECtEG,MAAMW,EAECC,KACAC,QAEAC,UAAUC,EAAyB/W,EAAsB6W,GAAmB,GAClFla,KAAKka,QAAUA,EACf,MAAMG,EAA2B,IAAIC,MAKrC,IAAK,IAAI9Z,EAAI,EAAGA,EAAI6C,EAAM/C,OAAQE,GAAK,EAAG,CACtC,MAAM+Z,EAASH,EAAO/W,EAAM7C,EAAI,IAAIiY,IAAI2B,EAAO/W,EAAM7C,KAAK2Y,MAAMiB,EAAO/W,EAAM7C,EAAI,IAAIiY,IAAI2B,EAAO/W,EAAM7C,MACtG6Z,EAAQ5a,KAAKO,KAAKka,QAAUK,EAAOnB,YAAYP,KAAK,GAAK0B,EAAOnB,Y,CAIpE,MAAMoB,EAA+B,IAAIF,MAEzC,IAAK,IAAI9Z,EAAI,EAAGA,EAAI6C,EAAM/C,OAAQE,GAAK,EAEnCga,EAAM/a,KAAK,CACPgb,GAAIja,EAAI,EACRka,GAAIla,EAAI,EACRma,GAAIna,EAAI,EACRoa,GAAIvX,EAAM,EAAI7C,GACdqa,GAAIxX,EAAM,EAAI7C,GACdsa,GAAIzX,EAAM,EAAI7C,KAKtBR,KAAKia,KAAO,CACRG,SACAC,UACAG,QACAO,kBAAmBX,EAAOna,KAAI,IAAM,IAAI8Y,EAAS,EAAG,EAAG,EAAG,KAC1DiC,mBAAoBX,EAAQpa,KAAI,IAAM,IAAI8Y,EAAS,EAAG,EAAG,EAAG,KAEpE,CAEOkC,UACH,OAAOjb,KAAKia,IAChB,EChDG,MAAMiB,EAEFnD,EACAD,EACAkB,EAEPtC,YAAYqB,EAAY,EAAGD,EAAY,EAAGkB,EAAY,GAClDhZ,KAAK+X,EAAIA,EACT/X,KAAK8X,EAAIA,EACT9X,KAAKgZ,EAAIA,CACb,CAEOmC,KAAKC,GACR,OAAO,IAAIF,EAASlb,KAAK+X,EAAIqD,EAAOpb,KAAK8X,EAAIsD,EAAOpb,KAAKgZ,EAAIoC,EACjE,CAEO3C,IAAIS,GACP,OAAO,IAAIgC,EAASlb,KAAK+X,EAAImB,EAAInB,EAAG/X,KAAK8X,EAAIoB,EAAIpB,EAAG9X,KAAKgZ,EAAIE,EAAIF,EACrE,CAEOO,KAAKC,EAAgBC,GACxBzZ,KAAK+X,EAAIyB,EAAKzB,EAAI0B,EAAK1B,EACvB/X,KAAK8X,EAAI0B,EAAK1B,EAAI2B,EAAK3B,EACvB9X,KAAKgZ,EAAIQ,EAAKR,EAAIS,EAAKT,CAC3B,CAEOH,IAAIc,GACP,OAAO,IAAIuB,EAASlb,KAAK+X,EAAI4B,EAAM3Z,KAAK8X,EAAI6B,EAAM3Z,KAAKgZ,EAAIW,EAC/D,CAEOpS,IAAI2R,GACP,OAAO,IAAIgC,EAASlb,KAAK+X,EAAImB,EAAInB,EAAG/X,KAAK8X,EAAIoB,EAAIpB,EAAG9X,KAAKgZ,EAAIE,EAAIF,EACrE,CAEOU,KAAKR,EAAeO,GACvBzZ,KAAK+X,EAAImB,EAAInB,EAAI0B,EAAK1B,EACtB/X,KAAK8X,EAAIoB,EAAIpB,EAAI2B,EAAK3B,EACtB9X,KAAKgZ,EAAIE,EAAIF,EAAIS,EAAKT,CAC1B,CAEOG,MAAMD,GACT,OAAO,IAAIgC,EAASlb,KAAK8X,EAAIoB,EAAIF,EAAIhZ,KAAKgZ,EAAIE,EAAIpB,EAC9C9X,KAAKgZ,EAAIE,EAAInB,EAAI/X,KAAK+X,EAAImB,EAAIF,EAC9BhZ,KAAK+X,EAAImB,EAAIpB,EAAI9X,KAAK8X,EAAIoB,EAAInB,EACtC,CAEO+B,OAAON,EAAgBC,GAC1BzZ,KAAK+X,EAAIyB,EAAK1B,EAAI2B,EAAKT,EAAIQ,EAAKR,EAAIS,EAAK3B,EACzC9X,KAAK8X,EAAI0B,EAAKR,EAAIS,EAAK1B,EAAIyB,EAAKzB,EAAI0B,EAAKT,EACzChZ,KAAKgZ,EAAIQ,EAAKzB,EAAI0B,EAAK3B,EAAI0B,EAAK1B,EAAI2B,EAAK1B,CAC7C,CAEOzX,SACH,OAAOuG,KAAKyS,KAAKtZ,KAAK+X,EAAI/X,KAAK+X,EAAI/X,KAAK8X,EAAI9X,KAAK8X,EAAI9X,KAAKgZ,EAAIhZ,KAAKgZ,EACvE,CAEOI,YACH,MAAMC,EAAe,EAAMrZ,KAAKM,SAChC,OAAON,KAAK6Y,IAAIQ,EACpB,CAEOU,aACH,MAAMV,EAAe,EAAMrZ,KAAKM,SAChCN,KAAK+X,GAAKsB,EACVrZ,KAAK8X,GAAKuB,EACVrZ,KAAKgZ,GAAKK,CACd,CAEOQ,IAAIX,GACP,OAAOlZ,KAAK+X,EAAImB,EAAInB,EAAI/X,KAAK8X,EAAIoB,EAAIpB,EAAI9X,KAAKgZ,EAAIE,EAAIF,CAC1D,EClEG,MAAMqC,UAAcrB,EAEvB,YAAmBsB,GAAkB,GACjCC,QAEA,MAAMnB,EAA0B,GAG1BoB,EAAS,GAIfxb,KAAKka,QAAUoB,EAEf,IAAK,IAAI9a,EAAI,EAAGA,EAPF,GAOaA,IAAK,CAC5B,MAAMib,EAAQzb,KAAK0b,cAAkB,EAAJlb,EAAQqG,KAAK8U,GARpC,IASJC,EAAS5b,KAAK0b,cAAkB,EAAJlb,EAAQqG,KAAK8U,GATrC,GASkD,IACtDE,EAAK,IAAIX,EAAS,EAAK,EAAK,GAC5BY,EAAQF,EAAOnD,IAAIgD,GAAOtC,MAAM0C,GAEtC,IAAK,IAAIxD,EAAI,EAAGA,EAAImD,EAAQnD,IAAK,CAC7B,MAAM0D,EAAMF,EAAGhD,IAAIhS,KAAKmV,IAAQ,EAAJ3D,EAAQxR,KAAK8U,GAAKH,IAASjU,IAAIuU,EAAMjD,IAAIhS,KAAKoV,IAAQ,EAAJ5D,EAAQxR,KAAK8U,GAAKH,KAAUjU,IAAIkU,GAC9GrB,EAAO3a,KAAK,IAAIsZ,EAASgD,EAAIhE,EAAGgE,EAAIjE,EAAGiE,EAAI/C,EAAG,G,EAItD,MAAM3V,EAAuB,GAE7B,IAAK,IAAI6Y,EAAI,EAAGA,EArBF,GAqBaA,IACvB,IAAK,IAAI1b,EAAI,EAAGA,EAAIgb,EAAQhb,IACxB6C,EAAM5D,MAAO+b,EAASU,GAAM,EAAI1b,GAAKgb,GAAUpB,EAAO9Z,QACtD+C,EAAM5D,MAAO+b,EAASU,GAAM,EAAI1b,GAAKgb,GAAUpB,EAAO9Z,QACtD+C,EAAM5D,MAAO+b,EAASU,EAAKV,GAAU,EAAIhb,GAAKgb,GAAUpB,EAAO9Z,QAC/D+C,EAAM5D,MAAO+b,EAASU,EAAKV,GAAU,EAAIhb,GAAKgb,GAAUpB,EAAO9Z,QAC/D+C,EAAM5D,MAAO+b,EAASU,EAAKV,GAAU,EAAIhb,GAAKgb,GAAUpB,EAAO9Z,QAC/D+C,EAAM5D,MAAO+b,EAASU,GAAM,EAAI1b,GAAKgb,GAAUpB,EAAO9Z,QAI9DN,KAAKma,UAAUC,EAAQ/W,EAC3B,CAEOqY,cAAczD,GACjB,OAAO,IAAIiD,EAA2B,GAAlBrU,KAAKmV,IAAI/D,GAAa,EAAqB,GAAlBpR,KAAKoV,IAAIhE,GAC1D,EC/CG,MAAMkE,EAEUpE,EAAkBD,EAArCpB,YAAmBqB,EAAkBD,GAAlB,KAAAC,EAAAA,EAAkB,KAAAD,EAAAA,CAErC,CAEOsE,OACH,OAAO,IAAID,GAAUnc,KAAK8X,EAAG9X,KAAK+X,EACtC,CAEOU,IAAIS,GACP,OAAO,IAAIiD,EAASnc,KAAK+X,EAAImB,EAAInB,EAAG/X,KAAK8X,EAAIoB,EAAIpB,EACrD,CAEOe,IAAIc,GACP,OAAO,IAAIwC,EAASnc,KAAK+X,EAAI4B,EAAM3Z,KAAK8X,EAAI6B,EAChD,CAEOrZ,SACH,OAAOuG,KAAKyS,KAAKtZ,KAAK+X,EAAI/X,KAAK+X,EAAI/X,KAAK8X,EAAI9X,KAAK8X,EACrD,CAEOsB,YACH,MAAMC,EAAe,EAAMrZ,KAAKM,SAChC,OAAON,KAAK6Y,IAAIQ,EACpB,CAEOQ,IAAIX,GACP,OAAOlZ,KAAK+X,EAAImB,EAAInB,EAAI/X,KAAK8X,EAAIoB,EAAIpB,CACzC,ECXG,MAAMuE,EAEFC,IACAC,IACAC,IACAC,IAEAC,IACAC,IACAC,IACAC,IAEAC,IACAC,IACAC,IACAC,IAEAC,IACAC,IACAC,IACAC,IAEP9E,iCACI,MAAM+E,EAAmB,IAAIjB,EAsB7B,OApBAiB,EAAOhB,IAAM,EACbgB,EAAOf,IAAM,EACbe,EAAOd,IAAM,EACbc,EAAOb,IAAM,EAEba,EAAOZ,IAAM,EACbY,EAAOX,IAAM,EACbW,EAAOV,IAAM,EACbU,EAAOT,IAAM,EAEbS,EAAOR,IAAM,EACbQ,EAAOP,IAAM,EACbO,EAAON,IAAM,EACbM,EAAOL,IAAM,EAEbK,EAAOJ,IAAM,EACbI,EAAOH,IAAM,EACbG,EAAOF,IAAM,EACbE,EAAOD,IAAM,EAENC,CACX,CAGOC,oBAGHvd,KAAKsc,IAAM,EACXtc,KAAKuc,IAAM,EACXvc,KAAKwc,IAAM,EACXxc,KAAKyc,IAAM,EAEXzc,KAAK0c,IAAM,EACX1c,KAAK2c,IAAM,EACX3c,KAAK4c,IAAM,EACX5c,KAAK6c,IAAM,EAEX7c,KAAK8c,IAAM,EACX9c,KAAK+c,IAAM,EACX/c,KAAKgd,IAAM,EACXhd,KAAKid,IAAM,EAEXjd,KAAKkd,IAAM,EACXld,KAAKmd,IAAM,EACXnd,KAAKod,IAAM,EACXpd,KAAKqd,IAAM,CACf,CAEOG,YACH,MAAMA,EAAsB,IAAInB,EAsBhC,OApBAmB,EAAUlB,IAAMtc,KAAKsc,IACrBkB,EAAUjB,IAAMvc,KAAK0c,IACrBc,EAAUhB,IAAMxc,KAAK8c,IACrBU,EAAUf,IAAMzc,KAAKkd,IAErBM,EAAUd,IAAM1c,KAAKuc,IACrBiB,EAAUb,IAAM3c,KAAK2c,IACrBa,EAAUZ,IAAM5c,KAAK+c,IACrBS,EAAUX,IAAM7c,KAAKmd,IAErBK,EAAUV,IAAM9c,KAAKwc,IACrBgB,EAAUT,IAAM/c,KAAK4c,IACrBY,EAAUR,IAAMhd,KAAKgd,IACrBQ,EAAUP,IAAMjd,KAAKod,IAErBI,EAAUN,IAAMld,KAAKyc,IACrBe,EAAUL,IAAMnd,KAAK6c,IACrBW,EAAUJ,IAAMpd,KAAKid,IACrBO,EAAUH,IAAMrd,KAAKqd,IAEdG,CACX,CAEOC,sBAIH,OAAOzd,KAAKka,UAAUsD,WAC1B,CAEOtD,UAKH,MAAMwD,EAA+BrB,EAASsB,0BAC9CD,EAAmBjB,KAAOzc,KAAKyc,IAC/BiB,EAAmBb,KAAO7c,KAAK6c,IAC/Ba,EAAmBT,KAAOjd,KAAKid,IAE/B,MAAMW,EAAS,EAAM/W,KAAKyS,KAAKtZ,KAAKsc,IAAMtc,KAAKsc,IAAMtc,KAAKuc,IAAMvc,KAAKuc,IAAMvc,KAAKwc,IAAMxc,KAAKwc,KACrFqB,EAAS,EAAMhX,KAAKyS,KAAKtZ,KAAK0c,IAAM1c,KAAK0c,IAAM1c,KAAK2c,IAAM3c,KAAK2c,IAAM3c,KAAK4c,IAAM5c,KAAK4c,KACrFkB,EAAS,EAAMjX,KAAKyS,KAAKtZ,KAAK8c,IAAM9c,KAAK8c,IAAM9c,KAAK+c,IAAM/c,KAAK+c,IAAM/c,KAAKgd,IAAMhd,KAAKgd,KACrFe,EAA4B1B,EAASsB,0BAa3C,OAZAI,EAAgBzB,IAAMtc,KAAKsc,IAAMsB,EACjCG,EAAgBrB,IAAM1c,KAAKuc,IAAMqB,EACjCG,EAAgBjB,IAAM9c,KAAKwc,IAAMoB,EAEjCG,EAAgBxB,IAAMvc,KAAK0c,IAAMmB,EACjCE,EAAgBpB,IAAM3c,KAAK2c,IAAMkB,EACjCE,EAAgBhB,IAAM/c,KAAK4c,IAAMiB,EAEjCE,EAAgBvB,IAAMxc,KAAK8c,IAAMgB,EACjCC,EAAgBnB,IAAM5c,KAAK+c,IAAMe,EACjCC,EAAgBf,IAAMhd,KAAKgd,IAAMc,EAE1BC,EAAgBC,eAAeN,EAC1C,CAEOO,qBACH,MACMF,EAAkB1B,EAASsB,0BAajC,OAZAI,EAAgBzB,IAFF,EAEQtc,KAAKsc,IAC3ByB,EAAgBrB,IAHF,EAGQ1c,KAAKuc,IAC3BwB,EAAgBjB,IAJF,EAIQ9c,KAAKwc,IAE3BuB,EAAgBxB,IANF,EAMQvc,KAAK0c,IAC3BqB,EAAgBpB,IAPF,EAOQ3c,KAAK2c,IAC3BoB,EAAgBhB,IARF,EAQQ/c,KAAK4c,IAE3BmB,EAAgBvB,IAVF,EAUQxc,KAAK8c,IAC3BiB,EAAgBnB,IAXF,EAWQ5c,KAAK+c,IAC3BgB,EAAgBf,IAZF,EAYQhd,KAAKgd,IAEpBe,CACX,CAEOG,cAEH,MAAMH,EAAkB1B,EAASsB,0BAajC,OAZAI,EAAgBzB,IAAMtc,KAAKsc,IAC3ByB,EAAgBrB,IAAM1c,KAAK0c,IAC3BqB,EAAgBjB,IAAM9c,KAAK8c,IAE3BiB,EAAgBxB,IAAMvc,KAAKuc,IAC3BwB,EAAgBpB,IAAM3c,KAAK2c,IAC3BoB,EAAgBhB,IAAM/c,KAAK+c,IAE3BgB,EAAgBvB,IAAMxc,KAAKwc,IAC3BuB,EAAgBnB,IAAM5c,KAAK4c,IAC3BmB,EAAgBf,IAAMhd,KAAKgd,IAEpBe,CACX,CAEAxF,+BACI,MAAM4F,EAAuB,IAAIjD,EAAS,GAAI,IAAK,GAC7CkD,EAAwB,IAAIlD,EAAS,EAAG,EAAG,GAC3CmD,EAA0B,IAAInD,EAAS,EAAG,GAAI,GAE9C5F,GAAK6I,EAAWtE,IAAIuE,GACpBE,EAAQF,EAAYrG,EAAIsG,EAActG,EACxCqG,EAAYtG,EAAIuG,EAAcvG,EAC9BsG,EAAYpF,EAAIqF,EAAcrF,EAE5BuF,EAAyB,IAAIlC,EAsBnC,OApBAkC,EAAajC,IAAMgC,EAAQhJ,EAAI+I,EAActG,EAAIqG,EAAYrG,EAC7DwG,EAAahC,KAAQ8B,EAActG,EAAIqG,EAAYtG,EACnDyG,EAAa/B,KAAQ6B,EAActG,EAAIqG,EAAYpF,EACnDuF,EAAa9B,KAAQ4B,EAActG,EAAIzC,EAEvCiJ,EAAa7B,KAAQ2B,EAAcvG,EAAIsG,EAAYrG,EACnDwG,EAAa5B,IAAM2B,EAAQhJ,EAAI+I,EAAcvG,EAAIsG,EAAYtG,EAC7DyG,EAAa3B,KAAQyB,EAAcvG,EAAIsG,EAAYpF,EACnDuF,EAAa1B,KAAQwB,EAAcvG,EAAIxC,EAEvCiJ,EAAazB,KAAQuB,EAAcrF,EAAIoF,EAAYrG,EACnDwG,EAAaxB,KAAQsB,EAAcrF,EAAIoF,EAAYtG,EACnDyG,EAAavB,IAAMsB,EAAQhJ,EAAI+I,EAAcrF,EAAIoF,EAAYpF,EAC7DuF,EAAatB,KAAQoB,EAAcrF,EAAI1D,EAEvCiJ,EAAarB,KAAQkB,EAAYrG,EACjCwG,EAAapB,KAAQiB,EAAYtG,EACjCyG,EAAanB,KAAQgB,EAAYpF,EACjCuF,EAAalB,IAAMiB,EAEZC,CAEX,CAEAhG,kCAAkCiG,EAAYC,EAAYC,GACtD,MAAMpB,EAAmB,IAAIjB,EAsB7B,OApBAiB,EAAOhB,IAAM,EACbgB,EAAOf,IAAM,EACbe,EAAOd,IAAM,EACbc,EAAOb,IAAM+B,EAEblB,EAAOZ,IAAM,EACbY,EAAOX,IAAM,EACbW,EAAOV,IAAM,EACbU,EAAOT,IAAM4B,EAEbnB,EAAOR,IAAM,EACbQ,EAAOP,IAAM,EACbO,EAAON,IAAM,EACbM,EAAOL,IAAMyB,EAEbpB,EAAOJ,IAAM,EACbI,EAAOH,IAAM,EACbG,EAAOF,IAAM,EACbE,EAAOD,IAAM,EAENC,CACX,CAEOqB,qBAAqBH,EAAYC,EAAYC,GAChD1e,KAAKsc,IAAM,EACXtc,KAAKuc,IAAM,EACXvc,KAAKwc,IAAM,EACXxc,KAAKyc,IAAM+B,EAEXxe,KAAK0c,IAAM,EACX1c,KAAK2c,IAAM,EACX3c,KAAK4c,IAAM,EACX5c,KAAK6c,IAAM4B,EAEXze,KAAK8c,IAAM,EACX9c,KAAK+c,IAAM,EACX/c,KAAKgd,IAAM,EACXhd,KAAKid,IAAMyB,EAEX1e,KAAKkd,IAAM,EACXld,KAAKmd,IAAM,EACXnd,KAAKod,IAAM,EACXpd,KAAKqd,IAAM,CACf,CAEA9E,gCAAgCN,GAC5B,MAAMqF,EAAmB,IAAIjB,EAsB7B,OApBAiB,EAAOhB,IAAM,EACbgB,EAAOf,IAAM,EACbe,EAAOd,IAAM,EACbc,EAAOb,IAAM,EAEba,EAAOZ,IAAM,EACbY,EAAOX,IAAM9V,KAAKoV,IAAIhE,GACtBqF,EAAOV,KAAO/V,KAAKmV,IAAI/D,GACvBqF,EAAOT,IAAM,EAEbS,EAAOR,IAAM,EACbQ,EAAOP,IAAMlW,KAAKmV,IAAI/D,GACtBqF,EAAON,IAAMnW,KAAKoV,IAAIhE,GACtBqF,EAAOL,IAAM,EAEbK,EAAOJ,IAAM,EACbI,EAAOH,IAAM,EACbG,EAAOF,IAAM,EACbE,EAAOD,IAAM,EAENC,CACX,CAEOsB,mBAAmB3G,GACtBjY,KAAKsc,IAAM,EACXtc,KAAKuc,IAAM,EACXvc,KAAKwc,IAAM,EACXxc,KAAKyc,IAAM,EAEXzc,KAAK0c,IAAM,EACX1c,KAAK2c,IAAM9V,KAAKoV,IAAIhE,GACpBjY,KAAK4c,KAAO/V,KAAKmV,IAAI/D,GACrBjY,KAAK6c,IAAM,EAEX7c,KAAK8c,IAAM,EACX9c,KAAK+c,IAAMlW,KAAKmV,IAAI/D,GACpBjY,KAAKgd,IAAMnW,KAAKoV,IAAIhE,GACpBjY,KAAKid,IAAM,EAEXjd,KAAKkd,IAAM,EACXld,KAAKmd,IAAM,EACXnd,KAAKod,IAAM,EACXpd,KAAKqd,IAAM,CACf,CAEOwB,mBAAmB5G,GACtBjY,KAAKsc,IAAMzV,KAAKoV,IAAIhE,GACpBjY,KAAKuc,KAAO1V,KAAKmV,IAAI/D,GACrBjY,KAAKwc,IAAM,EACXxc,KAAKyc,IAAM,EAEXzc,KAAK0c,IAAM7V,KAAKmV,IAAI/D,GACpBjY,KAAK2c,IAAM9V,KAAKoV,IAAIhE,GACpBjY,KAAK4c,IAAM,EACX5c,KAAK6c,IAAM,EAEX7c,KAAK8c,IAAM,EACX9c,KAAK+c,IAAM,EACX/c,KAAKgd,IAAM,EACXhd,KAAKid,IAAM,EAEXjd,KAAKkd,IAAM,EACXld,KAAKmd,IAAM,EACXnd,KAAKod,IAAM,EACXpd,KAAKqd,IAAM,CACf,CAEOyB,eAAeC,EAAYC,EAAYC,GAC1Cjf,KAAKsc,IAAMyC,EACX/e,KAAKuc,IAAM,EACXvc,KAAKwc,IAAM,EACXxc,KAAKyc,IAAM,EAEXzc,KAAK0c,IAAM,EACX1c,KAAK2c,IAAMqC,EACXhf,KAAK4c,IAAM,EACX5c,KAAK6c,IAAM,EAEX7c,KAAK8c,IAAM,EACX9c,KAAK+c,IAAM,EACX/c,KAAKgd,IAAMiC,EACXjf,KAAKid,IAAM,EAEXjd,KAAKkd,IAAM,EACXld,KAAKmd,IAAM,EACXnd,KAAKod,IAAM,EACXpd,KAAKqd,IAAM,CACf,CAEO6B,mBAAmBjH,GACtBjY,KAAKsc,IAAMzV,KAAKoV,IAAIhE,GACpBjY,KAAKuc,IAAM,EACXvc,KAAKwc,IAAM3V,KAAKmV,IAAI/D,GACpBjY,KAAKyc,IAAM,EAEXzc,KAAK0c,IAAM,EACX1c,KAAK2c,IAAM,EACX3c,KAAK4c,IAAM,EACX5c,KAAK6c,IAAM,EAEX7c,KAAK8c,KAAOjW,KAAKmV,IAAI/D,GACrBjY,KAAK+c,IAAM,EACX/c,KAAKgd,IAAMnW,KAAKoV,IAAIhE,GACpBjY,KAAKid,IAAM,EAEXjd,KAAKkd,IAAM,EACXld,KAAKmd,IAAM,EACXnd,KAAKod,IAAM,EACXpd,KAAKqd,IAAM,CACf,CAGO8B,kBAAkBpH,EAAUD,EAAUkB,EAAWf,GACpD,MAAMxM,EAAI5E,KAAKoV,IAAc,EAAVpV,KAAK8U,GAAQ1D,EAAQ,KAClCmH,EAAIvY,KAAKmV,IAAc,EAAVnV,KAAK8U,GAAQ1D,EAAQ,KAClCoH,EAAS,IAAInE,EAASnD,EAAED,EAAEkB,GAChCqG,EAAOtF,aAEP/Z,KAAKsc,KAAO,EAAM7Q,GAAK4T,EAAOtH,EAAIsH,EAAOtH,EAAItM,EAC7CzL,KAAKuc,KAAO,EAAM9Q,GAAK4T,EAAOtH,EAAIsH,EAAOvH,EAAIsH,EAAIC,EAAOrG,EACxDhZ,KAAKwc,KAAO,EAAM/Q,GAAK4T,EAAOtH,EAAIsH,EAAOrG,EAAIoG,EAAIC,EAAOvH,EACxD9X,KAAKyc,IAAM,EAEXzc,KAAK0c,KAAO,EAAMjR,GAAK4T,EAAOtH,EAAIsH,EAAOvH,EAAIsH,EAAIC,EAAOrG,EACxDhZ,KAAK2c,KAAO,EAAMlR,GAAK4T,EAAOvH,EAAIuH,EAAOvH,EAAIrM,EAC7CzL,KAAK4c,KAAO,EAAMnR,GAAK4T,EAAOvH,EAAIuH,EAAOrG,EAAIoG,EAAIC,EAAOtH,EACxD/X,KAAK6c,IAAM,EAEX7c,KAAK8c,KAAO,EAAMrR,GAAK4T,EAAOtH,EAAIsH,EAAOrG,EAAIoG,EAAIC,EAAOvH,EACxD9X,KAAK+c,KAAO,EAAMtR,GAAK4T,EAAOvH,EAAIuH,EAAOrG,EAAIoG,EAAIC,EAAOtH,EACxD/X,KAAKgd,KAAO,EAAMvR,GAAK4T,EAAOrG,EAAIqG,EAAOrG,EAAIvN,EAC7CzL,KAAKid,IAAM,EAEXjd,KAAKkd,IAAM,EACXld,KAAKmd,IAAM,EACXnd,KAAKod,IAAM,EACXpd,KAAKqd,IAAM,CACf,CAEA9E,gCAAgCN,GAC5B,MAAMqF,EAAmB,IAAIjB,EAsB7B,OApBAiB,EAAOhB,IAAMzV,KAAKoV,IAAIhE,GACtBqF,EAAOf,IAAM,EACbe,EAAOd,IAAM3V,KAAKmV,IAAI/D,GACtBqF,EAAOb,IAAM,EAEba,EAAOZ,IAAM,EACbY,EAAOX,IAAM,EACbW,EAAOV,IAAM,EACbU,EAAOT,IAAM,EAEbS,EAAOR,KAAOjW,KAAKmV,IAAI/D,GACvBqF,EAAOP,IAAM,EACbO,EAAON,IAAMnW,KAAKoV,IAAIhE,GACtBqF,EAAOL,IAAM,EAEbK,EAAOJ,IAAM,EACbI,EAAOH,IAAM,EACbG,EAAOF,IAAM,EACbE,EAAOD,IAAM,EAENC,CACX,CAEA/E,gCAAgCN,GAC5B,MAAMqF,EAAmB,IAAIjB,EAsB7B,OApBAiB,EAAOhB,IAAMzV,KAAKoV,IAAIhE,GACtBqF,EAAOf,KAAO1V,KAAKmV,IAAI/D,GACvBqF,EAAOd,IAAM,EACbc,EAAOb,IAAM,EAEba,EAAOZ,IAAM7V,KAAKmV,IAAI/D,GACtBqF,EAAOX,IAAM9V,KAAKoV,IAAIhE,GACtBqF,EAAOV,IAAM,EACbU,EAAOT,IAAM,EAEbS,EAAOR,IAAM,EACbQ,EAAOP,IAAM,EACbO,EAAON,IAAM,EACbM,EAAOL,IAAM,EAEbK,EAAOJ,IAAM,EACbI,EAAOH,IAAM,EACbG,EAAOF,IAAM,EACbE,EAAOD,IAAM,EAENC,CACX,CAEA/E,4BAA4BwG,EAAYC,EAAaD,EAAIE,EAAaD,GAClE,MAAM1B,EAAmB,IAAIjB,EAsB7B,OApBAiB,EAAOhB,IAAMyC,EACbzB,EAAOf,IAAM,EACbe,EAAOd,IAAM,EACbc,EAAOb,IAAM,EAEba,EAAOZ,IAAM,EACbY,EAAOX,IAAMqC,EACb1B,EAAOV,IAAM,EACbU,EAAOT,IAAM,EAEbS,EAAOR,IAAM,EACbQ,EAAOP,IAAM,EACbO,EAAON,IAAMiC,EACb3B,EAAOL,IAAM,EAEbK,EAAOJ,IAAM,EACbI,EAAOH,IAAM,EACbG,EAAOF,IAAM,EACbE,EAAOD,IAAM,EAENC,CACX,CAEOU,eAAeV,GAClB,MAAMxb,EAAS,IAAIua,EAsBnB,OApBAva,EAAOwa,IAAMtc,KAAKsc,IAAMgB,EAAOhB,IAAMtc,KAAKuc,IAAMe,EAAOZ,IAAM1c,KAAKwc,IAAMc,EAAOR,IAAM9c,KAAKyc,IAAMa,EAAOJ,IACvGpb,EAAO4a,IAAM1c,KAAK0c,IAAMY,EAAOhB,IAAMtc,KAAK2c,IAAMW,EAAOZ,IAAM1c,KAAK4c,IAAMU,EAAOR,IAAM9c,KAAK6c,IAAMS,EAAOJ,IACvGpb,EAAOgb,IAAM9c,KAAK8c,IAAMQ,EAAOhB,IAAMtc,KAAK+c,IAAMO,EAAOZ,IAAM1c,KAAKgd,IAAMM,EAAOR,IAAM9c,KAAKid,IAAMK,EAAOJ,IACvGpb,EAAOob,IAAMld,KAAKkd,IAAMI,EAAOhB,IAAMtc,KAAKmd,IAAMG,EAAOZ,IAAM1c,KAAKod,IAAME,EAAOR,IAAM9c,KAAKqd,IAAMC,EAAOJ,IAEvGpb,EAAOya,IAAMvc,KAAKsc,IAAMgB,EAAOf,IAAMvc,KAAKuc,IAAMe,EAAOX,IAAM3c,KAAKwc,IAAMc,EAAOP,IAAM/c,KAAKyc,IAAMa,EAAOH,IACvGrb,EAAO6a,IAAM3c,KAAK0c,IAAMY,EAAOf,IAAMvc,KAAK2c,IAAMW,EAAOX,IAAM3c,KAAK4c,IAAMU,EAAOP,IAAM/c,KAAK6c,IAAMS,EAAOH,IACvGrb,EAAOib,IAAM/c,KAAK8c,IAAMQ,EAAOf,IAAMvc,KAAK+c,IAAMO,EAAOX,IAAM3c,KAAKgd,IAAMM,EAAOP,IAAM/c,KAAKid,IAAMK,EAAOH,IACvGrb,EAAOqb,IAAMnd,KAAKkd,IAAMI,EAAOf,IAAMvc,KAAKmd,IAAMG,EAAOX,IAAM3c,KAAKod,IAAME,EAAOP,IAAM/c,KAAKqd,IAAMC,EAAOH,IAEvGrb,EAAO0a,IAAMxc,KAAKsc,IAAMgB,EAAOd,IAAMxc,KAAKuc,IAAMe,EAAOV,IAAM5c,KAAKwc,IAAMc,EAAON,IAAMhd,KAAKyc,IAAMa,EAAOF,IACvGtb,EAAO8a,IAAM5c,KAAK0c,IAAMY,EAAOd,IAAMxc,KAAK2c,IAAMW,EAAOV,IAAM5c,KAAK4c,IAAMU,EAAON,IAAMhd,KAAK6c,IAAMS,EAAOF,IACvGtb,EAAOkb,IAAMhd,KAAK8c,IAAMQ,EAAOd,IAAMxc,KAAK+c,IAAMO,EAAOV,IAAM5c,KAAKgd,IAAMM,EAAON,IAAMhd,KAAKid,IAAMK,EAAOF,IACvGtb,EAAOsb,IAAMpd,KAAKkd,IAAMI,EAAOd,IAAMxc,KAAKmd,IAAMG,EAAOV,IAAM5c,KAAKod,IAAME,EAAON,IAAMhd,KAAKqd,IAAMC,EAAOF,IAEvGtb,EAAO2a,IAAMzc,KAAKsc,IAAMgB,EAAOb,IAAMzc,KAAKuc,IAAMe,EAAOT,IAAM7c,KAAKwc,IAAMc,EAAOL,IAAMjd,KAAKyc,IAAMa,EAAOD,IACvGvb,EAAO+a,IAAM7c,KAAK0c,IAAMY,EAAOb,IAAMzc,KAAK2c,IAAMW,EAAOT,IAAM7c,KAAK4c,IAAMU,EAAOL,IAAMjd,KAAK6c,IAAMS,EAAOD,IACvGvb,EAAOmb,IAAMjd,KAAK8c,IAAMQ,EAAOb,IAAMzc,KAAK+c,IAAMO,EAAOT,IAAM7c,KAAKgd,IAAMM,EAAOL,IAAMjd,KAAKid,IAAMK,EAAOD,IACvGvb,EAAOub,IAAMrd,KAAKkd,IAAMI,EAAOb,IAAMzc,KAAKmd,IAAMG,EAAOT,IAAM7c,KAAKod,IAAME,EAAOL,IAAMjd,KAAKqd,IAAMC,EAAOD,IAEhGvb,CACX,CAEOwd,UAAUhC,EAAkBiC,GAC/Bvf,KAAKsc,IAAMgB,EAAOhB,IAAMiD,EAAQjD,IAAMgB,EAAOf,IAAMgD,EAAQ7C,IAAMY,EAAOd,IAAM+C,EAAQzC,IAAMQ,EAAOb,IAAM8C,EAAQrC,IACjHld,KAAK0c,IAAMY,EAAOZ,IAAM6C,EAAQjD,IAAMgB,EAAOX,IAAM4C,EAAQ7C,IAAMY,EAAOV,IAAM2C,EAAQzC,IAAMQ,EAAOT,IAAM0C,EAAQrC,IACjHld,KAAK8c,IAAMQ,EAAOR,IAAMyC,EAAQjD,IAAMgB,EAAOP,IAAMwC,EAAQ7C,IAAMY,EAAON,IAAMuC,EAAQzC,IAAMQ,EAAOL,IAAMsC,EAAQrC,IACjHld,KAAKkd,IAAMI,EAAOJ,IAAMqC,EAAQjD,IAAMgB,EAAOH,IAAMoC,EAAQ7C,IAAMY,EAAOF,IAAMmC,EAAQzC,IAAMQ,EAAOD,IAAMkC,EAAQrC,IAEjHld,KAAKuc,IAAMe,EAAOhB,IAAMiD,EAAQhD,IAAMe,EAAOf,IAAMgD,EAAQ5C,IAAMW,EAAOd,IAAM+C,EAAQxC,IAAMO,EAAOb,IAAM8C,EAAQpC,IACjHnd,KAAK2c,IAAMW,EAAOZ,IAAM6C,EAAQhD,IAAMe,EAAOX,IAAM4C,EAAQ5C,IAAMW,EAAOV,IAAM2C,EAAQxC,IAAMO,EAAOT,IAAM0C,EAAQpC,IACjHnd,KAAK+c,IAAMO,EAAOR,IAAMyC,EAAQhD,IAAMe,EAAOP,IAAMwC,EAAQ5C,IAAMW,EAAON,IAAMuC,EAAQxC,IAAMO,EAAOL,IAAMsC,EAAQpC,IACjHnd,KAAKmd,IAAMG,EAAOJ,IAAMqC,EAAQhD,IAAMe,EAAOH,IAAMoC,EAAQ5C,IAAMW,EAAOF,IAAMmC,EAAQxC,IAAMO,EAAOD,IAAMkC,EAAQpC,IAEjHnd,KAAKwc,IAAMc,EAAOhB,IAAMiD,EAAQ/C,IAAMc,EAAOf,IAAMgD,EAAQ3C,IAAMU,EAAOd,IAAM+C,EAAQvC,IAAMM,EAAOb,IAAM8C,EAAQnC,IACjHpd,KAAK4c,IAAMU,EAAOZ,IAAM6C,EAAQ/C,IAAMc,EAAOX,IAAM4C,EAAQ3C,IAAMU,EAAOV,IAAM2C,EAAQvC,IAAMM,EAAOT,IAAM0C,EAAQnC,IACjHpd,KAAKgd,IAAMM,EAAOR,IAAMyC,EAAQ/C,IAAMc,EAAOP,IAAMwC,EAAQ3C,IAAMU,EAAON,IAAMuC,EAAQvC,IAAMM,EAAOL,IAAMsC,EAAQnC,IACjHpd,KAAKod,IAAME,EAAOJ,IAAMqC,EAAQ/C,IAAMc,EAAOH,IAAMoC,EAAQ3C,IAAMU,EAAOF,IAAMmC,EAAQvC,IAAMM,EAAOD,IAAMkC,EAAQnC,IAEjHpd,KAAKyc,IAAMa,EAAOhB,IAAMiD,EAAQ9C,IAAMa,EAAOf,IAAMgD,EAAQ1C,IAAMS,EAAOd,IAAM+C,EAAQtC,IAAMK,EAAOb,IAAM8C,EAAQlC,IACjHrd,KAAK6c,IAAMS,EAAOZ,IAAM6C,EAAQ9C,IAAMa,EAAOX,IAAM4C,EAAQ1C,IAAMS,EAAOV,IAAM2C,EAAQtC,IAAMK,EAAOT,IAAM0C,EAAQlC,IACjHrd,KAAKid,IAAMK,EAAOR,IAAMyC,EAAQ9C,IAAMa,EAAOP,IAAMwC,EAAQ1C,IAAMS,EAAON,IAAMuC,EAAQtC,IAAMK,EAAOL,IAAMsC,EAAQlC,IACjHrd,KAAKqd,IAAMC,EAAOJ,IAAMqC,EAAQ9C,IAAMa,EAAOH,IAAMoC,EAAQ1C,IAAMS,EAAOF,IAAMmC,EAAQtC,IAAMK,EAAOD,IAAMkC,EAAQlC,GACrH,CAEOmC,SAASH,GACZ,OAAO,IAAInE,EAASlb,KAAKsc,IAAM+C,EAAOtH,EAAI/X,KAAKuc,IAAM8C,EAAOvH,EAAI9X,KAAKwc,IAAM6C,EAAOrG,EAAIhZ,KAAKyc,IACvFzc,KAAK0c,IAAM2C,EAAOtH,EAAI/X,KAAK2c,IAAM0C,EAAOvH,EAAI9X,KAAK4c,IAAMyC,EAAOrG,EAAIhZ,KAAK6c,IACvE7c,KAAK8c,IAAMuC,EAAOtH,EAAI/X,KAAK+c,IAAMsC,EAAOvH,EAAI9X,KAAKgd,IAAMqC,EAAOrG,EAAIhZ,KAAKid,IAC/E,CAEOwC,YAAYJ,GACf,OAAO,IAAItG,EAAS/Y,KAAKsc,IAAM+C,EAAOtH,EAAI/X,KAAKuc,IAAM8C,EAAOvH,EAAI9X,KAAKwc,IAAM6C,EAAOrG,EAAIhZ,KAAKyc,IAAM4C,EAAOpG,EACpGjZ,KAAK0c,IAAM2C,EAAOtH,EAAI/X,KAAK2c,IAAM0C,EAAOvH,EAAI9X,KAAK4c,IAAMyC,EAAOrG,EAAIhZ,KAAK6c,IAAMwC,EAAOpG,EACpFjZ,KAAK8c,IAAMuC,EAAOtH,EAAI/X,KAAK+c,IAAMsC,EAAOvH,EAAI9X,KAAKgd,IAAMqC,EAAOrG,EAAIhZ,KAAKid,IAAMoC,EAAOpG,EACpFjZ,KAAKkd,IAAMmC,EAAOtH,EAAI/X,KAAKmd,IAAMkC,EAAOvH,EAAI9X,KAAKod,IAAMiC,EAAOrG,EAAIhZ,KAAKqd,IAAMgC,EAAOpG,EAC5F,CAEOyG,eAAeL,EAAkBvd,GACpCA,EAAOiW,EAAI/X,KAAKsc,IAAM+C,EAAOtH,EAAI/X,KAAKuc,IAAM8C,EAAOvH,EAAI9X,KAAKwc,IAAM6C,EAAOrG,EAAIhZ,KAAKyc,IAAM4C,EAAOpG,EAC/FnX,EAAOgW,EAAI9X,KAAK0c,IAAM2C,EAAOtH,EAAI/X,KAAK2c,IAAM0C,EAAOvH,EAAI9X,KAAK4c,IAAMyC,EAAOrG,EAAIhZ,KAAK6c,IAAMwC,EAAOpG,EAC/FnX,EAAOkX,EAAIhZ,KAAK8c,IAAMuC,EAAOtH,EAAI/X,KAAK+c,IAAMsC,EAAOvH,EAAI9X,KAAKgd,IAAMqC,EAAOrG,EAAIhZ,KAAKid,IAAMoC,EAAOpG,CACnG,CAEO0G,gBAAgBN,EAAkBvd,GACrCA,EAAOiW,EAAI/X,KAAKsc,IAAM+C,EAAOtH,EAAI/X,KAAKuc,IAAM8C,EAAOvH,EAAI9X,KAAKwc,IAAM6C,EAAOrG,EAAIhZ,KAAKyc,IAAM4C,EAAOpG,EAC/FnX,EAAOgW,EAAI9X,KAAK0c,IAAM2C,EAAOtH,EAAI/X,KAAK2c,IAAM0C,EAAOvH,EAAI9X,KAAK4c,IAAMyC,EAAOrG,EAAIhZ,KAAK6c,IAAMwC,EAAOpG,EAC/FnX,EAAOkX,EAAIhZ,KAAK8c,IAAMuC,EAAOtH,EAAI/X,KAAK+c,IAAMsC,EAAOvH,EAAI9X,KAAKgd,IAAMqC,EAAOrG,EAAIhZ,KAAKid,IAAMoC,EAAOpG,EAC/FnX,EAAOmX,EAAIjZ,KAAKkd,IAAMmC,EAAOtH,EAAI/X,KAAKmd,IAAMkC,EAAOvH,EAAI9X,KAAKod,IAAMiC,EAAOrG,EAAIhZ,KAAKqd,IAAMgC,EAAOpG,EAC/FnX,EAAOiW,GAAKjW,EAAOmX,EACnBnX,EAAOgW,GAAKhW,EAAOmX,EACnBnX,EAAOkX,GAAKlX,EAAOmX,CACvB,CAEO2G,YAAYP,EAAkBvd,GACjCA,EAAOiW,EAAI/X,KAAKsc,IAAM+C,EAAOtH,EAAI/X,KAAKuc,IAAM8C,EAAOvH,EAAI9X,KAAKwc,IAAM6C,EAAOrG,EAAIhZ,KAAKyc,IAClF3a,EAAOgW,EAAI9X,KAAK0c,IAAM2C,EAAOtH,EAAI/X,KAAK2c,IAAM0C,EAAOvH,EAAI9X,KAAK4c,IAAMyC,EAAOrG,EAAIhZ,KAAK6c,IAClF/a,EAAOkX,EAAIhZ,KAAK8c,IAAMuC,EAAOtH,EAAI/X,KAAK+c,IAAMsC,EAAOvH,EAAI9X,KAAKgd,IAAMqC,EAAOrG,EAAIhZ,KAAKid,GACtF,EC7jBG,MAAM4C,EAEFvD,IACAC,IACAC,IAEAE,IACAC,IACAC,IAEAE,IACAC,IACAC,IAEPzE,gCAAgCuH,GAC5B,MAAMxC,EAAS,IAAIuC,EAEb5D,EAAMpV,KAAKoV,IAAI6D,GACf9D,EAAMnV,KAAKmV,IAAI8D,GAcrB,OAZAxC,EAAOhB,IAAM,EACbgB,EAAOf,IAAM,EACbe,EAAOd,IAAM,EAEbc,EAAOZ,IAAM,EACbY,EAAOX,IAAMV,EACbqB,EAAOV,KAAOZ,EAEdsB,EAAOR,IAAM,EACbQ,EAAOP,IAAMf,EACbsB,EAAON,IAAMf,EAENqB,CACX,CAEA/E,gCAAgCuH,GAC5B,MAAMxC,EAAS,IAAIuC,EAcnB,OAZAvC,EAAOhB,IAAMzV,KAAKoV,IAAI6D,GACtBxC,EAAOf,IAAM,EACbe,EAAOd,IAAM3V,KAAKmV,IAAI8D,GAEtBxC,EAAOZ,IAAM,EACbY,EAAOX,IAAM,EACbW,EAAOV,IAAM,EAEbU,EAAOR,KAAOjW,KAAKmV,IAAI8D,GACvBxC,EAAOP,IAAM,EACbO,EAAON,IAAMnW,KAAKoV,IAAI6D,GAEfxC,CACX,CAEA/E,gCAAgCuH,GAC5B,MAAMxC,EAAS,IAAIuC,EAcnB,OAZAvC,EAAOhB,IAAMzV,KAAKoV,IAAI6D,GACtBxC,EAAOf,KAAO1V,KAAKmV,IAAI8D,GACvBxC,EAAOd,IAAM,EAEbc,EAAOZ,IAAM7V,KAAKmV,IAAI8D,GACtBxC,EAAOX,IAAM9V,KAAKoV,IAAI6D,GACtBxC,EAAOV,IAAM,EAEbU,EAAOR,IAAM,EACbQ,EAAOP,IAAM,EACbO,EAAON,IAAM,EAENM,CACX,CAEA/E,4BAA4BwH,EAAgBC,EAAgBC,GACxD,MAAM3C,EAAS,IAAIuC,EAcnB,OAZAvC,EAAOhB,IAAMyD,EACbzC,EAAOf,IAAM,EACbe,EAAOd,IAAM,EAEbc,EAAOZ,IAAM,EACbY,EAAOX,IAAMqD,EACb1C,EAAOV,IAAM,EAEbU,EAAOR,IAAM,EACbQ,EAAOP,IAAM,EACbO,EAAON,IAAMiD,EAEN3C,CACX,CAEOU,eAAeV,GAClB,MAAMxb,EAAS,IAAI+d,EAcnB,OAZA/d,EAAOwa,IAAMtc,KAAKsc,IAAMgB,EAAOhB,IAAMtc,KAAKuc,IAAMe,EAAOZ,IAAM1c,KAAKwc,IAAMc,EAAOR,IAC/Ehb,EAAO4a,IAAM1c,KAAK0c,IAAMY,EAAOhB,IAAMtc,KAAK2c,IAAMW,EAAOZ,IAAM1c,KAAK4c,IAAMU,EAAOR,IAC/Ehb,EAAOgb,IAAM9c,KAAK8c,IAAMQ,EAAOhB,IAAMtc,KAAK+c,IAAMO,EAAOZ,IAAM1c,KAAKgd,IAAMM,EAAOR,IAE/Ehb,EAAOya,IAAMvc,KAAKsc,IAAMgB,EAAOf,IAAMvc,KAAKuc,IAAMe,EAAOX,IAAM3c,KAAKwc,IAAMc,EAAOP,IAC/Ejb,EAAO6a,IAAM3c,KAAK0c,IAAMY,EAAOf,IAAMvc,KAAK2c,IAAMW,EAAOX,IAAM3c,KAAK4c,IAAMU,EAAOP,IAC/Ejb,EAAOib,IAAM/c,KAAK8c,IAAMQ,EAAOf,IAAMvc,KAAK+c,IAAMO,EAAOX,IAAM3c,KAAKgd,IAAMM,EAAOP,IAE/Ejb,EAAO0a,IAAMxc,KAAKsc,IAAMgB,EAAOd,IAAMxc,KAAKuc,IAAMe,EAAOV,IAAM5c,KAAKwc,IAAMc,EAAON,IAC/Elb,EAAO8a,IAAM5c,KAAK0c,IAAMY,EAAOd,IAAMxc,KAAK2c,IAAMW,EAAOV,IAAM5c,KAAK4c,IAAMU,EAAON,IAC/Elb,EAAOkb,IAAMhd,KAAK8c,IAAMQ,EAAOd,IAAMxc,KAAK+c,IAAMO,EAAOV,IAAM5c,KAAKgd,IAAMM,EAAON,IAExElb,CAEX,CAEO0d,SAASH,GACZ,OAAO,IAAInE,EAASlb,KAAKsc,IAAM+C,EAAOtH,EAAI/X,KAAKuc,IAAM8C,EAAOvH,EAAI9X,KAAKwc,IAAM6C,EAAOrG,EAC9EhZ,KAAK0c,IAAM2C,EAAOtH,EAAI/X,KAAK2c,IAAM0C,EAAOvH,EAAI9X,KAAK4c,IAAMyC,EAAOrG,EAC9DhZ,KAAK8c,IAAMuC,EAAOtH,EAAI/X,KAAK+c,IAAMsC,EAAOvH,EAAI9X,KAAKgd,IAAMqC,EAAOrG,EACtE,EClHG,MAAMkH,EAEF3H,mBAAmB4H,EAAeC,EAAaC,GAClD,OAAIA,GAAWF,EACJ,EAEPE,GAAWD,EACJ,GAEHC,EAAUF,IAAUC,EAAMD,EACtC,CAEO5H,yBAAyB+H,EAAYC,EAAYC,GACpD,GAAIA,GAAMF,EAAM,OAAO,EACvB,GAAIE,GAAMD,EAAM,OAAO,EACvB,MAAME,GAAOD,EAAKF,IAAOC,EAAKD,GAC9B,OAAQ,EAAIzZ,KAAKoV,IAAIwE,EAAM5Z,KAAK8U,KAAO,CAC3C,ECjBW,MAAM+E,EAETC,KAER,cACI3gB,KAAK2gB,KAAO,CAChB,CAEOC,WAEH,OADA5gB,KAAK2gB,MAAoB,KAAZ3gB,KAAK2gB,KAAc,OAAS,OAClC3gB,KAAK2gB,KAAO,MACvB,CAEOE,QAAQF,GACX3gB,KAAK2gB,KAAOA,CAChB,ECZG,MAAeG,GCCf,MAAeC,UAA4CD,EAEtDE,KAAe,KAMhBC,gBAAgBxK,EAA0ByK,EAAYC,EAAYC,GAEjEF,EAAGG,WAAWvJ,EAAIsJ,EAAGC,WAAWvJ,IAChC9X,KAAKghB,KAAOE,EACZA,EAAKE,EACLA,EAAKphB,KAAKghB,MAGVE,EAAGG,WAAWvJ,EAAIqJ,EAAGE,WAAWvJ,IAChC9X,KAAKghB,KAAOE,EACZA,EAAKC,EACLA,EAAKnhB,KAAKghB,MAGVG,EAAGE,WAAWvJ,EAAIsJ,EAAGC,WAAWvJ,IAChC9X,KAAKghB,KAAOG,EACZA,EAAKC,EACLA,EAAKphB,KAAKghB,MAGVE,EAAGG,WAAWvJ,IAAMsJ,EAAGC,WAAWvJ,KAGfsJ,EAAGC,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,IAAMoJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,IACpFsJ,EAAGC,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,GAAKoJ,EAAGG,WAAWtJ,EAChDoJ,EAAGE,WAAWtJ,EAClB/X,KAAKshB,sBAAsB7K,EAAayK,EAAIC,EAAIC,GAEhDphB,KAAKuhB,qBAAqB9K,EAAYyK,EAAGC,EAAGC,GAGxD,ECvCG,MAAMI,UAAsCT,EAY3BtK,YAVZgL,OACAC,OACAC,QACAC,QACAC,MACAC,MACAC,UACAC,WACAC,UAERvL,YAAoBD,GAChB8E,QADgB,KAAA9E,YAAAA,CAEpB,CAEU6K,sBAAsB7K,EAA0BmE,EAAYC,EAAYC,GAC9E,MAAMpC,EAAgBkC,EAAGlC,MAAMF,iBAE/B,IAAI0J,EAAgBrH,EAAGwG,WAAWvJ,EAAI8C,EAAGyG,WAAWvJ,EACpD,MAAMqK,EAAiBrH,EAAGuG,WAAWvJ,EAAI8C,EAAGyG,WAAWvJ,EAEvD9X,KAAKyhB,QAAU5G,EAAGwG,WAAWtJ,EAAI6C,EAAGyG,WAAWtJ,GAAKmK,EACpDliB,KAAK0hB,QAAU5G,EAAGuG,WAAWtJ,EAAI6C,EAAGyG,WAAWtJ,GAAKoK,EAEpDniB,KAAK2hB,SAAW,EAAI9G,EAAGwG,WAAWrI,EAAI,EAAI4B,EAAGyG,WAAWrI,GAAKkJ,EAC7DliB,KAAK4hB,SAAW,EAAI9G,EAAGuG,WAAWrI,EAAI,EAAI4B,EAAGyG,WAAWrI,GAAKmJ,EAE7DniB,KAAK6hB,MAAQ,EAAMjH,EAAGyG,WAAWrI,EACjChZ,KAAK8hB,MAAQ,EAAMlH,EAAGyG,WAAWrI,EAEjChZ,KAAK+hB,UAAYnH,EAAGyG,WAAWtJ,EAC/B/X,KAAKgiB,WAAapH,EAAGyG,WAAWtJ,EAChC/X,KAAKiiB,UAAYrH,EAAGyG,WAAWvJ,EAE/B9X,KAAKoiB,SAAS3L,EAAayL,EAAexJ,GAE1CwJ,EAAgBpH,EAAGuG,WAAWvJ,EAAI+C,EAAGwG,WAAWvJ,EAChD9X,KAAKyhB,QAAU3G,EAAGuG,WAAWtJ,EAAI8C,EAAGwG,WAAWtJ,GAAKmK,EACpDliB,KAAK2hB,SAAW,EAAI7G,EAAGuG,WAAWrI,EAAI,EAAI6B,EAAGwG,WAAWrI,GAAKkJ,EAE7DliB,KAAK+hB,UAAYlH,EAAGwG,WAAWtJ,EAC/B/X,KAAKiiB,UAAYpH,EAAGwG,WAAWvJ,EAE/B9X,KAAKoiB,SAAS3L,EAAayL,EAAexJ,EAC9C,CAEU6I,qBAAqB9K,EAA0BmE,EAAYC,EAAYC,GAC7E,MAAMpC,EAAgBkC,EAAGlC,MAAMF,iBAE/B,IAAI2J,EAAiBtH,EAAGwG,WAAWvJ,EAAI8C,EAAGyG,WAAWvJ,EACrD,MAAMoK,EAAgBpH,EAAGuG,WAAWvJ,EAAI8C,EAAGyG,WAAWvJ,EAEtD9X,KAAK0hB,QAAU7G,EAAGwG,WAAWtJ,EAAI6C,EAAGyG,WAAWtJ,GAAKoK,EACpDniB,KAAKyhB,QAAU3G,EAAGuG,WAAWtJ,EAAI6C,EAAGyG,WAAWtJ,GAAKmK,EAEpDliB,KAAK4hB,SAAW,EAAI/G,EAAGwG,WAAWrI,EAAI,EAAI4B,EAAGyG,WAAWrI,GAAKmJ,EAC7DniB,KAAK2hB,SAAW,EAAI7G,EAAGuG,WAAWrI,EAAI,EAAI4B,EAAGyG,WAAWrI,GAAKkJ,EAE7DliB,KAAK6hB,MAAQ,EAAMjH,EAAGyG,WAAWrI,EACjChZ,KAAK8hB,MAAQ,EAAMlH,EAAGyG,WAAWrI,EAEjChZ,KAAK+hB,UAAYnH,EAAGyG,WAAWtJ,EAC/B/X,KAAKgiB,WAAapH,EAAGyG,WAAWtJ,EAChC/X,KAAKiiB,UAAYrH,EAAGyG,WAAWvJ,EAE/B9X,KAAKoiB,SAAS3L,EAAa0L,EAAgBzJ,GAE3CyJ,EAAiBrH,EAAGuG,WAAWvJ,EAAI+C,EAAGwG,WAAWvJ,EACjD9X,KAAK0hB,QAAU5G,EAAGuG,WAAWtJ,EAAI8C,EAAGwG,WAAWtJ,GAAKoK,EACpDniB,KAAK4hB,SAAW,EAAI9G,EAAGuG,WAAWrI,EAAI,EAAI6B,EAAGwG,WAAWrI,GAAKmJ,EAE7DniB,KAAK8hB,MAAQ,EAAMjH,EAAGwG,WAAWrI,EACjChZ,KAAKgiB,WAAanH,EAAGwG,WAAWtJ,EAChC/X,KAAKiiB,UAAYpH,EAAGwG,WAAWvJ,EAE/B9X,KAAKoiB,SAAS3L,EAAa0L,EAAgBzJ,EAC/C,CAEA0J,SAAS3L,EAA0B4L,EAAkB3J,GACjD,IAAK,IAAIlY,EAAI,EAAGA,EAAI6hB,EAAU7hB,IAAK,CAC/B,MAAMF,EAAUN,KAAe,WAAKA,KAAc,UAC5CsiB,EAAYzb,KAAK0b,MAAMviB,KAAK8hB,MAAQ9hB,KAAK6hB,OAASvhB,EACxD,IAAIkiB,EAASxiB,KAAK6hB,MAClB,IAAK,IAAI3F,EAAI,EAAGA,EAAI5b,EAAQ4b,IAAK,CAC7B,MAAMuG,EAAmB5b,KAAK0b,MAAMviB,KAAKiiB,WAAaxL,EAAYK,MAAQjQ,KAAK0b,MAAMviB,KAAK+hB,UAAY7F,GAClGsG,EAAS/L,EAAYiM,QAAQD,KAC7BhM,EAAYiM,QAAQD,GAAoBD,EACxC/L,EAAYA,YAAYgM,GAAoB/J,GAEhD8J,GAAUF,C,CAEdtiB,KAAK+hB,WAAa/hB,KAAKyhB,OACvBzhB,KAAKgiB,YAAchiB,KAAK0hB,OACxB1hB,KAAKiiB,YACLjiB,KAAK6hB,OAAS7hB,KAAK2hB,QACnB3hB,KAAK8hB,OAAS9hB,KAAK4hB,O,CAE3B,EC9FG,MAAMe,EAEWlM,YAApBC,YAAoBD,GAAA,KAAAA,YAAAA,CAA4B,CAEzCmM,YAAYzC,EAAiBC,EAAe1H,GAC/C,MAAMmK,EAAoBzC,EAAIrI,EAAIoI,EAAMpI,EAClC+K,EAAoB1C,EAAItI,EAAIqI,EAAMrI,EAExC,IAAIiL,EACAC,EACA1iB,EAEAuG,KAAKoc,IAAIJ,GAAahc,KAAKoc,IAAIH,IAC/BC,EAAKlc,KAAKqc,KAAKL,GACfG,EAAKF,EAAYjc,KAAKoc,IAAIJ,GAC1BviB,EAASuG,KAAKoc,IAAIJ,KAElBE,EAAKF,EAAYhc,KAAKoc,IAAIH,GAC1BE,EAAKnc,KAAKqc,KAAKJ,GACfxiB,EAASuG,KAAKoc,IAAIH,IAGtB,IAAIf,EAAoB5B,EAAMpI,EAC1BkK,EAAoB9B,EAAMrI,EAG1B0K,EAAS,EAAKrC,EAAO,EACzB,MAAMgD,GAAU,EAAI/C,EAAIpH,EAAI,EAAImH,EAAMnH,GAAK1Y,EAE3C,IAAK,IAAIE,EAAI,EAAGA,GAAKF,EAAQE,IACrBgiB,EAASxiB,KAAKyW,YAAYiM,QAAQ7b,KAAK0b,MAAMR,GAAalb,KAAK0b,MAAMN,GAAajiB,KAAKyW,YAAYK,SACnG9W,KAAKyW,YAAYiM,QAAQ7b,KAAK0b,MAAMR,GAAalb,KAAK0b,MAAMN,GAAajiB,KAAKyW,YAAYK,OAAS0L,EACnGxiB,KAAKyW,YAAY2M,UAAUvc,KAAK0b,MAAMR,GAAYlb,KAAK0b,MAAMN,GAAYvJ,IAE7EqJ,GAAagB,EACbd,GAAae,EACbR,GAAUW,CAElB,EC3CG,MAAME,EAEW5M,YAApBC,YAAoBD,GAAA,KAAAA,YAAAA,CAA4B,CAEzC6M,eAAenD,EAAiBC,EAAe1H,GAClD,MAAMmK,EAAoBzC,EAAIrI,EAAIoI,EAAMpI,EAClC+K,EAAoB1C,EAAItI,EAAIqI,EAAMrI,EAExC,IAAIiL,EACAC,EACA1iB,EAEAuG,KAAKoc,IAAIJ,GAAahc,KAAKoc,IAAIH,IAC/BC,EAAKlc,KAAKqc,KAAKL,GACfG,EAAKF,EAAYjc,KAAKoc,IAAIJ,GAC1BviB,EAASuG,KAAKoc,IAAIJ,KAElBE,EAAKF,EAAYhc,KAAKoc,IAAIH,GAC1BE,EAAKnc,KAAKqc,KAAKJ,GACfxiB,EAASuG,KAAKoc,IAAIH,IAGtB,IAAIf,EAAoB5B,EAAMpI,EAC1BkK,EAAoB9B,EAAMrI,EAE9B,IAAK,IAAItX,EAAI,EAAGA,GAAKF,EAAQE,IAEzBR,KAAKyW,YAAY2M,UAAUvc,KAAK0b,MAAMR,GAAYlb,KAAK0b,MAAMN,GAAYvJ,GAEzEqJ,GAAagB,EACbd,GAAae,CAGrB,EChCG,MAAMO,UAAmCxC,EAIxBtK,YAApBC,YAAoBD,GAChB8E,QADgB,KAAA9E,YAAAA,CAEpB,CAEU6K,sBAAsB7K,EAA0BmE,EAAYC,EAAYC,GAG9E,IAAIoH,EAAgBrH,EAAGwG,WAAWvJ,EAAI8C,EAAGyG,WAAWvJ,EAChD2J,GAAU5G,EAAGwG,WAAWtJ,EAAI6C,EAAGyG,WAAWtJ,GAAKmK,EAC/CsB,GAAY3I,EAAG4I,kBAAkBC,EAAI7I,EAAGwG,WAAWrI,EAAI4B,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,GAAKkJ,EACnGyB,GAAY9I,EAAG4I,kBAAkBG,EAAI/I,EAAGwG,WAAWrI,EAAI4B,EAAG6I,kBAAkBG,EAAIhJ,EAAGyG,WAAWrI,GAAKkJ,EACnGP,GAAW,EAAI9G,EAAGwG,WAAWrI,EAAI,EAAI4B,EAAGyG,WAAWrI,GAAKkJ,EACxDL,EAAQ,EAAMjH,EAAGyG,WAAWrI,EAC5B6K,EAAQjJ,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,EAC/C8K,EAAQlJ,EAAG6I,kBAAkBG,EAAIhJ,EAAGyG,WAAWrI,EAC/C+I,EAAYnH,EAAGyG,WAAWtJ,EAG9B,MAAMoK,EAAiBrH,EAAGuG,WAAWvJ,EAAI8C,EAAGyG,WAAWvJ,EACjD4J,GAAU5G,EAAGuG,WAAWtJ,EAAI6C,EAAGyG,WAAWtJ,GAAKoK,EAC/C4B,GAAYjJ,EAAG2I,kBAAkBC,EAAI5I,EAAGuG,WAAWrI,EAAI4B,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,GAAKmJ,EACnG6B,GAAYlJ,EAAG2I,kBAAkBG,EAAI9I,EAAGuG,WAAWrI,EAAI4B,EAAG6I,kBAAkBG,EAAIhJ,EAAGyG,WAAWrI,GAAKmJ,EACnGP,GAAW,EAAI9G,EAAGuG,WAAWrI,EAAI,EAAI4B,EAAGyG,WAAWrI,GAAKmJ,EAC9D,IAAIL,EAAQ,EAAMlH,EAAGyG,WAAWrI,EAC5BiL,EAAQrJ,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,EAC/CkL,EAAQtJ,EAAG6I,kBAAkBG,EAAIhJ,EAAGyG,WAAWrI,EAC/CgJ,EAAapH,EAAGyG,WAAWtJ,EAE3BkK,EAAYrH,EAAGyG,WAAWvJ,EAE9B,IAAK,IAAItX,EAAI,EAAGA,EAAI0hB,EAAe1hB,IAAK,CACpC,MAAMF,EAASuG,KAAK0b,MAAMP,GAAcnb,KAAK0b,MAAMR,GACnD,IAAIU,EAAmB5b,KAAK0b,MAAMN,GAAaxL,EAAYK,MAAQjQ,KAAK0b,MAAMR,GAC9E,MAAMO,GAAaR,EAAQD,GAASvhB,EAC9B6jB,GAAaF,EAAQJ,GAASvjB,EAC9B8jB,GAAaF,EAAQJ,GAASxjB,EACpC,IAAIkiB,EAASX,EAETwC,EAASR,EACTS,EAASR,EACb,IAAK,IAAI5H,EAAI,EAAGA,EAAI5b,EAAQ4b,IAAK,CAC7B,GAAIsG,EAAS/L,EAAYiM,QAAQD,GAAmB,CAChDhM,EAAYiM,QAAQD,GAAoBD,EACxC,MAAMxJ,EAAI,EAAIwJ,EAEd,IAAIkB,EAA6F,EAAzF7c,KAAK8Q,IAAI9Q,KAAKuK,IAAKiT,EAASrL,EAAIvC,EAAY8N,IAAIzN,MAAQL,EAAY8N,IAAIzN,MAAQ,GAAI,GACxF8M,EAA+F,EAA3F/c,KAAK8Q,IAAI9Q,KAAKuK,IAAKkT,EAAStL,EAAIvC,EAAY8N,IAAIxN,OAASN,EAAY8N,IAAIxN,OAAS,GAAI,GAC1FyN,EAAS/N,EAAY8N,IAAIvN,QAAQ0M,EAAIE,EAAInN,EAAY8N,IAAIzN,OAG7D4M,EAAIW,EAASrL,GAAKvC,EAAY8N,IAAIzN,MAAM,GACxC8M,EAAIU,EAAStL,GAAKvC,EAAY8N,IAAIxN,OAAO,GAE1CyN,EAAS/N,EAAY8N,IAAIE,mCAAmCf,EAAEE,GAE7DnN,EAAYA,YAAYgM,GAAoB+B,C,CAGhD/B,IACAD,GAAUF,EACV+B,GAAUF,EACVG,GAAUF,C,CAGdrC,GAAaN,EACbO,GAAcN,EACdO,IAEAJ,GAASF,EACTG,GAASF,EAETiC,GAASL,EACTS,GAASF,EAETD,GAASH,EACTO,GAASF,C,CAMb,GAFA9B,EAAgBpH,EAAGuG,WAAWvJ,EAAI+C,EAAGwG,WAAWvJ,EAE1B,IAAlBoK,EAAJ,CAIAT,GAAU3G,EAAGuG,WAAWtJ,EAAI8C,EAAGwG,WAAWtJ,GAAKmK,EAC/CP,GAAW,EAAI7G,EAAGuG,WAAWrI,EAAI,EAAI6B,EAAGwG,WAAWrI,GAAKkJ,EACxDsB,GAAY1I,EAAG2I,kBAAkBC,EAAI5I,EAAGuG,WAAWrI,EAAI6B,EAAG4I,kBAAkBC,EAAI7I,EAAGwG,WAAWrI,GAAKkJ,EACnGyB,GAAY7I,EAAG2I,kBAAkBG,EAAI9I,EAAGuG,WAAWrI,EAAI6B,EAAG4I,kBAAkBG,EAAI/I,EAAGwG,WAAWrI,GAAKkJ,EAEnGL,EAAQ,EAAMhH,EAAGwG,WAAWrI,EAC5B6K,EAAQhJ,EAAG4I,kBAAkBC,EAAI7I,EAAGwG,WAAWrI,EAC/C8K,EAAQjJ,EAAG4I,kBAAkBG,EAAI/I,EAAGwG,WAAWrI,EAC/C+I,EAAYlH,EAAGwG,WAAWtJ,EAC1BkK,EAAYpH,EAAGwG,WAAWvJ,EAE1B,IAAK,IAAItX,EAAI,EAAGA,EAAI0hB,EAAe1hB,IAAK,CACpC,MAAMF,EAASuG,KAAK0b,MAAMP,GAAcnb,KAAK0b,MAAMR,GACnD,IAAIU,EAAmB5b,KAAK0b,MAAMN,GAAaxL,EAAYK,MAAQjQ,KAAK0b,MAAMR,GAE9E,MAAMO,GAAaR,EAAQD,GAASvhB,EAC9B6jB,GAAaF,EAAQJ,GAASvjB,EAC9B8jB,GAAaF,EAAQJ,GAASxjB,EACpC,IAAIkiB,EAASX,EAETwC,EAASR,EACTS,EAASR,EACb,IAAK,IAAI5H,EAAI,EAAGA,EAAI5b,EAAQ4b,IAAK,CAC7B,GAAIsG,EAAS/L,EAAYiM,QAAQD,GAAmB,CAChDhM,EAAYiM,QAAQD,GAAoBD,EAExC,MAAMxJ,EAAI,EAAIwJ,EAGd,IAAIkB,EAA6F,EAAzF7c,KAAK8Q,IAAI9Q,KAAKuK,IAAKiT,EAASrL,EAAIvC,EAAY8N,IAAIzN,MAAQL,EAAY8N,IAAIzN,MAAQ,GAAI,GACxF8M,EAA+F,EAA3F/c,KAAK8Q,IAAI9Q,KAAKuK,IAAKkT,EAAStL,EAAIvC,EAAY8N,IAAIxN,OAASN,EAAY8N,IAAIxN,OAAS,GAAI,GAC1FyN,EAAS/N,EAAY8N,IAAIvN,QAAQ0M,EAAIE,EAAInN,EAAY8N,IAAIzN,OAE7D4M,EAAIW,EAASrL,GAAKvC,EAAY8N,IAAIzN,MAAM,GACxC8M,EAAIU,EAAStL,GAAKvC,EAAY8N,IAAIxN,OAAO,GAE1CyN,EAAS/N,EAAY8N,IAAIE,mCAAmCf,EAAEE,GAE7DnN,EAAYA,YAAYgM,GAAoB+B,C,CAEhD/B,IACAD,GAAUF,EACV+B,GAAUF,EACVG,GAAUF,C,CAGdrC,GAAaN,EACbO,GAAcN,EACdO,IAIAJ,GAASF,EACTG,GAASF,EAETiC,GAASL,EACTS,GAASF,EAETD,GAASH,EACTO,GAASF,C,EAEjB,CAEUzC,qBAAqB9K,EAA0BmE,EAAYC,EAAYC,GAE7E,IAAIqH,EAAiBtH,EAAGwG,WAAWvJ,EAAI8C,EAAGyG,WAAWvJ,EACrD,MAAMoK,EAAgBpH,EAAGuG,WAAWvJ,EAAI8C,EAAGyG,WAAWvJ,EAEtD,IAAI4J,GAAU7G,EAAGwG,WAAWtJ,EAAI6C,EAAGyG,WAAWtJ,GAAKoK,EACnD,MAAMV,GAAU3G,EAAGuG,WAAWtJ,EAAI6C,EAAGyG,WAAWtJ,GAAKmK,EAE/CsB,GAAY1I,EAAG2I,kBAAkBC,EAAI5I,EAAGuG,WAAWrI,EAAI4B,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,GAAKkJ,EACzG,IAAI6B,GAAYlJ,EAAG4I,kBAAkBC,EAAI7I,EAAGwG,WAAWrI,EAAI4B,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,GAAKmJ,EAEvG,MAAMwB,GAAY7I,EAAG2I,kBAAkBG,EAAI9I,EAAGuG,WAAWrI,EAAI4B,EAAG6I,kBAAkBG,EAAIhJ,EAAGyG,WAAWrI,GAAKkJ,EACzG,IAAI8B,GAAYnJ,EAAG4I,kBAAkBG,EAAI/I,EAAGwG,WAAWrI,EAAI4B,EAAG6I,kBAAkBG,EAAIhJ,EAAGyG,WAAWrI,GAAKmJ,EAGnGP,GAAW,EAAI/G,EAAGwG,WAAWrI,EAAI,EAAI4B,EAAGyG,WAAWrI,GAAKmJ,EAC5D,MAAMR,GAAW,EAAI7G,EAAGuG,WAAWrI,EAAI,EAAI4B,EAAGyG,WAAWrI,GAAKkJ,EAE9D,IAAIL,EAAQ,EAAMjH,EAAGyG,WAAWrI,EAC5B8I,EAAQ,EAAMlH,EAAGyG,WAAWrI,EAE5B6K,EAAQjJ,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,EAC/C8K,EAAQlJ,EAAG6I,kBAAkBG,EAAIhJ,EAAGyG,WAAWrI,EAC/CiL,EAAQrJ,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,EAC/CkL,EAAQtJ,EAAG6I,kBAAkBG,EAAIhJ,EAAGyG,WAAWrI,EAE/C+I,EAAYnH,EAAGyG,WAAWtJ,EAC1BiK,EAAapH,EAAGyG,WAAWtJ,EAC3BkK,EAAYrH,EAAGyG,WAAWvJ,EAE9B,IAAK,IAAItX,EAAI,EAAGA,EAAI2hB,EAAgB3hB,IAAK,CACrC,MAAMF,EAASuG,KAAK0b,MAAMP,GAAcnb,KAAK0b,MAAMR,GACnD,IAAIU,EAAmB5b,KAAK0b,MAAMN,GAAaxL,EAAYK,MAAQjQ,KAAK0b,MAAMR,GAC9E,MAAMO,GAAaR,EAAQD,GAASvhB,EAC9B6jB,GAAaF,EAAQJ,GAASvjB,EAC9B8jB,GAAaF,EAAQJ,GAASxjB,EACpC,IAAIkiB,EAASX,EAETwC,EAASR,EACTS,EAASR,EACb,IAAK,IAAI5H,EAAI,EAAGA,EAAI5b,EAAQ4b,IAAK,CAC7B,GAAIsG,EAAS/L,EAAYiM,QAAQD,GAAmB,CAChDhM,EAAYiM,QAAQD,GAAoBD,EACxC,MAAMxJ,EAAI,EAAIwJ,EAGd,IAAIkB,EAA6F,EAAzF7c,KAAK8Q,IAAI9Q,KAAKuK,IAAKiT,EAASrL,EAAIvC,EAAY8N,IAAIzN,MAAQL,EAAY8N,IAAIzN,MAAQ,GAAI,GACxF8M,EAA+F,EAA3F/c,KAAK8Q,IAAI9Q,KAAKuK,IAAKkT,EAAStL,EAAIvC,EAAY8N,IAAIxN,OAASN,EAAY8N,IAAIxN,OAAS,GAAI,GAC1FyN,EAAS/N,EAAY8N,IAAIvN,QAAQ0M,EAAIE,EAAInN,EAAY8N,IAAIzN,OAI7D4M,EAAIW,EAASrL,GAAKvC,EAAY8N,IAAIzN,MAAM,GACxC8M,EAAIU,EAAStL,GAAKvC,EAAY8N,IAAIxN,OAAO,GAE1CyN,EAAS/N,EAAY8N,IAAIE,mCAAmCf,EAAEE,GAE7DnN,EAAYA,YAAYgM,GAAoB+B,C,CAEhD/B,IACAD,GAAUF,EACV+B,GAAUF,EACVG,GAAUF,C,CAGdrC,GAAaN,EACbO,GAAcN,EACdO,IAEAJ,GAASF,EACTG,GAASF,EAETiC,GAASL,EACTS,GAASF,EAETD,GAASH,EACTO,GAASF,C,CAGb7B,EAAiBrH,EAAGuG,WAAWvJ,EAAI+C,EAAGwG,WAAWvJ,EACjD4J,GAAU5G,EAAGuG,WAAWtJ,EAAI8C,EAAGwG,WAAWtJ,GAAKoK,EAC/CP,GAAW,EAAI9G,EAAGuG,WAAWrI,EAAI,EAAI6B,EAAGwG,WAAWrI,GAAKmJ,EAExD4B,GAAYjJ,EAAG2I,kBAAkBC,EAAI5I,EAAGuG,WAAWrI,EAAI6B,EAAG4I,kBAAkBC,EAAI7I,EAAGwG,WAAWrI,GAAKmJ,EACnG6B,GAAYlJ,EAAG2I,kBAAkBG,EAAI9I,EAAGuG,WAAWrI,EAAI6B,EAAG4I,kBAAkBG,EAAI/I,EAAGwG,WAAWrI,GAAKmJ,EAEnGL,EAAQ,EAAMjH,EAAGwG,WAAWrI,EAE5BiL,EAAQpJ,EAAG4I,kBAAkBC,EAAI7I,EAAGwG,WAAWrI,EAC/CkL,EAAQrJ,EAAG4I,kBAAkBG,EAAI/I,EAAGwG,WAAWrI,EAE/CgJ,EAAanH,EAAGwG,WAAWtJ,EAC3BkK,EAAYpH,EAAGwG,WAAWvJ,EAE1B,IAAK,IAAItX,EAAI,EAAGA,EAAI2hB,EAAgB3hB,IAAK,CACrC,MAAMF,EAASuG,KAAK0b,MAAMP,GAAcnb,KAAK0b,MAAMR,GACnD,IAAIU,EAAmB5b,KAAK0b,MAAMN,GAAaxL,EAAYK,MAAQjQ,KAAK0b,MAAMR,GAG9E,MAAMO,GAAaR,EAAQD,GAASvhB,EAC9B6jB,GAAaF,EAAQJ,GAASvjB,EAC9B8jB,GAAaF,EAAQJ,GAASxjB,EACpC,IAAIkiB,EAASX,EAETwC,EAASR,EACTS,EAASR,EACb,IAAK,IAAI5H,EAAI,EAAGA,EAAI5b,EAAQ4b,IAAK,CAC7B,GAAIsG,EAAS/L,EAAYiM,QAAQD,GAAmB,CAChDhM,EAAYiM,QAAQD,GAAoBD,EACxC,MAAMxJ,EAAI,EAAIwJ,EAEd,IAAIkB,EAA6F,EAAzF7c,KAAK8Q,IAAI9Q,KAAKuK,IAAKiT,EAASrL,EAAIvC,EAAY8N,IAAIzN,MAAQL,EAAY8N,IAAIzN,MAAQ,GAAI,GACxF8M,EAA+F,EAA3F/c,KAAK8Q,IAAI9Q,KAAKuK,IAAKkT,EAAStL,EAAIvC,EAAY8N,IAAIxN,OAASN,EAAY8N,IAAIxN,OAAS,GAAI,GAC1FyN,EAAS/N,EAAY8N,IAAIvN,QAAQ0M,EAAIE,EAAInN,EAAY8N,IAAIzN,OAE7D4M,EAAIW,EAASrL,GAAKvC,EAAY8N,IAAIzN,MAAM,GACxC8M,EAAIU,EAAStL,GAAKvC,EAAY8N,IAAIxN,OAAO,GAE1CyN,EAAS/N,EAAY8N,IAAIE,mCAAmCf,EAAEE,GAE7DnN,EAAYA,YAAYgM,GAAoB+B,C,CAEhD/B,IACAD,GAAUF,EACV+B,GAAUF,EACVG,GAAUF,C,CAGdrC,GAAaN,EACbO,GAAcN,EACdO,IAEAJ,GAASF,EACTG,GAASF,EAETiC,GAASL,EACTS,GAASF,EAETD,GAASH,EACTO,GAASF,C,CAEjB,ECpSG,MAAMU,UAAgD3D,EAMrCtK,YAAkCkO,SAAtDjO,YAAoBD,EAAkCkO,GAClDpJ,QADgB,KAAA9E,YAAAA,EAAkC,KAAAkO,SAAAA,CAEtD,CAGUrD,sBAAsB7K,EAA0BmE,EAAYC,EAAYC,GAC9E,IAAIoH,EAAgBrH,EAAGwG,WAAWvJ,EAAI8C,EAAGyG,WAAWvJ,EAKpD,MAAMqK,EAAiBrH,EAAGuG,WAAWvJ,EAAI8C,EAAGyG,WAAWvJ,EAEvD,IAAI2J,GAAU5G,EAAGwG,WAAWtJ,EAAI6C,EAAGyG,WAAWtJ,GAAKmK,EACnD,MAAMR,GAAU5G,EAAGuG,WAAWtJ,EAAI6C,EAAGyG,WAAWtJ,GAAKoK,EAErD,IAAIqB,GAAY3I,EAAG4I,kBAAkBC,EAAI7I,EAAGwG,WAAWrI,EAAI4B,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,GAAKkJ,EACvG,MAAM6B,GAAYjJ,EAAG2I,kBAAkBC,EAAI5I,EAAGuG,WAAWrI,EAAI4B,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,GAAKmJ,EAEzG,IAAIwB,GAAY9I,EAAG4I,kBAAkBG,EAAI/I,EAAGwG,WAAWrI,EAAI4B,EAAG6I,kBAAkBG,EAAIhJ,EAAGyG,WAAWrI,GAAKkJ,EACvG,MAAM8B,GAAYlJ,EAAG2I,kBAAkBG,EAAI9I,EAAGuG,WAAWrI,EAAI4B,EAAG6I,kBAAkBG,EAAIhJ,EAAGyG,WAAWrI,GAAKmJ,EAEzG,IAAIR,GAAW,EAAI9G,EAAGwG,WAAWrI,EAAI,EAAI4B,EAAGyG,WAAWrI,GAAKkJ,EAC5D,MAAMN,GAAW,EAAI9G,EAAGuG,WAAWrI,EAAI,EAAI4B,EAAGyG,WAAWrI,GAAKmJ,EAE9D,IAAIN,EAAQ,EAAMjH,EAAGyG,WAAWrI,EAC5B8I,EAAQ,EAAMlH,EAAGyG,WAAWrI,EAE5B6K,EAAQjJ,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,EAC/C8K,EAAQlJ,EAAG6I,kBAAkBG,EAAIhJ,EAAGyG,WAAWrI,EAC/CiL,EAAQrJ,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,EAC/CkL,EAAQtJ,EAAG6I,kBAAkBG,EAAIhJ,EAAGyG,WAAWrI,EAE/C+I,EAAYnH,EAAGyG,WAAWtJ,EAC1BiK,EAAapH,EAAGyG,WAAWtJ,EAC3BkK,EAAYrH,EAAGyG,WAAWvJ,EAE9B,IAAK,IAAItX,EAAI,EAAGA,EAAI0hB,EAAe1hB,IAAK,CACpC,MAAMF,EAASuG,KAAK0b,MAAMP,GAAcnb,KAAK0b,MAAMR,GACnD,IAAIU,EAAmB5b,KAAK0b,MAAMN,GAAajiB,KAAKyW,YAAYK,MAAQjQ,KAAK0b,MAAMR,GACnF,MAAMO,GAAaR,EAAQD,GAASvhB,EAC9B6jB,GAAaF,EAAQJ,GAASvjB,EAC9B8jB,GAAaF,EAAQJ,GAASxjB,EACpC,IAAIkiB,EAASX,EAETwC,EAASR,EACTS,EAASR,EACb,IAAK,IAAI5H,EAAI,EAAGA,EAAI5b,EAAQ4b,IAAK,CAC7B,MAAM0I,EAAe5kB,KAAKyW,YAAYA,YAAYgM,GAClD,GAAID,EAASxiB,KAAKyW,YAAYiM,QAAQD,GAAmB,CACrDziB,KAAKyW,YAAYiM,QAAQD,GAAoBD,EAC7C,MAAMxJ,EAAI,EAAIwJ,EAEd,IAAIkB,EAAuG,EAAnG7c,KAAK8Q,IAAI9Q,KAAKuK,IAAKiT,EAASrL,EAAIhZ,KAAKyW,YAAY8N,IAAIzN,MAAQ9W,KAAKyW,YAAY8N,IAAIzN,MAAQ,GAAI,GAClG8M,EAAyG,EAArG/c,KAAK8Q,IAAI9Q,KAAKuK,IAAKkT,EAAStL,EAAIhZ,KAAKyW,YAAY8N,IAAIxN,OAAS/W,KAAKyW,YAAY8N,IAAIxN,OAAS,GAAI,GACpGyN,EAASxkB,KAAKyW,YAAY8N,IAAIvN,QAAQ0M,EAAIE,EAAI5jB,KAAKyW,YAAY8N,IAAIzN,OAEvE4M,EAAIW,EAASrL,GAAKvC,EAAY8N,IAAIzN,MAAM,GACxC8M,EAAIU,EAAStL,GAAKvC,EAAY8N,IAAIxN,OAAO,GAE1CyN,EAAS/N,EAAY8N,IAAIE,mCAAmCf,EAAEE,GAI7D,MAAM3L,EAAQjY,KAAK2kB,SAAS1M,OAASuM,GAAU,GAAK,KAAQ,IACtDtM,EAAe,EAAID,EAGnBI,GAAKuM,GAAgB,EAAI,KAAQ1M,GAAgBsM,GAAU,EAAI,KAAQvM,EACvE1I,GAAKqV,GAAgB,EAAI,KAAQ1M,GAAgBsM,GAAU,EAAI,KAAQvM,EACvE9Q,GAAKyd,GAAgB,GAAK,KAAQ1M,GAAgBsM,GAAU,GAAK,KAAQvM,EAE/EjY,KAAKyW,YAAYA,YAAYgM,GAAoBpK,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,E,CAGxFsb,IACAD,GAAUF,EACV+B,GAAUF,EACVG,GAAUF,C,CAGdrC,GAAaN,EACbO,GAAcN,EACdO,IAEAJ,GAASF,EACTG,GAASF,EAETiC,GAASL,EACTS,GAASF,EAETD,GAASH,EACTO,GAASF,C,CAMb,GAFA9B,EAAgBpH,EAAGuG,WAAWvJ,EAAI+C,EAAGwG,WAAWvJ,EAE1B,IAAlBoK,EAAJ,CAIAT,GAAU3G,EAAGuG,WAAWtJ,EAAI8C,EAAGwG,WAAWtJ,GAAKmK,EAC/CP,GAAW,EAAI7G,EAAGuG,WAAWrI,EAAI,EAAI6B,EAAGwG,WAAWrI,GAAKkJ,EACxDsB,GAAY1I,EAAG2I,kBAAkBC,EAAI5I,EAAGuG,WAAWrI,EAAI6B,EAAG4I,kBAAkBC,EAAI7I,EAAGwG,WAAWrI,GAAKkJ,EACnGyB,GAAY7I,EAAG2I,kBAAkBG,EAAI9I,EAAGuG,WAAWrI,EAAI6B,EAAG4I,kBAAkBG,EAAI/I,EAAGwG,WAAWrI,GAAKkJ,EAEnGL,EAAQ,EAAMhH,EAAGwG,WAAWrI,EAC5B6K,EAAQhJ,EAAG4I,kBAAkBC,EAAI7I,EAAGwG,WAAWrI,EAC/C8K,EAAQjJ,EAAG4I,kBAAkBG,EAAI/I,EAAGwG,WAAWrI,EAC/C+I,EAAYlH,EAAGwG,WAAWtJ,EAC1BkK,EAAYpH,EAAGwG,WAAWvJ,EAE1B,IAAK,IAAItX,EAAI,EAAGA,EAAI0hB,EAAe1hB,IAAK,CACpC,MAAMF,EAASuG,KAAK0b,MAAMP,GAAcnb,KAAK0b,MAAMR,GACnD,IAAIU,EAAmB5b,KAAK0b,MAAMN,GAAajiB,KAAKyW,YAAYK,MAAQjQ,KAAK0b,MAAMR,GAEnF,MAAMO,GAAaR,EAAQD,GAASvhB,EAC9B6jB,GAAaF,EAAQJ,GAASvjB,EAC9B8jB,GAAaF,EAAQJ,GAASxjB,EACpC,IAAIkiB,EAASX,EAETwC,EAASR,EACTS,EAASR,EACb,IAAK,IAAI5H,EAAI,EAAGA,EAAI5b,EAAQ4b,IAAK,CAC7B,GAAIsG,EAASxiB,KAAKyW,YAAYiM,QAAQD,GAAmB,CACrDziB,KAAKyW,YAAYiM,QAAQD,GAAoBD,EAE7C,MAAMxJ,EAAI,EAAIwJ,EAGd,IAAIkB,EAAuG,EAAnG7c,KAAK8Q,IAAI9Q,KAAKuK,IAAKiT,EAASrL,EAAIhZ,KAAKyW,YAAY8N,IAAIzN,MAAQ9W,KAAKyW,YAAY8N,IAAIzN,MAAQ,GAAI,GAClG8M,EAAyG,EAArG/c,KAAK8Q,IAAI9Q,KAAKuK,IAAKkT,EAAStL,EAAIhZ,KAAKyW,YAAY8N,IAAIxN,OAAS/W,KAAKyW,YAAY8N,IAAIxN,OAAS,GAAI,GACpGyN,EAASxkB,KAAKyW,YAAY8N,IAAIvN,QAAQ0M,EAAIE,EAAI5jB,KAAKyW,YAAY8N,IAAIzN,OAEvE4M,EAAIW,EAASrL,GAAKvC,EAAY8N,IAAIzN,MAAM,GACxC8M,EAAIU,EAAStL,GAAKvC,EAAY8N,IAAIxN,OAAO,GAE1CyN,EAAS/N,EAAY8N,IAAIE,mCAAmCf,EAAEE,GAE7D,MAAM3L,EAAQjY,KAAK2kB,SAAS1M,OAASuM,GAAU,GAAK,KAAQ,IACtDtM,EAAe,EAAID,EAGnBI,GAAKrY,KAAKyW,YAAYA,YAAYgM,IAAqB,EAAI,KAAQvK,GAAgBsM,GAAU,EAAI,KAAQvM,EACzG1I,GAAKvP,KAAKyW,YAAYA,YAAYgM,IAAqB,EAAI,KAAQvK,GAAgBsM,GAAU,EAAI,KAAQvM,EACzG9Q,GAAKnH,KAAKyW,YAAYA,YAAYgM,IAAqB,GAAK,KAAQvK,GAAgBsM,GAAU,GAAK,KAAQvM,EAEjHjY,KAAKyW,YAAYA,YAAYgM,GAAoBpK,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,E,CAExFsb,IACAD,GAAUF,EACV+B,GAAUF,EACVG,GAAUF,C,CAGdrC,GAAaN,EACbO,GAAcN,EACdO,IAIAJ,GAASF,EACTG,GAASF,EAETiC,GAASL,EACTS,GAASF,EAETD,GAASH,EACTO,GAASF,C,EAEjB,CAGUzC,qBAAqB9K,EAA2BmE,EAAYC,EAAYC,GAE9E,IAAIqH,EAAiBtH,EAAGwG,WAAWvJ,EAAI8C,EAAGyG,WAAWvJ,EACrD,MAAMoK,EAAgBpH,EAAGuG,WAAWvJ,EAAI8C,EAAGyG,WAAWvJ,EAEtD,IAAI4J,GAAU7G,EAAGwG,WAAWtJ,EAAI6C,EAAGyG,WAAWtJ,GAAKoK,EACnD,MAAMV,GAAU3G,EAAGuG,WAAWtJ,EAAI6C,EAAGyG,WAAWtJ,GAAKmK,EAE/CsB,GAAY1I,EAAG2I,kBAAkBC,EAAI5I,EAAGuG,WAAWrI,EAAI4B,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,GAAKkJ,EACzG,IAAI6B,GAAYlJ,EAAG4I,kBAAkBC,EAAI7I,EAAGwG,WAAWrI,EAAI4B,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,GAAKmJ,EAEvG,MAAMwB,GAAY7I,EAAG2I,kBAAkBG,EAAI9I,EAAGuG,WAAWrI,EAAI4B,EAAG6I,kBAAkBG,EAAKhJ,EAAGyG,WAAWrI,GAAKkJ,EAC1G,IAAI8B,GAAYnJ,EAAG4I,kBAAkBG,EAAK/I,EAAGwG,WAAWrI,EAAI4B,EAAG6I,kBAAkBG,EAAKhJ,EAAGyG,WAAWrI,GAAKmJ,EAGrGP,GAAW,EAAI/G,EAAGwG,WAAWrI,EAAI,EAAI4B,EAAGyG,WAAWrI,GAAKmJ,EAC5D,MAAMR,GAAW,EAAI7G,EAAGuG,WAAWrI,EAAI,EAAI4B,EAAGyG,WAAWrI,GAAKkJ,EAE9D,IAAIL,EAAQ,EAAMjH,EAAGyG,WAAWrI,EAC5B8I,EAAQ,EAAMlH,EAAGyG,WAAWrI,EAE5B6K,EAAQjJ,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,EAC/C8K,EAAQlJ,EAAG6I,kBAAkBG,EAAIhJ,EAAGyG,WAAWrI,EAC/CiL,EAAQrJ,EAAG6I,kBAAkBC,EAAI9I,EAAGyG,WAAWrI,EAC/CkL,EAAQtJ,EAAG6I,kBAAkBG,EAAIhJ,EAAGyG,WAAWrI,EAE/C+I,EAAYnH,EAAGyG,WAAWtJ,EAC1BiK,EAAapH,EAAGyG,WAAWtJ,EAC3BkK,EAAYrH,EAAGyG,WAAWvJ,EAE9B,IAAK,IAAItX,EAAI,EAAGA,EAAI2hB,EAAgB3hB,IAAK,CACrC,MAAMF,EAASuG,KAAK0b,MAAMP,GAAcnb,KAAK0b,MAAMR,GACnD,IAAIU,EAAmB5b,KAAK0b,MAAMN,GAAajiB,KAAKyW,YAAYK,MAAQjQ,KAAK0b,MAAMR,GACnF,MAAMO,GAAaR,EAAQD,GAASvhB,EAC9B6jB,GAAaF,EAAQJ,GAASvjB,EAC9B8jB,GAAaF,EAAQJ,GAASxjB,EACpC,IAAIkiB,EAASX,EAETwC,EAASR,EACTS,EAASR,EACb,IAAK,IAAI5H,EAAI,EAAGA,EAAI5b,EAAQ4b,IAAK,CAC7B,GAAIsG,EAASxiB,KAAKyW,YAAYiM,QAAQD,GAAmB,CACrDziB,KAAKyW,YAAYiM,QAAQD,GAAoBD,EAC7C,MAAMxJ,EAAI,EAAIwJ,EAGd,IAAIkB,EAAuG,EAAnG7c,KAAK8Q,IAAI9Q,KAAKuK,IAAKiT,EAASrL,EAAIhZ,KAAKyW,YAAY8N,IAAIzN,MAAQ9W,KAAKyW,YAAY8N,IAAIzN,MAAQ,GAAI,GAClG8M,EAAyG,EAArG/c,KAAK8Q,IAAI9Q,KAAKuK,IAAKkT,EAAStL,EAAIhZ,KAAKyW,YAAY8N,IAAIxN,OAAS/W,KAAKyW,YAAY8N,IAAIxN,OAAS,GAAI,GACpGyN,EAASxkB,KAAKyW,YAAY8N,IAAIvN,QAAQ0M,EAAIE,EAAI5jB,KAAKyW,YAAY8N,IAAIzN,OAEvE4M,EAAIW,EAASrL,GAAKvC,EAAY8N,IAAIzN,MAAM,GACxC8M,EAAIU,EAAStL,GAAKvC,EAAY8N,IAAIxN,OAAO,GAE1CyN,EAAS/N,EAAY8N,IAAIE,mCAAmCf,EAAEE,GAE7D,MAAM3L,EAAQjY,KAAK2kB,SAAS1M,OAASuM,GAAU,GAAK,KAAQ,IACtDtM,EAAe,EAAID,EAGnBI,GAAKrY,KAAKyW,YAAYA,YAAYgM,IAAqB,EAAI,KAAQvK,GAAgBsM,GAAU,EAAI,KAAQvM,EACzG1I,GAAKvP,KAAKyW,YAAYA,YAAYgM,IAAqB,EAAI,KAAQvK,GAAgBsM,GAAU,EAAI,KAAQvM,EACzG9Q,GAAKnH,KAAKyW,YAAYA,YAAYgM,IAAqB,GAAK,KAAQvK,GAAgBsM,GAAU,GAAK,KAAQvM,EAEjHjY,KAAKyW,YAAYA,YAAYgM,GAAoBpK,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,E,CAExFsb,IACAD,GAAUF,EACV+B,GAAUF,EACVG,GAAUF,C,CAGdrC,GAAaN,EACbO,GAAcN,EACdO,IAGAJ,GAASF,EACTG,GAASF,EAETiC,GAASL,EACTS,GAASF,EAETD,GAASH,EACTO,GAASF,C,CAGb7B,EAAiBrH,EAAGuG,WAAWvJ,EAAI+C,EAAGwG,WAAWvJ,EACjD4J,GAAU5G,EAAGuG,WAAWtJ,EAAI8C,EAAGwG,WAAWtJ,GAAKoK,EAC/CP,GAAW,EAAI9G,EAAGuG,WAAWrI,EAAI,EAAI6B,EAAGwG,WAAWrI,GAAKmJ,EAExD4B,GAAYjJ,EAAG2I,kBAAkBC,EAAI5I,EAAGuG,WAAWrI,EAAI6B,EAAG4I,kBAAkBC,EAAI7I,EAAGwG,WAAWrI,GAAKmJ,EACnG6B,GAAYlJ,EAAG2I,kBAAkBG,EAAI9I,EAAGuG,WAAWrI,EAAI6B,EAAG4I,kBAAkBG,EAAI/I,EAAGwG,WAAWrI,GAAKmJ,EAEnGL,EAAQ,EAAMjH,EAAGwG,WAAWrI,EAE5BiL,EAAQpJ,EAAG4I,kBAAkBC,EAAI7I,EAAGwG,WAAWrI,EAC/CkL,EAAQrJ,EAAG4I,kBAAkBG,EAAI/I,EAAGwG,WAAWrI,EAE/CgJ,EAAanH,EAAGwG,WAAWtJ,EAC3BkK,EAAYpH,EAAGwG,WAAWvJ,EAE1B,IAAK,IAAItX,EAAI,EAAGA,EAAI2hB,EAAgB3hB,IAAK,CACrC,MAAMF,EAASuG,KAAK0b,MAAMP,GAAcnb,KAAK0b,MAAMR,GACnD,IAAIU,EAAmB5b,KAAK0b,MAAMN,GAAajiB,KAAKyW,YAAYK,MAAQjQ,KAAK0b,MAAMR,GAGnF,MAAMO,GAAaR,EAAQD,GAASvhB,EAC9B6jB,GAAaF,EAAQJ,GAASvjB,EAC9B8jB,GAAaF,EAAQJ,GAASxjB,EACpC,IAAIkiB,EAASX,EAETwC,EAASR,EACTS,EAASR,EACb,IAAK,IAAI5H,EAAI,EAAGA,EAAI5b,EAAQ4b,IAAK,CAC7B,GAAIsG,EAASxiB,KAAKyW,YAAYiM,QAAQD,GAAmB,CACrDziB,KAAKyW,YAAYiM,QAAQD,GAAoBD,EAC7C,MAAMxJ,EAAI,EAAIwJ,EAEd,IAAIkB,EAAuG,EAAnG7c,KAAK8Q,IAAI9Q,KAAKuK,IAAKiT,EAASrL,EAAIhZ,KAAKyW,YAAY8N,IAAIzN,MAAQ9W,KAAKyW,YAAY8N,IAAIzN,MAAQ,GAAI,GAClG8M,EAAyG,EAArG/c,KAAK8Q,IAAI9Q,KAAKuK,IAAKkT,EAAStL,EAAIhZ,KAAKyW,YAAY8N,IAAIxN,OAAS/W,KAAKyW,YAAY8N,IAAIxN,OAAS,GAAI,GACpGyN,EAASxkB,KAAKyW,YAAY8N,IAAIvN,QAAQ0M,EAAIE,EAAI5jB,KAAKyW,YAAY8N,IAAIzN,OAEvE4M,EAAIW,EAASrL,GAAKvC,EAAY8N,IAAIzN,MAAM,GACxC8M,EAAIU,EAAStL,GAAKvC,EAAY8N,IAAIxN,OAAO,GAE1CyN,EAAS/N,EAAY8N,IAAIE,mCAAmCf,EAAEE,GAE7D,MAAM3L,EAAQjY,KAAK2kB,SAAS1M,OAASuM,GAAU,GAAK,KAAQ,IACtDtM,EAAe,EAAID,EAGnBI,GAAKrY,KAAKyW,YAAYA,YAAYgM,IAAqB,EAAI,KAAQvK,GAAgBsM,GAAU,EAAI,KAAQvM,EACzG1I,GAAKvP,KAAKyW,YAAYA,YAAYgM,IAAqB,EAAI,KAAQvK,GAAgBsM,GAAU,EAAI,KAAQvM,EACzG9Q,GAAKnH,KAAKyW,YAAYA,YAAYgM,IAAqB,GAAK,KAAQvK,GAAgBsM,GAAU,GAAK,KAAQvM,EAEjHjY,KAAKyW,YAAYA,YAAYgM,GAAoBpK,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,E,CAExFsb,IACAD,GAAUF,EACV+B,GAAUF,EACVG,GAAUF,C,CAGdrC,GAAaN,EACbO,GAAcN,EACdO,IAEAJ,GAASF,EACTG,GAASF,EAETiC,GAASL,EACTS,GAASF,EAETD,GAASH,EACTO,GAASF,C,CAEjB,ECrVG,MAAMa,EACFnB,EACAE,EAEPlN,YAAYgN,EAAYE,GACpB5jB,KAAK0jB,EAAIA,EACT1jB,KAAK4jB,EAAIA,CACb,ECHG,MAAMkB,EACFjT,SACAwP,WAAuB,IAAItI,EAAS,EAAE,EAAE,GACxCwB,OACA7B,MACA+K,kBAAuC,IAAIoB,ECN/C,MAAME,EAMatO,YAJfuO,cAAwB,IACxB/M,MACCgN,SAAqBnM,EAASoM,KAEtCxO,YAAsBD,GAAA,KAAAA,YAAAA,CAA4B,CAE3C0O,YAAYC,GACfplB,KAAKilB,SAAWG,CACpB,CAEOC,SAASpN,GACZjY,KAAKiY,MAAQpR,KAAK8Q,IAAI9Q,KAAKuK,IAAI6G,EAAO,GAAM,EAChD,CAEOqN,qBAAqBhP,GACxB,OAAOA,EAAE0C,EAAIhZ,KAAKglB,YACtB,CAiBOO,cAAc3K,EACjBC,EACAC,GACA,GAAI9a,KAAKilB,UAAYnM,EAAS0M,SAC1B,OAAO,EAEX,MAAMC,EACF7K,EAAG7C,EAAI8C,EAAG/C,EAAI+C,EAAG9C,EAAI6C,EAAG9C,EACxB+C,EAAG9C,EAAI+C,EAAGhD,EAAIgD,EAAG/C,EAAI8C,EAAG/C,EACxBgD,EAAG/C,EAAI6C,EAAG9C,EAAI8C,EAAG7C,EAAI+C,EAAGhD,EAC5B,OAAI9X,KAAKilB,UAAYnM,EAASoM,KACnBO,EAAM,EAENA,EAAM,CAErB,CAEOC,eAAe9K,EAClBC,EACAC,EACA6K,GACI,GAAI3lB,KAAKilB,UAAYnM,EAAS0M,SAC1B,OAAO,EAEf,MAAMC,EACF7K,EAAG7C,EAAI8C,EAAG/C,EAAI+C,EAAG9C,EAAI6C,EAAG9C,EACxB+C,EAAG9C,EAAI+C,EAAGhD,EAAIgD,EAAG/C,EAAI8C,EAAG/C,EACxBgD,EAAG/C,EAAI4N,EAAG7N,EAAI6N,EAAG5N,EAAI+C,EAAGhD,EACxB6N,EAAG5N,EAAI6C,EAAG9C,EAAI8C,EAAG7C,EAAI4N,EAAG7N,EAC5B,OAAI9X,KAAKilB,WAAanM,EAASoM,KACpBO,EAAM,EAENA,EAAM,CAErB,EC7DG,MAAMG,UAAmCb,EAEpCc,eAAyB,EAC1BC,mBAAiD,KAEhDC,YAA6B,IAAIzL,MACrC,IAAIwK,EAAU,IAAIA,EAAU,IAAIA,GAEpCkB,iBAAiBH,GACb7lB,KAAK6lB,cAAgBA,CACzB,CAEQI,gBAEAC,kBAAqC,IAAI5L,MAC7C,IAAIvB,EAAS,EAAG,EAAG,EAAG,GAAI,IAAIA,EAAS,EAAG,EAAG,EAAG,GAAI,IAAIA,EAAS,EAAG,EAAG,EAAG,IAG9ErC,YAAYD,GACR8E,MAAM9E,GACNzW,KAAKqlB,SAAS,GACdrlB,KAAK8lB,mBAAqB,IAAIvC,EAA2B9M,EAC7D,CAEO0P,eAAe1P,GAClBzW,KAAKyW,YAAcA,CACvB,CAEO2P,sBACHpmB,KAAK8lB,mBAAqB,IAAIpB,EAAwC1kB,KAAKyW,YAAazW,KAC5F,CAEOqmB,uBACHrmB,KAAK8lB,mBAAqB,IAAIvC,EAA2BvjB,KAAKyW,YAClE,CAEO6P,mBAAmBhJ,GACtBtd,KAAKimB,gBAAkB3I,CAC3B,CAEOiJ,cAAc9P,EAA0B+P,GAC3C,IAAK,IAAItK,EAAY,EAAGA,EAAIsK,EAAOlmB,OAAQ4b,IAAK,CAC5C,MAAMuK,EAAsBD,EAAOtK,GACnClc,KAAK0mB,KAAKjQ,EAAagQ,E,CAE/B,CAEOC,KAAKjQ,EAA0BwD,GAClC,GAAIA,EAAKI,QAAS,CACd,MAAMsM,EAAyB3mB,KAAKimB,gBAAgBxI,sBAEpD,IAAK,IAAIjd,EAAY,EAAGA,EAAIyZ,EAAKI,QAAQ/Z,OAAQE,IAC7CmmB,EAAajH,eAAezF,EAAKI,QAAQ7Z,GAAIyZ,EAAK2M,SAASpmB,G,CAInE,IAAK,IAAIA,EAAY,EAAGA,EAAIyZ,EAAKG,OAAO9Z,OAAQE,IAC5CR,KAAKimB,gBAAgBvG,eAAezF,EAAKG,OAAO5Z,GAAIyZ,EAAK4M,QAAQrmB,IAGrE,IAAK,IAAIA,EAAY,EAAGA,EAAIyZ,EAAKO,MAAMla,OAAQE,IAAK,CAChD,MAAMoa,EAAeX,EAAK4M,QAAQ5M,EAAKO,MAAMha,GAAGsmB,SAAS,IACnDjM,EAAeZ,EAAK4M,QAAQ5M,EAAKO,MAAMha,GAAGsmB,SAAS,IACnDhM,EAAeb,EAAK4M,QAAQ5M,EAAKO,MAAMha,GAAGsmB,SAAS,IAEzD,GAAI9mB,KAAKslB,qBAAqB1K,IAC1B5a,KAAKslB,qBAAqBzK,IAC1B7a,KAAKslB,qBAAqBxK,IAM1B,GAJA9a,KAAK+mB,SAASnM,EAAI5a,KAAKkmB,kBAAkB,IACzClmB,KAAK+mB,SAASlM,EAAI7a,KAAKkmB,kBAAkB,IACzClmB,KAAK+mB,SAASjM,EAAI9a,KAAKkmB,kBAAkB,IAErClmB,KAAKulB,cACLvlB,KAAKkmB,kBAAkB,GACvBlmB,KAAKkmB,kBAAkB,GACvBlmB,KAAKkmB,kBAAkB,IAAK,CAM5B,GAJAlmB,KAAK+lB,YAAY,GAAG1E,WAAarhB,KAAKkmB,kBAAkB,GACxDlmB,KAAK+lB,YAAY,GAAG1E,WAAarhB,KAAKkmB,kBAAkB,GACxDlmB,KAAK+lB,YAAY,GAAG1E,WAAarhB,KAAKkmB,kBAAkB,GAEpDlmB,KAAK6lB,cAAe,CACpB,MAAMpL,EAAeR,EAAK2M,SAAS3M,EAAKO,MAAMha,GAAG6Z,QAAQ,IACnDK,EAAeT,EAAK2M,SAAS3M,EAAKO,MAAMha,GAAG6Z,QAAQ,IACnDM,EAAeV,EAAK2M,SAAS3M,EAAKO,MAAMha,GAAG6Z,QAAQ,IACzD5D,EAAYuQ,WAAWvM,EAAIza,KAAK+lB,YAAY,IAC5CtP,EAAYuQ,WAAWtM,EAAI1a,KAAK+lB,YAAY,IAC5CtP,EAAYuQ,WAAWrM,EAAI3a,KAAK+lB,YAAY,G,MAE5C/lB,KAAK+lB,YAAY,GAAGtC,kBAAoBxJ,EAAKgN,GAAGhN,EAAKO,MAAMha,GAAGymB,GAAG,IACjEjnB,KAAK+lB,YAAY,GAAGtC,kBAAoBxJ,EAAKgN,GAAGhN,EAAKO,MAAMha,GAAGymB,GAAG,IACjEjnB,KAAK+lB,YAAY,GAAGtC,kBAAoBxJ,EAAKgN,GAAGhN,EAAKO,MAAMha,GAAGymB,GAAG,IAGrEjnB,KAAKknB,kBAAkBzQ,EAAazW,KAAK+lB,Y,MAE1C,MAAK/lB,KAAKslB,qBAAqB1K,IACjC5a,KAAKslB,qBAAqBzK,IAC1B7a,KAAKslB,qBAAqBxK,IAC3B,SAEA9a,KAAK+lB,YAAY,GAAGlU,SAAW+I,EAC/B5a,KAAK+lB,YAAY,GAAGtC,kBAAoBxJ,EAAKgN,GAAGhN,EAAKO,MAAMha,GAAGymB,GAAG,IAEjEjnB,KAAK+lB,YAAY,GAAGlU,SAAWgJ,EAC/B7a,KAAK+lB,YAAY,GAAGtC,kBAAoBxJ,EAAKgN,GAAGhN,EAAKO,MAAMha,GAAGymB,GAAG,IAEjEjnB,KAAK+lB,YAAY,GAAGlU,SAAWiJ,EAC/B9a,KAAK+lB,YAAY,GAAGtC,kBAAoBxJ,EAAKgN,GAAGhN,EAAKO,MAAMha,GAAGymB,GAAG,IAEjEjnB,KAAKmnB,cAAc1Q,EAAazW,KAAK+lB,Y,EAGjD,CAEOgB,SAASK,EAAyCtlB,GACrDA,EAAOiW,EAAIlR,KAAK0b,MAAOviB,KAAKyW,YAAYK,MAAQ,EAAM,IAAMsQ,EAAGrP,GAAMqP,EAAGpO,GACxElX,EAAOgW,EAAIjR,KAAK0b,MAAOviB,KAAKyW,YAAYM,OAAS,EAAa,IAAPqQ,EAAGtP,GAAYsP,EAAGpO,GACzElX,EAAOkX,EAAIoO,EAAGpO,CAClB,CAEOqO,6BAA6BnG,EAAYC,GAC5C,MAAMmG,GAAiBtnB,KAAKglB,aAAe9D,EAAGrP,SAASmH,IAAMmI,EAAGtP,SAASmH,EAAIkI,EAAGrP,SAASmH,GACnFuO,EAAiB,IAAIzC,EAa3B,OAXAyC,EAAO1V,SAAW,IAAIkH,EAClBuO,GAASnG,EAAGtP,SAASkG,EAAImJ,EAAGrP,SAASkG,GAAKmJ,EAAGrP,SAASkG,EACtDuP,GAASnG,EAAGtP,SAASiG,EAAIoJ,EAAGrP,SAASiG,GAAKoJ,EAAGrP,SAASiG,EACtD9X,KAAKglB,cAGTuC,EAAO9D,kBAAoB,IAAIoB,EAC3ByC,GAASnG,EAAGsC,kBAAkBC,EAAIxC,EAAGuC,kBAAkBC,GAAKxC,EAAGuC,kBAAkBC,EACjF4D,GAASnG,EAAGsC,kBAAkBG,EAAI1C,EAAGuC,kBAAkBG,GAAK1C,EAAGuC,kBAAkBG,GAG9E2D,CACX,CAEOJ,cAAc1Q,EAA0B+Q,GAC3C,MAAMC,EAAuBD,EACvBE,EAAwB,IAAIpN,MAClC,IAAIqN,EAAYF,EAAMA,EAAMnnB,OAAS,GAErC,IAAK,IAAIE,EAAY,EAAGA,EAAIinB,EAAMnnB,OAAQE,IAAK,CAC3C,MAAMonB,EAAgBH,EAAMjnB,GACxBR,KAAKslB,qBAAqBsC,EAAM/V,WAC3B7R,KAAKslB,qBAAqBqC,EAAE9V,WAC7B6V,EAAOjoB,KAAKO,KAAKqnB,6BAA6BM,EAAGC,IAErDF,EAAOjoB,KAAKmoB,IACL5nB,KAAKslB,qBAAqBqC,EAAE9V,WACnC6V,EAAOjoB,KAAKO,KAAKqnB,6BAA6BM,EAAGC,IAErDD,EAAIC,C,CAGR,KAAIF,EAAOpnB,OAAS,GAApB,CAIA,IAAK,IAAI4b,EAAY,EAAGA,EAAIwL,EAAOpnB,OAAQ4b,IACvClc,KAAK+mB,SAASW,EAAOxL,GAAGrK,SAAU6V,EAAOxL,GAAGmF,aAG1B,IAAlBqG,EAAOpnB,QACNN,KAAKulB,cAAcmC,EAAO,GAAGrG,WAAYqG,EAAO,GAAGrG,WAAYqG,EAAO,GAAGrG,eAIxD,IAAlBqG,EAAOpnB,QACNN,KAAK0lB,eACFgC,EAAO,GAAGrG,WACVqG,EAAO,GAAGrG,WACVqG,EAAO,GAAGrG,WACVqG,EAAO,GAAGrG,cAKlBrhB,KAAKknB,kBAAkBzQ,EAAaiR,E,CACxC,CAGOR,kBAAkBzQ,EAA0B+Q,GAE/C,IAAIE,EAASF,EAEb,IAAK,IAAItL,EAAI,EAAGA,EAAIzF,EAAYoR,WAAWvnB,OAAQ4b,IAAK,CACpD,MAAM4L,EAAOrR,EAAYoR,WAAW3L,GAC9BuL,EAAQC,EACdA,EAAS,IAAIpN,MACb,IAAIqN,EAAIF,EAAMA,EAAMnnB,OAAS,GAE7B,IAAK,IAAIE,EAAI,EAAGA,EAAIinB,EAAMnnB,OAAQE,IAAK,CACnC,MAAMonB,EAAQH,EAAMjnB,GAChBsnB,EAAKC,UAAUH,IACVE,EAAKC,UAAUJ,IAChBD,EAAOjoB,KAAKqoB,EAAKE,qBAAqBL,EAAGC,IAE7CF,EAAOjoB,KAAKmoB,IACLE,EAAKC,UAAUJ,IACtBD,EAAOjoB,KAAKqoB,EAAKE,qBAAqBL,EAAGC,IAE7CD,EAAIC,C,EAIZ,KAAIF,EAAOpnB,OAAS,GAKpB,IAAK,IAAIE,EAAI,EAAGA,EAAIknB,EAAOpnB,OAAS,EAAGE,IACnCR,KAAK8lB,mBAAmB7E,gBAAgBxK,EAAaiR,EAAO,GAAIA,EAAO,EAAIlnB,GAAIknB,EAAO,EAAIlnB,GAElG,EC/NG,MAAeynB,GCCf,MAAMC,UAAuBD,EAGZxR,YAApBC,YAAoBD,GAChB8E,QADgB,KAAA9E,YAAAA,CAEpB,CAEO0R,SAAS7R,GACZ,OAAOA,EAAE+K,WAAWvJ,GAAK9X,KAAKyW,YAAY2R,UAAUtQ,CACxD,CAEOiQ,UAAUzR,GACb,OAAOA,EAAE+K,WAAWvJ,GAAK9X,KAAKyW,YAAY2R,UAAUtQ,CACxD,CAEOuQ,oBAAoBnH,EAAYC,GACnC,MAAMoG,EAAiB,IAAIzC,EAErBwD,GAAkBtoB,KAAKyW,YAAY2R,UAAUtQ,EAAIoJ,EAAGG,WAAWvJ,IAAMqJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,GAM3G,OALAyP,EAAO7O,MAAQyI,EAAGzI,MAAMD,IAAIyI,EAAGxI,OAAOG,IAAIyP,GAAQ/gB,IAAI2Z,EAAGxI,OACzD6O,EAAOlG,WAAa,IAAItI,EACpBlS,KAAK0b,MAAMrB,EAAGG,WAAWtJ,GAAKoJ,EAAGE,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,GAAKuQ,GACnEtoB,KAAKyW,YAAY2R,UAAUtQ,EAC3B,GAAK,EAAIoJ,EAAGG,WAAWrI,GAAK,EAAImI,EAAGE,WAAWrI,EAAI,EAAIkI,EAAGG,WAAWrI,GAAKsP,IACtEf,CACX,CAEOS,qBAAqB9G,EAAYC,GACpC,MAAMoG,EAAiB,IAAIzC,EAC3ByC,EAAOlG,WACH,IAAItI,EACAlS,KAAK0b,MAAMrB,EAAGG,WAAWtJ,GAAKoJ,EAAGE,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,IAAM/X,KAAKyW,YAAY2R,UAAUtQ,EAAIoJ,EAAGG,WAAWvJ,IAAMqJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,IACvJ9X,KAAKyW,YAAY2R,UAAUtQ,EAC3B,GAAK,EAAIoJ,EAAGG,WAAWrI,GAAK,EAAImI,EAAGE,WAAWrI,EAAI,EAAIkI,EAAGG,WAAWrI,IAAMhZ,KAAKyW,YAAY2R,UAAUtQ,EAAIoJ,EAAGG,WAAWvJ,IAAMqJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,KAErK,MAAMyQ,EAA+B,IAAI1D,EACnC7L,EAAYuO,EAAOlG,WAAWrI,EAKpC,OAJAuP,EAAU7E,GAAKxC,EAAGuC,kBAAkBC,EAAIxC,EAAGG,WAAWrI,GAAKmI,EAAGsC,kBAAkBC,EAAIvC,EAAGE,WAAWrI,EAAIkI,EAAGuC,kBAAkBC,EAAIxC,EAAGG,WAAWrI,IAAMhZ,KAAKyW,YAAY2R,UAAUtQ,EAAIoJ,EAAGG,WAAWvJ,IAAMqJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,IAAMkB,EAC5OuP,EAAU3E,GAAK1C,EAAGuC,kBAAkBG,EAAI1C,EAAGG,WAAWrI,GAAKmI,EAAGsC,kBAAkBG,EAAIzC,EAAGE,WAAWrI,EAAIkI,EAAGuC,kBAAkBG,EAAI1C,EAAGG,WAAWrI,IAAMhZ,KAAKyW,YAAY2R,UAAUtQ,EAAIoJ,EAAGG,WAAWvJ,IAAMqJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,IAAMkB,EAC5OuO,EAAO9D,kBAAoB8E,EAEpBhB,CACX,EC7CG,MAAMiB,EAQW/R,YANb8B,0BAA4B,EAC5BA,wBAA0B,EAC1BA,yBAA2B,EAC3BA,0BAA4B,EAC5BA,uBAAyB,EAEhC7B,YAAoBD,GAAA,KAAAA,YAAAA,CAA4B,CAEzCgS,2BAA2BtI,EAAiBC,EAAesI,GAC9D,IAAIxH,EAAe,IAAIhG,EAASiF,EAAMpI,EAAGoI,EAAMrI,EAAGqI,EAAMnH,GACpDmI,EAAe,IAAIjG,EAASkF,EAAIrI,EAAGqI,EAAItI,EAAGsI,EAAIpH,GAE9C2P,EAAgB3oB,KAAK4oB,kBAAkB1H,GACvC2H,EAAgB7oB,KAAK4oB,kBAAkBzH,GAEvC2H,GAAkB,EAClBC,GAAgB,EAEpB,MAAQA,GAEJ,GAAI/oB,KAAKgpB,gBAAgBL,EAAOE,GAC5BC,GAAS,EACTC,GAAO,OACJ,GAAI/oB,KAAKipB,gBAAgBN,EAAOE,GACnCE,GAAO,MACJ,CAEH,GAAIJ,IAAUH,EAA2BU,mBAAoB,CACzD,MAAMC,EAAmBR,EACzBA,EAAQE,EACRA,EAAQM,EAER,MAAMC,EAAsBlI,EAC5BA,EAAKC,EACLA,EAAKiI,C,EAGJT,EAAQH,EAA2Ba,mBAAqBb,EAA2BU,oBACpFhI,EAAGnJ,EAAKmJ,EAAGnJ,GAAKoJ,EAAGpJ,EAAImJ,EAAGnJ,IAAM/X,KAAKyW,YAAY6S,UAAUxR,EAAIoJ,EAAGpJ,IAAMqJ,EAAGrJ,EAAIoJ,EAAGpJ,GAClFoJ,EAAGpJ,EAAI9X,KAAKyW,YAAY6S,UAAUxR,IAC1B6Q,EAAQH,EAA2Be,sBAAwBf,EAA2BU,oBAC9FhI,EAAGnJ,EAAKmJ,EAAGnJ,GAAKoJ,EAAGpJ,EAAImJ,EAAGnJ,IAAM/X,KAAKyW,YAAY2R,UAAUtQ,EAAIoJ,EAAGpJ,IAAMqJ,EAAGrJ,EAAIoJ,EAAGpJ,GAClFoJ,EAAGpJ,EAAI9X,KAAKyW,YAAY2R,UAAUtQ,IAC1B6Q,EAAQH,EAA2BgB,qBAAuBhB,EAA2BU,oBAC7FhI,EAAGpJ,EAAKoJ,EAAGpJ,GAAKqJ,EAAGrJ,EAAIoJ,EAAGpJ,IAAM9X,KAAKyW,YAAY6S,UAAUvR,EAAImJ,EAAGnJ,IAAMoJ,EAAGpJ,EAAImJ,EAAGnJ,GAClFmJ,EAAGnJ,EAAI/X,KAAKyW,YAAY6S,UAAUvR,IAC1B4Q,EAAQH,EAA2BiB,oBAAsBjB,EAA2BU,qBAC5FhI,EAAGpJ,EAAKoJ,EAAGpJ,GAAKqJ,EAAGrJ,EAAIoJ,EAAGpJ,IAAM9X,KAAKyW,YAAY2R,UAAUrQ,EAAImJ,EAAGnJ,IAAMoJ,EAAGpJ,EAAImJ,EAAGnJ,GAClFmJ,EAAGnJ,EAAI/X,KAAKyW,YAAY2R,UAAUrQ,GAGtC4Q,EAAQ3oB,KAAK4oB,kBAAkB1H,E,CAInC4H,GACA9oB,KAAKyW,YAAYmM,YAAY1B,EAAIC,EAAIuH,EAE7C,CAEOM,gBAAgBL,EAAeE,GAClC,OAAQF,EAAQE,KAAWL,EAA2BU,kBAC1D,CAEOD,gBAAgBN,EAAeE,GAClC,OAAQF,EAAQE,KAAWL,EAA2BU,kBAC1D,CAEON,kBAAkBhB,GACrB,IAAI8B,EAAqBlB,EAA2BU,mBAcpD,OAZItB,EAAM7P,EAAI/X,KAAKyW,YAAY2R,UAAUrQ,EACrC2R,GAAclB,EAA2BiB,iBAClC7B,EAAM7P,EAAI/X,KAAKyW,YAAY6S,UAAUvR,IAC5C2R,GAAclB,EAA2BgB,mBAGzC5B,EAAM9P,EAAI9X,KAAKyW,YAAY2R,UAAUtQ,EACrC4R,GAAclB,EAA2Be,mBAClC3B,EAAM9P,EAAI9X,KAAKyW,YAAY6S,UAAUxR,IAC5C4R,GAAclB,EAA2Ba,iBAGtCK,CACX,ECnFG,MAAMC,UAAqB1B,EAEVxR,YAApBC,YAAoBD,GAChB8E,QADgB,KAAA9E,YAAAA,CAEpB,CAEO0R,SAAS7R,GACZ,OAAOA,EAAE+K,WAAWtJ,GAAK,CAC7B,CAEOgQ,UAAUzR,GACb,OAAOA,EAAE+K,WAAWtJ,GAAK,CAC7B,CAEOsQ,oBAAoBnH,EAAYC,GACnC,MAAMoG,EAAS,IAAIzC,EACbwD,GAAkBtoB,KAAKyW,YAAY2R,UAAUrQ,EAAImJ,EAAGG,WAAWtJ,IAAMoJ,EAAGE,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,GAK3G,OAJAwP,EAAO7O,MAAQyI,EAAGzI,MAAMD,IAAIyI,EAAGxI,OAAOG,IAAIyP,GAAQ/gB,IAAI2Z,EAAGxI,OACzD6O,EAAOlG,WAAa,IAAItI,EAAS/Y,KAAKyW,YAAY2R,UAAUrQ,EACxDlR,KAAK0b,MAAMrB,EAAGG,WAAWvJ,GAAKqJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,GAAKwQ,GACnE,GAAK,EAAIpH,EAAGG,WAAWrI,GAAK,EAAImI,EAAGE,WAAWrI,EAAI,EAAIkI,EAAGG,WAAWrI,GAAKsP,IACtEf,CACX,CAEOS,qBAAqB9G,EAAYC,GACpC,MAAMoG,EAAS,IAAIzC,EACnByC,EAAOlG,WACH,IAAItI,EAAS/Y,KAAKyW,YAAY2R,UAAUrQ,EACpClR,KAAK0b,MAAMrB,EAAGG,WAAWvJ,GAAKqJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,IAAM9X,KAAKyW,YAAY2R,UAAUrQ,EAAImJ,EAAGG,WAAWtJ,IAAMoJ,EAAGE,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,IACvJ,GAAK,EAAImJ,EAAGG,WAAWrI,GAAK,EAAImI,EAAGE,WAAWrI,EAAI,EAAIkI,EAAGG,WAAWrI,IAAMhZ,KAAKyW,YAAY2R,UAAUrQ,EAAImJ,EAAGG,WAAWtJ,IAAMoJ,EAAGE,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,KAErK,MAAMwQ,EAAY,IAAI1D,EAChB7L,EAAIuO,EAAOlG,WAAWrI,EAK5B,OAJAuP,EAAU7E,GAAKxC,EAAGuC,kBAAkBC,EAAIxC,EAAGG,WAAWrI,GAAKmI,EAAGsC,kBAAkBC,EAAIvC,EAAGE,WAAWrI,EAAIkI,EAAGuC,kBAAkBC,EAAIxC,EAAGG,WAAWrI,IAAMhZ,KAAKyW,YAAY2R,UAAUrQ,EAAImJ,EAAGG,WAAWtJ,IAAMoJ,EAAGE,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,IAAMiB,EAC5OuP,EAAU3E,GAAK1C,EAAGuC,kBAAkBG,EAAI1C,EAAGG,WAAWrI,GAAKmI,EAAGsC,kBAAkBG,EAAIzC,EAAGE,WAAWrI,EAAIkI,EAAGuC,kBAAkBG,EAAI1C,EAAGG,WAAWrI,IAAMhZ,KAAKyW,YAAY2R,UAAUrQ,EAAImJ,EAAGG,WAAWtJ,IAAMoJ,EAAGE,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,IAAMiB,EAC5OuO,EAAO9D,kBAAoB8E,EAEpBhB,CACX,ECtCG,MAAMqC,UAAsB3B,EAEXxR,YAApBC,YAAoBD,GAChB8E,QADgB,KAAA9E,YAAAA,CAEpB,CAEO0R,SAAS7R,GACZ,OAAOA,EAAE+K,WAAWtJ,EAAI/X,KAAKyW,YAAYK,KAC7C,CAEOiR,UAAUzR,GACb,OAAOA,EAAE+K,WAAWtJ,EAAI/X,KAAKyW,YAAYK,KAC7C,CAEOuR,oBAAoBnH,EAAYC,GACnC,MAAMoG,EAAS,IAAIzC,EACbwD,GAAkBtoB,KAAKyW,YAAY6S,UAAUvR,EAAI,EAAImJ,EAAGG,WAAWtJ,IAAMoJ,EAAGE,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,GAK/G,OAJAwP,EAAO7O,MAAQyI,EAAGzI,MAAMD,IAAIyI,EAAGxI,OAAOG,IAAIyP,GAAQ/gB,IAAI2Z,EAAGxI,OACzD6O,EAAOlG,WAAa,IAAItI,EAAS/Y,KAAKyW,YAAY6S,UAAUvR,EAAI,EAC5DlR,KAAK0b,MAAMrB,EAAGG,WAAWvJ,GAAKqJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,GAAKwQ,GACnE,GAAK,EAAIpH,EAAGG,WAAWrI,GAAK,EAAImI,EAAGE,WAAWrI,EAAI,EAAIkI,EAAGG,WAAWrI,GAAKsP,IACtEf,CACX,CAEOS,qBAAqB9G,EAAYC,GACpC,MAAMoG,EAAS,IAAIzC,EACnByC,EAAOlG,WACH,IAAItI,EAAS/Y,KAAKyW,YAAY6S,UAAUvR,EAAI,EACxClR,KAAK0b,MAAMrB,EAAGG,WAAWvJ,GAAKqJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,IAAM9X,KAAKyW,YAAY6S,UAAUvR,EAAI,EAAImJ,EAAGG,WAAWtJ,IAAMoJ,EAAGE,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,IAC3J,GAAK,EAAImJ,EAAGG,WAAWrI,GAAK,EAAImI,EAAGE,WAAWrI,EAAI,EAAIkI,EAAGG,WAAWrI,IAAMhZ,KAAKyW,YAAY6S,UAAUvR,EAAI,EAAImJ,EAAGG,WAAWtJ,IAAMoJ,EAAGE,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,KAEzK,MAAMwQ,EAAY,IAAI1D,EAChB7L,EAAIuO,EAAOlG,WAAWrI,EAK5B,OAJAuP,EAAU7E,GAAKxC,EAAGuC,kBAAkBC,EAAIxC,EAAGG,WAAWrI,GAAKmI,EAAGsC,kBAAkBC,EAAIvC,EAAGE,WAAWrI,EAAIkI,EAAGuC,kBAAkBC,EAAIxC,EAAGG,WAAWrI,IAAMhZ,KAAKyW,YAAY6S,UAAUvR,EAAI,EAAImJ,EAAGG,WAAWtJ,IAAMoJ,EAAGE,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,IAAMiB,EAChPuP,EAAU3E,GAAK1C,EAAGuC,kBAAkBG,EAAI1C,EAAGG,WAAWrI,GAAKmI,EAAGsC,kBAAkBG,EAAIzC,EAAGE,WAAWrI,EAAIkI,EAAGuC,kBAAkBG,EAAI1C,EAAGG,WAAWrI,IAAMhZ,KAAKyW,YAAY6S,UAAUvR,EAAI,EAAImJ,EAAGG,WAAWtJ,IAAMoJ,EAAGE,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,IAAMiB,EAEhPuO,EAAO9D,kBAAoB8E,EACpBhB,CACX,ECtCG,MAAMsC,UAAoB5B,EAETxR,YAApBC,YAAoBD,GAChB8E,QADgB,KAAA9E,YAAAA,CAEpB,CAEO0R,SAAS7R,GACZ,OAAOA,EAAE+K,WAAWvJ,EAAI9X,KAAKyW,YAAY6S,UAAUxR,EAAI,CAC3D,CAEOiQ,UAAUzR,GACb,OAAOA,EAAE+K,WAAWvJ,EAAI9X,KAAKyW,YAAY6S,UAAUxR,EAAI,CAC3D,CAEOuQ,oBAAoBnH,EAAYC,GACnC,MAAMoG,EAAS,IAAIzC,EACbwD,GAAkBtoB,KAAKyW,YAAY6S,UAAUxR,EAAI,EAAIoJ,EAAGG,WAAWvJ,IAAMqJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,GAO/G,OALAyP,EAAO7O,MAAQyI,EAAGzI,MAAMD,IAAIyI,EAAGxI,OAAOG,IAAIyP,GAAQ/gB,IAAI2Z,EAAGxI,OACzD6O,EAAOlG,WAAa,IAAItI,EACpBlS,KAAK0b,MAAMrB,EAAGG,WAAWtJ,GAAKoJ,EAAGE,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,GAAKuQ,GACnEtoB,KAAKyW,YAAY6S,UAAUxR,EAAI,EAC/B,GAAK,EAAIoJ,EAAGG,WAAWrI,GAAK,EAAImI,EAAGE,WAAWrI,EAAI,EAAIkI,EAAGG,WAAWrI,GAAKsP,IACtEf,CACX,CAEOS,qBAAqB9G,EAAYC,GACpC,MAAMoG,EAAS,IAAIzC,EACnByC,EAAOlG,WACH,IAAItI,EACAlS,KAAK0b,MAAMrB,EAAGG,WAAWtJ,GAAKoJ,EAAGE,WAAWtJ,EAAImJ,EAAGG,WAAWtJ,IAAM/X,KAAKyW,YAAY6S,UAAUxR,EAAI,EAAIoJ,EAAGG,WAAWvJ,IAAMqJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,IAC3J9X,KAAKyW,YAAY6S,UAAUxR,EAAI,EAC/B,GAAK,EAAIoJ,EAAGG,WAAWrI,GAAK,EAAImI,EAAGE,WAAWrI,EAAI,EAAIkI,EAAGG,WAAWrI,IAAMhZ,KAAKyW,YAAY6S,UAAUxR,EAAI,EAAIoJ,EAAGG,WAAWvJ,IAAMqJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,KAEzK,MAAMyQ,EAAY,IAAI1D,EAChB7L,EAAIuO,EAAOlG,WAAWrI,EAK5B,OAJAuP,EAAU7E,GAAKxC,EAAGuC,kBAAkBC,EAAIxC,EAAGG,WAAWrI,GAAKmI,EAAGsC,kBAAkBC,EAAIvC,EAAGE,WAAWrI,EAAIkI,EAAGuC,kBAAkBC,EAAIxC,EAAGG,WAAWrI,IAAMhZ,KAAKyW,YAAY6S,UAAUxR,EAAI,EAAIoJ,EAAGG,WAAWvJ,IAAMqJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,IAAMkB,EAChPuP,EAAU3E,GAAK1C,EAAGuC,kBAAkBG,EAAI1C,EAAGG,WAAWrI,GAAKmI,EAAGsC,kBAAkBG,EAAIzC,EAAGE,WAAWrI,EAAIkI,EAAGuC,kBAAkBG,EAAI1C,EAAGG,WAAWrI,IAAMhZ,KAAKyW,YAAY6S,UAAUxR,EAAI,EAAIoJ,EAAGG,WAAWvJ,IAAMqJ,EAAGE,WAAWvJ,EAAIoJ,EAAGG,WAAWvJ,IAAMkB,EAEhPuO,EAAO9D,kBAAoB8E,EACpBhB,CACX,EC/CG,MAAMuC,EAGF9S,QACAF,MACAC,OACAgT,SACAC,UACCC,OAAiB,EAEzBC,SAASD,GACLjqB,KAAKiqB,MAAQA,CACjB,CACAvT,YAAYM,EAAuBF,EAAgBC,GAC/C/W,KAAKgX,QAAUA,EACfhX,KAAK8W,MAAQA,EACb9W,KAAK+W,OAASA,EACd/W,KAAKgqB,UAAajT,EAAO,EAAI,EAC7B/W,KAAK+pB,SAAYjT,EAAM,EAAG,CAC9B,CAEOqT,SAASnT,EAAkBe,EAAWD,GACzC,OAAOd,EAAQA,SAAa,IAAJe,GAAyB,KAAR,IAAJD,GACzC,CAEOsS,yBAAyBrS,EAAWD,GACvC,MAAMuS,IAAY,EAAJtS,GAAS,IAAO,KAAO,IAC/BuS,IAASvS,EAAI,EAAK,GAAK,IAAO,KAAO,IACrCwS,IAAY,EAAJzS,GAAS,IAAO,KAAO,IAC/BwI,IAASxI,EAAI,EAAK,GAAK,IAAO,KAAO,IAErC0S,EAAqC,IAA9BxqB,KAAKmqB,SAASnqB,KAAMqqB,EAAIE,GAC/BE,EAAqC,IAA9BzqB,KAAKmqB,SAASnqB,KAAMsqB,EAAIC,GAC/BG,EAAqC,IAA9B1qB,KAAKmqB,SAASnqB,KAAMqqB,EAAI/J,GAC/BqK,EAAqC,IAA9B3qB,KAAKmqB,SAASnqB,KAAMsqB,EAAIhK,GAE/BsK,EAAOJ,GAAQ,GAAKzS,EAAIlR,KAAKC,MAAMiR,KAAQ0S,GAAS1S,EAAIlR,KAAKC,MAAMiR,IACnE8S,EAAOH,GAAQ,GAAK3S,EAAIlR,KAAKC,MAAMiR,KAAQ4S,GAAS5S,EAAIlR,KAAKC,MAAMiR,IAGzE,OAFY6S,GAAQ,GAAK9S,EAAIjR,KAAKC,MAAMgR,KAAQ+S,GAAS/S,EAAIjR,KAAKC,MAAMgR,GAG5E,CAEOgT,0BAA0B/S,EAAWD,GAExC,IAAIuS,EACCC,EACAC,EACDjK,EAEAtgB,KAAKiqB,OACLlS,EAAIlR,KAAK8Q,IAAI9Q,KAAKuK,IAAI2G,EAAG/X,KAAK8W,MAAQ,GAAI,GAC1CgB,EAAIjR,KAAK8Q,IAAI9Q,KAAKuK,IAAI0G,EAAG9X,KAAK+W,OAAS,GAAI,GAM3CsT,EAAKxjB,KAAKC,MAAMiR,GAChBuS,EAAMzjB,KAAK8Q,IAAI9Q,KAAKuK,IAAIiZ,EAAG,EAAGrqB,KAAK8W,MAAQ,GAAI,GAC7CyT,EAAK1jB,KAAKC,MAAMgR,GACjBwI,EAAIzZ,KAAK8Q,IAAI9Q,KAAKuK,IAAImZ,EAAG,EAAGvqB,KAAK+W,OAAS,GAAI,KAE/CgB,GAAKA,EAAE/X,KAAK8W,MAAQ9W,KAAK8W,OAAS9W,KAAK8W,MACvCgB,GAAKA,EAAE9X,KAAK+W,OAAS/W,KAAK+W,QAAU/W,KAAK+W,OAG7CsT,EAAS,EAAJtS,EACLuS,GAAMvS,EAAG,EAAI,GAAG/X,KAAK8W,MACnByT,EAAS,EAAJzS,EACNwI,GAAMxI,EAAG,EAAI,GAAG9X,KAAK+W,QAKtB,MAAMyT,EAAOxqB,KAAK+qB,UAAU/qB,KAAMqqB,EAAIE,GAChCE,EAAOzqB,KAAK+qB,UAAU/qB,KAAMsqB,EAAIC,GAChCG,EAAO1qB,KAAK+qB,UAAU/qB,KAAMqqB,EAAI/J,GAChCqK,EAAO3qB,KAAK+qB,UAAU/qB,KAAMsqB,EAAIhK,GAEtC,OAAOtgB,KAAKgrB,gBAAgBjT,EAAGD,EAAG0S,EAAMC,EAAOC,EAAMC,EACzD,CAEOI,UAAU/T,EAAkBe,EAAWD,GAC1C,OAAO9X,KAAKgX,QAAQe,EAAID,EAAI9X,KAAK8W,MACrC,CAKO2N,mCAAmC1M,EAAWD,GACjD,IAKI0S,EACAC,EACAC,EACAC,EARAN,EAAS,EAAJtS,EACLuS,EAAe,GAAL,EAAJvS,GACNwS,EAAS,EAAJzS,EACLwI,EAAe,GAAL,EAAJxI,GAuBV,OAhBI9X,KAAKiqB,OACJI,EAAKxjB,KAAK8Q,IAAI9Q,KAAKuK,IAAIiZ,EAAIrqB,KAAK8W,MAAQ,GAAI,GAC5CwT,EAAKzjB,KAAK8Q,IAAI9Q,KAAKuK,IAAIkZ,EAAItqB,KAAK8W,MAAQ,GAAI,GAC5CyT,EAAK1jB,KAAK8Q,IAAI9Q,KAAKuK,IAAImZ,EAAIvqB,KAAK+W,OAAS,GAAI,GAC7CuJ,EAAKzZ,KAAK8Q,IAAI9Q,KAAKuK,IAAIkP,EAAItgB,KAAK+W,OAAS,GAAI,GAE7CyT,EAAOxqB,KAAK+qB,UAAU/qB,KAAMqqB,EAAIE,GAChCE,EAAOzqB,KAAK+qB,UAAU/qB,KAAMsqB,EAAIC,GAChCG,EAAO1qB,KAAK+qB,UAAU/qB,KAAMqqB,EAAI/J,GAChCqK,EAAO3qB,KAAK+qB,UAAU/qB,KAAMsqB,EAAIhK,KAEjCkK,EAAOxqB,KAAKirB,mBAAmBjrB,KAAMqqB,EAAIE,GACzCE,EAAOzqB,KAAKirB,mBAAmBjrB,KAAMsqB,EAAIC,GACzCG,EAAO1qB,KAAKirB,mBAAmBjrB,KAAMqqB,EAAI/J,GACzCqK,EAAO3qB,KAAKirB,mBAAmBjrB,KAAMsqB,EAAIhK,IAEtCtgB,KAAKgrB,gBAAgBjT,EAAGD,EAAG0S,EAAMC,EAAMC,EAAMC,EACxD,CAEOM,mBAAmBjU,EAAkBe,EAAWD,GACnD,OAAO9X,KAAKgX,SAASe,EAAK/X,KAAK8W,MAAM,IAAOgB,EAAG9X,KAAK+W,OAAO,GAAM/W,KAAK8W,MAC1E,CAEOoU,UAAUlU,EAAkBe,EAAWD,GAC1C,OAAO9X,KAAKgX,SACLe,EAAI/X,KAAK8W,MAAS9W,KAAK8W,OAAS9W,KAAK8W,OACrCgB,EAAI9X,KAAK+W,OAAU/W,KAAK+W,QAAU/W,KAAK+W,OAAU/W,KAAK8W,MACjE,CAEQkU,gBAAgBjT,EAAGD,EAAG0S,EAAMC,EAAMC,EAAMC,GAE5C,MAAMQ,EAAQpT,GAAS,EAAJA,GACbqT,EAAQtT,GAAS,EAAJA,GACbuT,EAAgB,EAAIF,EACpBG,EAAgB,EAAIF,EAsC1B,QApCsB,IAAPZ,GAKSa,GAJF,IAAPZ,GAIkCU,GAE1BG,IALD,IAAPZ,GAISW,GAHF,IAAPV,GAGkCQ,GACAC,IAElCZ,GAAQ,EAAI,KAKHa,GAJTZ,GAAQ,EAAI,KAIsBU,GAE1BG,IALRZ,GAAQ,EAAI,KAIHW,GAHTV,GAAQ,EAAI,KAGsBQ,GACAC,GAoBzB,IAlBTZ,GAAQ,GAAK,KAKJa,GAJTZ,GAAQ,GAAK,KAIqBU,GAE1BG,IALRZ,GAAQ,GAAK,KAIJW,GAHTV,GAAQ,GAAK,KAGqBQ,GACAC,GAWZ,KATtBZ,GAAQ,GAAK,KAKJa,GAJTZ,GAAQ,GAAK,KAIqBU,GAE1BG,IALRZ,GAAQ,GAAK,KAIJW,GAHTV,GAAQ,GAAK,KAGqBQ,GACAC,GAEE,EACvD,ECzIG,MAAMG,EAEFhT,2BAA6B,EAE7B6P,UACAkB,UAGA7S,YACAiM,QAEAuC,SAAqBnM,EAASoM,KAE9BsG,OACAjH,IACAuB,mBAAqB,IAAItE,EAA8BxhB,MACvDyrB,2BAA6B,IAAIlI,EAA2BvjB,MAE5D0rB,iBAAmB,IAAIlV,EAAiBxW,MAEvC2rB,0BACDC,eAAiB,IAAIjJ,EAAkB3iB,MACvC6rB,iBAAmB,IAAIxI,EAAkBrjB,MACzC8rB,UAEAC,kBAA4B,EAC5BC,eAAiB,EACjBC,aAAe,EAEfnV,MACAC,OACCmV,UACAC,iBAEAC,MAAQ,IAAI/Q,EAEZgR,MAQAC,UAQAC,aAAe,IAAI/D,EAA2BxoB,MAC/C6nB,WAAavN,QACZtD,QAAU,IAAI8S,EAEtBpT,YAAYI,EAAeC,GACvB/W,KAAK8W,MAAQA,EACb9W,KAAK+W,OAASA,EAEd/W,KAAKksB,UAAY,IAAIM,UAAU1V,EAAOC,GACtC/W,KAAK0iB,QAAU,IAAI+J,aAAa3V,EAAQC,GACxC,MAAM2V,EAAc,IAAIxiB,YAAYlK,KAAK8W,MAAQ9W,KAAK+W,OAASwU,EAAYoB,qBAC3E3sB,KAAKmsB,iBAAmB,IAAIS,kBAAkBF,GAC9C1sB,KAAKyW,YAAc,IAAIoW,YAAYH,GACnC1sB,KAAK8rB,UAAY,IAAIe,YAAY/V,EAAQC,GAE5C/W,KAAK2rB,0BAA4B,IAAI/F,EAA2B5lB,MAC7DA,KAAKooB,UAAY,IAAIjM,EAAS,EAAG,GACjCnc,KAAKspB,UAAY,IAAInN,EAASrF,EAAQ,EAAGC,EAAS,GAElD/W,KAAK6nB,WAAa,IAAIvN,MAClB,IAAIsP,EAAc5pB,MAClB,IAAI2pB,EAAa3pB,MACjB,IAAIkoB,EAAeloB,MACnB,IAAI6pB,EAAY7pB,MAExB,CAEOmlB,YAAYC,GACfplB,KAAKilB,SAAWG,CACpB,CAEO0H,WAAW9V,GACdhX,KAAKukB,IAAMvN,CACf,CAYO+V,eAEH,OADA/sB,KAAKksB,UAAUzqB,KAAK4N,IAAIrP,KAAKmsB,kBACtBnsB,KAAKksB,SAChB,CAEOc,QACH,MAAMtU,EAAgBJ,EAAM2U,MAAMzU,iBAC5BpW,EAAgBpC,KAAK8W,MAAQ9W,KAAK+W,OACxC,IAAK,IAAIvW,EAAI,EAAGA,EAAI4B,EAAO5B,IACvBR,KAAKyW,YAAYjW,GAAKkY,CAE9B,CAEOwU,iBAAiBxU,GACpB1Y,KAAKyW,YAAY0W,KAAKzU,EAC1B,CAEO0K,UAAUrL,EAAWD,EAAWY,GACnC1Y,KAAKyW,YAAYsB,EAAID,EAAI9X,KAAK8W,OAAS4B,CAE3C,CACO0U,WAAWrV,EAAWD,EAAWY,EAAeT,GACnD,MAAM5U,EAAgB0U,EAAID,EAAI9X,KAAK8W,MAC7BoB,EAAe,EAAID,EACnBI,GAAOrY,KAAKyW,YAAYpT,IAAU,EAAK,KAAQ,GAC7CqV,GAAS,EAAK,KAAQ,EAAW,EACnCnJ,GAAOvP,KAAKyW,YAAYpT,IAAU,EAAK,KAAQ,GAC/CqV,GAAS,EAAK,KAAQ,EAAW,EACjCvR,GAAOnH,KAAKyW,YAAYpT,IAAU,GAAM,KAAQ,GAChDqV,GAAS,GAAM,KAAQ,EAAW,EACxC1Y,KAAKyW,YAAYsB,EAAID,EAAI9X,KAAK8W,OAASuB,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,EAE9E,CAEOkmB,WAAWtV,EAAWD,EAAWY,EAAe4U,GAEnD,MAAMjqB,EAAgB0U,EAAID,EAAI9X,KAAK8W,MAC7BmB,GAAUS,GAAS,GAAM,KAAQ,IAAM4U,EACvCpV,EAAe,EAAID,EAEnBI,GAAOrY,KAAKyW,YAAYpT,IAAU,EAAK,KAAQ,GAC7CqV,GAAS,EAAK,KAAQ,EAAW,EACnCnJ,GAAOvP,KAAKyW,YAAYpT,IAAU,EAAK,KAAQ,GAC/CqV,GAAS,EAAK,KAAQ,EAAW,EACjCvR,GAAOnH,KAAKyW,YAAYpT,IAAU,GAAM,KAAQ,GAChDqV,GAAS,GAAM,KAAQ,EAAW,EAExC1Y,KAAKyW,YAAYpT,GAASgV,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,EACjE,CAUAomB,qBAAqBxV,EAAWD,EAAWY,GACvC,GAAKX,EAAI,GAAKA,GAAK/X,KAAK8W,OAAWgB,EAAI,GAAKA,GAAK9X,KAAK+W,OAAS,OAC/D,MAAMyW,EAAW3mB,KAAKC,MAAMiR,GACtB0V,EAAW5mB,KAAKC,MAAMgR,GAGtB4V,GAFW,EAAI7mB,KAAKoc,IAAIlL,EAAIyV,KACjB,EAAI3mB,KAAKoc,IAAInL,EAAI2V,IAElCztB,KAAKqtB,WAAWG,EAAUC,EAAU/U,EAAOgV,EAC/C,CAMAC,iBAAiB5V,EAAWD,EAAWY,GACnC,GAAKX,EAAI,GAAKA,GAAK/X,KAAK8W,OAAWgB,EAAI,GAAKA,GAAK9X,KAAK+W,OAAS,OAC/D,MAAMyW,EAAW3mB,KAAK0b,MAAMxK,GACtB0V,EAAW5mB,KAAK0b,MAAMzK,GAC5B9X,KAAKojB,UAAUoK,EAAUC,EAAU/U,EACvC,CAOAkV,4BAA4B7V,EAAWD,EAAWY,GAC9C,KAAKX,EAAI,GAAKA,GAAK/X,KAAK8W,OAAWgB,EAAI,GAAKA,GAAK9X,KAAK+W,QACtD,IAAK,IAAIyW,EAAW3mB,KAAKC,MAAMiR,GAAIyV,GAAY3mB,KAAKgnB,KAAK9V,GAAIyV,IACzD,IAAK,IAAIC,EAAW5mB,KAAKC,MAAMgR,GAAI2V,GAAY5mB,KAAKgnB,KAAK/V,GAAI2V,IAAY,CACrE,MAEMC,GAFW,EAAI7mB,KAAKoc,IAAIlL,EAAIyV,KACjB,EAAI3mB,KAAKoc,IAAInL,EAAI2V,IAElCztB,KAAKotB,WAAWI,EAAUC,EAAU/U,EAAOgV,E,CAGvD,CAEOI,UAAU/V,EAAWD,GACxB,OAAO9X,KAAKyW,YAAYsB,EAAID,EAAI9X,KAAK8W,MACzC,CAEOiX,SAAShW,EAAGD,EAAGhB,EAAO4B,GACzB,IAAIyH,EAAQpI,EAAID,EAAI9X,KAAK8W,MAEzB,IAAK,IAAItW,EAAI,EAAGA,EAAIsW,EAAOtW,IACvBR,KAAKyW,YAAY0J,KAAWzH,CAEpC,CAEOsV,UAAUjW,EAAWD,EAAWhB,EAAeC,EAAgB2B,GAClE,IAAIyH,EAAQpI,EAAID,EAAI9X,KAAK8W,MACzB,IAAK,IAAIoF,EAAI,EAAGA,EAAInF,EAAQmF,IAAK,CAC7B,IAAK,IAAI1b,EAAI,EAAGA,EAAIsW,EAAOtW,IAEvBR,KAAKyW,YAAY0J,KAAWzH,EAGhCyH,GAASngB,KAAK8W,MAAQA,C,CAE9B,CAEOmX,SAASlW,EAAWD,EAAWoW,EAAclX,GAChD,IAAImX,EAAOpW,EACX,MAAMqW,EAAa,IAAIviB,WAAW,GAClC,IAAK,IAAIrL,EAAI,EAAGA,EAAI0tB,EAAK5tB,OAAQE,IAAK,CAClC,MAAM6C,EAAQ6qB,EAAKriB,WAAWrL,GAAK4tB,EAC7B5P,EAA8B,EAAzB3X,KAAKC,MAAMzD,EAAQ,IACxBob,EAA8B,EAAzB5X,KAAKC,MAAMzD,EAAQ,IAC9BrD,KAAKquB,yBAAyBF,EAAMrW,EAAG0G,EAAIC,EAAI,EAAG,EAAGzH,GACrDmX,GAAQ,C,CAEhB,CAEOG,iBAEH,IAAK,IAAI9tB,EAAI,EAAGA,EAAI,GAAIA,IACpB,IAAK,IAAIuX,EAAI,EAAGA,EAAI/X,KAAK8W,MAAOiB,IAC5B/X,KAAKyW,aAHC,IAGoBjW,GAAKR,KAAK8W,MAAQiB,GAAK/X,KAAKyW,aAHhD,IAGyE,EAAJjW,EAAQ,GAAKR,KAAK8W,MAAQiB,EACjGmI,EAAaqO,YAAY,EAAG,GAAI/tB,IAA+C,GAAzCqG,KAAKmV,IAAiB,KAAbwS,KAAKC,MAAoB,GAAJjuB,IAAiB,EAGrG,CAEOkuB,iBAAiBC,EAAYC,EAAYC,EAAYC,EAAYhY,EAAeC,EAAgBC,EAAkBsW,GACrH,IAAK,IAAIrU,EAAI,EAAGA,EAAInC,EAAOmC,IACvB,IAAK,IAAI8V,EAAI,EAAGA,EAAIhY,EAAQgY,IAAK,CAC7B,MAAMC,EAAYH,EAAK5V,GAAO6V,EAAKC,GAAK/X,EAAQF,MAC1CmY,EAAWN,EAAK1V,GAAO2V,EAAKG,GAAK/uB,KAAK8W,MACtCmB,GAAUjB,EAAQA,QAAQgY,IAAa,GAAM,KAAQ,IAAM1B,EAC3DpV,EAAe,EAAID,EAEnBI,GAAOrY,KAAKyW,YAAYwY,IAAY,EAAK,KAAQ,GAAmBjY,EAAQA,QAAQgY,IAAa,EAAK,KAAQ,EAAW,EACzHzf,GAAOvP,KAAKyW,YAAYwY,IAAY,EAAK,KAAQ,GAAmBjY,EAAQA,QAAQgY,IAAa,EAAK,KAAQ,EAAW,EACzH7nB,GAAOnH,KAAKyW,YAAYwY,IAAY,GAAM,KAAQ,GAAmBjY,EAAQA,QAAQgY,IAAa,GAAM,KAAQ,EAAW,EAEjIhvB,KAAKyW,YAAYwY,GAAW5W,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,E,CAG3E,CAEOknB,yBAAyBM,EAAYC,EAAYC,EAAYC,EAAYhY,EAAeC,EAAgBC,GAC3G,IAAIgY,EAAWH,EAAKC,EAAK9X,EAAQF,MAC7BmY,EAAUN,EAAKC,EAAK5uB,KAAK8W,MAE7B,IAAK,IAAIiY,EAAI,EAAGA,EAAIhY,EAAQgY,IAAK,CAC7B,IAAK,IAAI9V,EAAI,EAAGA,EAAInC,EAAOmC,IAAK,CAC5B,MAAMP,EAAQ1B,EAAQA,QAAQgY,GAClB,WAARtW,IACA1Y,KAAKyW,YAAYwY,GAAWvW,GAEhCsW,IACAC,G,CAEJD,GAAYhY,EAAQF,MAAQA,EAC5BmY,GAAWjvB,KAAK8W,MAAQA,C,CAEhC,CAGOoY,qBAAqBnX,EAAWD,EAAWd,EAAkB0B,GAEhE,IAAIuW,EAAUlX,EAAID,EAAI9X,KAAK8W,MACvBkY,EAAW,EAEf,IAAK,IAAID,EAAI,EAAGA,EAAI/X,EAAQD,OAAQgY,IAAK,CACrC,IAAK,IAAI9V,EAAI,EAAGA,EAAIjC,EAAQF,MAAOmC,IAAK,CACpC,MAAMkW,EAAUnY,EAAQA,QAAQgY,GAG1B3W,GAAK8W,GAAW,EAAI,KAAQzW,EAAML,EAAI,IACtC9I,GAAK4f,GAAW,EAAI,KAAQzW,EAAMnJ,EAAI,IACtCpI,GAAKgoB,GAAW,GAAK,KAAQzW,EAAMvR,EAAI,IAE7CnH,KAAKyW,YAAYwY,GAAW5W,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,GAE/D6nB,IACAC,G,CAGJA,GAAWjvB,KAAK8W,MAAQE,EAAQF,K,CAExC,CAEOsY,uBAAuBT,EAAYC,EAAYC,EAAYC,EAAYhY,EAAeC,EAAgBC,GACzG,IAAIgY,EAAWH,EAAKC,EAAK9X,EAAQF,MAC7BmY,EAAUN,EAAKC,EAAK5uB,KAAK8W,MAE7B,IAAK,IAAIiY,EAAI,EAAGA,EAAIhY,EAAQgY,IAAK,CAC7B,IAAK,IAAI9V,EAAI,EAAGA,EAAInC,EAAOmC,IACvBjZ,KAAKyW,YAAYwY,GAAWjY,EAAQA,QAAQgY,GAC5CA,IACAC,IAEJD,GAAYhY,EAAQF,MAAQA,EAC5BmY,GAAWjvB,KAAK8W,MAAQA,C,CAEhC,CAUOyB,aAAa8W,EAAYC,EAAYC,GAExC,GAAI,IAAMA,EACN,OAAOF,EAGX,GAAI,MAAQE,EACR,OAAOD,EAGX,MAAME,EAAoB,IAAMD,EAchC,OAAO,aAXkB,SAALD,IAAoB,IAChBC,IAFC,SAALF,IAAoB,IAEFG,GAAc,GAU3B,KAPA,MAALF,IAAoB,GAChBC,IAFC,MAALF,IAAoB,GAEFG,GAAc,GAMjB,GAHV,IAALF,GACIC,GAFC,IAALF,GAEkBG,GAAc,CAGxD,CAGOjX,gBAAgB8W,EAAYC,GAE/B,MAAMG,EAAMJ,GAAM,GAAM,IAClBK,EAAML,GAAO,EAAK,IAClBM,EAAkB,IAAZN,EAENO,EAAMN,GAAM,GAAM,IAClBO,EAAMP,GAAO,EAAK,IAClBQ,EAAkB,IAAZR,EAMZ,OAAQ,KAAQ,IAJNG,EAAKG,EAAK,IAAOH,EAAKG,EAAK,MAIX,IAHhBF,EAAKG,EAAK,IAAOH,EAAKG,EAAK,MAGD,GAF1BF,EAAKG,EAAK,IAAOH,EAAKG,EAAK,IAGvC,CAEKC,gBAAgBpB,EAAYC,EAAYC,EAAYC,EAAYhY,EAAeC,EAAgBC,EAAsBgZ,EAAoB1C,GAC5I,IAAI0B,EAAWH,EAAKC,EAAKkB,EACrBf,EAAUN,EAAKC,EAAK5uB,KAAK8W,MAE7B,IAAK,IAAIiY,EAAI,EAAGA,EAAIhY,EAAQgY,IAAK,CAC7B,IAAK,IAAI9V,EAAI,EAAGA,EAAInC,EAAOmC,IAAK,CAC5B,MAAMhB,GAAUjB,EAAQgY,IAAa,GAAM,KAAQ,IAAM1B,EACnDpV,EAAe,EAAID,EAEnBgY,EAAUjwB,KAAKyW,YAAYwY,GAC3BE,EAAUnY,EAAQgY,GAElB3W,GAAK4X,GAAW,EAAI,KAAQ/X,GAAgBiX,GAAW,EAAI,KAAQlX,EACnE1I,GAAK0gB,GAAW,EAAI,KAAQ/X,GAAgBiX,GAAW,EAAI,KAAQlX,EACnE9Q,GAAK8oB,GAAW,GAAK,KAAQ/X,GAAgBiX,GAAW,GAAK,KAAQlX,EAE3EjY,KAAKyW,YAAYwY,GAAW5W,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,GAC/D6nB,IACAC,G,CAEJD,GAAYgB,EAAalZ,EACzBmY,GAAWjvB,KAAK8W,MAAQA,C,CAEhC,CAEOoZ,mBAAmBvB,EAAYC,EAAYC,EAAYC,EAAYhY,EAAeC,EAAgBC,EAAkBsW,GACvH,IAAI0B,EAAWH,EAAKC,EAAK9X,EAAQF,MAC7BmY,EAAUN,EAAKC,EAAK5uB,KAAK8W,MAE7B,IAAK,IAAIiY,EAAI,EAAGA,EAAIhY,EAAQgY,IAAK,CAC7B,IAAK,IAAI9V,EAAI,EAAGA,EAAInC,EAAOmC,IAAK,CAC5B,MAAMhB,GAAUjB,EAAQA,QAAQgY,IAAa,GAAM,KAAQ,IAAM1B,EAE3D2C,EAAUjwB,KAAKyW,YAAYwY,GAC3BE,EAAUnY,EAAQA,QAAQgY,GAE1B3W,EAAIxR,KAAKuK,IAAI,KAAM6e,GAAW,EAAI,MAASd,GAAW,EAAI,KAAQlX,GAClE1I,EAAI1I,KAAKuK,IAAI,KAAM6e,GAAW,EAAI,MAASd,GAAW,EAAI,KAAQlX,GAClE9Q,EAAIN,KAAKuK,IAAI,KAAM6e,GAAW,GAAK,MAASd,GAAW,GAAK,KAAQlX,GAE1EjY,KAAKyW,YAAYwY,GAAW5W,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,GAC/D6nB,IACAC,G,CAEJD,GAAYhY,EAAQF,MAAQA,EAC5BmY,GAAWjvB,KAAK8W,MAAQA,C,CAEhC,CAEOqZ,WACH,MAAMC,EAAO,IACPC,EAAO,GAEb,IAAK,IAAItY,EAAI,EAAGA,EAAI,GAAIA,IACpB,IAAK,IAAID,EAAI,EAAGA,EAAI,GAAIA,IACpB9X,KAAKswB,SAAa,GAAJvY,EAASqY,EAAU,GAAJtY,EAASuY,EAAM,GAAI,GAAIrwB,KAAK8tB,UAAc,GAAJ/V,EAASqY,EAAU,GAAJtY,EAASuY,IAGnGrwB,KAAK4iB,YAAY,IAAI1H,EAASkV,EAAMC,GAAO,IAAM,IAAInV,EAASkV,IAAeC,GAAO,IAAM,YAC1FrwB,KAAK4iB,YAAY,IAAI1H,EAASkV,EAAMC,KAAgB,IAAM,IAAInV,EAASkV,IAAeC,KAAgB,IAAM,YAC5GrwB,KAAK4iB,YAAY,IAAI1H,EAASkV,EAAMC,GAAO,IAAM,IAAInV,EAASkV,EAAMC,KAAgB,IAAM,YAC1FrwB,KAAK4iB,YAAY,IAAI1H,EAASkV,IAAeC,GAAO,IAAM,IAAInV,EAASkV,IAAeC,KAAgB,IAAM,WAChH,CAEOE,0BAA0BpjB,EAAkBqjB,EAAmBC,EAAS,GAC3E,IAAIjwB,EAAIR,KAAK8W,MAAQ9W,KAAK+W,OAAS,GAAK,EACpC/V,EAAIhB,KAAK8W,MAAQ9W,KAAK+W,OACtB2Z,EAAI1wB,KAAK8W,OAAS9W,KAAK+W,OAAS0Z,GACpC,OAASjwB,GACL2M,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GACxCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GACxCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GACxCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GAExCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GACxCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GACxCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GACxCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GAExCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GACxCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GACxCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GACxCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GAExCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GACxCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GACxCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,GACxCvjB,IAAMnM,GAAKwvB,IAAOE,GAAIvjB,IAAMnM,GAAKwvB,IAAOE,EAEhD,CAGOC,oBAAoBH,EAAmBrjB,GAC1CqjB,EAAKnhB,IAAIlC,EACb,CAEOyjB,MAAMC,EAAqB7Z,EAAkBoE,EAAgB,KAChE,MAAM0V,EAAM,IAAIpQ,EAChBoQ,EAAIjQ,QAAQgQ,GACZ,IAAK,IAAI/Y,EAAI,EAAGA,EAAI9X,KAAK+W,OAAQe,IAC7B9X,KAAK+vB,gBAAgB,EAAGjY,EAAGjR,KAAKC,MAAMgqB,EAAIlQ,YAAc5J,EAAQA,QAAQ1W,OAASN,KAAK8W,QAAS,EAAG9W,KAAK8W,MAAO,EAAGE,EAAQA,QAASA,EAAQF,MAAOsE,EAEzJ,CAEO2V,sBAAsBna,EAAYC,EAAYC,EAAeC,EAAgBC,EAAkBgC,GAClG,MAAM9B,EAAQF,EAAQF,MAAQA,EACxBK,EAAQH,EAAQD,OAASA,EAC/B,IAGIK,EACAC,EACAC,EACAC,EAkBAC,EAxBAC,EAAK,EACLC,EAAK,EAOT,GAAIb,EAAKE,EAAS,GACdF,EAAM7W,KAAK+W,OAAS,GACpBH,EAAKE,EAAQ,GACbF,EAAM5W,KAAK8W,MAAQ,EACnB,OAGAD,EAAK,GACLa,EAAKP,GAASN,EACdO,EAAaL,EAASF,EAAMhQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,GAChEO,EAAS,IAETA,EAAST,EACTO,EAAYL,EAASlQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,IAKzDH,EAAK,GACLY,EAAgBC,EAAKP,GAASN,EAC9BS,EAAYP,EAAQF,EAAM/P,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,GAC5DS,EAAS,IAETC,EAAgB,EAChBD,EAASX,EACTS,EAAWP,EAAQjQ,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,IAGzD,IAAIe,EAAS,EAAW,EAAW7X,KAAK8W,MACxC,IAAK,IAAIgB,EAAI,EAAGA,EAAIV,EAAWU,IAAK,CAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAUU,IAAK,CAC/B,GAAI/X,KAAK0iB,QAAQ7K,GAAUmB,EAAG,CAC1BhZ,KAAK0iB,QAAQ7K,GAAUmB,EACvB,MAAMhB,EAAenR,KAAKuK,IAAS,EAALqG,EAAQT,EAAQF,MAAQ,GAAKjQ,KAAKuK,IAAS,EAALsG,EAAQV,EAAQD,OAAS,GAAKC,EAAQF,MAEpGuB,GAAKrY,KAAKyW,YAAYoB,IAAW,EAAI,MAASb,EAAQA,QAAQgB,IAAiB,EAAI,KACnFzI,GAAKvP,KAAKyW,YAAYoB,IAAW,EAAI,MAASb,EAAQA,QAAQgB,IAAiB,EAAI,KACnF7Q,GAAKnH,KAAKyW,YAAYoB,IAAW,GAAK,MAASb,EAAQA,QAAQgB,IAAiB,GAAK,KAE3FhY,KAAKyW,YAAYoB,GAAUQ,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,E,CAElEsQ,GAAMN,EACNU,G,CAEJH,GAAMP,EACNM,EAAKD,EACLK,IAAWR,EAAWrX,KAAK8W,K,CAEnC,CAEOka,aAAapa,EAAYC,EAAYC,EAAeC,EAAgBC,EAAkBgC,EAAW/B,GACpG,MAAMC,EAAQF,EAAQF,MAAQA,EACxBK,EAAQH,EAAQD,OAASA,EAC/B,IAGIK,EACAC,EACAC,EACAC,EAkBAC,EAxBAC,EAAK,EACLC,EAAK,EAOT,GAAIb,EAAKE,EAAS,GACdF,EAAM7W,KAAK+W,OAAS,GACpBH,EAAKE,EAAQ,GACbF,EAAM5W,KAAK8W,MAAQ,EACnB,OAGAD,EAAK,GACLa,EAAKP,GAASN,EACdO,EAAaL,EAASF,EAAMhQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,GAChEO,EAAS,IAETA,EAAST,EACTO,EAAYL,EAASlQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,IAKzDH,EAAK,GACLY,EAAgBC,EAAKP,GAASN,EAC9BS,EAAYP,EAAQF,EAAM/P,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,GAC5DS,EAAS,IAETC,EAAgB,EAChBD,EAASX,EACTS,EAAWP,EAAQjQ,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,IAGzD,MAAMc,EAAa,EAAI,IAAMX,EAC7B,IAAIY,EAAS,EAAW,EAAW7X,KAAK8W,MACxC,IAAK,IAAIgB,EAAI,EAAGA,EAAIV,EAAWU,IAAK,CAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAUU,IAAK,CAC/B,GAAI/X,KAAK0iB,QAAQ7K,GAAUmB,EAAG,CAE1B,MAAMhB,EAAenR,KAAKuK,IAAS,EAALqG,EAAQT,EAAQF,MAAQ,GAAKjQ,KAAKuK,IAAS,EAALsG,EAAQV,EAAQD,OAAS,GAAKC,EAAQF,MAEpGmB,GAASjB,EAAQA,QAAQgB,IAAiB,GAAK,KAAQJ,EACvDM,EAAe,EAAID,EACnBE,EAAmBnY,KAAKyW,YAAYoB,GACpCO,EAAepB,EAAQA,QAAQgB,GAE/BK,GAAKF,GAAoB,EAAI,KAAQD,GAAgBE,GAAgB,EAAI,KAAQH,EACjF1I,GAAK4I,GAAoB,EAAI,KAAQD,GAAgBE,GAAgB,EAAI,KAAQH,EACjF9Q,GAAKgR,GAAoB,GAAK,KAAQD,GAAgBE,GAAgB,GAAK,KAAQH,EAEzFjY,KAAKyW,YAAYoB,GAAUQ,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,E,CAElEsQ,GAAMP,EACNW,G,CAEJH,GAAMP,EACNM,EAAKD,EACLK,IAAWR,EAAWrX,KAAK8W,K,CAEnC,CAEOma,cACHra,EAAYC,EAAYC,EAAeC,EAAgBC,EAAkBgC,EAAW/B,EACpFia,EAAiB,EAAGC,GACpB,MAAMja,EAAQF,EAAQF,MAAQA,EACxBK,EAAQga,EAASpa,EACvB,IAEIK,EACAC,EACAC,EACAC,EAeAC,EApBAC,EAAK,EACLC,EAAK,EAKT,GAAIb,EAAKE,EAAS,GACdF,EAAM7W,KAAK+W,OAAS,GACpBH,EAAKE,EAAQ,GACbF,EAAM5W,KAAK8W,MAAQ,EACnB,OAEAD,EAAK,GACLa,EAAKP,GAASN,EACdO,EAAaL,EAASF,EAAMhQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,GAChEO,EAAS,IAETA,EAAST,EACTO,EAAYL,EAASlQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,IAGzDH,EAAK,GACLY,EAAgBC,EAAKP,GAASN,EAC9BS,EAAYP,EAAQF,EAAM/P,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,GAC5DS,EAAS,IAETC,EAAgB,EAChBD,EAASX,EACTS,EAAWP,EAAQjQ,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,IAEzD,MAAMc,EAAa,EAAI,IAAMX,EAC7B,IAAIY,EAAS,EAAW,EAAW7X,KAAK8W,MACxC,IAAK,IAAIgB,EAAI,EAAGA,EAAIV,EAAWU,IAAK,CAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAUU,IAAK,CAC/B,GAAI/X,KAAK0iB,QAAQ7K,GAAUmB,EAAG,CAE1B,MAAMhB,EAAenR,KAAKuK,IAAS,EAALqG,EAAQT,EAAQF,MAAQ,GAAKjQ,KAAKuK,IAAS,EAALsG,EAAQyZ,EAAS,GAAKna,EAAQF,MAC9Fqa,EAASna,EAAQF,MAAQoa,EAEvBjZ,GAASjB,EAAQA,QAAQgB,IAAiB,GAAK,KAAQJ,EACvDM,EAAe,EAAID,EACnBE,EAAmBnY,KAAKyW,YAAYoB,GACpCO,EAAepB,EAAQA,QAAQgB,GAE/BK,GAAKF,GAAoB,EAAI,KAAQD,GAAgBE,GAAgB,EAAI,KAAQH,EACjF1I,GAAK4I,GAAoB,EAAI,KAAQD,GAAgBE,GAAgB,EAAI,KAAQH,EACjF9Q,GAAKgR,GAAoB,GAAK,KAAQD,GAAgBE,GAAgB,GAAK,KAAQH,EAEzFjY,KAAKyW,YAAYoB,GAAUQ,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,E,CAElEsQ,GAAMP,EACNW,G,CAEJH,GAAMP,EACNM,EAAKD,EACLK,IAAWR,EAAWrX,KAAK8W,K,CAEnC,CAEOsa,iBACHxa,EAAYC,EAAYC,EAAeC,EAAgBC,EAAkBgC,EAAW/B,EACpFia,EAAiB,EAAGC,EAAgBE,EAAU,EAAEC,EAAU,EAAEC,EAAU,GACtE,MAAMra,EAAQF,EAAQF,MAAQA,EACxBK,EAAQga,EAASpa,EACvB,IAGIK,EACAC,EACAC,EACAC,EAkBAC,EAxBAC,EAAK,EACLC,EAAK,EAOT,GAAIb,EAAKE,EAAS,GACdF,EAAK7W,KAAK+W,OAAS,GACnBH,EAAKE,EAAQ,GACbF,EAAK5W,KAAK8W,MAAQ,EAClB,OAGAD,EAAK,GACLa,EAAKP,GAASN,EACdO,EAAaL,EAASF,EAAMhQ,KAAK8Q,IAAId,EAAKE,EAAU/W,KAAW,OAAG,GAClEsX,EAAS,IAETA,EAAST,EACTO,EAAYL,EAASlQ,KAAK8Q,IAAId,EAAKE,GAAU/W,KAAK+W,OAAS,GAAI,IAK/DH,EAAK,GACLY,EAAgBC,EAAKP,GAASN,EAC9BS,EAAWxQ,KAAKgnB,KAAM/W,EAAQF,EAAM/P,KAAK8Q,IAAIf,EAAKE,EAAS9W,KAAU,MAAG,IACxEuX,EAAS,IAETC,EAAgB,EAChBD,EAASX,EACTS,EAAWxQ,KAAKgnB,KAAK/W,EAAQjQ,KAAK8Q,IAAIf,EAAKE,GAAS9W,KAAK8W,MAAQ,GAAI,KAKzEU,IAFoB3Q,KAAKgnB,KAAKjX,GAAMA,GAEbM,EACvBQ,IAFqB7Q,KAAKgnB,KAAKhX,GAAMA,GAExBM,EAEb,MAAMS,EAAa,EAAI,IAAMX,EAC7B,IAAIY,EAAShR,KAAKgnB,KAAKtW,GAAU1Q,KAAKgnB,KAAKvW,GAAUtX,KAAK8W,MAC1D,IAAK,IAAIgB,EAAI,EAAGA,EAAIV,EAAWU,IAAK,CAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAUU,IAAK,CAC/B,GAAI/X,KAAK0iB,QAAQ7K,GAAUmB,EAAG,CAE1B,MAAMhB,EAAenR,KAAKuK,IAAqB,EAAjBvK,KAAK0b,MAAM9K,GAAST,EAAQF,MAAQ,GAC9DjQ,KAAKuK,IAAqB,EAAjBvK,KAAK0b,MAAM7K,GAASyZ,EAAS,GAAKna,EAAQF,MACnDqa,EAASna,EAAQF,MAAQoa,EACvBjZ,GAASjB,EAAQA,QAAQgB,IAAiB,GAAK,KAAQJ,EACvDM,EAAe,EAAID,EACnBE,EAAmBnY,KAAKyW,YAAYoB,GACpCO,EAAepB,EAAQA,QAAQgB,GAC/BK,GAAKF,GAAoB,EAAI,KAAQD,GAAgBE,GAAgB,EAAI,KAAQH,EAAMoZ,EACvF9hB,GAAK4I,GAAoB,EAAI,KAAQD,GAAgBE,GAAgB,EAAI,KAAQH,EAAMqZ,EACvFnqB,GAAKgR,GAAoB,GAAK,KAAQD,GAAgBE,GAAgB,GAAK,KAAQH,EAAMsZ,EAC/FvxB,KAAKyW,YAAYoB,GAAUQ,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,E,CAElEsQ,GAAMP,EACNW,G,CAEJH,GAAMP,EACNM,EAAKD,EACLK,IAAWR,EAAWrX,KAAK8W,K,CAEnC,CAEO0a,oBAAoB5a,EAAYC,EAAYC,EAAeC,EAAgBC,EAAkBC,GAChG,MAAMC,EAAQF,EAAQF,MAAQA,EACxBK,EAAQH,EAAQD,OAASA,EAC/B,IAGIK,EACAC,EACAC,EACAC,EAkBAC,EAxBAC,EAAK,EACLC,EAAK,EAOT,GAAIb,EAAKE,EAAS,GACdF,EAAK7W,KAAK+W,OAAS,GACnBH,EAAKE,EAAQ,GACbF,EAAK5W,KAAK8W,MAAQ,EAClB,OAGAD,EAAK,GACLa,EAAKP,GAASN,EACdO,EAAaL,EAASF,EAAMhQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,GAChEO,EAAS,IAETA,EAAST,EACTO,EAAYL,EAASlQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,IAKzDH,EAAK,GACLY,EAAgBC,EAAKP,GAASN,EAC9BS,EAAYP,EAAQF,EAAM/P,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,GAC5DS,EAAS,IAETC,EAAgB,EAChBD,EAASX,EACTS,EAAWP,EAAQjQ,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,IAGzD,MAAMc,EAAa,EAAI,IAAMX,EAC7B,IAAIY,EAAS,EAAW,EAAW7X,KAAK8W,MACxC,IAAK,IAAIgB,EAAI,EAAGA,EAAIV,EAAWU,IAAK,CAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAUU,IAAK,CAE/B,MAAMC,EAAenR,KAAKuK,IAAS,EAALqG,EAAQT,EAAQF,MAAQ,GAAKjQ,KAAKuK,IAAS,EAALsG,EAAQV,EAAQD,OAAS,GAAKC,EAAQF,MAEpGmB,GAASjB,EAAQA,QAAQgB,IAAiB,GAAK,KAAQJ,EACvDM,EAAe,EAAID,EACnBE,EAAmBnY,KAAKyW,YAAYoB,GACpCO,EAAepB,EAAQA,QAAQgB,GAE/BK,GAAKF,GAAoB,EAAI,KAAQD,GAAgBE,GAAgB,EAAI,KAAQH,EACjF1I,GAAK4I,GAAoB,EAAI,KAAQD,GAAgBE,GAAgB,EAAI,KAAQH,EACjF9Q,GAAKgR,GAAoB,GAAK,KAAQD,GAAgBE,GAAgB,GAAK,KAAQH,EAEzFjY,KAAKyW,YAAYoB,GAAUQ,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,GAE9DsQ,GAAMP,EACNW,G,CAEJH,GAAMP,EACNM,EAAKD,EACLK,IAAWR,EAAWrX,KAAK8W,K,CAEnC,CAEO2a,iBAAiB7a,EAAYC,EAAYC,EAAeC,EAAgBC,EAAkBgC,EAAW/B,GACxG,MAAMC,EAAQF,EAAQF,MAAQA,EACxBK,EAAQH,EAAQD,OAASA,EAC/B,IAGIK,EACAC,EACAC,EACAC,EAkBAC,EAxBAC,EAAK,EACLC,EAAK,EAOT,GAAIb,EAAKE,EAAS,GACdF,EAAM7W,KAAK+W,OAAS,GACpBH,EAAKE,EAAQ,GACbF,EAAM5W,KAAK8W,MAAQ,EACnB,OAGAD,EAAK,GACLa,EAAKP,GAASN,EACdO,EAAaL,EAASF,EAAMhQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,GAChEO,EAAS,IAETA,EAAST,EACTO,EAAYL,EAASlQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,IAKzDH,EAAK,GACLY,EAAgBC,EAAKP,GAASN,EAC9BS,EAAYP,EAAQF,EAAM/P,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,GAC5DS,EAAS,IAETC,EAAgB,EAChBD,EAASX,EACTS,EAAWP,EAAQjQ,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,IAGzD,MAAMc,EAAa,EAAI,IAAMX,EAC7B,IAAIY,EAAS,EAAW,EAAW7X,KAAK8W,MACxC,IAAK,IAAIgB,EAAI,EAAGA,EAAIV,EAAWU,IAAK,CAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAUU,IAAK,CAC/B,GAAI/X,KAAK0iB,QAAQ7K,GAAUmB,EAAG,CAG1B,MAAM0Y,EAAQ7qB,KAAKuK,IAAIvK,KAAK8Q,IAAM,EAAIqB,EAAI,EAAIhZ,KAAK0iB,QAAQ7K,GAAW,GAAM,GAEtEG,EAAenR,KAAKuK,IAAS,EAALqG,EAAQT,EAAQF,MAAQ,GAAKjQ,KAAKuK,IAAS,EAALsG,EAAQV,EAAQD,OAAS,GAAKC,EAAQF,MAEpGmB,GAASjB,EAAQA,QAAQgB,IAAiB,GAAK,KAAQJ,EAAa8Z,EACpExZ,EAAe,EAAID,EAEnBI,GAAKrY,KAAKyW,YAAYoB,IAAW,EAAI,KAAQK,GAAgBlB,EAAQA,QAAQgB,IAAiB,EAAI,KAAQC,EAC1G1I,GAAKvP,KAAKyW,YAAYoB,IAAW,EAAI,KAAQK,GAAgBlB,EAAQA,QAAQgB,IAAiB,EAAI,KAAQC,EAC1G9Q,GAAKnH,KAAKyW,YAAYoB,IAAW,GAAK,KAAQK,GAAgBlB,EAAQA,QAAQgB,IAAiB,GAAK,KAAQC,EAElHjY,KAAKyW,YAAYoB,GAAUQ,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,E,CAElEsQ,GAAMP,EACNW,G,CAEJH,GAAMP,EACNM,EAAKD,EACLK,IAAWR,EAAWrX,KAAK8W,K,CAEnC,CAEO6a,QAAQjZ,EAAckZ,EAAkBC,GAC3C,MAAMC,EAA0B9xB,KAAK8W,MAAQ9W,KAAK+W,OAC5Cgb,GAAwBH,EAE9B,IAAK,IAAIvuB,EAAgB,EAAGA,EAAQyuB,EAAiBzuB,IAAS,CAC1D,MAAM4U,EAAQpR,KAAK8Q,IAAI9Q,KAAKuK,IAAI2gB,GAAgB,EAAI/xB,KAAK0iB,QAAQrf,GAASwuB,GAAY,GAAM,GACtF3Z,EAAe,EAAMD,EAErBI,GAAKrY,KAAKyW,YAAYpT,IAAU,EAAI,KAAQ6U,EAAeQ,EAAML,EAAIJ,EACrE1I,GAAKvP,KAAKyW,YAAYpT,IAAU,EAAI,KAAQ6U,EAAeQ,EAAMnJ,EAAI0I,EACrE9Q,GAAKnH,KAAKyW,YAAYpT,IAAU,GAAK,KAAQ6U,EAAeQ,EAAMvR,EAAI8Q,EAE5EjY,KAAKyW,YAAYpT,GAASgV,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,E,CAErE,CAEO6qB,wBAAwBpb,EAAYC,EAAYC,EAAeC,EAAgBC,EAAkBC,GACpG,MAAMC,EAAQF,EAAQF,MAAQA,EACxBK,EAAQH,EAAQD,OAASA,EAC/B,IAGIK,EACAC,EACAC,EACAC,EAkBAC,EAxBAC,EAAK,EACLC,EAAK,EAOT,GAAIb,EAAKE,EAAS,GACdF,EAAM7W,KAAK+W,OAAS,GACpBH,EAAKE,EAAQ,GACbF,EAAM5W,KAAK8W,MAAQ,EACnB,OAGAD,EAAK,GACLa,EAAKP,GAASN,EACdO,EAAaL,EAASF,EAAMhQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,GAChEO,EAAS,IAETA,EAAST,EACTO,EAAYL,EAASlQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,IAKzDH,EAAK,GACLY,EAAgBC,EAAKP,GAASN,EAC9BS,EAAYP,EAAQF,EAAM/P,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,GAC5DS,EAAS,IAETC,EAAgB,EAChBD,EAASX,EACTS,EAAWP,EAAQjQ,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,IAGzD,MAAMc,EAAa,EAAI,IAAMX,EAC7B,IAAIY,EAAS,EAAW,EAAW7X,KAAK8W,MAExC,IAAK,IAAIgB,EAAI,EAAGA,EAAIV,EAAWU,IAAK,CAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAUU,IAAK,CAG/B,MAAMW,EAAQ1B,EAAQ8T,0BAA0BrT,EAAIC,GAE9CO,EAAQ,IAAML,EACdM,EAAe,EAAID,EAEnBE,EAAmBnY,KAAKyW,YAAYoB,GAGpCQ,GAAKF,GAAoB,EAAI,KAAQD,GAFtBQ,GAEsD,EAAI,KAAQT,EACjF1I,GAAK4I,GAAoB,EAAI,KAAQD,GAHtBQ,GAGsD,EAAI,KAAQT,EACjF9Q,GAAKgR,GAAoB,GAAK,KAAQD,GAJvBQ,GAIuD,GAAK,KAAQT,EAEzFjY,KAAKyW,YAAYoB,GAAUQ,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,GAC9DsQ,GAAMP,EACNW,G,CAEJH,GAAMP,EACNM,EAAKD,EACLK,IAAWR,EAAWrX,KAAK8W,K,CAEnC,CAEOmb,2BAA2Brb,EAAYC,EAAYC,EAAeC,EAAgBC,EAAkBC,GACvG,MAAMC,EAAQF,EAAQF,MAAQA,EACxBK,EAAQH,EAAQD,OAASA,EAC/B,IAGIK,EACAC,EACAC,EACAC,EAkBAC,EAxBAC,EAAK,EACLC,EAAK,EAOT,GAAIb,EAAKE,EAAS,GACdF,EAAM7W,KAAK+W,OAAS,GACpBH,EAAKE,EAAQ,GACbF,EAAM5W,KAAK8W,MAAQ,EACnB,OAGAD,EAAK,GACLa,EAAKP,GAASN,EACdO,EAAaL,EAASF,EAAMhQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,GAChEO,EAAS,IAETA,EAAST,EACTO,EAAYL,EAASlQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,IAKzDH,EAAK,GACLY,EAAgBC,EAAKP,GAASN,EAC9BS,EAAYP,EAAQF,EAAM/P,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,GAC5DS,EAAS,IAETC,EAAgB,EAChBD,EAASX,EACTS,EAAWP,EAAQjQ,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,IAGzD,IAAIe,EAAS,EAAW,EAAW7X,KAAK8W,MACxC,IAAK,IAAIgB,EAAI,EAAGA,EAAIV,EAAWU,IAAK,CAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAUU,IAAK,CAE/B,MAAMW,EAAQ1B,EAAQ8T,0BAA0BrT,EAAIC,GAE9CS,EAAmBnY,KAAKyW,YAAYoB,GACpCO,EAAeM,EAEfL,EAAIxR,KAAKuK,KAAK+G,GAAoB,EAAI,MAASC,GAAgB,EAAI,KAAQnB,EAAY,KACvF1H,EAAI1I,KAAKuK,KAAK+G,GAAoB,EAAI,MAASC,GAAgB,EAAI,KAAQnB,EAAY,KACvF9P,EAAIN,KAAKuK,KAAK+G,GAAoB,GAAK,MAASC,GAAgB,GAAK,KAAQnB,EAAY,KAE/FjX,KAAKyW,YAAYoB,GAAUQ,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,GAC9DsQ,GAAMP,EACNW,G,CAEJH,GAAMP,EACNM,EAAKD,EACLK,IAAWR,EAAWrX,KAAK8W,K,CAEnC,CAEOob,yBAAyBtb,EAAYC,EAAYC,EAAeC,EAAgBC,EAAkBiB,EAAgB,GACrH,MAAMf,EAAQF,EAAQF,MAAQA,EACxBK,EAAQH,EAAQD,OAASA,EAC/B,IAGIK,EACAC,EACAC,EACAC,EAkBAC,EAxBAC,EAAK,EACLC,EAAK,EAOT,GAAIb,EAAKE,EAAS,GACdF,EAAM7W,KAAK+W,OAAS,GACpBH,EAAKE,EAAQ,GACbF,EAAM5W,KAAK8W,MAAQ,EACnB,OAGAD,EAAK,GACLa,EAAKP,GAASN,EACdO,EAAaL,EAASF,EAAMhQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,GAChEO,EAAS,IAETA,EAAST,EACTO,EAAYL,EAASlQ,KAAK8Q,IAAId,EAAKE,EAAS/W,KAAK+W,OAAQ,IAKzDH,EAAK,GACLY,EAAgBC,EAAKP,GAASN,EAC9BS,EAAYP,EAAQF,EAAM/P,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,GAC5DS,EAAS,IAETC,EAAgB,EAChBD,EAASX,EACTS,EAAWP,EAAQjQ,KAAK8Q,IAAIf,EAAKE,EAAQ9W,KAAK8W,MAAO,IAGzD,IAAIe,EAAS,EAAW,EAAW7X,KAAK8W,MACxC,IAAK,IAAIgB,EAAI,EAAGA,EAAIV,EAAWU,IAAK,CAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAUU,IAAK,CAC/B,MAAMC,EAAenR,KAAKuK,IAAS,EAALqG,EAAQT,EAAQF,MAAQ,GAAKjQ,KAAKuK,IAAS,EAALsG,EAAQV,EAAQD,OAAS,GAAKC,EAAQF,MAEpGqB,EAAmBnY,KAAKyW,YAAYoB,GACpCO,EAAepB,EAAQA,QAAQgB,GAE/BK,EAAIxR,KAAKuK,KAAK+G,GAAoB,EAAI,MAASC,GAAgB,EAAI,KAAQH,EAAO,KAClF1I,EAAI1I,KAAKuK,KAAK+G,GAAoB,EAAI,MAASC,GAAgB,EAAI,KAAQH,EAAO,KAClF9Q,EAAIN,KAAKuK,KAAK+G,GAAoB,GAAK,MAASC,GAAgB,GAAK,KAAQH,EAAO,KAE1FjY,KAAKyW,YAAYoB,GAAUQ,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,GAC9DsQ,GAAMP,EACNW,G,CAEJH,GAAMP,EACNM,EAAKD,EACLK,IAAWR,EAAWrX,KAAK8W,K,CAEnC,CAEOqb,YAAYpa,EAAWD,EAAWd,EAAkBsW,GACvD,MAAM8E,EAAepyB,KAAK8W,MACpBub,EAAgBryB,KAAK+W,OAE3B,IAAI0L,EAA2B5b,KAAK8Q,IAAII,EAAG,GAAKlR,KAAK8Q,IAAIG,EAAG,GAAK9X,KAAK8W,MAClEkB,EAAuBnR,KAAK8Q,IAAI,EAAG,EAAII,GAAKlR,KAAK8Q,IAAI,EAAG,EAAIG,GAAKd,EAAQF,MAE7E,MAAMA,EAAgBjQ,KAAKuK,IAAI4F,EAAQF,MAAOsb,EAAera,GAAKlR,KAAK8Q,IAAI,EAAG,EAAII,GAC5EhB,EAAiBlQ,KAAKuK,IAAI4F,EAAQD,OAAQsb,EAAgBva,GAAKjR,KAAK8Q,IAAI,EAAG,EAAIG,GAE/Ewa,EAAmBtb,EAAQF,MAAQA,EACnCyb,EAAuBvyB,KAAK8W,MAAQA,EAEpC6B,EAAM,EAAI,IAAM2U,EAEtB,IAAK,IAAIkF,EAAkB,EAAGA,EAAUzb,EAAQyb,IAAW,CACvD,IAAK,IAAIC,EAAiB,EAAGA,EAAS3b,EAAO2b,IAAU,CACnD,MAAMxa,GAASjB,EAAQA,QAAQgB,IAAiB,GAAK,KAAQW,EACvDT,EAAe,EAAID,EAEnBI,GAAKrY,KAAKyW,YAAYgM,IAAqB,EAAI,KAAQvK,GAAgBlB,EAAQA,QAAQgB,IAAiB,EAAI,KAAQC,EACpH1I,GAAKvP,KAAKyW,YAAYgM,IAAqB,EAAI,KAAQvK,GAAgBlB,EAAQA,QAAQgB,IAAiB,EAAI,KAAQC,EACpH9Q,GAAKnH,KAAKyW,YAAYgM,IAAqB,GAAK,KAAQvK,GAAgBlB,EAAQA,QAAQgB,IAAiB,GAAK,KAAQC,EAE5HjY,KAAKyW,YAAYgM,GAAoBpK,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,GAExEsb,IACAzK,G,CAGJA,GAAgBsa,EAChB7P,GAAoB8P,C,CAE5B,CAEOG,sBAAsB1b,EAAkBsW,GAE3C,IAAI7K,EAA2B,EAC/B,MAAMvK,EAAe,EAAIoV,EACzB,IAAK,IAAIxV,EAAY,EAAGA,EAAI9X,KAAK8W,MAAQ9W,KAAK+W,OAAQe,IAAK,CAEvD,MAAMO,GAAKrY,KAAKyW,YAAYgM,IAAqB,EAAI,KAAQvK,GAAgBlB,EAAQA,QAAQyL,IAAqB,EAAI,KAAQ6K,EACxH/d,GAAKvP,KAAKyW,YAAYgM,IAAqB,EAAI,KAAQvK,GAAgBlB,EAAQA,QAAQyL,IAAqB,EAAI,KAAQ6K,EACxHnmB,GAAKnH,KAAKyW,YAAYgM,IAAqB,GAAK,KAAQvK,GAAgBlB,EAAQA,QAAQyL,IAAqB,GAAK,KAAQ6K,EAEhIttB,KAAKyW,YAAYgM,GAAoBpK,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,GACxEsb,G,CAER,CAEOkQ,aAAa5a,EAAWD,EAAWd,EAAkBsW,EAAgBsF,GACxE,MAAMR,EAAepyB,KAAK8W,MACpBub,EAAgBryB,KAAK+W,OAE3B,IAAI0L,EAA2B5b,KAAK8Q,IAAII,EAAG,GAAKlR,KAAK8Q,IAAIG,EAAG,GAAK9X,KAAK8W,MAClEkB,EAAuBnR,KAAK8Q,IAAI,EAAG,EAAII,GAAKlR,KAAK8Q,IAAI,EAAG,EAAIG,GAAKd,EAAQF,MAE7E,MAAMA,EAAgBjQ,KAAKuK,IAAI4F,EAAQF,MAAOsb,EAAera,GAAKlR,KAAK8Q,IAAI,EAAG,EAAII,GAC5EhB,EAAiBlQ,KAAKuK,IAAI4F,EAAQD,OAAQsb,EAAgBva,GAAKjR,KAAK8Q,IAAI,EAAG,EAAIG,GAE/Ewa,EAAmBtb,EAAQF,MAAQA,EACnCyb,EAAuBvyB,KAAK8W,MAAQA,EAEpC6B,EAAM,EAAI,IAAM2U,EAEhBuF,EAAUhsB,KAAKC,MAAMiQ,EAASlQ,KAAK8Q,IAAI9Q,KAAKuK,IAAI,EAAGwhB,GAAO,IAEhE,IAAK,IAAIJ,EAAkB,EAAGA,EAAUK,EAASL,IAAW,CACxD,IAAK,IAAIC,EAAiB,EAAGA,EAAS3b,EAAO2b,IAAU,CACnD,MAAMxa,GAASjB,EAAQA,QAAQgB,IAAiB,GAAK,KAAQW,EACvDT,EAAe,EAAID,EAEnBI,GAAKrY,KAAKyW,YAAYgM,IAAqB,EAAI,KAAQvK,GAAgBlB,EAAQA,QAAQgB,IAAiB,EAAI,KAAQC,EACpH1I,GAAKvP,KAAKyW,YAAYgM,IAAqB,EAAI,KAAQvK,GAAgBlB,EAAQA,QAAQgB,IAAiB,EAAI,KAAQC,EACpH9Q,GAAKnH,KAAKyW,YAAYgM,IAAqB,GAAK,KAAQvK,GAAgBlB,EAAQA,QAAQgB,IAAiB,GAAK,KAAQC,EAE5HjY,KAAKyW,YAAYgM,GAAoBpK,EAAK9I,GAAK,EAAMpI,GAAK,GAAO,KAAO,GAExEsb,IACAzK,G,CAGJA,GAAgBsa,EAChB7P,GAAoB8P,C,CAE5B,CAEOO,uBAAuB/a,EAAWD,EAAWd,GAChD,IAAIyL,EAA2B1K,EAAID,EAAI9X,KAAK8W,MACxCkB,EAAuB,EAE3B,MAAMua,EAAuBvyB,KAAK8W,MAAQE,EAAQF,MAElD,IAAK,IAAI0b,EAAU,EAAGA,EAAUxb,EAAQD,OAAQyb,IAAW,CACvD,IAAK,IAAIC,EAAS,EAAGA,EAASzb,EAAQF,MAAO2b,IAAU,CACnD,MAAM/Z,EAAQ1B,EAAQA,QAAQgB,GAElB,WAARU,IACA1Y,KAAKyW,YAAYgM,GAAoB/J,GAGzC+J,IACAzK,G,CAGJyK,GAAoB8P,C,CAE5B,CAGQQ,kBAAkB3L,EAAc4L,EAActa,GAClD,MAAMsM,GAAgB,IAEtB,GAAIoC,EAAGpO,EAAIgM,GAAgBgO,EAAGha,EAAIgM,EAC9BhlB,KAAKusB,aAAa9D,2BAA2BzoB,KAAKizB,QAAQ7L,GAAKpnB,KAAKizB,QAAQD,GAAKta,OAC9E,IAAI0O,EAAGpO,EAAIgM,GAAgBgO,EAAGha,EAAIgM,EACrC,OACG,GAAIoC,EAAGpO,EAAIgM,EAAc,CAC5B,MAAMsC,GAAStC,EAAeoC,EAAGpO,IAAMga,EAAGha,EAAIoO,EAAGpO,GAC3Cka,EAAK,IAAIhY,EAASoM,GAAS0L,EAAGjb,EAAIqP,EAAGrP,GAAKqP,EAAGrP,EAAGuP,GAAS0L,EAAGlb,EAAIsP,EAAGtP,GAAKsP,EAAGtP,EAAGkN,GACpFhlB,KAAKusB,aAAa9D,2BAA2BzoB,KAAKizB,QAAQ7L,GAAKpnB,KAAKizB,QAAQC,GAAKxa,E,MAC9E,GAAIsa,EAAGha,EAAIgM,EAAc,CAC5B,MAAMsC,GAAStC,EAAegO,EAAGha,IAAMoO,EAAGpO,EAAIga,EAAGha,GAC3Cka,EAAK,IAAIhY,EAASoM,GAASF,EAAGrP,EAAIib,EAAGjb,GAAKib,EAAGjb,EAAGuP,GAASF,EAAGtP,EAAIkb,EAAGlb,GAAKkb,EAAGlb,EAAGkN,GACpFhlB,KAAKusB,aAAa9D,2BAA2BzoB,KAAKizB,QAAQD,GAAKhzB,KAAKizB,QAAQC,GAAKxa,E,EAEzF,CAEOua,QAAQ7L,GACX,OAAO,IAAIlM,EAASrU,KAAK0b,MAAOviB,KAAK8W,MAAQ,EAAM,IAAMsQ,EAAGrP,GAAMqP,EAAGpO,GACjEnS,KAAK0b,MAAOviB,KAAK+W,OAAS,EAAa,IAAPqQ,EAAGtP,GAAYsP,EAAGpO,GAClDoO,EAAGpO,EACX,CAEOma,mBACHnzB,KAAK0iB,QAAQyK,MAAM,EAAI,IAC3B,CAEOiG,UACH,MAAMrc,EAAS/W,KAAKspB,UAAUxR,EAAI9X,KAAKooB,UAAUtQ,EAAI,EAC/ChB,EAAQ9W,KAAKspB,UAAUvR,EAAI/X,KAAKooB,UAAUrQ,EAAI,EACpD,IAAI1U,EAAQrD,KAAKooB,UAAUtQ,EAAI9X,KAAK8W,MAAQ9W,KAAKooB,UAAUrQ,EAC3D,IAAK,IAAIvX,EAAI,EAAGA,EAAIuW,EAAQvW,IACxBR,KAAKyW,YAAY0W,MAAK,SAAqC9pB,EAAOA,EAAQyT,GAC1EzT,GAASrD,KAAK8W,KAEtB,CAEOwZ,SAAShG,EAAYhK,EAAYxJ,EAAeC,EAAgB2B,GAEnE,IAAIrV,EAAQid,EAAKtgB,KAAK8W,MAAQwT,EAC9B,IAAK,IAAI9pB,EAAI,EAAGA,EAAIuW,EAAQvW,IACxBR,KAAKyW,YAAY0W,KAAKzU,EAAOrV,EAAOA,EAAQyT,GAC5CzT,GAASrD,KAAK8W,KAEtB,CAIOuc,wBAAwBxC,GAE3B7wB,KAAK0iB,QAAQyK,KAAK,KAElB,MAAM/S,EAA0B,GAG1BoB,EAAS,GAGf,IAAK,IAAIhb,EAAI,EAAGA,GAJF,GAIcA,IACxB,IAAK,IAAI6X,EAAI,EAAGA,EAAImD,EAAQnD,IACxB+B,EAAO3a,KAAKO,KAAKszB,iBAAiB9yB,EAAIqG,KAAK8U,GANrC,GAMkD9U,KAAK8U,GAAK,EAAQ,GAAJtD,EAAQxR,KAAK8U,GAAKH,IAIhG,MAAMnY,EAAuB,GAE7B,IAAK,IAAI6Y,EAAI,EAAGA,EAZF,GAYaA,IACvB,IAAK,IAAI1b,EAAI,EAAGA,EAAIgb,EAAQhb,IACxB6C,EAAM5D,KAAO+b,EAASU,GAAM,EAAI1b,GAAKgb,GACrCnY,EAAM5D,KAAO+b,EAASU,GAAM,EAAI1b,GAAKgb,GACrCnY,EAAM5D,KAAO+b,EAASU,EAAKV,GAAU,EAAIhb,GAAKgb,GAE9CnY,EAAM5D,KAAO+b,EAASU,EAAKV,GAAU,EAAIhb,GAAKgb,GAC9CnY,EAAM5D,KAAO+b,EAASU,EAAKV,GAAU,EAAIhb,GAAKgb,GAC9CnY,EAAM5D,KAAO+b,EAASU,GAAM,EAAI1b,GAAKgb,GAK7C,MAAMJ,EAAQ,KAAO,GAAKvU,KAAKmV,IAAkB,IAAd6U,GAAsB,GAAK,EAC9D,IAAI0C,EAAmBlX,EAASmX,qBAAqBpY,EAAOA,EAAOA,GAAO4C,eAAe3B,EAASoX,yBAAuC,IAAd5C,IAC3H0C,EAAmBA,EAAiBvV,eAAe3B,EAASqX,yBAAuC,IAAd7C,IACrF0C,EAAmBlX,EAASsX,2BAA2B,EAAI,GAAK9sB,KAAKmV,IAAkB,IAAd6U,GAAqB,EAAIhqB,KAAKmV,IAAkB,IAAd6U,IAAsB,IAAI7S,eAAeuV,GAEpJ,MAAM1M,EAA2B,IAAIvM,MAErC,IAAK,IAAIhE,EAAI,EAAGA,EAAI8D,EAAO9Z,OAAQgW,IAAK,CACpC,MAAMsd,EAAcL,EAAiB9T,YAAYrF,EAAO9D,IAElDyB,EAAI6b,EAAY7b,EAChBD,EAAI8b,EAAY9b,EAChBkB,EAAI4a,EAAY5a,EAEhBvB,EAAmB,GAAbzX,KAAK8W,MAAgBiB,GAAU,OAAJiB,GACjCtB,EAAoB,GAAd1X,KAAK+W,OAAiBe,GAAU,OAAJkB,GAExC6N,EAAQpnB,KAAK,IAAIyb,EAASzD,EAAIC,EAAIsB,G,CAItC,MAAM6a,GAAS,QAAwB7zB,KAAK+W,QAAU,GAAK/W,KAAK+W,OAChE/W,KAAK4iB,YAAY,IAAI1H,EAASlb,KAAKooB,UAAUrQ,EAAI,EAAG/X,KAAKooB,UAAUtQ,EAAI,EAAG,GAAI,IAAIoD,EAASlb,KAAKooB,UAAUrQ,EAAI,EAAG/X,KAAKspB,UAAUxR,EAAI,EAAG,GAAI+b,GAC3I7zB,KAAK4iB,YAAY,IAAI1H,EAASlb,KAAKspB,UAAUvR,EAAI,EAAG/X,KAAKooB,UAAUtQ,EAAI,EAAG,GAAI,IAAIoD,EAASlb,KAAKspB,UAAUvR,EAAI,EAAG/X,KAAKspB,UAAUxR,EAAI,EAAG,GAAI+b,GAC3I7zB,KAAK4iB,YAAY,IAAI1H,EAASlb,KAAKooB,UAAUrQ,EAAI,EAAG/X,KAAKooB,UAAUtQ,EAAI,EAAG,GAAI,IAAIoD,EAASlb,KAAKspB,UAAUvR,EAAI,EAAG/X,KAAKooB,UAAUtQ,EAAI,EAAG,GAAI+b,GAC3I7zB,KAAK4iB,YAAY,IAAI1H,EAASlb,KAAKooB,UAAUrQ,EAAI,EAAG/X,KAAKspB,UAAUxR,EAAI,EAAG,GAAI,IAAIoD,EAASlb,KAAKspB,UAAUvR,EAAI,EAAG/X,KAAKspB,UAAUxR,EAAI,EAAG,GAAI+b,GAE3I7zB,KAAKozB,UAEL,IAAK,IAAI5yB,EAAI,EAAGA,EAAI6C,EAAM/C,OAAQE,GAAK,EAAG,CACtC,MAAMoa,EAAKiM,EAAQxjB,EAAM7C,IACnBqa,EAAKgM,EAAQxjB,EAAM7C,EAAI,IACvBsa,EAAK+L,EAAQxjB,EAAM7C,EAAI,IAEvBszB,GAAU,EACZ9zB,KAAKulB,cAAc3K,EAAIC,EAAIC,KAC3B9a,KAAKusB,aAAa9D,2BAA2B7N,EAAIC,EAAIiZ,GACrD9zB,KAAKusB,aAAa9D,2BAA2B7N,EAAIE,EAAIgZ,GACrD9zB,KAAKusB,aAAa9D,2BAA2B3N,EAAID,EAAIiZ,G,CAGjE,CAEOvO,cAAc3K,EACjBC,EACAC,GACA,MAAM2K,EACF7K,EAAG7C,EAAI8C,EAAG/C,EAAI+C,EAAG9C,EAAI6C,EAAG9C,EACxB+C,EAAG9C,EAAI+C,EAAGhD,EAAIgD,EAAG/C,EAAI8C,EAAG/C,EACxBgD,EAAG/C,EAAI6C,EAAG9C,EAAI8C,EAAG7C,EAAI+C,EAAGhD,EAC5B,OAAI9X,KAAKilB,WAAanM,EAASoM,KACpBO,EAAM,EAENA,EAAM,CAErB,CAEWsO,iBAAiBlD,EAAqBmD,GAEzCh0B,KAAKmzB,mBAEL,MAAM9vB,EAAuB,GAGvB+W,EAA0B,GAChC,IAAK,IAAItC,EAAI,EAAGA,EAAI,IAAKA,IACrB,IAAK,IAAIC,EAAI,EAAGA,EAAI,IAAKA,IACrBqC,EAAO3a,KAAK,IAAIyb,EAAqB,IAAXnD,EAAI,KAA6D,KAAd,IAAjCic,EAAUhd,QAAQe,EAAQ,IAAJD,IAA+B,IAAM,GAAgB,IAAXA,EAAI,OAIxH,IAAK,IAAIA,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAI,IAASA,GAAK,EAC9B1U,EAAM5D,KAAK,EAAIsY,EAAS,IAAJD,GACpBzU,EAAM5D,KAAK,EAAIsY,EAAS,IAAJD,GAI5B,IAAK,IAAIC,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC1B,IAAK,IAAID,EAAI,EAAGA,EAAI,IAASA,GAAK,EAE9BzU,EAAM5D,KAAKsY,EAAe,KAATD,EAAI,IACrBzU,EAAM5D,KAAKsY,EAAe,KAATD,EAAI,IAI7B,MAAMyb,EAAmB1T,EAAS4T,yBAAuC,KAAd5C,GAErDhK,EAA2B,IAAIvM,MAE/B2Z,EAA4C,KAAnCptB,KAAKoV,IAAkB,KAAd4U,GAAgC,GAClDqD,EAA0C,IAAnCrtB,KAAKmV,IAAkB,KAAd6U,GAAgC,GACtDzW,EAAO+Z,SAAQ3vB,IACX,MAAMovB,EAAcL,EAAiB/T,SAAShb,GAExCuT,EAAI6b,EAAY7b,EAAIkc,EACpBnc,EAAI8b,EAAY9b,EAChBkB,EAAI4a,EAAY5a,EAAIkb,EAE1BrN,EAAQpnB,KAAK,IAAIyb,EAASnD,EAAGD,EAAGkB,GAAG,IAGvC,IAAK,IAAIxY,EAAI,EAAGA,EAAI6C,EAAM/C,OAAQE,GAAK,EAAG,CACtC,MAAM4a,EAAS,EAAIvU,KAAKuK,IAAI,IAA4B,IAAtByV,EAAQxjB,EAAM7C,IAAIwY,GAAW,IACzDN,EAAS,IAAM0C,GAAU,EAAI,IAAMA,EAASpb,KAAK+W,OAASqE,GAAU,GAAK,KAAO,GACtFpb,KAAK+yB,kBAAkBlM,EAAQxjB,EAAM7C,IAAKqmB,EAAQxjB,EAAM7C,EAAI,IAAKkY,E,CAEzE,CAEG0b,mBAAmBC,EAAgB/W,EAAkB5E,GACxD,MAAM0B,EAA0B,GAMhC,IAAK,IAAI5Z,EAAI,EAAGA,GAJF,EAIcA,IACxB,IAAK,IAAI6X,EAAI,EAAGA,EAJL,EAIiBA,IAAK,CAE7B,MAAM0D,EAAM/b,KAAKszB,iBAAiB9yB,EAAIqG,KAAK8U,GAPrC,EAOkD9U,KAAK8U,GAAK,EAAQ,GAAJtD,EAAQxR,KAAK8U,GAN5E,GAMyF9C,IAAIwb,EAAOC,YAAc,KAAM/sB,IAAI8sB,EAAOE,aAC1IxY,EAAI9C,EAAI,EAERmB,EAAO3a,KAAKsc,E,CAIpB,MAAM1Y,EAAuB,GAE7B,IAAK,IAAI6Y,EAAI,EAAGA,EAhBF,EAgBaA,IACvB,IAAK,IAAI1b,EAAI,EAAGA,EAhBL,EAgBiBA,IACxB6C,EAAM5D,KAjBC,EAiBeyc,GAAM,EAAI1b,GAjBzB,GAkBP6C,EAAM5D,KAlBC,EAkBeyc,GAAM,EAAI1b,GAlBzB,GAmBP6C,EAAM5D,KAnBC,EAmBeyc,EAnBf,GAmB8B,EAAI1b,GAnBlC,GAqBP6C,EAAM5D,KArBC,EAqBeyc,EArBf,GAqB8B,EAAI1b,GArBlC,GAsBP6C,EAAM5D,KAtBC,EAsBeyc,EAtBf,GAsB8B,EAAI1b,GAtBlC,GAuBP6C,EAAM5D,KAvBC,EAuBeyc,GAAM,EAAI1b,GAvBzB,GA2Bf,MAAM+yB,EAAmBjW,EAEnBuJ,EAA2B,IAAIvM,MAErC,IAAK,IAAIhE,EAAI,EAAGA,EAAI8D,EAAO9Z,OAAQgW,IAAK,CACpC,MAAMsd,EAAcL,EAAiB9T,YAAYrF,EAAO9D,IACxDuQ,EAAQpnB,KAAK,IAAIyb,EAAS0Y,EAAY7b,EAAG6b,EAAY9b,EAAG8b,EAAY5a,G,CAGxE,IAAK,IAAIxY,EAAI,EAAGA,EAAI6C,EAAM/C,OAAQE,GAAK,EAAG,CAEtC,MAAMoa,EAAKiM,EAAQxjB,EAAM7C,IACnBqa,EAAKgM,EAAQxjB,EAAM7C,EAAI,IACvBsa,EAAK+L,EAAQxjB,EAAM7C,EAAI,IAE7BR,KAAK+yB,kBAAkBnY,EAAIC,EAAInC,GAC/B1Y,KAAK+yB,kBAAkBnY,EAAIE,EAAIpC,GAC/B1Y,KAAK+yB,kBAAkBjY,EAAID,EAAInC,E,CAGvC,CACO8b,+BAA+B3D,EAAqB7Z,GAEvD,IAAIxW,EAAI,EACR,IAAK,IAAIsX,EAAI,EAAGA,EAAI9X,KAAK+W,OAAQe,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAI/X,KAAK8W,MAAOiB,IAAK,CACjC,MAAM0c,EAAS1c,EAAI/X,KAAK8W,MAAQ,EAC1B4d,EAAS5c,EAAI9X,KAAK+W,OAAS,EAC3B4d,EAAO,KAAY9tB,KAAK8Q,IAAI,EAAK9Q,KAAKyS,KAAKmb,EAAQA,EAAQC,EAAQA,IACnEE,EAAQD,EAAqB,KAAd9D,EACf/Q,EAAqD,IAA5CjZ,KAAKguB,MAAMJ,EAAOC,GAAS7tB,KAAK8U,GAAK,GAA0B,MAAdkV,EAE1DiE,EAAS9d,EAAQA,SAAiB,GAAR4d,GAAiC,IAAR,GAAR9U,IAE3C1E,EAAQ,EAAI8E,EAAa6U,kBAAkB,EAAK,EAAKJ,GAIrDK,GAHMF,GAAU,EAAK,KAAQ1Z,GACvB0Z,GAAU,EAAK,KAAQ1Z,GAEZ,GADX0Z,GAAU,GAAM,KAAQ1Z,GACJ,GAEhCpb,KAAKyW,YAAYjW,KAAOw0B,C,CAGpC,CAGOC,iBAAiBxe,GACpB,MAAMiC,EAAgBJ,EAAM4c,MAAM1c,iBAC5B1B,EAAgB9W,KAAK8W,MAAQ,EAC7BC,EAAiB/W,KAAK+W,OAAS,EAErCN,EAAY6M,eACR,IAAIpI,EAASpE,EAAQ,EAAGC,EAAS,EAAG,GACpC,IAAImE,EAASpE,EAAQ,EAAIA,EAAOC,EAAS,GAAI,KAC7C2B,GAGJjC,EAAY6M,eACR,IAAIpI,EAASpE,EAAQ,EAAGC,EAAS,EAAG,GACpC,IAAImE,EAASpE,EAAQ,EAAGC,EAAS,EAAIA,GAAS,KAC9C2B,GAGJjC,EAAY6M,eACR,IAAIpI,EAASpE,EAAQ,EAAIA,EAAOC,EAAS,EAAG,GAC5C,IAAImE,EAASpE,EAAQ,EAAIA,EAAOC,EAAS,EAAIA,GAAS,KACtD2B,GAGJjC,EAAY6M,eACR,IAAIpI,EAASpE,EAAQ,EAAGC,EAAS,EAAIA,EAAQ,GAC7C,IAAImE,EAASpE,EAAQ,EAAIA,EAAOC,EAAS,EAAIA,GAAS,KACtD2B,EAER,CAEOyc,oBAAoB1e,EAA0Boa,EAAqB7Z,EAAkBoe,GAExF,MAAMhb,EAA0B,IAAIE,MAC9BuM,EAA2B,IAAIvM,MAAgBF,EAAO9Z,QACtDszB,EAAcnd,EAAYwc,QAAQmC,GAExCvO,EAAQpnB,KAAKm0B,GACb/M,EAAQwO,MAAK,CAACnuB,EAAGC,IACND,EAAE8R,EAAI7R,EAAE6R,IAGnB6N,EAAQsN,SAAQ3vB,IAEZ,MAAM8wB,EAAgB,KAAP,KAAc9wB,EAAS,EAEtCiS,EAAYwa,cACRpqB,KAAK0b,MAAM/d,EAAQuT,EAAIud,EAAO,GAC9BzuB,KAAK0b,MAAM/d,EAAQsT,EAAIwd,EAAO,GAC9BzuB,KAAK0b,MAAM+S,GAAOzuB,KAAK0b,MAAM+S,GAAOte,EAAS,EAAIxS,EAAQwU,EAAG,EAAK,EAAG,IAAI,GAGpF,CAEOuc,qBAAqB1E,EAAqB7Z,GAK7C,MAAMwe,EAAYxe,EAAQF,MACpB2e,EAAaze,EAAQD,OAE3B,IAAI0L,EAAmB,EAEvB,IAAK,IAAI3K,EAAI,EAAGA,EAAI9X,KAAK+W,OAAQe,IAAK,CAClC,MAAMJ,EAAc,EAAOI,EAAI9X,KAAK+W,OAAvB,EAEb,IAAK,IAAIgB,EAAI,EAAGA,EAAI/X,KAAK8W,MAAOiB,IAAK,CAEjC,MAGM2L,GAHc,EAAO3L,EAAI/X,KAAK8W,MAAvB,GAGIjQ,KAAKoc,IAAIvL,GAAO8d,EAAY,IAAQ,EAC/C5R,EAAK,EAAM/c,KAAKoc,IAAIvL,GAAM+d,EAAa,IAAqB,KAAd5E,EAAuB,EAErEzV,EAAQ,EAAIvU,KAAK8Q,IAAI9Q,KAAKuK,IAAI,EAAIvK,KAAKoc,IAAIvL,GAAM,GAAK,GAAI,GAChE,IAAIgB,EAAQ1B,EAAQA,SAAa,IAAJ0M,IAAiB,IAAJE,GAAY4R,GAItD9c,EAAS,KAAO,IADJA,GAAS,GAAM,KAAQ0C,GACP,IAFhB1C,GAAS,EAAK,KAAQ0C,GAEM,GAH5B1C,GAAS,EAAK,KAAQ0C,GAGiB,EAEnDpb,KAAKyW,YAAYgM,KAAsB/J,C,EAGnD,CAEOgD,cAAczD,GACjB,OAAO,IAAIiD,EAA2B,GAAlBrU,KAAKmV,IAAI/D,GAAa,EAAqB,GAAlBpR,KAAKoV,IAAIhE,GAC1D,CAEO+O,WAAWzM,EAAkBgN,GAIhCA,EAAO9D,kBAAkBC,EAAI,GAAM7c,KAAK6uB,KAAKnb,EAAOxC,GAAKlR,KAAK8U,GAC9D4L,EAAO9D,kBAAkBG,EAAI,GAAM/c,KAAK6uB,KAAKnb,EAAOzC,GAAKjR,KAAK8U,EAClE,CAEOga,YAAYpb,EAAkBqb,GACjCA,EAAIlS,EAAI,GAAM7c,KAAK6uB,KAAKnb,EAAOxC,GAAKlR,KAAK8U,GACzCia,EAAIhS,EAAI,GAAM/c,KAAK6uB,KAAKnb,EAAOzC,GAAKjR,KAAK8U,EAC7C,CAEOiH,YAAYzC,EAAiBC,EAAe1H,GAC/C1Y,KAAK4rB,eAAehJ,YAAYzC,EAAOC,EAAK1H,EAChD,CAEO4K,eAAenD,EAAiBC,EAAe1H,GAClD1Y,KAAK6rB,iBAAiBvI,eAAenD,EAAOC,EAAK1H,EACrD,CAEQ4a,gBAAgBuC,EAAeC,GAKnC,OAJY,IAAI/c,EAASlS,KAAKoV,IAAI4Z,GAAShvB,KAAKoV,IAAI6Z,GAChDjvB,KAAKoV,IAAI4Z,GAAShvB,KAAKmV,IAAI8Z,GAC3BjvB,KAAKmV,IAAI6Z,GAAQ,EAGzB,ECvkDG,MAAME,EAEFxd,wBAAwB/T,GACtBxE,KAAKg2B,YAKND,EAAgBE,iBAChBj2B,KAAKg2B,YAAa,EAClBh2B,KAAKk2B,SAAS1xB,EAAS,qBANvBuxB,EAAgBI,gBAAgB3xB,GAChCxE,KAAKg2B,YAAa,EAClBh2B,KAAKk2B,SAAS1xB,EAAS,gBAM/B,CAEQ+T,gBAAgB6d,EAAI7zB,GACxB6zB,EAAGtxB,aAAa,QAASsxB,EAAGrtB,aAAa,SAAW,IAAMxG,EAC9D,CAEOgW,uBAAuB/T,GACtBA,EAAQ6xB,kBACR7xB,EAAQ6xB,oBACD7xB,EAAQ8xB,qBACf9xB,EAAQ8xB,uBACD9xB,EAAQ+xB,oBACf/xB,EAAQ+xB,sBACD/xB,EAAQgyB,yBACfhyB,EAAQgyB,yBAEhB,CAEOje,wBACCzU,SAASmyB,eACTnyB,SAASmyB,iBACFnyB,SAAS2yB,oBAChB3yB,SAAS2yB,sBACF3yB,SAAS4yB,sBAChB5yB,SAAS4yB,sBAEjB,CAEQne,mBAA6B,ECpClC,MAAMoe,EAQ0CC,MAN5CngB,YACCogB,OACAC,QACAC,UACAC,gBAERtgB,YAAYI,EAAeC,EAAwB6f,GAAA,KAAAA,MAAAA,EAC/C52B,KAAK62B,OAAS/yB,SAASW,cAAc,UAErCzE,KAAK62B,OAAO/f,MAAQA,EACpB9W,KAAK62B,OAAO9f,OAASA,EACrB/W,KAAK62B,OAAOl3B,GAAK,cAEjBK,KAAK62B,OAAOlzB,MAAM2B,QAAU,sRAS5BtF,KAAK62B,OAAOlzB,MAAMmT,MAAmB,EAARA,EAAH,KAC1B9W,KAAK62B,OAAOlzB,MAAMoT,OAAqB,EAATA,EAAH,KAE3B/W,KAAK82B,QAAU92B,KAAK62B,OAAOI,WAAW,MAGrCj3B,KAAK82B,QAAgBI,wBAAyB,EAC/Cl3B,KAAK82B,QAAQK,uBAAwB,EACpCn3B,KAAK82B,QAAgBM,6BAA8B,EAEpDp3B,KAAKyW,YAAc,IAAI8U,EAAYzU,EAAOC,GAC1C/W,KAAKg3B,gBAAkBh3B,KAAKq3B,WAAWC,KAAKt3B,KAChD,CAEOyM,OAEHzM,KAAKu3B,SAASzzB,SAAS0J,eAAe,SAGtCxN,KAAK62B,OAAOrmB,iBAAiB,SAAUiD,IACnCA,EAAM+jB,iBACNzB,EAAgB0B,iBAAiBz3B,KAAK62B,OAAO,IAIjD72B,KAAK42B,MAAMnqB,KAAKzM,KAAKyW,aAAaihB,MAC9B,KACI13B,KAAK42B,MAAMe,SACX33B,KAAK+2B,UAAYvI,KAAKC,MACtBzuB,KAAKq3B,YAAY,GAG7B,CAEOA,aACHr3B,KAAK42B,MAAMgB,OAAO53B,KAAKyW,YAAa+X,KAAKC,MAAQzuB,KAAK+2B,WACtD/2B,KAAK63B,iBACLC,sBAAsB93B,KAAKg3B,gBAC/B,CAEOa,iBACH73B,KAAK82B,QAAQiB,aAAa/3B,KAAKyW,YAAYsW,eAAgB,EAAG,EAClE,CAEOwK,SAAS/yB,GACZA,EAAQD,YAAYvE,KAAK62B,OAC7B,ECjEG,MAAMmB,EAKWvhB,YAFZoR,WAERnR,YAAoBD,GAAA,KAAAA,YAAAA,EAChBzW,KAAK6nB,WAAa,IAAIvN,MAClB,IAAIsP,EAAcnT,GAClB,IAAIkT,EAAalT,GACjB,IAAIyR,EAAezR,GACnB,IAAIoT,EAAYpT,GAGxB,CAQOyQ,kBAAkBM,GAErB,IAAIE,EAASF,EAEb,IAAK,IAAItL,EAAI,EAAGA,EAAIlc,KAAK6nB,WAAWvnB,OAAQ4b,IAAK,CAC7C,MAAM4L,EAAyB9nB,KAAK6nB,WAAW3L,GACzCuL,EAAQC,EACdA,EAAS,IAAIpN,MACb,IAAIqN,EAAIF,EAAMA,EAAMnnB,OAAS,GAE7B,IAAK,IAAIE,EAAI,EAAGA,EAAIinB,EAAMnnB,OAAQE,IAAK,CACnC,MAAMonB,EAAQH,EAAMjnB,GAChBsnB,EAAKK,SAASP,IACTE,EAAKK,SAASR,IACfD,EAAOjoB,KAAKqoB,EAAKO,oBAAoBV,EAAGC,IAE5CF,EAAOjoB,KAAKmoB,IACLE,EAAKK,SAASR,IACrBD,EAAOjoB,KAAKqoB,EAAKO,oBAAoBV,EAAGC,IAE5CD,EAAIC,C,EAIZ,OAAOF,CACX,ECnDG,MAAMuQ,EAEFC,aAAaC,EAAeC,EAA2B7d,EAAkBgN,GAC5E,IAAI8Q,EAAuB,IAAItf,EAAS,EAAG,EAAG,GAE9C,IAAK,IAAIhB,EAAY,EAAGA,EAAIqgB,EAAO93B,OAAQyX,IAAK,CAC5C,MAAMqd,EAAoBgD,EAAOrgB,GAC3BugB,EAA6Bt4B,KAAKu4B,wBAAwBJ,EAAK/C,GAC/DoD,EAA6Bx4B,KAAKy4B,wBAAwBN,EAAK/C,EAAO7a,EAAQgN,GAC9EmR,EAA8B14B,KAAK24B,yBAAyBR,EAAK/C,EAAO7a,EAAQgN,GAEtF8Q,EAAaA,EAAW9wB,IAAI+wB,GACvB/wB,IAAIixB,GACJjxB,IAAImxB,E,CAGb,OAAOL,CACX,CAEQE,wBAAwBJ,EAAezH,GAC3C,OAAOyH,EAAIS,aAAahf,iBAAiB8W,EAAE4H,iBAC/C,CAEQG,wBAAwBN,EAAezH,EAAenW,EAAkBgN,GAC5E,MAAMsR,EAA2BnI,EAAE7e,SAAS4G,IAAI8O,GAAQnO,YAClDgC,EAAgBvU,KAAKuK,IAAIvK,KAAK8Q,IAAI4C,EAAOV,IAAIgf,GAAiB,GAAI,GACxE,OAAOV,EAAIW,aAAalf,iBAAiB8W,EAAE8H,kBAAkB3f,IAAIuC,EACrE,CAEQud,yBAAyBR,EAAezH,EAAenW,EAAkBgN,GAC7E,MAAMsR,EAA2BnI,EAAE7e,SAAS4G,IAAI8O,GAAQnO,YAClDf,EAAckC,EAAO1B,IAAiC,EAA7B0B,EAAOV,IAAIgf,IAAuBpgB,IAAIogB,GAC/DjV,EAAc2D,EAAO1O,KAAK,GAAGO,YAC7BgC,EAAgBvU,KAAKS,IAAIT,KAAK8Q,IAAIU,EAAEwB,IAAI+J,GAAI,GAAIuU,EAAIY,WAC1D,OAAOZ,EAAIa,cAAcpf,iBAAiB8W,EAAEgI,mBAAmB7f,IAAIuC,EACvE,ECrCG,MAAe6d,EAEXX,iBACAE,iBACAE,kBCHJ,MAAMQ,UAAmBD,EAErBpnB,SCHJ,MAAMsnB,EAEFP,aACAE,aACAE,cACAI,cAEAL,UCPJ,MAAMM,EAEFC,WAAoB,IAAIhhB,EACxBihB,WAAoB,IAAIjhB,EAExBkhB,MAAMnK,EAAWC,EAAWjN,GAC/BriB,KAAKu5B,WAAWlhB,GAAKiX,EAAGjX,EAAIgX,EAAGhX,GAAKgK,EACpCriB,KAAKu5B,WAAWhqB,GAAK+f,EAAG/f,EAAI8f,EAAG9f,GAAK8S,EACpCriB,KAAKu5B,WAAWpyB,GAAKmoB,EAAGnoB,EAAIkoB,EAAGloB,GAAKkb,EAEpCriB,KAAKs5B,WAAWjhB,EAAIgX,EAAGhX,EACvBrY,KAAKs5B,WAAW/pB,EAAI8f,EAAG9f,EACvBvP,KAAKs5B,WAAWnyB,EAAIkoB,EAAGloB,CAC3B,CAEOsyB,UACHz5B,KAAKs5B,WAAWjhB,GAAKrY,KAAKu5B,WAAWlhB,EACrCrY,KAAKs5B,WAAW/pB,GAAKvP,KAAKu5B,WAAWhqB,EACrCvP,KAAKs5B,WAAWnyB,GAAKnH,KAAKu5B,WAAWpyB,CACzC,ECnBG,MAAMuyB,EAET5W,UACA6W,MACAC,OACAC,SACAC,SACAxiB,OAEAkiB,MAAMO,EAAaC,GACfh6B,KAAK8iB,UAAYkX,EAAO3Y,WAAWvJ,EAAIiiB,EAAI1Y,WAAWvJ,EACtD9X,KAAK25B,OAASK,EAAO3Y,WAAWtJ,EAAIgiB,EAAI1Y,WAAWtJ,GAAK/X,KAAK8iB,UAC7D9iB,KAAK45B,QAAU,EAAII,EAAO3Y,WAAWrI,EAAI,EAAI+gB,EAAI1Y,WAAWrI,GAAKhZ,KAAK8iB,UACtE9iB,KAAK65B,SAAW,EAAME,EAAI1Y,WAAWrI,EACrChZ,KAAK85B,SAAWC,EAAI1Y,WAAWtJ,EAC/B/X,KAAKsX,OAASyiB,EAAI1Y,WAAWvJ,CACjC,CAEA2hB,UACIz5B,KAAK85B,UAAY95B,KAAK25B,MACtB35B,KAAK65B,UAAY75B,KAAK45B,MAC1B,ECjBG,MAAMK,UAAyClZ,EAU9BtK,YAPZyjB,mBAAwC,IAAIb,EAC5Cc,mBAAwC,IAAId,EAC5Ce,mBAAwC,IAAIf,EAC5CgB,qBAA0C,IAAIhB,EAC9CiB,UAA+B,IAAIZ,EACnCa,WAAgC,IAAIb,EAE5ChjB,YAAoBD,GAChB8E,QADgB,KAAA9E,YAAAA,CAEpB,CAEU6K,sBAAsB7K,EAA0BmE,EAAYC,EAAYC,GAC9E9a,KAAKs6B,UAAUd,MAAM5e,EAAIC,GACzB7a,KAAKu6B,WAAWf,MAAM5e,EAAIE,GAC1B9a,KAAKk6B,mBAAmBV,MAAM5e,EAAGlC,MAAOmC,EAAGnC,MAAO1Y,KAAKs6B,UAAUxX,WACjE9iB,KAAKm6B,mBAAmBX,MAAM5e,EAAGlC,MAAOoC,EAAGpC,MAAO1Y,KAAKu6B,WAAWzX,WAClE9iB,KAAKoiB,SAAS3L,EAAazW,KAAKs6B,UAAWt6B,KAAKk6B,mBAAoBl6B,KAAKm6B,mBAAoBn6B,KAAKs6B,UAAWt6B,KAAKu6B,YAElHv6B,KAAKs6B,UAAUd,MAAM3e,EAAIC,GACzB9a,KAAKo6B,mBAAmBZ,MAAM3e,EAAGnC,MAAOoC,EAAGpC,MAAO1Y,KAAKs6B,UAAUxX,WACjE9iB,KAAKoiB,SAAS3L,EAAazW,KAAKs6B,UAAWt6B,KAAKo6B,mBAAoBp6B,KAAKm6B,mBAAmBn6B,KAAKs6B,UAAWt6B,KAAKu6B,WACrH,CAEUhZ,qBAAqB9K,EAA0BmE,EAAYC,EAAYC,GAC7E9a,KAAKs6B,UAAUd,MAAM5e,EAAIE,GACzB9a,KAAKu6B,WAAWf,MAAM5e,EAAIC,GAC1B7a,KAAKm6B,mBAAmBX,MAAM5e,EAAGlC,MAAOmC,EAAGnC,MAAO1Y,KAAKu6B,WAAWzX,WAClE9iB,KAAKk6B,mBAAmBV,MAAM5e,EAAGlC,MAAOoC,EAAGpC,MAAO1Y,KAAKs6B,UAAUxX,WACjE9iB,KAAKoiB,SAAS3L,EAAazW,KAAKu6B,WAAYv6B,KAAKk6B,mBAAoBl6B,KAAKm6B,mBAAmBn6B,KAAKs6B,UAAWt6B,KAAKu6B,YAElHv6B,KAAKu6B,WAAWf,MAAM3e,EAAIC,GAC1B9a,KAAKo6B,mBAAmBZ,MAAM3e,EAAGnC,MAAOoC,EAAGpC,MAAO1Y,KAAKu6B,WAAWzX,WAClE9iB,KAAKoiB,SAAS3L,EAAazW,KAAKu6B,WAAYv6B,KAAKk6B,mBAAoBl6B,KAAKo6B,mBAAmBp6B,KAAKs6B,UAAWt6B,KAAKu6B,WACtH,CAEAnY,SAAS3L,EAA0B+jB,EAA+BN,EAAuCC,EACrGG,EAA8BC,GAE9B,IAAItY,EAAYuY,EAAWljB,OAC3B,IAAK,IAAI9W,EAAI,EAAGA,EAAIg6B,EAAW1X,UAAWtiB,IAAK,CAC3C,MAAMF,EAASuG,KAAK0b,MAAMgY,EAAWT,UAAYjzB,KAAK0b,MAAM+X,EAAUR,UACtE95B,KAAKq6B,qBAAqBb,MAAMU,EAAmBZ,WAAYa,EAAmBb,WAAYh5B,GAC9F,IAAImiB,EAAmB5b,KAAK0b,MAAMN,GAAaxL,EAAYK,MAAQjQ,KAAK0b,MAAM+X,EAAUR,UACxF,MAAMxX,GAAaiY,EAAWV,SAAWS,EAAUT,UAAYv5B,EAC/D,IAAIkiB,EAAS8X,EAAUT,SACvB,IAAK,IAAI3d,EAAI,EAAGA,EAAI5b,EAAQ4b,IACpBsG,EAAS/L,EAAYiM,QAAQD,KAC7BhM,EAAYiM,QAAQD,GAAoBD,EACxC/L,EAAYA,YAAYgM,GAAoBziB,KAAKq6B,qBAAqBf,WAAW9gB,kBAErFiK,IACAD,GAAUF,EACVtiB,KAAKq6B,qBAAqBZ,UAG9Ba,EAAUb,UACVc,EAAWd,UAEXS,EAAmBT,UACnBU,EAAmBV,UAEnBxX,G,CAER,EC5CG,MAAMwY,UAAwC1V,EAEzC2V,IAAW,KACXtC,OAA4B,KAC5BuC,SAAqB,KACrBC,UAAoB,EACpBliB,MAAeJ,EAAM4c,MAIrBpP,mBAAiD,KACjD+U,QAEA3U,kBAAqC,IAAI5L,MAC7C,IAAIvB,EAAS,EAAG,EAAG,EAAG,GAAI,IAAIA,EAAS,EAAG,EAAG,EAAG,GAAI,IAAIA,EAAS,EAAG,EAAG,EAAG,IAGtEgN,YAA6B,IAAIzL,MACrC,IAAIwK,EAAU,IAAIA,EAAU,IAAIA,GAGpC,YAAmBrO,GACf8E,MAAM9E,GACNzW,KAAK66B,QAAU,IAAI7C,EAA2BvhB,GAE9C,MAAMqkB,EAAqB,IAAI5B,EAC/B4B,EAAOxC,iBAAmB,IAAIvf,EAAS,EAAG,EAAG,EAAG,GAChD+hB,EAAOtC,iBAAmB,IAAIzf,EAAS,EAAG,EAAG,EAAG,GAChD+hB,EAAOpC,kBAAoB,IAAI3f,EAAS,EAAG,EAAG,EAAG,GACjD+hB,EAAOjpB,SAAW,IAAIkH,EAAS,EAAG,GAAI,EAAG,GAEzC,MAAMgiB,EAAqB,IAAI7B,EAC/B6B,EAAOzC,iBAAmB,IAAIvf,EAAS,EAAG,EAAG,EAAG,GAChDgiB,EAAOvC,iBAAmB,IAAIzf,EAAS,EAAG,GAAK,EAAG,GAClDgiB,EAAOrC,kBAAoB,IAAI3f,EAAS,GAAK,GAAK,GAAK,GACvDgiB,EAAOlpB,SAAW,IAAIkH,EAAS,GAAI,KAAM,IAAK,GAE9C/Y,KAAKo4B,OAAS,CAAC0C,EAAQC,GAEvB,MAAM5C,EAAgB,IAAIgB,EAC1BhB,EAAIS,aAAe,IAAI7f,EAAS,IAAM,IAAM,GAAK,GACjDof,EAAIW,aAAe,IAAI/f,EAAS,IAAM,GAAK,GAAK,GAChDof,EAAIa,cAAgB,IAAIjgB,EAAS,GAAK,GAAK,GAAK,GAChDof,EAAIY,UAAY,EAEhB/4B,KAAK26B,SAAWxC,EAChBn4B,KAAK8lB,mBAAqB,IAAImU,EAAiCxjB,EACnE,CAEO0P,eAAe1P,GAClBzW,KAAKyW,YAAcA,CACvB,CAEOukB,OAAON,GACV16B,KAAK06B,IAAMA,CACf,CAEOO,UAAU7C,GACbp4B,KAAKo4B,OAASA,CAClB,CAEO8C,eAAeC,GAClBn7B,KAAK46B,SAAWO,CACpB,CAEOC,YAAYT,GACf36B,KAAK26B,SAAWA,CACpB,CAEOU,SAAS3iB,GACZ1Y,KAAK0Y,MAAQA,CACjB,CAEO6N,cAAc9P,EAA0B+P,EAA+B+M,GAC1E,IAAK,IAAIrX,EAAY,EAAGA,EAAIsK,EAAOlmB,OAAQ4b,IAAK,CAC5C,MAAMuK,EAAwBD,EAAOtK,GACrClc,KAAK0mB,KAAKjQ,EAAagQ,EAAM8M,E,CAErC,CAGO7M,KAAKjQ,EAA0BwD,EAAsBsZ,GAExD,MAAM5M,EAAyB4M,EAAiB9V,sBAEhD,IAAK,IAAIjd,EAAY,EAAGA,EAAIyZ,EAAKI,QAAQ/Z,OAAQE,IAC7CmmB,EAAajH,eAAezF,EAAKI,QAAQ7Z,GAAIyZ,EAAKe,mBAAmBxa,IAGzE,IAAK,IAAIA,EAAY,EAAGA,EAAIyZ,EAAKG,OAAO9Z,OAAQE,IAC5C+yB,EAAiB7T,eAAezF,EAAKG,OAAO5Z,GAAIyZ,EAAKc,kBAAkBva,IAG3E,IAAK,IAAIA,EAAY,EAAGA,EAAIyZ,EAAKO,MAAMla,OAAQE,IAAK,CAChD,MAAMoa,EAAeX,EAAKc,kBAAkBd,EAAKO,MAAMha,GAAGoa,IACpDC,EAAeZ,EAAKc,kBAAkBd,EAAKO,MAAMha,GAAGqa,IACpDC,EAAeb,EAAKc,kBAAkBd,EAAKO,MAAMha,GAAGsa,IAEpDwgB,EAAoBrhB,EAAKe,mBAAmBf,EAAKO,MAAMha,GAAGia,IAC1D8gB,EAAoBthB,EAAKe,mBAAmBf,EAAKO,MAAMha,GAAGka,IAC1D8gB,EAAoBvhB,EAAKe,mBAAmBf,EAAKO,MAAMha,GAAGma,IAEhE,GAAI3a,KAAKslB,qBAAqB1K,IAC1B5a,KAAKslB,qBAAqBzK,IAC1B7a,KAAKslB,qBAAqBxK,GAE1B9a,KAAK+mB,SAASnM,EAAI5a,KAAKkmB,kBAAkB,IACzClmB,KAAK+mB,SAASlM,EAAI7a,KAAKkmB,kBAAkB,IACzClmB,KAAK+mB,SAASjM,EAAI9a,KAAKkmB,kBAAkB,IAEzClmB,KAAK+lB,YAAY,GAAGlU,SAAW+I,EAC/B5a,KAAK+lB,YAAY,GAAG1E,WAAarhB,KAAKkmB,kBAAkB,GACxDlmB,KAAK+lB,YAAY,GAAGxL,OAAS+gB,EAE7Bt7B,KAAK+lB,YAAY,GAAGlU,SAAWgJ,EAC/B7a,KAAK+lB,YAAY,GAAG1E,WAAarhB,KAAKkmB,kBAAkB,GACxDlmB,KAAK+lB,YAAY,GAAGxL,OAASghB,EAE7Bv7B,KAAK+lB,YAAY,GAAGlU,SAAWiJ,EAC/B9a,KAAK+lB,YAAY,GAAG1E,WAAarhB,KAAKkmB,kBAAkB,GACxDlmB,KAAK+lB,YAAY,GAAGxL,OAASihB,EAE7Bx7B,KAAKy7B,oBAAoBhlB,EAAazW,KAAK+lB,aAAa,OACrD,MAAK/lB,KAAKslB,qBAAqB1K,IACjC5a,KAAKslB,qBAAqBzK,IAC1B7a,KAAKslB,qBAAqBxK,IAC3B,SACG,CACH9a,KAAK+lB,YAAY,GAAGlU,SAAW+I,EAC/B5a,KAAK+lB,YAAY,GAAGlU,SAAWgJ,EAC/B7a,KAAK+lB,YAAY,GAAGlU,SAAWiJ,EAE3B9a,KAAK46B,UACL56B,KAAK+lB,YAAY,GAAGrN,MAAQ1Y,KAAKk4B,aAAaoD,EAAS1gB,GACvD5a,KAAK+lB,YAAY,GAAGrN,MAAQ1Y,KAAKk4B,aAAaqD,EAAS1gB,GACvD7a,KAAK+lB,YAAY,GAAGrN,MAAQ1Y,KAAKk4B,aAAasD,EAAS1gB,KAEvD9a,KAAK+lB,YAAY,GAAGrN,MAAQ1Y,KAAK0Y,MACjC1Y,KAAK+lB,YAAY,GAAGrN,MAAQ1Y,KAAK0Y,MACjC1Y,KAAK+lB,YAAY,GAAGrN,MAAQ1Y,KAAK0Y,OAGrC,MAAMgP,EAAwB1nB,KAAKmnB,cAAcnnB,KAAK+lB,aAEtD,GAAI2B,EAAOpnB,OAAS,EAChB,OAGJ,IAAK,IAAI4b,EAAY,EAAGA,EAAIwL,EAAOpnB,OAAQ4b,IACvCwL,EAAOxL,GAAGmF,WAAarhB,KAAKizB,QAAQvL,EAAOxL,GAAGrK,UAGlD7R,KAAKy7B,oBAAoBhlB,EAAaiR,GAAQ,E,GAG1D,CAEOuL,QAAQ7L,GACX,OAAO,IAAIrO,EACPlS,KAAK0b,MAAOviB,KAAKyW,YAAYK,MAAQ,EAAM,IAAMsQ,EAAGrP,GAAMqP,EAAGpO,GAC7DnS,KAAK0b,MAAOviB,KAAKyW,YAAYM,OAAS,EAAa,IAAPqQ,EAAGtP,GAAYsP,EAAGpO,GAC9DoO,EAAGpO,EAEX,CAEO+N,SAASK,EAAyCtlB,GACrDA,EAAOiW,EAAIlR,KAAK0b,MAAOviB,KAAKyW,YAAYK,MAAQ,EAAM,IAAMsQ,EAAGrP,GAAMqP,EAAGpO,GACxElX,EAAOgW,EAAIjR,KAAK0b,MAAOviB,KAAKyW,YAAYM,OAAS,EAAa,IAAPqQ,EAAGtP,GAAYsP,EAAGpO,GACzElX,EAAOkX,EAAIoO,EAAGpO,CAClB,CAEOqO,6BAA6BnG,EAAYC,GAE5C,MAAMmG,GAAiBtnB,KAAKglB,aAAe9D,EAAGrP,SAASmH,IAAMmI,EAAGtP,SAASmH,EAAIkI,EAAGrP,SAASmH,GACnFuO,EAAiB,IAAIzC,EAO3B,OANAyC,EAAO1V,SAAW,IAAIkH,EAClBuO,GAASnG,EAAGtP,SAASkG,EAAImJ,EAAGrP,SAASkG,GAAKmJ,EAAGrP,SAASkG,EACtDuP,GAASnG,EAAGtP,SAASiG,EAAIoJ,EAAGrP,SAASiG,GAAKoJ,EAAGrP,SAASiG,EACtD9X,KAAKglB,cAETuC,EAAO7O,MAAQyI,EAAGzI,MAAMD,IAAIyI,EAAGxI,OAAOG,IAAIyO,GAAO/f,IAAI2Z,EAAGxI,OACjD6O,CACX,CAEOJ,cAAcK,GACjB,MAAMC,EAAuBD,EACvBE,EAAwB,IAAIpN,MAClC,IAAIqN,EAAYF,EAAMA,EAAMnnB,OAAS,GAErC,IAAK,IAAIE,EAAY,EAAGA,EAAIinB,EAAMnnB,OAAQE,IAAK,CAC3C,MAAMonB,EAAgBH,EAAMjnB,GACxBR,KAAKslB,qBAAqBsC,EAAM/V,WAC3B7R,KAAKslB,qBAAqBqC,EAAE9V,WAC7B6V,EAAOjoB,KAAKO,KAAKqnB,6BAA6BM,EAAGC,IAErDF,EAAOjoB,KAAKmoB,IACL5nB,KAAKslB,qBAAqBqC,EAAE9V,WACnC6V,EAAOjoB,KAAKO,KAAKqnB,6BAA6BM,EAAGC,IAErDD,EAAIC,C,CAGR,OAAOF,CACX,CAEQ+T,oBAAoBhlB,EAA0BilB,EAA0BC,GAAgB,GAC5F,GAAyB,IAArBD,EAAUp7B,SACTN,KAAKulB,cACFmW,EAAU,GAAGra,WACbqa,EAAU,GAAGra,WACbqa,EAAU,GAAGra,YACjB,OAgBJ,GAbIsa,IACI37B,KAAK46B,UACL56B,KAAK+lB,YAAY,GAAGrN,MAAQ1Y,KAAKk4B,aAAal4B,KAAK+lB,YAAY,GAAGxL,OAAQva,KAAK+lB,YAAY,GAAGlU,UAC9F7R,KAAK+lB,YAAY,GAAGrN,MAAQ1Y,KAAKk4B,aAAal4B,KAAK+lB,YAAY,GAAGxL,OAAQva,KAAK+lB,YAAY,GAAGlU,UAC9F7R,KAAK+lB,YAAY,GAAGrN,MAAQ1Y,KAAKk4B,aAAal4B,KAAK+lB,YAAY,GAAGxL,OAAQva,KAAK+lB,YAAY,GAAGlU,YAE9F7R,KAAK+lB,YAAY,GAAGrN,MAAQ1Y,KAAK0Y,MACjC1Y,KAAK+lB,YAAY,GAAGrN,MAAQ1Y,KAAK0Y,MACjC1Y,KAAK+lB,YAAY,GAAGrN,MAAQ1Y,KAAK0Y,QAKhB,IAArBgjB,EAAUp7B,SACTN,KAAK0lB,eACFgW,EAAU,GAAGra,WACbqa,EAAU,GAAGra,WACbqa,EAAU,GAAGra,WACbqa,EAAU,GAAGra,YAEjB,OAGJ,MAAMua,EAAgC57B,KAAK66B,QAAQ3T,kBAAkBwU,GAEjEE,EAAet7B,OAAS,GAI5BN,KAAK67B,yBAAyBplB,EAAamlB,EAC/C,CAEQC,yBAAyBplB,EAAyBmlB,GACtD,IAAK,IAAI1f,EAAY,EAAGA,EAAI0f,EAAet7B,OAAS,EAAG4b,IACnDlc,KAAK8lB,mBAAmB7E,gBACpBxK,EACAmlB,EAAe,GACfA,EAAe,EAAI1f,GACnB0f,EAAe,EAAI1f,GAG/B,CAEQgc,aAAa3d,EAAkBgN,GAKnC,IAAIuU,GAAwB,IAAI7D,GAAgBC,aAAal4B,KAAK26B,SAAU36B,KAAKo4B,OAAQ7d,EAAQgN,GAMjG,OAJiB,OAAbvnB,KAAK06B,MACLoB,EAAc97B,KAAK06B,IAAIqB,mBAAmBD,EAAavU,IAGpD,IAAIjP,EACPzR,KAAKuK,IAAI,IAAqB,IAAhB0qB,EAAY/jB,GAC1BlR,KAAKuK,IAAI,IAAqB,IAAhB0qB,EAAYhkB,GAC1BjR,KAAKuK,IAAI,IAAqB,IAAhB0qB,EAAY9iB,GAC1B,IAER,EC5SG,MAAegjB,EAGXvvB,KAAKgK,GACR,OAAOwlB,QAAQC,IAAI,GACvB,CAEOvE,SAEP,ECRG,MAAMwE,EAEF5jB,iCACH,OAAO,IAAI0jB,SAAkBG,IACzB,MAAMplB,EAAmB,IAAI8S,EAC7B9S,EAAQA,QAAU,IAAI6V,YAAY,OAElC,MAAMiE,EAA6B,IAAIpQ,EACvCoQ,EAAIjQ,QAAQ,KAEZ,IAAK,IAAIrgB,EAAY,EAAGA,EAAI,MAAWA,IAAK,CACxC,MAAM4a,EAAgB0V,EAAIlQ,WAC1B5J,EAAQA,QAAQxW,GAAK,IAAM4a,EAAQ,IAAMA,GAAS,EAAI,IAAMA,GAAS,GAAK,KAAO,E,CAGrFpE,EAAQF,MAAQ,IAChBE,EAAQD,OAAS,IACjBqlB,EAAQplB,EAAQ,GAExB,CAEOuB,2CACH,OAAO,IAAI0jB,SAASG,IAChB,MAAMplB,EAAmB,IAAI8S,EAC7B9S,EAAQA,QAAU,IAAI6V,YAAY,QAEC,IAAInM,GACnCG,QAAQ,KAEZ,IAAK,IAAI/I,EAAY,EAAGA,EAAI,IAAKA,IAC7B,IAAK,IAAIC,EAAY,EAAGA,EAAI,IAAKA,IAAK,CAClC,MAAMgL,EAAa,IAAMhL,EACnBiL,EAAa,IAAMlL,EACnBO,EAAYxR,KAAKyS,KAAKyJ,EAAKA,EAAKC,EAAKA,GAAM,IACjD,IAAIvX,EAAY,EAAI4M,EACpB5M,GAAIA,EAAIA,EACJ4M,EAAI,IACJ5M,EAAI,GAERA,EAAI5E,KAAKuK,IAAI,EAAO,IAAJ3F,GAEhBuL,EAAQA,QAAQe,EAAQ,IAAJD,GAAW,SAAkC,IAAJrM,GAAY,E,CAIjFuL,EAAQF,MAAQ,IAChBE,EAAQD,OAAS,IACjBqlB,EAAQplB,EAAQ,GAExB,CAEOuB,4CACH,OAAO,IAAI0jB,SAASG,IAChB,MAAMplB,EAAU,IAAI8S,EACpB9S,EAAQA,QAAU,IAAI6V,YAAY,QAEtB,IAAInM,GACZG,QAAQ,KAEZ,IAAK,IAAI/I,EAAI,EAAGA,EAAI,IAAKA,IACrB,IAAK,IAAIC,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,MAAMgL,EAAK,IAAMhL,EACXiL,EAAK,IAAMlL,EACXO,EAAIxR,KAAKyS,KAAKyJ,EAAKA,EAAKC,EAAKA,GAAM,IACzC,IAAIvX,EAAI,EAAI4M,EACZ5M,GAAQA,EACJ4M,EAAI,IAAK5M,EAAI,GACjBA,EAAI5E,KAAKuK,IAAI,EAAO,GAAJ3F,GAChBuL,EAAQA,QAAQe,EAAQ,IAAJD,GAAW,SAAkC,IAAJrM,GAAY,E,CAIjFuL,EAAQF,MAAQ,IAChBE,EAAQD,OAAS,IACjBqlB,EAAQplB,EAAQ,GAExB,CAEOuB,YAAY8jB,EAAkBC,GACjC,OAAO,IAAIL,SAAkBG,IACzB,MAAMG,EAA0B,IAAIC,MACpCD,EAAME,OAAS,KACX,MAAMzlB,EAAmB,IAAI8S,EAC7B9S,EAAQA,QAAUhX,KAAK+sB,aAAawP,EAAOD,GAC3CtlB,EAAQF,MAAQylB,EAAMzlB,MACtBE,EAAQD,OAASwlB,EAAMxlB,OACvBqlB,EAAQplB,EAAQ,EAEpBulB,EAAMlxB,QAAU,IAAY+wB,IAC5BG,EAAMpvB,IAAMkvB,CAAQ,GAE5B,CAEQ9jB,oBAAoBgkB,EAAyBG,GAAqB,GACtE,MAAM7F,EAA4B/yB,SAASW,cAAc,UACzDoyB,EAAO/f,MAAQylB,EAAMzlB,MACrB+f,EAAO9f,OAASwlB,EAAMxlB,OACtB,MAAM+f,EAAoCD,EAAOI,WAAW,MAC5DH,EAAQ6F,UAAUJ,EAAO,EAAG,GAC5B,MAAM96B,EAA0Bq1B,EAAQ/J,aAAa,EAAG,EAAGwP,EAAMzlB,MAAOylB,EAAMxlB,QAAQtV,KAChFm7B,EAAoB,IAAI/P,YAAYprB,EAAKnB,OAAS,GACxD,IAAImL,EAAY,EAChB,IAAK,IAAIjL,EAAY,EAAGA,EAAIiB,EAAKnB,OAAQE,GAAK,EAEtCo8B,EAAKnxB,GADLixB,EACWj7B,EAAKjB,EAAI,IAAM,GAAOiB,EAAKjB,EAAI,IAAM,GAAOiB,EAAKjB,EAAI,IAAM,EAAKiB,EAAKjB,EAAI,GAEzE,KAAO,GAAOiB,EAAKjB,EAAI,IAAM,GAAOiB,EAAKjB,EAAI,IAAM,EAAKiB,EAAKjB,EAAI,GAGhFiL,IAEJ,OAAOmxB,CACX,EC9GG,MAAMC,EAEDC,OACAC,OAER,YAAmBlrB,EAAoBkrB,GACnC/8B,KAAK88B,OAASjrB,EACd7R,KAAK+8B,OAASA,CAClB,CAQOC,0BAA0B3Q,GAC7B,OAAOA,EAAM4Q,YAAYpjB,IAAI7Z,KAAK88B,QAAUzQ,EAAM6Q,eAAkBl9B,KAAK+8B,MAC7E,CAEOI,QAAQhF,GACX,OAAOA,EAAI1Y,YAAYzf,KAAK88B,OAChC,CAEOxI,YACH,OAAOt0B,KAAK+8B,MAChB,CAEOxI,YACH,OAAOv0B,KAAK88B,MAChB,EChCG,MAAMM,EAEFC,sBAAsBvW,GAEzB,GAAwB,IAApBA,EAASxmB,OACT,MAAM,IAAIgE,MAAM,kCAGpB,GAAwB,IAApBwiB,EAASxmB,OACT,OAAO,IAAIu8B,EAAO/V,EAAS,GAAI,GAGnC,IAAIgW,EAAS,IAAI/jB,EAAS,EAAG,EAAG,EAAG,GAC/BgkB,EAAS,EAYb,OAVAjW,EAASqN,SAAQvM,IACbkV,EAASA,EAAOv1B,IAAI,IAAIwR,EAAS6O,EAAM7P,EAAG6P,EAAM9P,EAAG8P,EAAM5O,EAAG,GAAK,IAGrE8jB,EAASA,EAAOjkB,IAAI,EAAMiO,EAASxmB,QAEnCwmB,EAASqN,SAAQvM,IACbmV,EAASl2B,KAAK8Q,IAAIolB,EAAQD,EAAOrkB,IAAImP,GAAOtnB,SAAS,IAGlD,IAAIu8B,EAAOC,EAAQC,EAC9B,ECjBG,MAAMO,EAEF/kB,aAAaglB,EAA4BjiB,GAAkB,GAC9D,MAAMsb,EAA+B,GAuCrC,OArCA2G,EAAapJ,SAASqJ,IAClB,MAAMpjB,EAA0B,IAAIE,MAC9BD,EAA2B,IAAIC,MAErCkjB,EAAO1W,SAASqN,SAASvQ,IACrBxJ,EAAO3a,KAAK,IAAIsZ,EAAS6K,EAAE7L,EAAG6L,EAAE9L,EAAG8L,EAAE5K,GAAGH,IAAI,GAAG,IAGnD2kB,EAAOnjB,QAAQ8Z,SAASvQ,IACpBvJ,EAAQ5a,KACJ6b,EAAS,IAAIvC,EAAS6K,EAAE7L,EAAG6L,EAAE9L,EAAG8L,EAAE5K,GAAGI,YAAYP,KAAK,GAAK,IAAIE,EAAS6K,EAAE7L,EAAG6L,EAAE9L,EAAG8L,EAAE5K,GAAGI,YAC1F,IAGL,MAAMoB,EAA+B,GACrCgjB,EAAOhjB,MAAM2Z,SAASsJ,IAClBjjB,EAAM/a,KAAK,CACPgb,GAAIgjB,EAAEpjB,QAAQ,GACdK,GAAI+iB,EAAEpjB,QAAQ,GACdM,GAAI8iB,EAAEpjB,QAAQ,GACdO,GAAI6iB,EAAE3W,SAAS,GACfjM,GAAI4iB,EAAE3W,SAAS,GACfhM,GAAI2iB,EAAE3W,SAAS,IACjB,IAGN,MAAMxkB,EAAsB,CACxBkY,QACAH,UACAD,SACAY,mBAAoBX,EAAQpa,KAAI,IAAM,IAAI8Y,EAAS,EAAG,EAAG,EAAG,KAC5DgC,kBAAmBX,EAAOna,KAAI,IAAM,IAAI8Y,EAAS,EAAG,EAAG,EAAG,MAG9D6d,EAAMn3B,KAAK6C,EAAI,IAGZs0B,CACX,CAEOre,uBACHmlB,EAAoBC,GAAgB,GACpC,MAAM/G,EAA6B,GA8CnC,OA5CA8G,EAAKvJ,SAASqJ,IACV,MAAMpjB,EAA0B,IAAIE,MAC9BD,EAA2B,IAAIC,MACrC,IAAIsjB,EAEAJ,EAAOvW,KACP2W,EAAS,GACTJ,EAAOvW,GAAGkN,SAASvQ,IACf,MAAMqD,EAAwB,IAAIpC,EAClCoC,EAAGvD,EAAIE,EAAEF,EACTuD,EAAGrD,EAAI,EAAMA,EAAEA,EACfga,EAAOn+B,KAAKwnB,EAAG,KAIvBuW,EAAO1W,SAASqN,SAASvQ,IAEjB+Z,EACAvjB,EAAO3a,KAAK,IAAIsZ,EAAS6K,EAAE7L,EAAG6L,EAAE9L,EAAG8L,EAAE5K,GAAGH,IAAI,GAAGtR,IAAI,IAAIwR,EAAS,GAAI,IAAK,EAAG,KAE5EqB,EAAO3a,KAAK,IAAIsZ,EAAS6K,EAAE7L,EAAG6L,EAAE9L,EAAG8L,EAAE5K,GAAGH,IAAI,GAAG,IAGvD2kB,EAAOnjB,QAAQ8Z,SAASvQ,IACpBvJ,EAAQ5a,KAAK,IAAIsZ,EAAS6K,EAAE7L,EAAG6L,EAAE9L,EAAG8L,EAAE5K,GAAG,IAG7C,MAAMqb,GAAS,IAAI+I,GAA6BC,sBAAsBjjB,GACtEia,EAAOE,YAAYtb,EAAI,EAGvB,MAAM3W,EAAM,CACR8X,SACAC,UACA4M,GAAI2W,EACJpjB,MAAOgjB,EAAOhjB,MACdqM,QAASzM,EAAOna,KAAI,IAAM,IAAI8Y,EAAS,EAAG,EAAG,EAAG,KAChD6N,SAAUvM,EAAQpa,KAAI,IAAM,IAAI8Y,EAAS,EAAG,EAAG,EAAG,KAClD8kB,eAAgBxJ,EAChBvuB,KAAM03B,EAAO13B,MAEjB8wB,EAAMn3B,KAAK6C,EAAI,IAGZs0B,CACX,EChGG,MAAMkH,EAEFvlB,YAAY8jB,GACf,OAAO0B,MAAM1B,GAAU3E,MAAMhnB,GAClBA,EAASstB,SACjBtG,MAAMlR,GACE8W,EAAkBW,MAAMzX,IAEvC,CAEOjO,uBAAuB8jB,GAC1B,OAAO0B,MAAM1B,GAAU3E,MAAMhnB,GAClBA,EAASstB,SACjBtG,MAAMlR,GACE8W,EAAkBY,gBAAgB1X,GAAQ,IAEzD,CAEA,cAEA,EC1BG,MAAM2X,EAMG1nB,YACAK,MACAC,OAEA2mB,KARJU,YACAC,YAER3nB,YACYD,EACAK,EACAC,EACRunB,EACQZ,GAJA,KAAAjnB,YAAAA,EACA,KAAAK,MAAAA,EACA,KAAAC,OAAAA,EAEA,KAAA2mB,KAAAA,EACR19B,KAAKq+B,YAAc,IAAIE,IAEvB,IAAK,IAAIxmB,EAAY,EAAGA,EAAIumB,EAAMh+B,OAAQyX,IACtC/X,KAAKw+B,YAAYF,EAAMzyB,WAAWkM,GAAIA,EAE9C,CAEOtL,OACH,OAAOwvB,QAAQC,IAAI,CACfC,EAAat0B,KAAK7H,KAAK09B,MAAM,GAAMhG,MAC9B1gB,GAAqBhX,KAAKo+B,YAAcpnB,KAGrD,CAEO0P,OACH1mB,KAAKyW,YAAY4X,yBAAyB,EAAG,EAAG,EAAG,EAAG,GAAI,GAAIruB,KAAKo+B,YACvE,CAEOK,UAAU1mB,EAAWD,EAAWoW,GACnC,IAAIC,EAAepW,EACnB,MAAM2mB,EAAiB1+B,KAAKo+B,YAAYtnB,MAAQ9W,KAAK8W,MAErD,IAAK,IAAItW,EAAY,EAAGA,EAAI0tB,EAAK5tB,OAAQE,IAAK,CAC1C,MAAMm+B,EAAoBzQ,EAAKriB,WAAWrL,GACpC6C,EAAgBrD,KAAKq+B,YAAYO,IAAID,GAAa3+B,KAAKq+B,YAAY1oB,IAAIgpB,GAAa,EACpFngB,EAAa3X,KAAKC,MAAMzD,EAAQq7B,GAAU1+B,KAAK8W,MAC/C2H,EAAa5X,KAAKC,MAAMzD,EAAQq7B,GAAU1+B,KAAK+W,OACrD/W,KAAKyW,YAAY4X,yBAAyBF,EAAMrW,EAAG0G,EAAIC,EAAIze,KAAK8W,MAAO9W,KAAK+W,OAAQ/W,KAAKo+B,aACzFjQ,GAAQnuB,KAAK8W,K,CAErB,CAEOmX,SAASxX,EAA0BsB,EAAWD,EAAWoW,EAAc0E,EAAciM,GAAgB,GACxG,IAAI1Q,EAAepW,EACnB,MAAM2mB,EAAiB1+B,KAAKo+B,YAAYtnB,MAAQ9W,KAAK8W,MAG/Cmd,EAAeptB,KAAKC,MADJ,IACU8rB,GAAgB5yB,KAAK8W,MAC/CgoB,EAAkBj4B,KAAKC,MAFP,IAEc8rB,EAAgB5yB,KAAK8W,OAASoX,EAAK5tB,OACvE6tB,GAAQ8F,EACR,IAAK,IAAIzzB,EAAY,EAAGA,EAAIqG,KAAKC,MAAM9G,KAAKyW,YAAYK,MAAQ9W,KAAK8W,MAAQ,GAAItW,IAAK,CAClF,MAAMm+B,EAAoBzQ,EAAKriB,YAAYrL,EAAIs+B,GAAW5Q,EAAK5tB,QACzD+C,EAAgBrD,KAAKq+B,YAAYO,IAAID,GAAa3+B,KAAKq+B,YAAY1oB,IAAIgpB,GAAa,EACpFngB,EAAa3X,KAAKC,MAAMzD,EAAQq7B,GAAU1+B,KAAK8W,MAC/C2H,EAAa5X,KAAKC,MAAMzD,EAAQq7B,GAAU1+B,KAAK+W,OACrD/W,KAAKquB,yBAAyB5X,EAAa0X,EACvCrW,EAAG0G,EAAIC,EAAIze,KAAK8W,MAAO9W,KAAK+W,OAAQ/W,KAAKo+B,YAAaxL,EAAMiM,GAChE1Q,GAAQnuB,KAAK8W,K,CAErB,CAEOioB,UAAUtoB,EAA0BsB,EAAWD,EAAWoW,EAAc0E,EAAciM,GAAgB,EAAMzkB,GAC/G,IAAI+T,EAAepW,EACnB,MAAM2mB,EAAiB1+B,KAAKo+B,YAAYtnB,MAAQ9W,KAAK8W,MAG/Cmd,EAAeptB,KAAKC,MADJ,IACU8rB,GAAgB5yB,KAAK8W,MAC/CgoB,EAAkBj4B,KAAKC,MAFP,IAEc8rB,EAAgB5yB,KAAK8W,OAASoX,EAAK5tB,OACvE6tB,GAAQ8F,EACR,IAAK,IAAIzzB,EAAY,EAAGA,EAAIqG,KAAKC,MAAM9G,KAAKyW,YAAYK,MAAQ9W,KAAK8W,MAAQ,GAAItW,IAAK,CAClF,MAAMm+B,EAAoBzQ,EAAKriB,YAAYrL,EAAIs+B,GAAW5Q,EAAK5tB,QACzD+C,EAAgBrD,KAAKq+B,YAAYO,IAAID,GAAa3+B,KAAKq+B,YAAY1oB,IAAIgpB,GAAa,EACpFngB,EAAa3X,KAAKC,MAAMzD,EAAQq7B,GAAU1+B,KAAK8W,MAC/C2H,EAAa5X,KAAKC,MAAMzD,EAAQq7B,GAAU1+B,KAAK+W,OACrD/W,KAAKg/B,0BAA0BvoB,EAAa0X,EACxCrW,EAAG0G,EAAIC,EAAIze,KAAK8W,MAAO9W,KAAK+W,OAAQ/W,KAAKo+B,YAAaxL,EAAMiM,EAAMzkB,GACtE+T,GAAQnuB,KAAK8W,K,CAErB,CAGOkoB,0BAA0BvoB,EAA0BkY,EAAYC,EAAYC,EAAYC,EAC3FhY,EAAeC,EAAgBC,EAAkB4b,EAAciM,GAAgB,EAAMzkB,GACrF,MAAM6kB,EAAiBp4B,KAAK8Q,IAAI,EAAG,EAAIgX,GACjCuQ,EAAer4B,KAAKuK,IAAIud,EAAK7X,EAAOL,EAAYK,OAAS6X,EAEzDsF,EADgB,IACDrB,EAAgB,EACrC,IAAK,IAAI3Z,EAAYgmB,EAAQhmB,EAAIimB,EAAMjmB,IAAK,CAExC,MAAMkmB,EAAgBN,EAAOh4B,KAAK0b,MAAkD,GAA5C1b,KAAKmV,IAAW,KAAP4W,EAA0B,MAAVjE,EAAK1V,KAAoB,EAC1F,IAAI+V,EAAmBH,EAAK5V,EAAI6V,EAAK9X,EAAQF,MACzCmY,EAAkBN,EAAK1V,GAAK2V,EAAKuQ,GAAS1oB,EAAYK,MAE1D,IAAK,IAAIiY,EAAY,EAAGA,EAAIhY,EAAQgY,IAAK,CAErC,IAAc,IADQ/X,EAAQA,QAAQgY,KACZ,EAAK,IAAK,CAEhC,IAAIlX,EAAI,EAAI,IAAFiX,EAAM,EACZZ,EAAc,KAANQ,EAAG1V,GAAO,IAAS,IAALgb,EAC1B7Z,EAAO3a,KAAK,IAAIyb,EACZiT,EACAtnB,KAAKmV,IAAS,IAALmS,GAAWrW,EAAqB,EAAnBjR,KAAKmV,IAAS,GAALmS,GAC/BtnB,KAAKoV,IAAS,IAALkS,GAAWrW,EAAqB,EAAnBjR,KAAKoV,IAAS,GAALkS,I,CAGvCa,GAAYhY,EAAQF,MACpBmY,GAAWjvB,KAAKyW,YAAYK,K,EAKxC,CAEOuX,yBAAyB5X,EAA0BkY,EAAYC,EAAYC,EAAYC,EAC1FhY,EAAeC,EAAgBC,EAAkB4b,EAAciM,GAAgB,GAC/E,MAAMI,EAAiBp4B,KAAK8Q,IAAI,EAAG,EAAIgX,GACjCuQ,EAAer4B,KAAKuK,IAAIud,EAAK7X,EAAOL,EAAYK,OAAS6X,EAC/D,IAAK,IAAI1V,EAAYgmB,EAAQhmB,EAAIimB,EAAMjmB,IAAK,CAExC,MAAMkmB,EAAgBN,EAAOh4B,KAAK0b,MAAkD,GAA5C1b,KAAKmV,IAAW,KAAP4W,EAA0B,MAAVjE,EAAK1V,KAAoB,EAC1F,IAAI+V,EAAmBH,EAAK5V,EAAI6V,EAAK9X,EAAQF,MACzCmY,EAAkBN,EAAK1V,GAAK2V,EAAKuQ,GAAS1oB,EAAYK,MAE1D,IAAK,IAAIiY,EAAY,EAAGA,EAAIhY,EAAQgY,IAAK,CACrC,MAAMrW,EAAgB1B,EAAQA,QAAQgY,GAC1B,WAARtW,IACAjC,EAAYA,YAAYwY,GAAWvW,GAGvCsW,GAAYhY,EAAQF,MACpBmY,GAAWjvB,KAAKyW,YAAYK,K,EAKxC,CAEQ0nB,YAAYY,EAAc/7B,GAC9BrD,KAAKq+B,YAAYhvB,IAAI+vB,EAAM/7B,EAC/B,E,sCCjIG,MAMMg8B,EAAWC,KCZjB,MAAMC,EAEFC,WACAC,WAAY,EACZC,SACAr5B,IAAM,EAGNs5B,gBACAC,UACAC,aAEP,cAGI7/B,KAAKw/B,WAAa,IAAI/5B,SAASuG,WAC/BhM,KAAKw/B,WAAWM,WAAY,CAEhC,CAQOC,UAAU1D,GACb,OAAO,IAAIJ,SAASG,IAGhB,IAAI4D,EAEJ,OAHsB3D,EAAS4D,MAAM,KAAKC,MAAMC,eAI5C,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,MACDH,EAAc,IAAIjzB,QAAQC,OAAOgF,QAAQ,CACrC,iBAAoB,4BAExB,MAGJ,QACIguB,EAAc,IAAIjzB,QAAQC,OAAOC,MAGzC,MAAM/G,EAAQ,IAAI85B,EAAY75B,MAAMk2B,GACpCr8B,KAAK6/B,aAAe35B,EAAM8B,OAC1Bo0B,GAAS,GAEjB,CASAgE,YAAY/D,EAAkBqD,GAE1B,OADA1/B,KAAK0/B,SAAWA,EACT,IAAIzD,SAASG,IACZp8B,KAAK0/B,UACL1/B,KAAKw/B,WAAW7yB,UAAU,CACtB,UAAa0vB,IAEjBr8B,KAAKw/B,WAAW/yB,KAAK,SAGrBzM,KAAKw/B,WAAW/yB,OAIpBzM,KAAKw/B,WAAWj2B,GAAG,SAAS,IAAMvJ,KAAKqgC,gBAGvCrgC,KAAKw/B,WAAWj2B,GAAG,UAAW+2B,GAAmBtgC,KAAKugC,aAAaD,KAGnEtgC,KAAKw/B,WAAWj2B,GAAG,QAAQ,IAAMvJ,KAAKwgC,WACtCxgC,KAAKw/B,WAAWj2B,GAAG,SAAS,IAAMvJ,KAAKygC,YACvCrE,GAAS,GAEjB,CAEAiE,cACIrgC,KAAKw/B,WAAWM,WAAY,EAE5B9/B,KAAK4/B,UAAY,CACbc,OAAQ1gC,KAAKw/B,WAAW55B,SAAS,UACjC+6B,MAAO3gC,KAAKw/B,WAAW55B,SAAS,SAChCg7B,KAAM5gC,KAAKw/B,WAAW55B,SAAS,QAC/Bi7B,eAAgB7gC,KAAKw/B,WAAW55B,SAAS,kBACzCk7B,gBAAiB9gC,KAAKw/B,WAAW55B,SAAS,mBAElD,CAIA26B,aAAaD,GACJS,MAAMT,KACPtgC,KAAKqG,IAAMi6B,GAEftgC,KAAK6/B,aAAa9rB,YAAcusB,EAASjB,CAC7C,CAEA2B,eAEShhC,KAAKw/B,WAAWM,WAAc9/B,KAAK0/B,YAKxC1/B,KAAK2/B,gBAAkB,CACnBsB,YAAcjhC,KAAK6/B,cAAc9rB,aAAgB,EACjDmtB,iBAAqD,IAAlClhC,KAAK6/B,cAAc9rB,YACtC6rB,UAAW,CACPc,OAAQ1gC,KAAK4/B,UAAUc,OAAOt6B,SAASpG,KAAKqG,KAC5Cw6B,eAAgB7gC,KAAK4/B,UAAUiB,eAAez6B,SAASpG,KAAKqG,KAC5Dy6B,gBAAiB9gC,KAAK4/B,UAAUkB,gBAAgB16B,SAASpG,KAAKqG,KAC9Ds6B,MAAO3gC,KAAK4/B,UAAUe,MAAMv6B,SAASpG,KAAKqG,KAC1Cu6B,KAAM5gC,KAAK4/B,UAAUgB,KAAKx6B,SAASpG,KAAKqG,OAIhDrG,KAAKqG,IAAMrG,KAAK2/B,gBAAgBsB,YAAc5B,EAG1Cr/B,KAAK6/B,eAA6C,IAA7B7/B,KAAK6/B,aAAarsB,QAMvCxT,KAAKw/B,WAAWx8B,OAAOhD,KAAKqG,KAI5BQ,KAAKC,MAAM9G,KAAK6/B,aAAajwB,YAAc/I,KAAKC,MAAM9G,KAAK2/B,gBAAgBsB,cAC3En9B,SAAS0J,eAAe,eAAe2zB,QAE/C,CAEAX,UACSxgC,KAAKy/B,WAAaz/B,KAAK6/B,eACpB7/B,KAAK6/B,aAAa9rB,cAClB/T,KAAK6/B,aAAa9rB,YAAc/T,KAAKqG,IAAMg5B,GAE/Cr/B,KAAKy/B,WAAY,EACjBz/B,KAAK6/B,aAAa/0B,QAEtBK,QAAQsF,IAAI,WAChB,CAEAgwB,UACIzgC,KAAKqG,IAAMrG,KAAK6/B,aAAa9rB,YAAcsrB,GACtCr/B,KAAK6/B,aAAarsB,QAAUxT,KAAKy/B,YAClCz/B,KAAK6/B,aAAah1B,QAClB7K,KAAKy/B,WAAY,GAErBt0B,QAAQi2B,KAAK,YACjB,CAQOC,KAAKzO,EAAc0O,EAAmBC,GACzCvhC,KAAKqG,IAAMusB,EAAOyM,EAClB,MAAMmC,EAAaC,OAAOzhC,KAAK4/B,UAAUc,OAAOt6B,SAASpG,KAAKqG,KAAKq7B,QAAQ,IACvE76B,KAAK86B,MAAMF,OAAOzhC,KAAK2/B,gBAAgBC,UAAUc,WAAa75B,KAAK86B,MAAMH,IAAeA,GAAc,EAElGv4B,SAASu4B,EAAWzhC,WAAY,MAAQyhC,EACxCxhC,KAAKqhC,KAAKzO,EAAQ,IAAO0O,EAAYA,EAAWC,GAEhDvhC,KAAK4R,KAAKghB,GAGVA,GAAQ,GAAK4O,EAAaD,EAAc,EACxCvhC,KAAKqhC,KAAKzO,EAAQ,IAAO0O,EAAYA,EAAWC,GAGhDvhC,KAAK4R,KAAK,EAGtB,CAOOA,KAAKghB,GACR5yB,KAAK6/B,aAAa9rB,YAAc6e,EAE3B5yB,KAAK0/B,UACN1/B,KAAKw/B,WAAWx8B,OAAOhD,KAAK6/B,aAAa9rB,YAAcsrB,EAE/D,CAQOuC,YAAYC,EAAkBC,GAC7BA,GACAD,EAAI/8B,aAAa,QAAS,gBAC1B+8B,EAAIE,UAAU7+B,OAAO,gBACrB2+B,EAAIE,UAAUx6B,IAAI,mBAElBs6B,EAAI/8B,aAAa,QAAS,cAC1B+8B,EAAIE,UAAU7+B,OAAO,iBACrB2+B,EAAIE,UAAUx6B,IAAI,iBAEtBvH,KAAK6/B,aAAamC,MAAQF,CAC9B,CAKOG,eAGH,MAAMC,EAAWliC,KACXmiC,EAASV,OAAOW,aAAaC,QAAQ,aAGtCr+B,OAAe6K,WAChB,SAAUyzB,IAEN,GAAKt+B,OAAeqK,UAMhB,OAHAvK,SAAS0J,eAAe,iBAAiB7J,MAAM4+B,QAAU,OACzDL,EAASM,YAAYN,EAASrC,aAAajwB,eAC3CsyB,EAAStwB,KAAKuwB,GAGlBM,WAAWH,EAAM,IACpB,CAXD,IAaAJ,EAASrC,aAAa3rB,iBAAmB,WACrCguB,EAASM,YAAYN,EAASrC,aAAajwB,SAC/C,EACAsyB,EAAStwB,KAAKuwB,IAIlB,MAAML,EAAkD,SAAxCM,aAAaC,QAAQ,eACrCriC,KAAK4hC,YAAY99B,SAAS0J,eAAe,iBAAkBs0B,EAC/D,CAOQU,YAAYz7B,GACfjD,SAAS0J,eAAe,YAAiCmK,IAAMjM,OAA2B,IAApB7E,KAAKC,MAAMC,GACtF,E,+ICvQA/E,GAAU,CAAC,EAEfA,GAAQgD,kBAAoB,KAC5BhD,GAAQ0C,cAAgB,KAElB1C,GAAQ0B,OAAS,UAAc,KAAM,QAE3C1B,GAAQe,OAAS,KACjBf,GAAQ+C,mBAAqB,KAEhB,IAAI,KAAS/C,IAKJ,MAAW,KAAQ0gC,QAAS,KAAQA,OCbnD,MAAMC,WAA2B3G,EAE5B4G,QACAhS,MACAiS,YACAC,MAEAC,UAEAC,mBACAC,kBACAC,aAA6B,IAAI3D,EACzC4D,aAEO12B,KAAKgK,GAYR,OAXAzW,KAAKgjC,mBAAqB,IAAInW,YAAYpW,EAAYK,MAAQL,EAAYM,QAC1E/W,KAAKijC,kBAAoB,IAAIxI,EAAgChkB,GAC7DzW,KAAKijC,kBAAkB9d,YAAYrM,EAASsqB,OAIhDpjC,KAAKmjC,aAAe,IAAIhF,EACpB1nB,EACA,EAAG,EAHH,8DAIA,EAAQ,OAEDwlB,QAAQC,IAAI,CACfl8B,KAAKmjC,aAAa12B,OAClBzM,KAAKkjC,aAAanD,UAAU,EAAQ,MACpCjC,EAAcj2B,KAAK,EAAQ,OAA8B6vB,MACpDzd,GAAgCja,KAAK+iC,UAAY9oB,IAEtDkiB,EAAat0B,KAAK,EAAQ,OAAuC,GAAO6vB,MACnE1gB,GAAqBhX,KAAK4iC,QAAU5rB,IAEzCmlB,EAAakH,0BAA0B3L,MAClC1gB,GAAqBhX,KAAK4wB,MAAQ5Z,IAEvCmlB,EAAat0B,KAAK,EAAQ,OAAiC,GAAM6vB,MAC5D1gB,GAAqBhX,KAAK6iC,YAAc7rB,IAE7CmlB,EAAat0B,KAAK,EAAQ,OAA2B,GAAM6vB,MACtD1gB,GAAqBhX,KAAK8iC,MAAQ9rB,KAG/C,CAEO2gB,SACH,MAAM2L,EAA4Bx/B,SAASW,cAAc,UACzD6+B,EAAOC,YAAc,cACrBz/B,SAASgF,qBAAqB,QAAQ,GAAGvE,YAAY++B,GACrDA,EAAO9yB,iBAAkB,SAAS,KAE9BxQ,KAAKkjC,aAAazC,UAClBzgC,KAAKkjC,aAAa1C,QAAQ,GAElC,CAEO5I,OAAOnhB,GACV,MAAMmc,EAAepE,KAAKC,MAE1BhY,EAAYub,wBAAwB,EAAE,EAAEvb,EAAYK,MAAOL,EAAYM,OAAQ/W,KAAK4iC,QAAS,GAC7F5iC,KAAKwjC,kBAAkB/sB,EAAamc,GAEpCnc,EAAYma,MAAMgC,EAAM5yB,KAAK4wB,OAC7Bna,EAAY0b,YAAY,IAAMnyB,KAAK8iC,MAAMhsB,MAAO,IAAK,EAAG9W,KAAK8iC,MAAO,GACpE9iC,KAAKmjC,aAAalV,SAASxX,EAAY,EAAE,IAAS,wCAAyCmc,GAAM,EACrG,CAEO4Q,kBAAkB/sB,EAA0Boa,GAE/Cpa,EAAY0c,mBAEZ,MAAM3H,EAAmBnP,EAASsX,2BAA2B,EAAG,GAAI,GAAG3V,eACnE3B,EAASoX,yBAAuC,KAAd5C,GAC7B7S,eACG3B,EAASqX,yBAAuC,KAAd7C,KAI9C,IAAK,IAAIrwB,EAAY,EAAGA,EAAI,GAAIA,IAAK,CACjC,MAAM4a,EAAkF,GAAlB,GAAvDvU,KAAKmV,IAAc,EAAVnV,KAAK8U,GAAS,GAAKnb,EAAkB,KAAdqwB,GAA6B,GAAM,IAC5E4S,EAAejY,EAAOxN,eACxB3B,EAASsX,2BAA2B,GAAKnzB,EAAkB,KAAdqwB,GAAwB,GAAM,EAAG,GAAG7S,eAC7E3B,EAASoX,yBAA8B,IAAJjzB,EAAyB,MAAdqwB,GAAuB7S,eACjE3B,EAASmX,qBAAqBpY,EAAO,EAAGA,MAIpDpb,KAAKijC,kBAAkBvc,KAAKjQ,EAAazW,KAAK+iC,UAAU,GAAIU,E,CAIpE,E,eC/FA,GAAU,CAAC,EAEf,GAAQz+B,kBAAoB,KAC5B,GAAQN,cAAgB,KAElB,GAAQhB,OAAS,UAAc,KAAM,QAE3C,GAAQX,OAAS,KACjB,GAAQgC,mBAAqB,KAEhB,IAAI,KAAS,IAKJ,MAAW,KAAQ29B,QAAS,KAAQA,OCrB1D,MAEWnqB,cACoB,IAAIoe,EAAO,IAAK,IAAK,IAAIgM,IACzCl2B,MACX,GAIQi3B,M","sources":["webpack://aisa/./src/default-style.css","webpack://aisa/./src/examples/rotating-gears/style.css","webpack://aisa/./node_modules/css-loader/dist/runtime/api.js","webpack://aisa/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://aisa/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://aisa/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://aisa/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://aisa/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://aisa/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://aisa/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://aisa/./src/sound/JSRocket.js","webpack://aisa/./src/sound/cowbell/audio_player.js","webpack://aisa/./src/sound/cowbell/cowbell.js","webpack://aisa/./src/sound/cowbell/openmpt/openmpt_player.js","webpack://aisa/./src/sound/cowbell/web_audio_player.js","webpack://aisa/webpack/bootstrap","webpack://aisa/webpack/runtime/compat get default export","webpack://aisa/webpack/runtime/define property getters","webpack://aisa/webpack/runtime/global","webpack://aisa/webpack/runtime/hasOwnProperty shorthand","webpack://aisa/webpack/runtime/publicPath","webpack://aisa/webpack/runtime/nonce","webpack://aisa/./src/blitter/ScaleClipBlitter.ts","webpack://aisa/./src/core/Color.ts","webpack://aisa/./src/CullFace.ts","webpack://aisa/./src/math/Vector4f.ts","webpack://aisa/./src/geometrical-objects/AbstractGeometricObject.ts","webpack://aisa/./src/math/Vector3f.ts","webpack://aisa/./src/geometrical-objects/Torus.ts","webpack://aisa/./src/math/Vector2f.ts","webpack://aisa/./src/math/Matrix4f.ts","webpack://aisa/./src/math/Matrix3.ts","webpack://aisa/./src/math/Interpolator.ts","webpack://aisa/./src/RandomNumberGenerator.ts","webpack://aisa/./src/rasterizer/AbstractTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/AbstractScanlineTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/FlatShadingTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/line/LineRasterizer.ts","webpack://aisa/./src/rasterizer/line/LineRasterizerNoZ.ts","webpack://aisa/./src/rasterizer/TexturedTriangleRasterizer.ts","webpack://aisa/./src/rasterizer/TexturedAlphaBlendingTriangleRasterizer.ts","webpack://aisa/./src/TextureCoordinate.ts","webpack://aisa/./src/Vertex.ts","webpack://aisa/./src/rendering-pipelines/AbstractRenderingPipeline.ts","webpack://aisa/./src/rendering-pipelines/TexturingRenderingPipeline.ts","webpack://aisa/./src/screen-space-clipping/AbstractClipEdge.ts","webpack://aisa/./src/screen-space-clipping/BottomClipEdge.ts","webpack://aisa/./src/screen-space-clipping/CohenSutherlandLineClipper.ts","webpack://aisa/./src/screen-space-clipping/LeftClipEdge.ts","webpack://aisa/./src/screen-space-clipping/RightClipEdge.ts","webpack://aisa/./src/screen-space-clipping/TopClipEdge.ts","webpack://aisa/./src/texture/Texture.ts","webpack://aisa/./src/Framebuffer.ts","webpack://aisa/./src/fullscreen/FullscreenUtils.ts","webpack://aisa/./src/Canvas.ts","webpack://aisa/./src/screen-space-clipping/SutherlandHodgman2DClipper.ts","webpack://aisa/./src/shading/illumination-models/PhongLighting.ts","webpack://aisa/./src/shading/light/Light.ts","webpack://aisa/./src/shading/light/PointLight.ts","webpack://aisa/./src/shading/material/Material.ts","webpack://aisa/./src/rasterizer/ColorInterpolator.ts","webpack://aisa/./src/rasterizer/SlopeInterpolator.ts","webpack://aisa/./src/rasterizer/GouraudShadingTriangleRasterizer.ts","webpack://aisa/./src/rendering-pipelines/GouraudShadingRenderingPipeline.ts","webpack://aisa/./src/scenes/AbstractScene.ts","webpack://aisa/./src/texture/TextureUtils.ts","webpack://aisa/./src/math/Sphere.ts","webpack://aisa/./src/math/Geometry.ts","webpack://aisa/./src/blender/BlenderJsonParser.ts","webpack://aisa/./src/model/blender/BlenderLoader.ts","webpack://aisa/./src/examples/sine-scroller/FontRenderer.ts","webpack://aisa/./src/sound/MusicProperties.ts","webpack://aisa/./src/sound/SoundManager.ts","webpack://aisa/./src/examples/rotating-gears/style.css?5a33","webpack://aisa/./src/examples/rotating-gears/RotatingGearsScene.ts","webpack://aisa/./src/default-style.css?9c7b","webpack://aisa/./src/examples/rotating-gears/Application.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n    background-color: #000;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/default-style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,sBAAsB;AAC1B\",\"sourcesContent\":[\"body {\\n    background-color: #000;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `button {\n    background-color: #ff66ff;\n    border: none;\n    padding: 10px 30px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    border-radius: 18px;\n    cursor: pointer;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/examples/rotating-gears/style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;IAClB,qBAAqB;IACrB,qBAAqB;IACrB,eAAe;IACf,mBAAmB;IACnB,eAAe;AACnB\",\"sourcesContent\":[\"button {\\n    background-color: #ff66ff;\\n    border: none;\\n    padding: 10px 30px;\\n    text-align: center;\\n    text-decoration: none;\\n    display: inline-block;\\n    font-size: 16px;\\n    border-radius: 18px;\\n    cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","(function (window) {\n\n    if (!window.JSRocket) {\n        window.JSRocket = {};\n    }\n    JSRocket.SyncData = function () {\n\n        \"use strict\";\n\n        var _track = [];\n\n        function getTrack(index) {\n            return _track[index];\n        }\n\n        function getIndexForName(name) {\n            for (var i = 0; i < _track.length; i++) {\n\n                if (_track[i].name === name) {\n                    return i;\n                }\n            }\n\n            return -1;\n        }\n\n        function getTrackLength() {\n            return _track.length;\n        }\n\n        function createIndex(varName) {\n            var track = new JSRocket.Track();\n            track.name = varName;\n\n            _track.push(track);\n        }\n\n        return {\n            getTrack: getTrack,\n            getIndexForName: getIndexForName,\n            getTrackLength: getTrackLength,\n            createIndex: createIndex\n        };\n    };\n    JSRocket.Track = function () {\n\n        \"use strict\";\n\n        var STEP = 0,\n            LINEAR = 1,\n            SMOOTH = 2,\n            RAMP = 3;\n\n        var data = [];\n\n        function findKeyIndex(keys, row) {\n            var lo = 0, hi = keys.length;\n            while (lo < hi) {\n                var mi = ((hi + lo) / 2) | 0;\n\n                if (keys[mi] < row) {\n                    lo = mi + 1;\n                } else if (keys[mi] > row) {\n                    hi = mi;\n                } else {\n                    return mi;\n                }\n            }\n            return lo - 1;\n        }\n\n        function getValue(row) {\n            var keys = Object.keys(data);\n\n            if (!keys.length) {\n                return 0.0;\n            }\n\n            var idx = findKeyIndex(keys, Math.floor(row));\n            if (idx < 0) {\n                return data[keys[0]].value;\n            }\n            if (idx > keys.length - 2) {\n                return data[keys[keys.length - 1]].value;\n            }\n\n            // lookup keys and values\n            var k0 = keys[idx], k1 = keys[idx + 1];\n            var a = data[k0].value;\n            var b = data[k1].value;\n\n            // interpolate\n            var t = (row - k0) / (k1 - k0);\n            switch (data[k0].interpolation) {\n                case 0:\n                    return a;\n                case 1:\n                    return a + (b - a) * t;\n                case 2:\n                    return a + (b - a) * t * t * (3 - 2 * t);\n                case 3:\n                    return a + (b - a) * Math.pow(t, 2.0);\n            }\n        }\n\n        function add(row, value, interpolation) {\n            data[row] = {\n                \"value\": value,\n                \"interpolation\": interpolation\n            };\n        }\n\n        function remove(row) {\n            delete data[row];\n        }\n\n        return {\n            getValue: getValue,\n            add: add,\n            remove: remove\n        };\n    };\n    JSRocket.SyncDevicePlayer = function (cfg) {\n\n        \"use strict\";\n\n        var _urlRequest,\n            _syncData = new JSRocket.SyncData(),\n            _eventHandler = {\n                'ready': function () {\n                },\n                'error': function () {\n                }\n            };\n\n        function load(url) {\n\n            _urlRequest = new XMLHttpRequest();\n\n            if (_urlRequest === null) {\n                _eventHandler.error();\n                return;\n            }\n\n            _urlRequest.open('GET', url, true);\n            _urlRequest.onreadystatechange = urlRequestHandler;\n\n            _urlRequest.send();\n        }\n\n        function urlRequestHandler() {\n\n            if (_urlRequest.readyState === 4) {\n                if (_urlRequest.status < 300) {\n                    readXML(_urlRequest.responseText);\n                } else {\n                    _eventHandler.error();\n                }\n            }\n        }\n\n        function readXML(xmlString) {\n            var key,\n                t = 0, tLen, k = 0, kLen,\n                xml = (new DOMParser()).parseFromString(xmlString, 'text/xml'),\n                tracks = xml.getElementsByTagName('tracks');\n\n            //<tracks>\n            var trackList = tracks[0].getElementsByTagName('track');\n\n            for (t, tLen = trackList.length; t < tLen; t++) {\n\n                var track = getTrack(trackList[t].getAttribute('name')),\n                    keyList = trackList[t].getElementsByTagName('key');\n\n                for (k = 0, kLen = keyList.length; k < kLen; k++) {\n                    key = keyList[k];\n                    track.add(parseInt(key.getAttribute('row'), 10),\n                        parseFloat(key.getAttribute('value')),\n                        parseInt(key.getAttribute('interpolation'), 10));\n\n                }\n            }\n\n            _eventHandler.ready();\n        }\n\n        function getTrack(name) {\n\n            var index = _syncData.getIndexForName(name);\n\n            if (index > -1) {\n                return _syncData.getTrack(index);\n            }\n\n            _syncData.createIndex(name);\n            return _syncData.getTrack(_syncData.getTrackLength() - 1);\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        function nop() {\n\n        }\n\n        if (cfg.rocketXML === \"\" || cfg.rocketXML === undefined || cfg.rocketXML === undefined) {\n            throw (\"[jsRocket] rocketXML is not set, try _syncDevice.setConfig({'rocketXML':'url/To/RocketXML.rocket'})\");\n        } else {\n            load(cfg.rocketXML);\n        }\n\n        return {\n            load: load,\n            getTrack: getTrack,\n            update: nop,\n            on: setEvent\n        };\n    };\n    JSRocket.SyncDeviceClient = function (cfg) {\n\n        \"use strict\";\n\n        var CMD_SET_KEY = 0,\n            CMD_DELETE_KEY = 1,\n            CMD_GET_TRACK = 2,\n            CMD_SET_ROW = 3,\n            CMD_PAUSE = 4,\n            CMD_SAVE_TRACKS = 5;\n\n        var _ws = new WebSocket(cfg.socketURL),\n            _syncData = new JSRocket.SyncData(),\n            _eventHandler = {\n                'ready': function () {\n                },\n                'update': function () {\n                },\n                'play': function () {\n                },\n                'pause': function () {\n                },\n                'save': function () {\n                }\n            };\n\n        function onOpen() {\n\n            _ws.binaryType = \"arraybuffer\";\n            _ws.send('hello, synctracker!');\n        }\n\n        function onMessage(e) {\n\n            var queue = (new Uint8Array(e.data)),\n                cmd = queue[0],\n                track, row, value, interpolation;\n\n            //Handshake\n            if (cmd === 104) {\n\n                _eventHandler.ready();\n\n                //PAUSE\n            } else if (CMD_PAUSE === cmd) {\n\n                if (queue[1] === 1) {\n                    _eventHandler.pause();\n                } else {\n                    _eventHandler.play();\n                }\n\n                //SET_ROW\n            } else if (CMD_SET_ROW === cmd) {\n\n                row = toInt(queue.subarray(1, 5));\n\n                _eventHandler.update(row);\n\n                //SET_KEY\n            } else if (CMD_SET_KEY === cmd) {\n\n                track = toInt(queue.subarray(1, 5));\n                row = toInt(queue.subarray(5, 9));\n\n                //value = Math.round(toFloat(queue.subarray(9, 13)) * 100) / 100; //round to what's seen in Rocket tracks\n                value = toFloat(queue.subarray(9, 13)); //use the values you see in Rocket statusbar\n\n                interpolation = toInt(queue.subarray(13, 14));\n                _syncData.getTrack(track).add(row, value, interpolation);\n\n                //DELETE\n            } else if (CMD_DELETE_KEY === cmd) {\n\n                track = toInt(queue.subarray(1, 5));\n                row = toInt(queue.subarray(5, 9));\n\n                _syncData.getTrack(track).remove(row);\n\n                //SAVE\n            } else if (CMD_SAVE_TRACKS === cmd) {\n                _eventHandler.save();\n            }\n        }\n\n        function onClose(e) {\n            console.warn(\">> connection closed\", e);\n        }\n\n        function onError(e) {\n            console.error(\">> connection error'd\", e);\n        }\n\n        _ws.onopen = onOpen;\n        _ws.onmessage = onMessage;\n        _ws.onclose = onClose;\n        _ws.onerror = onError;\n\n        function getTrack(name) {\n\n            var index = _syncData.getIndexForName(name);\n\n            if (index > -1) {\n                return _syncData.getTrack(index);\n            }\n\n            var utf8Name = encodeURIComponent(name).replace(/%([\\dA-F]{2})/g, function (m, c) {\n                return String.fromCharCode('0x' + c);\n            });\n            var message = [CMD_GET_TRACK,\n                (utf8Name.length >> 24) & 0xFF, (utf8Name.length >> 16) & 0xFF,\n                (utf8Name.length >> 8) & 0xFF, (utf8Name.length) & 0xFF];\n\n            for (var i = 0; i < utf8Name.length; i++) {\n                message.push(utf8Name.charCodeAt(i));\n            }\n\n            _ws.send(new Uint8Array(message).buffer);\n\n            _syncData.createIndex(name);\n            return _syncData.getTrack(_syncData.getTrackLength() - 1);\n        }\n\n        function setRow(row) {\n\n            var streamInt = [(row >> 24) & 0xFF,\n            (row >> 16) & 0xFF,\n            (row >> 8) & 0xFF,\n            (row) & 0xFF];\n\n            _ws.send(new Uint8Array([CMD_SET_ROW, streamInt[0], streamInt[1], streamInt[2], streamInt[3]]).buffer);\n        }\n\n        function toInt(arr) {\n\n            var i = 0,\n                view = new DataView(new ArrayBuffer(arr.length));\n\n            for (; i < arr.length; i++) {\n                view.setUint8(i, arr[i]);\n            }\n\n            if (view.byteLength === 1) {\n                return view.getInt8(0);\n            } else {\n                return view.getInt32(0);\n            }\n        }\n\n        function toFloat(arr) {\n            var view = new DataView(new ArrayBuffer(4));\n            view.setUint8(0, arr[0]);\n            view.setUint8(1, arr[1]);\n            view.setUint8(2, arr[2]);\n            view.setUint8(3, arr[3]);\n\n            return view.getFloat32(0);\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        return {\n            getTrack: getTrack,\n            update: setRow,\n            on: setEvent\n        };\n    };\n\n    JSRocket.SyncDevice = function () {\n\n        \"use strict\";\n\n        var _connected = false,\n            _device,\n            _previousIntRow,\n            _config = {\n                \"socketURL\": \"ws://localhost:1339\",\n                \"rocketXML\": \"\"\n            },\n            _eventHandler = {\n                'ready': function () {\n                },\n                'update': function () {\n                },\n                'play': function () {\n                },\n                'pause': function () {\n                }\n            };\n\n        function init(mode) {\n            if (mode === \"demo\") {\n                _device = new JSRocket.SyncDevicePlayer(_config);\n            } else {\n                _device = new JSRocket.SyncDeviceClient(_config);\n            }\n\n            _device.on('ready', deviceReady);\n            _device.on('update', deviceUpdate);\n            _device.on('play', devicePlay);\n            _device.on('pause', devicePause);\n        }\n\n        function getConfig() {\n            return _config;\n        }\n\n        function setConfig(cfg) {\n            for (var option in cfg) {\n                if (cfg.hasOwnProperty(option)) {\n                    _config[option] = cfg[option];\n                }\n            }\n\n            return _config;\n        }\n\n        function deviceReady() {\n            _connected = true;\n            _eventHandler.ready();\n        }\n\n        function deviceUpdate(row) {\n            _eventHandler.update(row);\n        }\n\n        function devicePlay() {\n            _eventHandler.play();\n        }\n\n        function devicePause() {\n            _eventHandler.pause();\n        }\n\n        function getTrack(name) {\n            if (_connected) {\n                return _device.getTrack(name);\n            } else {\n                return null;\n            }\n        }\n\n        function update(row) {\n            //no need to update rocket on float rows\n            if (Math.floor(row) !== _previousIntRow) {\n                _previousIntRow = Math.floor(row);\n                _device.update(_previousIntRow);\n            }\n        }\n\n        function setEvent(evt, handler) {\n            _eventHandler[evt] = handler;\n        }\n\n        return {\n            init: init,\n            setConfig: setConfig,\n            getConfig: getConfig,\n            getTrack: getTrack,\n            update: update,\n            on: setEvent\n        };\n    };\n\n})(window);\n\n","/* Trivial player for formats that the browser supports natively through the <audio> element,\nsuch as MP3 and OGG */\n\nCowbell.Player.Audio = function() {\n\tthis.Track = function(url) {\n\t\tthis.open = function() {\n\t\t\tvar audio = document.createElement('audio');\n\t\t\taudio.src = url;\n\t\t\tdocument.body.appendChild(audio);\n\n\t\t\treturn audio;\n\t\t};\n\t};\n};\n","window.Cowbell = {\n\t'UI': {},\n\t'Player': {},\n\t'Common': {}\n};\n\nwindow.Cowbell.createPlayer = function(containerElement, opts) {\n\tif (!opts) opts = {};\n\n\tif (typeof(containerElement) == 'string') {\n\t\tcontainerElement = document.getElementById(containerElement);\n\t}\n\n\tvar uiConstructor = opts.ui || Cowbell.UI.Basic;\n\tvar ui = new uiConstructor(containerElement);\n\n\tif (opts.player) {\n\t\tvar player = new opts.player(opts.playerOpts);\n\n\t\tif (opts.url) {\n\t\t\tvar track = new player.Track(opts.url, opts.trackOpts);\n\t\t\tui.open(track);\n\t\t}\n\t}\n\n\treturn ui;\n};\n\nif (window.jQuery) {\n\twindow.jQuery.fn.cowbell = function(opts) {\n\t\tthis.each(function() {\n\t\t\tCowbell.createPlayer(this, opts);\n\t\t});\n\t};\n}\n","/* Player for module formats supported by libopenmpt */\n\n(function() {\n\tfunction OpenMPTGenerator(url, audioCtx, playerOpts, trackOpts) {\n\t\tvar modulePtr, leftBufferPtr, rightBufferPtr;\n\t\tvar maxFramesPerChunk = 4096;\n\t\tvar self = this;\n\t\tif (!playerOpts) playerOpts = {};\n\t\tif (!trackOpts) trackOpts = {};\n\n\t\tfunction initModule(data) {\n\t\t\tvar byteArray = new Int8Array(data);\n\t\t\tvar ptrToFile = libopenmpt._malloc(byteArray.byteLength);\n\t\t\tlibopenmpt.HEAPU8.set(byteArray, ptrToFile);\n\n\t\t\tmodulePtr = libopenmpt._openmpt_module_create_from_memory(ptrToFile, byteArray.byteLength, 0, 0, 0);\n            global.window.modulePtr = modulePtr;\n\t\t\tleftBufferPtr  = libopenmpt._malloc(4 * maxFramesPerChunk);\n\t\t\trightBufferPtr = libopenmpt._malloc(4 * maxFramesPerChunk);\n\n\t\t\tfunction asciiToStack(str) {\n\t\t\t\tvar stackStr = stackAlloc(str.length + 1);\n\t\t\t\twriteAsciiToMemory(str, stackStr);\n\t\t\t\treturn stackStr;\n\t\t\t}\n\t\t\tvar stack = stackSave();\n\t\t\tlibopenmpt._openmpt_module_ctl_set(modulePtr, asciiToStack('render.resampler.emulate_amiga'), asciiToStack('1')); // enable Amiga resampler\n\t\t\tlibopenmpt._openmpt_module_ctl_set(modulePtr, asciiToStack('render.resampler.emulate_amiga_type'), asciiToStack('a1200')); // set emulated Amiga model to A1200\n\t\t\tstackRestore(stack);\n\n\t\t\tself.duration = libopenmpt._openmpt_module_get_duration_seconds(modulePtr);\n\t\t}\n\n\t\tfunction ensureLibOpenMPT(onReady) {\n\t\t\tif (!playerOpts.pathToLibOpenMPT) {\n\t\t\t\tthrow \"pathToLibOpenMPT not specified\";\n\t\t\t}\n\n\t\t\tif (window.libopenmpt && window.libopenmpt._openmpt_module_create_from_memory) {\n\t\t\t\t/* libopenmpt already loaded */\n\t\t\t\tonReady();\n\t\t\t} else {\n\t\t\t\t/* load libopenmpt via <script> tag injection */\n\t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n\t\t\t\tvar script = document.createElement(\"script\");\n\t\t\t\tscript.src = playerOpts.pathToLibOpenMPT;\n\n\t\t\t\twindow.libopenmpt = {\n\t\t\t\t\tonRuntimeInitialized: function() {\n\t\t\t\t\t\tonReady();\n\t\t\t\t\t\thead.removeChild(script);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\thead.appendChild(script);\n\t\t\t}\n\t\t}\n\n\t\tthis.cleanup = function() {\n\t\t\tif (modulePtr) {\n\t\t\t\tlibopenmpt._openmpt_module_destroy(modulePtr);\n\t\t\t}\n\t\t\tif (leftBufferPtr) {\n\t\t\t\tlibopenmpt._free(leftBufferPtr);\n\t\t\t}\n\t\t\tif (rightBufferPtr) {\n\t\t\t\tlibopenmpt._free(rightBufferPtr);\n\t\t\t}\n\t\t};\n\n\t\tthis.load = function(onReady) {\n\t\t\tvar self = this;\n\t\t\tensureLibOpenMPT(function() {\n\t\t\t\tself.channelCount = 2;\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\t\trequest.addEventListener('error', function(e) {\n\t\t\t\t\tconsole.log('XHR error', e);\n\t\t\t\t});\n\n\t\t\t\trequest.addEventListener('load', function(e) {\n\t\t\t\t\tdata = request.response;\n\t\t\t\t\tinitModule(data);\n\t\t\t\t\tonReady();\n\t\t\t\t});\n\n\t\t\t\t/* trigger XHR */\n\t\t\t\trequest.open('GET', url, true);\n\t\t\t\trequest.responseType = \"arraybuffer\";\n\t\t\t\trequest.send();\n\t\t\t});\n\t\t};\n\n\t\tthis.generateAudio = function(outputBuffer) {\n\t\t\tvar outputL = outputBuffer.getChannelData(0);\n\t\t\tvar outputR = outputBuffer.getChannelData(1);\n\t\t\tvar framesToRender = outputBuffer.length;\n\n\t\t\tvar framesRendered = 0;\n\t\t\tvar ended = false;\n\t\t\twhile (framesToRender > 0) {\n\t\t\t\tvar framesPerChunk = Math.min(framesToRender, maxFramesPerChunk);\n\t\t\t\tvar actualFramesPerChunk = libopenmpt._openmpt_module_read_float_stereo(modulePtr, audioCtx.sampleRate, framesPerChunk, leftBufferPtr, rightBufferPtr);\n\t\t\t\tvar rawAudioLeft = libopenmpt.HEAPF32.subarray(leftBufferPtr / 4, leftBufferPtr / 4 + actualFramesPerChunk);\n\t\t\t\tvar rawAudioRight = libopenmpt.HEAPF32.subarray(rightBufferPtr / 4, rightBufferPtr / 4 + actualFramesPerChunk);\n\t\t\t\tfor (var i = 0; i < actualFramesPerChunk; ++i) {\n\t\t\t\t\toutputL[framesRendered + i] = rawAudioLeft[i];\n\t\t\t\t\toutputR[framesRendered + i] = rawAudioRight[i];\n\t\t\t\t}\n\t\t\t\tframesToRender -= actualFramesPerChunk;\n\t\t\t\tframesRendered += actualFramesPerChunk;\n\t\t\t\tif (actualFramesPerChunk < framesPerChunk) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn framesRendered;\n\t\t};\n\n\t\tthis.seekable = true;\n\n\t\tthis.seek = function(position) {\n\t\t\tlibopenmpt._openmpt_module_set_position_seconds(modulePtr, position);\n\t\t};\n\n\t\tthis.reset = function() {\n\t\t\tthis.seek(0);\n\t\t}\n\t}\n\tCowbell.Player.OpenMPT = function(opts) {\n\t\treturn new Cowbell.Common.WebAudioPlayer(OpenMPTGenerator, opts);\n\t};\n})();\n","/*\nWrapper to allow Web Audio createScriptProcessor-based player routines to expose\na subset of the HTML5 Media Element API.\n\nThis wrapper handles the details of buffering, pausing, and keeping track of current play time.\nInner routines only need to implement a simple 'generator' API consisting of filling a buffer\nwith audio data, and seeking to a specified time.\n*/\n\n(function () {\n    var audioCtx;\n    Cowbell.Common.WebAudioPlayer = function (generatorConstructor, playerOpts) {\n        this.Track = function (url, trackOpts) {\n            var generator;\n\n            this.open = function () {\n                var self = {};\n\n                if (!audioCtx) {\n                    var AudioContext = window.AudioContext || window.webkitAudioContext;\n                    audioCtx = new AudioContext({\n                        latencyHint: \"playback\",\n                        sampleRate: 22050\n                      });\n                }\n\n                var BUFFER_SIZE = 4096;\n\n                self.HAVE_NOTHING = 0;\n                self.HAVE_METADATA = 1;\n                self.HAVE_CURRENT_DATA = 2;\n                self.HAVE_FUTURE_DATA = 3;\n                self.HAVE_ENOUGH_DATA = 4;\n                self.readyState = self.HAVE_NOTHING;\n\n                generator = new generatorConstructor(url, audioCtx, playerOpts, trackOpts);\n                var generatorIsReady = false;\n                var playWasRequestedBeforeReady = false;\n                var scriptNode;\n\n                var hasStartedProcessing = false;\n                var playFromTime = 0;\n                var playStartTimestamp;\n                self.paused = true;\n\n                generator.load(function () {\n                    generatorIsReady = true;\n                    self.readyState = self.HAVE_ENOUGH_DATA;\n                    self.duration = generator.duration;\n                    if (generator.seekable) {\n                        self.seekable = {\n                            'length': 1,\n                            'start': function (i) {\n                                if (i !== 0) throw \"Out of range\";\n                                return 0;\n                            },\n                            'end': function (i) {\n                                if (i !== 0) throw \"Out of range\";\n                                return generator.duration;\n                            }\n                        };\n                    } else {\n                        self.seekable = {\n                            'length': 0,\n                            'start': function (i) {\n                                throw \"Out of range\";\n                            },\n                            'end': function (i) {\n                                throw \"Out of range\";\n                            }\n                        };\n                    }\n                    seek(0);\n                    if (self.onloadedmetadata) self.onloadedmetadata();\n                    if (playWasRequestedBeforeReady) self.play();\n                });\n\n                function seek(newTime) {\n                    if (scriptNode) scriptNode.disconnect(0);\n                    if (newTime > 0) {\n                        generator.seek(newTime);\n                    } else {\n                        generator.reset();\n                    }\n                    playFromTime = newTime;\n                    hasStartedProcessing = false;\n                    scriptNode = audioCtx.createScriptProcessor(BUFFER_SIZE, 0, generator.channelCount);\n                    scriptNode.onaudioprocess = generateAudio;\n                    if (!self.paused) {\n                        self.paused = true;\n                        self.play();\n                    }\n                }\n\n                function generateAudio(event) {\n                    if (!hasStartedProcessing) {\n                        playStartTimestamp = event.playbackTime;\n                        hasStartedProcessing = true;\n                    }\n\n                    var generatedLength = generator.generateAudio(event.outputBuffer);\n\n                    if (generatedLength < event.outputBuffer.length) {\n                        /* generate silence for the remainder of the buffer */\n                        for (var chan = 0; chan < event.outputBuffer.numberOfChannels; chan++) {\n                            var channelData = event.outputBuffer.getChannelData(chan);\n                            for (var i = generatedLength; i < event.outputBuffer.length; i++) {\n                                channelData[i] = 0;\n                            }\n                        }\n\n                        if (self.currentTime > self.duration) {\n                            /* we've finished playing (not just generating) the audio */\n                            self.pause();\n                            if (self.onended) self.onended();\n                            seek(0);\n                        }\n                    }\n\n                    if (self.ontimeupdate) self.ontimeupdate();\n                }\n\n                self.play = function () {\n                    if (!generatorIsReady) {\n                        playWasRequestedBeforeReady = true;\n                        return;\n                    }\n                    if (self.paused) {\n                        scriptNode.connect(audioCtx.destination);\n                        self.paused = false;\n                        // If an AudioContext is created prior to the document receiving a user gesture, \n                        // it will be created in the \"suspended\" state, and you will need to call resume() \n                        // after a user gesture is received.\n                        if (audioCtx.state === 'suspended') { audioCtx.resume() };\n                        if (self.onplay) self.onplay();\n\n                        if (hasStartedProcessing) {\n                            playStartTimestamp = audioCtx.currentTime;\n                            playFromTime = pausedAtTrackTime;\n                        }\n                    }\n                };\n\n                self.pause = function () {\n                    if (!self.paused) {\n                        pausedAtTimestamp = audioCtx.currentTime;\n                        pausedAtTrackTime = self.currentTime;\n\n                        scriptNode.disconnect(0);\n                        self.paused = true;\n                        if (self.onpause) self.onpause();\n                    }\n                };\n\n\n                /*\n                hasStartedProcessing = false && self.paused = true  =>  initial state\n                hasStartedProcessing = false && self.paused = false  =>  the instant we just called play()\n                hasStartedProcessing = true && self.paused = false  =>\n                    ready to play if currentTime < playStartTimestamp; playing if currentTime >= playStartTimestamp\n                hasStartedProcessing = true && self.paused = true  => paused\n                */\n\n                self.__defineGetter__('currentTime', function () {\n                    if (!hasStartedProcessing) return playFromTime;\n                    if (self.paused) return pausedAtTrackTime;\n                    if (audioCtx.currentTime < playStartTimestamp) return playFromTime;\n                    return playFromTime + audioCtx.currentTime - playStartTimestamp;\n                });\n\n                self.__defineSetter__('currentTime', function (newTime) {\n                    if (generator.seekable || newTime === 0) {\n                        seek(newTime);\n                    }\n                });\n\n                return self;\n            };\n            this.close = function () {\n                if (generator && generator.cleanup) {\n                    generator.cleanup();\n                }\n            };\n        };\n    };\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.nc = undefined;","import { Framebuffer } from '../Framebuffer';\nimport { Texture } from '../texture/Texture';\n\nexport class ScaleClipBlitter {\n\n    constructor(private framebuffer: Framebuffer) {\n\n    }\n\n    public drawScaledTextureClip(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.framebuffer.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.framebuffer.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.framebuffer.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.framebuffer.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.framebuffer.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.framebuffer.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.framebuffer.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                const xxInt = xx | 0;\n                const yyInt = yy | 0;\n                const textureIndex = xxInt + yyInt * texture.width;\n                // (xxInt > texture.width - 1 ? texture.width - 1 : xxInt) +\n                // (yyInt > texture.height - 1 ? texture.height - 1 : yyInt) * texture.width;\n\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                const inverseAlpha = 1 - alpha;\n\n                const framebufferPixel = this.framebuffer.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.framebuffer.width;\n        }\n    }\n\n}\n","/**\n * Color\n *\n * @export\n * @class Color\n * @see https://www.rapidtables.com/web/color/RGB_Color.html\n * @author Johannes Diemke\n */\nexport class Color {\n\n    public static readonly BLACK: Color = new Color(0, 0, 0, 255);\n    public static readonly WHITE: Color = new Color(255, 255, 255, 255);\n    public static readonly RED: Color = new Color(255, 0, 0, 255);\n    public static readonly GREEN: Color = new Color(0, 255, 0, 255);\n    public static readonly LIME: Color = new Color(0, 255, 0, 255);\n    public static readonly BLUE: Color = new Color(0, 0, 255, 255);\n    public static readonly DARK_BLUE: Color = new Color(0, 0, 64, 255);\n    public static readonly YELLOW: Color = new Color(255, 255, 0, 255);\n    public static readonly CYAN: Color = new Color(0, 255, 255, 255);\n    public static readonly MAGENTA: Color = new Color(255, 0, 255, 255);\n    public static readonly SLATE_GRAY: Color = new Color(112, 128, 144, 255);\n    public static readonly DARK_GRAY: Color = new Color(19, 19, 20, 255);\n    public static readonly ORANGE: Color = new Color(255, 160, 122);\n\n    constructor(public r: number = 0, public g: number = 0, public b: number = 0, public a: number = 255) {\n    }\n\n    public toPackedFormat(): number {\n        return this.r | this.g << 8 | this.b << 16 | this.a << 24;\n    }\n\n    public sub(color: Color): Color {\n        return new Color(this.r - color.r, this.g - color.g, this.b - color.b, 255);\n    }\n\n    public add(color: Color): Color {\n        return new Color(this.r + color.r, this.g + color.g, this.b + color.b, 255);\n    }\n\n    public div(num: number): Color {\n        return new Color(this.r / num, this.g / num, this.b / num, 255);\n    }\n\n    public mul(num: number): Color {\n        return new Color(this.r * num, this.g * num, this.b * num, 255);\n    }\n\n}\n","export enum CullFace {\n    FRONT = 0,\n    BACK = 1,\n    DISABLED\n}\n","export class Vector4f {\n\n    public x: number;\n    public y: number;\n    public z: number;\n    public w: number;\n\n    constructor(x: number, y: number, z: number, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    public sub(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x - vec.x, this.y - vec.y, this.z - vec.z, this.w - vec.w);\n    }\n\n    public add(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x + vec.x, this.y + vec.y, this.z + vec.z, this.w + vec.w);\n    }\n\n    public cross(vec: Vector4f): Vector4f {\n        return new Vector4f(this.y * vec.z - this.z * vec.y,\n            this.z * vec.x - this.x * vec.z,\n            this.x * vec.y - this.y * vec.x, 0.0);\n    }\n\n    public normalize(): Vector4f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n\n    public sub2(vec1: Vector4f, vec2: Vector4f): void {\n        this.x = vec1.x - vec2.x;\n        this.y = vec1.y - vec2.y;\n        this.z = vec1.z - vec2.z;\n    }\n\n    public add2(vec: Vector4f, vec2: Vector4f): void {\n        this.x = vec.x + vec2.x;\n        this.y = vec.y + vec2.y;\n        this.z = vec.z + vec2.z;\n    }\n\n\n    public mul(scal: number): Vector4f {\n        return new Vector4f(this.x * scal, this.y * scal, this.z * scal, this.w);\n    }\n\n    public componentWiseMul(vec: Vector4f): Vector4f {\n        return new Vector4f(this.x * vec.x, this.y * vec.y, this.z * vec.z, this.w * vec.w);\n    }\n\n    public dot(vec: Vector4f): number {\n        return this.x * vec.x + this.y * vec.y + this.z * vec.z;\n    }\n\n    public cross2(vec1: Vector4f, vec2: Vector4f): void {\n        this.x = vec1.y * vec2.z - vec1.z * vec2.y;\n        this.y = vec1.z * vec2.x - vec1.x * vec2.z;\n        this.z = vec1.x * vec2.y - vec1.y * vec2.x;\n    }\n\n    public normalize2(): void {\n        const reci: number = 1.0 / this.length();\n        this.x *= reci;\n        this.y *= reci;\n        this.z *= reci;\n    }\n\n\n}\n","import { Vector4f } from '../math/index';\nimport { FlatShadedFace } from './FlatShadedFace';\nimport { FlatshadedMesh } from './FlatshadedMesh';\n\nexport class AbstractGeometricObject {\n\n    protected mesh: FlatshadedMesh;\n    protected inverse: boolean;\n\n    protected buildMesh(points: Array<Vector4f>, index: Array<number>, inverse: boolean = false): void {\n        this.inverse = inverse;\n        const normals: Array<Vector4f> = new Array<Vector4f>();\n\n        // todo use index array for normals to have less normal objects\n        // compute normal and check wheter the normal already exists. then reuse inded\n        // maybe have a similarity faktor to reuse similar normals\n        for (let i = 0; i < index.length; i += 3) {\n            const normal = points[index[i + 1]].sub(points[index[i]]).cross(points[index[i + 2]].sub(points[index[i]]));\n            normals.push(this.inverse ? normal.normalize().mul(-1) : normal.normalize()); // normalize?\n        }\n\n\n        const faces: Array<FlatShadedFace> = new Array<FlatShadedFace>();\n\n        for (let i = 0; i < index.length; i += 3) {\n\n            faces.push({\n                n1: i / 3,\n                n2: i / 3,\n                n3: i / 3,\n                v1: index[0 + i],\n                v2: index[1 + i],\n                v3: index[2 + i],\n            });\n        }\n\n        // Create class for objects\n        this.mesh = {\n            points,\n            normals,\n            faces,\n            transformedPoints: points.map(() => new Vector4f(0, 0, 0, 0)),\n            transformedNormals: normals.map(() => new Vector4f(0, 0, 0, 0))\n        };\n    }\n\n    public getMesh(): FlatshadedMesh {\n        return this.mesh;\n    }\n\n}\n","export class Vector3f {\n\n    public x: number;\n    public y: number;\n    public z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    public mult(scale: number): Vector3f {\n        return new Vector3f(this.x * scale, this.y * scale, this.z * scale);\n    }\n\n    public sub(vec: Vector3f): Vector3f {\n        return new Vector3f(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n    }\n\n    public sub2(vec1: Vector3f, vec2: Vector3f): void {\n        this.x = vec1.x - vec2.x;\n        this.y = vec1.y - vec2.y;\n        this.z = vec1.z - vec2.z;\n    }\n\n    public mul(scal: number): Vector3f {\n        return new Vector3f(this.x * scal, this.y * scal, this.z * scal);\n    }\n\n    public add(vec: Vector3f): Vector3f {\n        return new Vector3f(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n    }\n\n    public add2(vec: Vector3f, vec2: Vector3f): void {\n        this.x = vec.x + vec2.x;\n        this.y = vec.y + vec2.y;\n        this.z = vec.z + vec2.z;\n    }\n\n    public cross(vec: Vector3f): Vector3f {\n        return new Vector3f(this.y * vec.z - this.z * vec.y,\n            this.z * vec.x - this.x * vec.z,\n            this.x * vec.y - this.y * vec.x);\n    }\n\n    public cross2(vec1: Vector3f, vec2: Vector3f): void {\n        this.x = vec1.y * vec2.z - vec1.z * vec2.y;\n        this.y = vec1.z * vec2.x - vec1.x * vec2.z;\n        this.z = vec1.x * vec2.y - vec1.y * vec2.x;\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    public normalize(): Vector3f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public normalize2(): void {\n        const reci: number = 1.0 / this.length();\n        this.x *= reci;\n        this.y *= reci;\n        this.z *= reci;\n    }\n\n    public dot(vec: Vector3f): number {\n        return this.x * vec.x + this.y * vec.y + this.z * vec.z;\n    }\n\n}\n","import { Vector4f } from '../math/Vector4f';\nimport { AbstractGeometricObject } from './AbstractGeometricObject';\nimport { Vector3f } from '../math/Vector3f';\n\nexport class Torus extends AbstractGeometricObject {\n\n    public constructor(invert: boolean = false) {\n        super();\n\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 15;\n        const STEPS2 = 12;\n        // find a better solution for inversion\n        // maybe configuration by constructor of base class and construction of geometry\n        // in template method pattern method\n        this.inverse = invert;\n\n        for (let i = 0; i < STEPS; i++) {\n            const frame = this.torusFunction(i * 2 * Math.PI / STEPS);\n            const frame2 = this.torusFunction(i * 2 * Math.PI / STEPS + 0.1);\n            const up = new Vector3f(0.0, 4.0, 0);\n            const right = frame2.sub(frame).cross(up);\n\n            for (let r = 0; r < STEPS2; r++) {\n                const pos = up.mul(Math.sin(r * 2 * Math.PI / STEPS2)).add(right.mul(Math.cos(r * 2 * Math.PI / STEPS2))).add(frame);\n                points.push(new Vector4f(pos.x, pos.y, pos.z, 1.0));\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2) % points.length);\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2) % points.length);\n            }\n        }\n\n        this.buildMesh(points, index);\n    }\n\n    public torusFunction(alpha: number): Vector3f {\n        return new Vector3f(Math.sin(alpha) * 10, 0, Math.cos(alpha) * 10);\n    }\n\n}\n","\nexport class Vector2f {\n\n    constructor(public x: number, public y: number) {\n\n    }\n\n    public perp(): Vector2f {\n        return new Vector2f(-this.y, this.x);\n    }\n\n    public sub(vec: Vector2f): Vector2f {\n        return new Vector2f(this.x - vec.x, this.y - vec.y);\n    }\n\n    public mul(scal: number): Vector2f {\n        return new Vector2f(this.x * scal, this.y * scal);\n    }\n\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    public normalize(): Vector2f {\n        const reci: number = 1.0 / this.length();\n        return this.mul(reci);\n    }\n\n    public dot(vec: Vector2f): number {\n        return this.x * vec.x + this.y * vec.y;\n    }\n\n}\n","/**\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_00_introduction.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_00_research.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_01_pipeline.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_02_transformations.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_03_projections.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_04_lighting.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_05_rasterization.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_06_texturing.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_07_shadows.pdf\n * https://cg.informatik.uni-freiburg.de/course_notes/graphics_08_transparencyReflection.pdf\n * https://cg.informatik.uni-freiburg.de/teaching.htm\n * @author Johannes Diemke\n * @since 2017-05-07\n */\n\nimport { Vector3f } from './Vector3f';\nimport { Vector4f } from './Vector4f';\n\nexport class Matrix4f {\n\n    public m11: number;\n    public m12: number;\n    public m13: number;\n    public m14: number;\n\n    public m21: number;\n    public m22: number;\n    public m23: number;\n    public m24: number;\n\n    public m31: number;\n    public m32: number;\n    public m33: number;\n    public m34: number;\n\n    public m41: number;\n    public m42: number;\n    public m43: number;\n    public m44: number;\n\n    static constructIdentityMatrix(): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n\n    public setIdentityMatrix(): void {\n\n\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public transpose(): Matrix4f {\n        const transpose: Matrix4f = new Matrix4f();\n\n        transpose.m11 = this.m11;\n        transpose.m12 = this.m21;\n        transpose.m13 = this.m31;\n        transpose.m14 = this.m41;\n\n        transpose.m21 = this.m12;\n        transpose.m22 = this.m22;\n        transpose.m23 = this.m32;\n        transpose.m24 = this.m42;\n\n        transpose.m31 = this.m13;\n        transpose.m32 = this.m23;\n        transpose.m33 = this.m33;\n        transpose.m34 = this.m43;\n\n        transpose.m41 = this.m14;\n        transpose.m42 = this.m24;\n        transpose.m43 = this.m34;\n        transpose.m44 = this.m44;\n\n        return transpose;\n    }\n\n    public computeNormalMatrix(): Matrix4f {\n        // http://www.lighthouse3d.com/tutorials/glsl-12-tutorial/the-normal-matrix/\n        // https://www.gamedev.net/forums/topic/443040-inverse-of-modelview-matrix/\n        // https://computergraphics.stackexchange.com/questions/1502/why-is-the-transposed-inverse-of-the-model-view-matrix-used-to-transform-the-nor\n        return this.inverse().transpose();\n    }\n\n    public inverse(): Matrix4f {\n        // Inverse hack\n        // - only works when the MV matrix only contains\n        // translation and rotation and scaling that is the same in all directions\n\n        const inverseTranslation: Matrix4f = Matrix4f.constructIdentityMatrix();\n        inverseTranslation.m14 = -this.m14;\n        inverseTranslation.m24 = -this.m24;\n        inverseTranslation.m34 = -this.m34;\n\n        const scale1 = 1.0 / Math.sqrt(this.m11 * this.m11 + this.m12 * this.m12 + this.m13 * this.m13);\n        const scale2 = 1.0 / Math.sqrt(this.m21 * this.m21 + this.m22 * this.m22 + this.m23 * this.m23);\n        const scale3 = 1.0 / Math.sqrt(this.m31 * this.m31 + this.m32 * this.m32 + this.m33 * this.m33);\n        const inverseRotation: Matrix4f = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11 * scale1;\n        inverseRotation.m21 = this.m12 * scale1;\n        inverseRotation.m31 = this.m13 * scale1;\n\n        inverseRotation.m12 = this.m21 * scale2;\n        inverseRotation.m22 = this.m22 * scale2;\n        inverseRotation.m32 = this.m23 * scale2;\n\n        inverseRotation.m13 = this.m31 * scale3;\n        inverseRotation.m23 = this.m32 * scale3;\n        inverseRotation.m33 = this.m33 * scale3;\n\n        return inverseRotation.multiplyMatrix(inverseTranslation);\n    }\n\n    public getInverseRotation(): Matrix4f {\n        const scale = 1.0;\n        const inverseRotation = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11 * scale;\n        inverseRotation.m21 = this.m12 * scale;\n        inverseRotation.m31 = this.m13 * scale;\n\n        inverseRotation.m12 = this.m21 * scale;\n        inverseRotation.m22 = this.m22 * scale;\n        inverseRotation.m32 = this.m23 * scale;\n\n        inverseRotation.m13 = this.m31 * scale;\n        inverseRotation.m23 = this.m32 * scale;\n        inverseRotation.m33 = this.m33 * scale;\n\n        return inverseRotation;\n    }\n\n    public getRotation(): Matrix4f {\n\n        const inverseRotation = Matrix4f.constructIdentityMatrix();\n        inverseRotation.m11 = this.m11;\n        inverseRotation.m21 = this.m21;\n        inverseRotation.m31 = this.m31;\n\n        inverseRotation.m12 = this.m12;\n        inverseRotation.m22 = this.m22;\n        inverseRotation.m32 = this.m32;\n\n        inverseRotation.m13 = this.m13;\n        inverseRotation.m23 = this.m23;\n        inverseRotation.m33 = this.m33;\n\n        return inverseRotation;\n    }\n\n    static constructShadowMatrix(): Matrix4f {\n        const planePoint: Vector3f = new Vector3f(0, -1.5, 0);\n        const planeNormal: Vector3f = new Vector3f(0, 1, 0);\n        const lightPosition: Vector3f = new Vector3f(0, 11, 0);\n\n        const d = -planePoint.dot(planeNormal);\n        const NdotL = planeNormal.x * lightPosition.x +\n            planeNormal.y * lightPosition.y +\n            planeNormal.z * lightPosition.z;\n\n        const shadowMatrix: Matrix4f = new Matrix4f();\n\n        shadowMatrix.m11 = NdotL + d - lightPosition.x * planeNormal.x;\n        shadowMatrix.m12 = - lightPosition.x * planeNormal.y;\n        shadowMatrix.m13 = - lightPosition.x * planeNormal.z;\n        shadowMatrix.m14 = - lightPosition.x * d;\n\n        shadowMatrix.m21 = - lightPosition.y * planeNormal.x;\n        shadowMatrix.m22 = NdotL + d - lightPosition.y * planeNormal.y;\n        shadowMatrix.m23 = - lightPosition.y * planeNormal.z;\n        shadowMatrix.m24 = - lightPosition.y * d;\n\n        shadowMatrix.m31 = - lightPosition.z * planeNormal.x;\n        shadowMatrix.m32 = - lightPosition.z * planeNormal.y;\n        shadowMatrix.m33 = NdotL + d - lightPosition.z * planeNormal.z;\n        shadowMatrix.m34 = - lightPosition.z * d;\n\n        shadowMatrix.m41 = - planeNormal.x;\n        shadowMatrix.m42 = - planeNormal.y;\n        shadowMatrix.m43 = - planeNormal.z;\n        shadowMatrix.m44 = NdotL;\n\n        return shadowMatrix;\n\n    }\n\n    static constructTranslationMatrix(tx: number, ty: number, tz: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = tx;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = ty;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = tz;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public setTranslationMatrix(tx: number, ty: number, tz: number): void {\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = tx;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = ty;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = tz;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    static constructXRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = Math.cos(alpha);\n        matrix.m23 = -Math.sin(alpha);\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = Math.sin(alpha);\n        matrix.m33 = Math.cos(alpha);\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public setXRotationMatrix(alpha: number): void {\n        this.m11 = 1.0;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = Math.cos(alpha);\n        this.m23 = -Math.sin(alpha);\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = Math.sin(alpha);\n        this.m33 = Math.cos(alpha);\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setZRotationMatrix(alpha: number): void {\n        this.m11 = Math.cos(alpha);\n        this.m12 = -Math.sin(alpha);\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = Math.sin(alpha);\n        this.m22 = Math.cos(alpha);\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = 1.0;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setScaleMatrix(sx: number, sy: number, sz: number): void {\n        this.m11 = sx;\n        this.m12 = 0.0;\n        this.m13 = 0.0;\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = sy;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = 0.0;\n        this.m32 = 0.0;\n        this.m33 = sz;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    public setYRotationMatrix(alpha: number): void {\n        this.m11 = Math.cos(alpha);\n        this.m12 = 0.0;\n        this.m13 = Math.sin(alpha);\n        this.m14 = 0.0;\n\n        this.m21 = 0.0;\n        this.m22 = 1.0;\n        this.m23 = 0.0;\n        this.m24 = 0.0;\n\n        this.m31 = -Math.sin(alpha);\n        this.m32 = 0.0;\n        this.m33 = Math.cos(alpha);\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n\n    public setRotationMatrix(x: number,y: number,z: number, alpha: number): void {\n        const c = Math.cos(Math.PI * 2 *alpha / 360 );\n        const s = Math.sin(Math.PI * 2 *alpha / 360 );\n        const vector = new Vector3f(x,y,z);\n        vector.normalize2();\n\n        this.m11 = (1.0 - c) * vector.x * vector.x + c;\n        this.m12 = (1.0 - c) * vector.x * vector.y - s * vector.z;\n        this.m13 = (1.0 - c) * vector.x * vector.z + s * vector.y;\n        this.m14 = 0.0;\n\n        this.m21 = (1.0 - c) * vector.x * vector.y + s * vector.z;\n        this.m22 = (1.0 - c) * vector.y * vector.y + c;\n        this.m23 = (1.0 - c) * vector.y * vector.z - s * vector.x;\n        this.m24 = 0.0;\n\n        this.m31 = (1.0 - c) * vector.x * vector.z - s * vector.y;\n        this.m32 = (1.0 - c) * vector.y * vector.z + s * vector.x;\n        this.m33 = (1.0 - c) * vector.z * vector.z + c;\n        this.m34 = 0.0;\n\n        this.m41 = 0.0;\n        this.m42 = 0.0;\n        this.m43 = 0.0;\n        this.m44 = 1.0;\n    }\n\n    static constructYRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = Math.cos(alpha);\n        matrix.m12 = 0.0;\n        matrix.m13 = Math.sin(alpha);\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = -Math.sin(alpha);\n        matrix.m32 = 0.0;\n        matrix.m33 = Math.cos(alpha);\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    static constructZRotationMatrix(alpha: number): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = Math.cos(alpha);\n        matrix.m12 = -Math.sin(alpha);\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = Math.sin(alpha);\n        matrix.m22 = Math.cos(alpha);\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    static constructScaleMatrix(sx: number, sy: number = sx, sz: number = sy): Matrix4f {\n        const matrix: Matrix4f = new Matrix4f();\n\n        matrix.m11 = sx;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n        matrix.m14 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = sy;\n        matrix.m23 = 0.0;\n        matrix.m24 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = sz;\n        matrix.m34 = 0.0;\n\n        matrix.m41 = 0.0;\n        matrix.m42 = 0.0;\n        matrix.m43 = 0.0;\n        matrix.m44 = 1.0;\n\n        return matrix;\n    }\n\n    public multiplyMatrix(matrix: Matrix4f): Matrix4f {\n        const result = new Matrix4f();\n\n        result.m11 = this.m11 * matrix.m11 + this.m12 * matrix.m21 + this.m13 * matrix.m31 + this.m14 * matrix.m41;\n        result.m21 = this.m21 * matrix.m11 + this.m22 * matrix.m21 + this.m23 * matrix.m31 + this.m24 * matrix.m41;\n        result.m31 = this.m31 * matrix.m11 + this.m32 * matrix.m21 + this.m33 * matrix.m31 + this.m34 * matrix.m41;\n        result.m41 = this.m41 * matrix.m11 + this.m42 * matrix.m21 + this.m43 * matrix.m31 + this.m44 * matrix.m41;\n\n        result.m12 = this.m11 * matrix.m12 + this.m12 * matrix.m22 + this.m13 * matrix.m32 + this.m14 * matrix.m42;\n        result.m22 = this.m21 * matrix.m12 + this.m22 * matrix.m22 + this.m23 * matrix.m32 + this.m24 * matrix.m42;\n        result.m32 = this.m31 * matrix.m12 + this.m32 * matrix.m22 + this.m33 * matrix.m32 + this.m34 * matrix.m42;\n        result.m42 = this.m41 * matrix.m12 + this.m42 * matrix.m22 + this.m43 * matrix.m32 + this.m44 * matrix.m42;\n\n        result.m13 = this.m11 * matrix.m13 + this.m12 * matrix.m23 + this.m13 * matrix.m33 + this.m14 * matrix.m43;\n        result.m23 = this.m21 * matrix.m13 + this.m22 * matrix.m23 + this.m23 * matrix.m33 + this.m24 * matrix.m43;\n        result.m33 = this.m31 * matrix.m13 + this.m32 * matrix.m23 + this.m33 * matrix.m33 + this.m34 * matrix.m43;\n        result.m43 = this.m41 * matrix.m13 + this.m42 * matrix.m23 + this.m43 * matrix.m33 + this.m44 * matrix.m43;\n\n        result.m14 = this.m11 * matrix.m14 + this.m12 * matrix.m24 + this.m13 * matrix.m34 + this.m14 * matrix.m44;\n        result.m24 = this.m21 * matrix.m14 + this.m22 * matrix.m24 + this.m23 * matrix.m34 + this.m24 * matrix.m44;\n        result.m34 = this.m31 * matrix.m14 + this.m32 * matrix.m24 + this.m33 * matrix.m34 + this.m34 * matrix.m44;\n        result.m44 = this.m41 * matrix.m14 + this.m42 * matrix.m24 + this.m43 * matrix.m34 + this.m44 * matrix.m44;\n\n        return result;\n    }\n\n    public multiply2(matrix: Matrix4f, matrix2: Matrix4f): void {\n        this.m11 = matrix.m11 * matrix2.m11 + matrix.m12 * matrix2.m21 + matrix.m13 * matrix2.m31 + matrix.m14 * matrix2.m41;\n        this.m21 = matrix.m21 * matrix2.m11 + matrix.m22 * matrix2.m21 + matrix.m23 * matrix2.m31 + matrix.m24 * matrix2.m41;\n        this.m31 = matrix.m31 * matrix2.m11 + matrix.m32 * matrix2.m21 + matrix.m33 * matrix2.m31 + matrix.m34 * matrix2.m41;\n        this.m41 = matrix.m41 * matrix2.m11 + matrix.m42 * matrix2.m21 + matrix.m43 * matrix2.m31 + matrix.m44 * matrix2.m41;\n\n        this.m12 = matrix.m11 * matrix2.m12 + matrix.m12 * matrix2.m22 + matrix.m13 * matrix2.m32 + matrix.m14 * matrix2.m42;\n        this.m22 = matrix.m21 * matrix2.m12 + matrix.m22 * matrix2.m22 + matrix.m23 * matrix2.m32 + matrix.m24 * matrix2.m42;\n        this.m32 = matrix.m31 * matrix2.m12 + matrix.m32 * matrix2.m22 + matrix.m33 * matrix2.m32 + matrix.m34 * matrix2.m42;\n        this.m42 = matrix.m41 * matrix2.m12 + matrix.m42 * matrix2.m22 + matrix.m43 * matrix2.m32 + matrix.m44 * matrix2.m42;\n\n        this.m13 = matrix.m11 * matrix2.m13 + matrix.m12 * matrix2.m23 + matrix.m13 * matrix2.m33 + matrix.m14 * matrix2.m43;\n        this.m23 = matrix.m21 * matrix2.m13 + matrix.m22 * matrix2.m23 + matrix.m23 * matrix2.m33 + matrix.m24 * matrix2.m43;\n        this.m33 = matrix.m31 * matrix2.m13 + matrix.m32 * matrix2.m23 + matrix.m33 * matrix2.m33 + matrix.m34 * matrix2.m43;\n        this.m43 = matrix.m41 * matrix2.m13 + matrix.m42 * matrix2.m23 + matrix.m43 * matrix2.m33 + matrix.m44 * matrix2.m43;\n\n        this.m14 = matrix.m11 * matrix2.m14 + matrix.m12 * matrix2.m24 + matrix.m13 * matrix2.m34 + matrix.m14 * matrix2.m44;\n        this.m24 = matrix.m21 * matrix2.m14 + matrix.m22 * matrix2.m24 + matrix.m23 * matrix2.m34 + matrix.m24 * matrix2.m44;\n        this.m34 = matrix.m31 * matrix2.m14 + matrix.m32 * matrix2.m24 + matrix.m33 * matrix2.m34 + matrix.m34 * matrix2.m44;\n        this.m44 = matrix.m41 * matrix2.m14 + matrix.m42 * matrix2.m24 + matrix.m43 * matrix2.m34 + matrix.m44 * matrix2.m44;\n    }\n\n    public multiply(vector: Vector3f): Vector3f {\n        return new Vector3f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34);\n    }\n\n    public multiplyHom(vector: Vector4f): Vector4f {\n        return new Vector4f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w,\n            this.m41 * vector.x + this.m42 * vector.y + this.m43 * vector.z + this.m44 * vector.w);\n    }\n\n    public multiplyHomArr(vector: Vector4f, result: Vector4f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w;\n    }\n\n    public multiplyHomArr2(vector: Vector4f, result: Vector4f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14 * vector.w;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24 * vector.w;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34 * vector.w;\n        result.w = this.m41 * vector.x + this.m42 * vector.y + this.m43 * vector.z + this.m44 * vector.w;\n        result.x /= result.w;\n        result.y /= result.w;\n        result.z /= result.w;\n    }\n\n    public multiplyArr(vector: Vector3f, result: Vector3f): void {\n        result.x = this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z + this.m14;\n        result.y = this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z + this.m24;\n        result.z = this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z + this.m34;\n    }\n\n}\n","import { Vector3f } from './Vector3f';\n\nexport class Matrix3f {\n\n    public m11: number;\n    public m12: number;\n    public m13: number;\n\n    public m21: number;\n    public m22: number;\n    public m23: number;\n\n    public m31: number;\n    public m32: number;\n    public m33: number;\n\n    static constructXRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        matrix.m11 = 1.0;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = cos;\n        matrix.m23 = -sin;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = sin;\n        matrix.m33 = cos;\n\n        return matrix;\n    }\n\n    static constructYRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = Math.cos(angle);\n        matrix.m12 = 0.0;\n        matrix.m13 = Math.sin(angle);\n\n        matrix.m21 = 0.0;\n        matrix.m22 = 1.0;\n        matrix.m23 = 0.0;\n\n        matrix.m31 = -Math.sin(angle);\n        matrix.m32 = 0.0;\n        matrix.m33 = Math.cos(angle);\n\n        return matrix;\n    }\n\n    static constructZRotationMatrix(angle: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = Math.cos(angle);\n        matrix.m12 = -Math.sin(angle);\n        matrix.m13 = 0.0;\n\n        matrix.m21 = Math.sin(angle);\n        matrix.m22 = Math.cos(angle);\n        matrix.m23 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = 1.0;\n\n        return matrix;\n    }\n\n    static constructScaleMatrix(xScale: number, yScale: number, zScale: number) {\n        const matrix = new Matrix3f();\n\n        matrix.m11 = xScale;\n        matrix.m12 = 0.0;\n        matrix.m13 = 0.0;\n\n        matrix.m21 = 0.0;\n        matrix.m22 = yScale;\n        matrix.m23 = 0.0;\n\n        matrix.m31 = 0.0;\n        matrix.m32 = 0.0;\n        matrix.m33 = zScale;\n\n        return matrix;\n    }\n\n    public multiplyMatrix(matrix: Matrix3f): Matrix3f {\n        const result = new Matrix3f();\n\n        result.m11 = this.m11 * matrix.m11 + this.m12 * matrix.m21 + this.m13 * matrix.m31;\n        result.m21 = this.m21 * matrix.m11 + this.m22 * matrix.m21 + this.m23 * matrix.m31;\n        result.m31 = this.m31 * matrix.m11 + this.m32 * matrix.m21 + this.m33 * matrix.m31;\n\n        result.m12 = this.m11 * matrix.m12 + this.m12 * matrix.m22 + this.m13 * matrix.m32;\n        result.m22 = this.m21 * matrix.m12 + this.m22 * matrix.m22 + this.m23 * matrix.m32;\n        result.m32 = this.m31 * matrix.m12 + this.m32 * matrix.m22 + this.m33 * matrix.m32;\n\n        result.m13 = this.m11 * matrix.m13 + this.m12 * matrix.m23 + this.m13 * matrix.m33;\n        result.m23 = this.m21 * matrix.m13 + this.m22 * matrix.m23 + this.m23 * matrix.m33;\n        result.m33 = this.m31 * matrix.m13 + this.m32 * matrix.m23 + this.m33 * matrix.m33;\n\n        return result;\n\n    }\n\n    public multiply(vector: Vector3f): Vector3f {\n        return new Vector3f(this.m11 * vector.x + this.m12 * vector.y + this.m13 * vector.z,\n            this.m21 * vector.x + this.m22 * vector.y + this.m23 * vector.z,\n            this.m31 * vector.x + this.m32 * vector.y + this.m33 * vector.z);\n    }\n}","export class Interpolator {\n\n    public static interpolate(start: number, end: number, current: number): number {\n        if (current <= start) {\n            return 0;\n        }\n        if (current >= end) {\n            return 1;\n        }\n        return (current - start) / (end - start);\n    }\n\n    public static cosineInterpolate(y1: number, y2: number, mu: number): number {\n        if (mu <= y1) { return 0; }\n        if (mu >= y2) { return 1; }\n        const mu2 = (mu - y1) / (y2 - y1);\n        return (1 - Math.cos(mu2 * Math.PI)) / 2;\n    }\n\n}\n","export default class RandomNumberGenerator {\n\n    private seed: number;\n\n    public constructor() {\n        this.seed = 6;\n    }\n\n    public getFloat(): number {\n        this.seed = (this.seed * 9301 + 49297) % 233280;\n        return this.seed / 233280;\n    }\n\n    public setSeed(seed: number): void {\n        this.seed = seed;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\n\nexport abstract class AbstractTriangleRasterizer {\n\n    public abstract drawTriangleDDA(framebuffer: Framebuffer, p1: Vertex, p2: Vertex, p3: Vertex): void;\n\n}\n","import { Framebuffer } from \"../Framebuffer\";\nimport { Vertex } from \"../Vertex\";\nimport { AbstractTriangleRasterizer } from \"./AbstractTriangleRasterizer\";\n\nexport abstract class AbstractScannlineTriangleRasterizer extends AbstractTriangleRasterizer {\n\n    private temp: Vertex = null;\n    \n    /**\n     * Triangle rasterization using edge-walking strategy for scan-conversion.\n     * Internally DDA is used for edge-walking.\n     */\n    public drawTriangleDDA(framebuffer: Framebuffer, p1: Vertex, p2: Vertex, p3: Vertex): void {\n\n        if (p1.projection.y > p3.projection.y) {\n            this.temp = p1;\n            p1 = p3;\n            p3 = this.temp;\n        }\n\n        if (p1.projection.y > p2.projection.y) {\n            this.temp = p1;\n            p1 = p2;\n            p2 = this.temp;\n        }\n\n        if (p2.projection.y > p3.projection.y) {\n            this.temp = p2;\n            p2 = p3;\n            p3 = this.temp;\n        }\n\n        if (p1.projection.y === p3.projection.y) {\n            return;\n        } else {\n            const x: number = (p3.projection.x - p1.projection.x) * (p2.projection.y - p1.projection.y) /\n                (p3.projection.y - p1.projection.y) + p1.projection.x;\n            if (x > p2.projection.x) {\n                this.fillLongRightTriangle(framebuffer, p1, p2, p3);\n            } else {\n                this.fillLongLeftTriangle(framebuffer,p1,p2,p3);\n            }\n        }\n    }\n\n    protected abstract fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void;\n    protected abstract fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void;\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class FlatShadingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n    private slope1: number;\n    private slope2: number;\n    private zslope1: number;\n    private zslope2: number;\n    private curz1: number;\n    private curz2: number;\n    private xPosition: number;\n    private xPosition2: number;\n    private yPosition: number;\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        const color: number = v1.color.toPackedFormat();\n\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n\n        this.slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        this.slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n\n        this.zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        this.zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n\n        this.curz1 = 1.0 / v1.projection.z;\n        this.curz2 = 1.0 / v1.projection.z;\n\n        this.xPosition = v1.projection.x;\n        this.xPosition2 = v1.projection.x;\n        this.yPosition = v1.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceLeft, color);\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n        this.slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        this.zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n\n        this.xPosition = v2.projection.x;\n        this.yPosition = v2.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceLeft, color);\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        const color: number = v1.color.toPackedFormat();\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        this.slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        this.slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        this.zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        this.zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        this.curz1 = 1.0 / v1.projection.z;\n        this.curz2 = 1.0 / v1.projection.z;\n\n        this.xPosition = v1.projection.x;\n        this.xPosition2 = v1.projection.x;\n        this.yPosition = v1.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceRight, color);\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        this.slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        this.zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        this.curz2 = 1.0 / v2.projection.z;\n        this.xPosition2 = v2.projection.x;\n        this.yPosition = v2.projection.y;\n\n        this.drawSpan(framebuffer, yDistanceRight, color);\n    }\n\n    drawSpan(framebuffer: Framebuffer, distance: number, color: number) {\n        for (let i = 0; i < distance; i++) {\n            const length = (this.xPosition2) - (this.xPosition);\n            const spanzStep = Math.round(this.curz2 - this.curz1) / length;\n            let wStart = this.curz1;\n            for (let j = 0; j < length; j++) {\n                const framebufferIndex = Math.round(this.yPosition) * framebuffer.width + Math.round(this.xPosition + j);\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    framebuffer.framebuffer[framebufferIndex] = color;\n                }\n                wStart += spanzStep;\n            }\n            this.xPosition += this.slope1;\n            this.xPosition2 += this.slope2;\n            this.yPosition++;\n            this.curz1 += this.zslope1;\n            this.curz2 += this.zslope2;\n        }\n    }\n\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { Vector3f } from '../../math';\n\n/**\n * digital differential analyser line drawing algorithm\n * using fixed point math.\n * renders approx 1400 lines per millisecond on my machine\n */\nexport class LineRasterizerDda {\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public drawLineDDA(start: Vector3f, end: Vector3f, color: number): void {\n        const xDistance: number = end.x - start.x;\n        const yDistance: number = end.y - start.y;\n\n        let dx: number;\n        let dy: number;\n        let length: number;\n\n        if (Math.abs(xDistance) > Math.abs(yDistance)) {\n            dx = Math.sign(xDistance);\n            dy = yDistance / Math.abs(xDistance);\n            length = Math.abs(xDistance);\n        } else {\n            dx = xDistance / Math.abs(yDistance);\n            dy = Math.sign(yDistance);\n            length = Math.abs(yDistance);\n        }\n\n        let xPosition: number = start.x;\n        let yPosition: number = start.y;\n\n        // w=1/z interpolation for z-buffer\n        let wStart = 1 / (start.z);\n        const wDelta = (1 / end.z - 1 / start.z) / length;\n\n        for (let i = 0; i <= length; i++) {\n            if (wStart < this.framebuffer.wBuffer[Math.round(xPosition) + Math.round(yPosition) * this.framebuffer.width]) {\n                this.framebuffer.wBuffer[Math.round(xPosition) + Math.round(yPosition) * this.framebuffer.width] = wStart;\n                this.framebuffer.drawPixel(Math.round(xPosition), Math.round(yPosition), color);\n            }\n            xPosition += dx;\n            yPosition += dy;\n            wStart += wDelta;\n        }\n    }\n\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { Vector3f } from '../../math';\n\nexport class LineRasterizerNoZ {\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public drawLineDDANoZ(start: Vector3f, end: Vector3f, color: number): void {\n        const xDistance: number = end.x - start.x;\n        const yDistance: number = end.y - start.y;\n\n        let dx: number;\n        let dy: number;\n        let length: number;\n\n        if (Math.abs(xDistance) > Math.abs(yDistance)) {\n            dx = Math.sign(xDistance);\n            dy = yDistance / Math.abs(xDistance);\n            length = Math.abs(xDistance);\n        } else {\n            dx = xDistance / Math.abs(yDistance);\n            dy = Math.sign(yDistance);\n            length = Math.abs(yDistance);\n        }\n\n        let xPosition: number = start.x;\n        let yPosition: number = start.y;\n\n        for (let i = 0; i <= length; i++) {\n\n            this.framebuffer.drawPixel(Math.round(xPosition), Math.round(yPosition), color);\n\n            xPosition += dx;\n            yPosition += dy;\n\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class TexturedTriangleRasterizer extends AbstractScannlineTriangleRasterizer{\n\n    // requires\n    // bob und wbuffer\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        // left slope\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n        let slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        let tslope1u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope1v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        let zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        let curz1 = 1.0 / v1.projection.z;\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let xPosition = v1.projection.x;\n\n        // right slope\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n        const slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n        const tslope2u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n        const tslope2v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n        const zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        let curz2 = 1.0 / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n        let xPosition2 = v1.projection.x;\n\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n\n        if (yDistanceLeft === 0) {\n            return;\n        }\n\n        slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n        tslope1u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceLeft;\n        tslope1v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceLeft;\n\n        curz1 = 1.0 / v2.projection.z;\n        curu1 = v2.textureCoordinate.u / v2.projection.z;\n        curv1 = v2.textureCoordinate.v / v2.projection.z;\n        xPosition = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        let slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        const slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        const tslope1u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope2u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        const tslope1v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        let tslope2v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n\n\n        let zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        const zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        tslope2u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceRight;\n        tslope2v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceRight;\n\n        curz2 = 1.0 / v2.projection.z;\n\n        curu2 = v2.textureCoordinate.u / v2.projection.z;\n        curv2 = v2.textureCoordinate.v / v2.projection.z;\n\n        xPosition2 = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(xPosition)\n\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * framebuffer.bob.width), framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * framebuffer.bob.height), framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = framebuffer.bob.texture[u + v * framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    framebuffer.framebuffer[framebufferIndex] = color2;\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { AbstractRenderingPipeline } from '../rendering-pipelines/AbstractRenderingPipeline';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\n\nexport class TexturedAlphaBlendingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n\n\n    // requires\n    // bob und wbuffer\n    constructor(private framebuffer: Framebuffer, private pipeline: AbstractRenderingPipeline) {\n        super();\n    }\n\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        let yDistanceLeft = v2.projection.y - v1.projection.y;\n\n\n\n\n        const yDistanceRight = v3.projection.y - v1.projection.y;\n\n        let slope1 = (v2.projection.x - v1.projection.x) / yDistanceLeft;\n        const slope2 = (v3.projection.x - v1.projection.x) / yDistanceRight;\n\n        let tslope1u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        const tslope2u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        let tslope1v = (v2.textureCoordinate.v / v2.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceLeft;\n        const tslope2v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v / v1.projection.z) / yDistanceRight;\n\n        let zslope1 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n        const zslope2 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceRight;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                const currentColor = this.framebuffer.framebuffer[framebufferIndex];\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n\n                    // TODO: move out of loops!\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (currentColor >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (currentColor >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (currentColor >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n\n        yDistanceLeft = v3.projection.y - v2.projection.y;\n\n        if (yDistanceLeft === 0) {\n            return;\n        }\n\n        slope1 = (v3.projection.x - v2.projection.x) / yDistanceLeft;\n        zslope1 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceLeft;\n        tslope1u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceLeft;\n        tslope1v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceLeft;\n\n        curz1 = 1.0 / v2.projection.z;\n        curu1 = v2.textureCoordinate.u / v2.projection.z;\n        curv1 = v2.textureCoordinate.v / v2.projection.z;\n        xPosition = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceLeft; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer,  v1: Vertex, v2: Vertex, v3: Vertex): void {\n\n        let yDistanceRight = v2.projection.y - v1.projection.y;\n        const yDistanceLeft = v3.projection.y - v1.projection.y;\n\n        let slope2 = (v2.projection.x - v1.projection.x) / yDistanceRight;\n        const slope1 = (v3.projection.x - v1.projection.x) / yDistanceLeft;\n\n        const tslope1u = (v3.textureCoordinate.u / v3.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceLeft;\n        let tslope2u = (v2.textureCoordinate.u / v2.projection.z - v1.textureCoordinate.u / v1.projection.z) / yDistanceRight;\n\n        const tslope1v = (v3.textureCoordinate.v / v3.projection.z - v1.textureCoordinate.v  / v1.projection.z) / yDistanceLeft;\n        let tslope2v = (v2.textureCoordinate.v  / v2.projection.z - v1.textureCoordinate.v  / v1.projection.z) / yDistanceRight;\n\n\n        let zslope2 = (1 / v2.projection.z - 1 / v1.projection.z) / yDistanceRight;\n        const zslope1 = (1 / v3.projection.z - 1 / v1.projection.z) / yDistanceLeft;\n\n        let curz1 = 1.0 / v1.projection.z;\n        let curz2 = 1.0 / v1.projection.z;\n\n        let curu1 = v1.textureCoordinate.u / v1.projection.z;\n        let curv1 = v1.textureCoordinate.v / v1.projection.z;\n        let curu2 = v1.textureCoordinate.u / v1.projection.z;\n        let curv2 = v1.textureCoordinate.v / v1.projection.z;\n\n        let xPosition = v1.projection.x;\n        let xPosition2 = v1.projection.x;\n        let yPosition = v1.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n\n        yDistanceRight = v3.projection.y - v2.projection.y;\n        slope2 = (v3.projection.x - v2.projection.x) / yDistanceRight;\n        zslope2 = (1 / v3.projection.z - 1 / v2.projection.z) / yDistanceRight;\n\n        tslope2u = (v3.textureCoordinate.u / v3.projection.z - v2.textureCoordinate.u / v2.projection.z) / yDistanceRight;\n        tslope2v = (v3.textureCoordinate.v / v3.projection.z - v2.textureCoordinate.v / v2.projection.z) / yDistanceRight;\n\n        curz2 = 1.0 / v2.projection.z;\n\n        curu2 = v2.textureCoordinate.u / v2.projection.z;\n        curv2 = v2.textureCoordinate.v / v2.projection.z;\n\n        xPosition2 = v2.projection.x;\n        yPosition = v2.projection.y;\n\n        for (let i = 0; i < yDistanceRight; i++) {\n            const length = Math.round(xPosition2) - Math.round(xPosition);\n            let framebufferIndex = Math.round(yPosition) * this.framebuffer.width + Math.round(xPosition)\n\n\n            const spanzStep = (curz2 - curz1) / length;\n            const spanuStep = (curu2 - curu1) / length;\n            const spanvStep = (curv2 - curv1) / length;\n            let wStart = curz1;\n\n            let uStart = curu1;\n            let vStart = curv1;\n            for (let j = 0; j < length; j++) {\n                if (wStart < this.framebuffer.wBuffer[framebufferIndex]) {\n                    this.framebuffer.wBuffer[framebufferIndex] = wStart;\n                    const z = 1 / wStart;\n\n                    let u = Math.max(Math.min((uStart * z * this.framebuffer.bob.width), this.framebuffer.bob.width - 1), 0) | 0;\n                    let v = Math.max(Math.min((vStart * z * this.framebuffer.bob.height), this.framebuffer.bob.height - 1), 0) | 0;\n                    let color2 = this.framebuffer.bob.texture[u + v * this.framebuffer.bob.width];\n\n                    u = uStart * z * (framebuffer.bob.width-1);\n                    v = vStart * z * (framebuffer.bob.height-1);\n\n                   color2 = framebuffer.bob.getBilinearFilteredPixelRasterizer(u,v);\n\n                    const alpha = this.pipeline.alpha * (color2 >> 24 & 0xff) / 255;\n                    const inverseAlpha = 1 - alpha;\n\n\n                    const r = (this.framebuffer.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (color2 >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (color2 >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (color2 >> 16 & 0xff) * alpha;\n\n                    this.framebuffer.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                uStart += spanuStep;\n                vStart += spanvStep;\n            }\n\n            xPosition += slope1;\n            xPosition2 += slope2;\n            yPosition++;\n\n            curz1 += zslope1;\n            curz2 += zslope2;\n\n            curu1 += tslope1u;\n            curu2 += tslope2u;\n\n            curv1 += tslope1v;\n            curv2 += tslope2v;\n        }\n    }\n\n}\n","export class TextureCoordinate {\n    public u: number;\n    public v: number;\n\n    constructor(u?: number, v?: number) {\n        this.u = u;\n        this.v = v;\n    }\n}\n","import { Color } from './core/Color';\nimport { Vector4f } from './math/index';\nimport { TextureCoordinate } from './TextureCoordinate';\n\nexport class Vertex {\n    public position: Vector4f;\n    public projection: Vector4f = new Vector4f(0,0,0);\n    public normal: Vector4f;\n    public color: Color;\n    public textureCoordinate: TextureCoordinate = new TextureCoordinate();\n}\n","import { CullFace } from '../CullFace';\nimport { Framebuffer } from '../Framebuffer';\n\nexport class AbstractRenderingPipeline {\n\n    public NEAR_PLANE_Z: number = -1.7;\n    public alpha: number;\n    private cullMode: CullFace = CullFace.BACK;\n\n    constructor(protected framebuffer: Framebuffer) { }\n\n    public setCullFace(face: CullFace): void {\n        this.cullMode = face;\n    }\n\n    public setAlpha(alpha: number): void {\n        this.alpha = Math.max(Math.min(alpha, 1.0), 0.0);\n    }\n\n    public isInFrontOfNearPlane(p: { x: number; y: number; z: number }): boolean {\n        return p.z < this.NEAR_PLANE_Z;\n    }\n\n    /**\n     * based on signed polygon area computation:\n     * http://www.faqs.org/faqs/graphics/algorithms-faq/\n     * https://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-points-are-in-clockwise-order\n     * http://csharphelper.com/blog/2014/07/calculate-the-area-of-a-polygon-in-c/\n     * http://mathworld.wolfram.com/PolygonArea.html\n     *\n     * @private\n     * @param {{ x: number, y: number, z: number }} v1\n     * @param {{ x: number, y: number, z: number }} v2\n     * @param {{ x: number, y: number, z: number }} v3\n     * @returns {boolean}\n     * @memberof Framebuffer\n     *\n     */\n    public isTriangleCCW(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number }): boolean {\n        if (this.cullMode == CullFace.DISABLED) {\n            return true;\n        }\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v1.y - v1.x * v3.y;\n        if (this.cullMode == CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n    public isTriangleCCW2(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number },\n        v4: { x: number, y: number, z: number }): boolean {\n            if (this.cullMode == CullFace.DISABLED) {\n                return true;\n            }\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v4.y - v4.x * v3.y +\n            v4.x * v1.y - v1.x * v4.y;\n        if (this.cullMode === CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Matrix4f } from '../math/Matrix4f';\nimport { Vector4f } from '../math/Vector4f';\nimport { AbstractTriangleRasterizer } from '../rasterizer/AbstractTriangleRasterizer';\nimport { TexturedAlphaBlendingTriangleRasterizer } from '../rasterizer/TexturedAlphaBlendingTriangleRasterizer';\nimport { TexturedTriangleRasterizer } from '../rasterizer/TexturedTriangleRasterizer';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractRenderingPipeline } from './AbstractRenderingPipeline';\nimport { TexturedMesh } from './TexturedMesh';\n\nexport class TexturingRenderingPipeline extends AbstractRenderingPipeline {\n\n    private sphereMapping: boolean = false;\n    public triangleRasterizer: AbstractTriangleRasterizer = null;\n\n    private vertexArray: Array<Vertex> = new Array<Vertex>(\n        new Vertex(), new Vertex(), new Vertex()\n    );\n    setSphereMapping(sphereMapping: boolean) {\n        this.sphereMapping = sphereMapping;\n    }\n\n    private modelViewMatrix: Matrix4f;\n\n    private projectedVertices: Array<Vector4f> = new Array<Vector4f>(\n        new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1)\n    );\n\n    constructor(framebuffer: Framebuffer) {\n        super(framebuffer);\n        this.setAlpha(1.0);\n        this.triangleRasterizer = new TexturedTriangleRasterizer(framebuffer);\n    }\n\n    public setFramebuffer(framebuffer: Framebuffer) {\n        this.framebuffer = framebuffer;\n    }\n\n    public enableAlphaBlending(): void {\n        this.triangleRasterizer = new TexturedAlphaBlendingTriangleRasterizer(this.framebuffer, this);\n    }\n\n    public disableAlphaBlending(): void {\n        this.triangleRasterizer = new TexturedTriangleRasterizer(this.framebuffer);\n    }\n\n    public setModelViewMatrix(matrix: Matrix4f): void {\n        this.modelViewMatrix = matrix;\n    }\n\n    public drawMeshArray(framebuffer: Framebuffer, meshes: Array<TexturedMesh>): void {\n        for (let j: number = 0; j < meshes.length; j++) {\n            const model: TexturedMesh = meshes[j];\n            this.draw(framebuffer, model);\n        }\n    }\n\n    public draw(framebuffer: Framebuffer, mesh: TexturedMesh): void {\n        if (mesh.normals) {\n            const normalMatrix: Matrix4f = this.modelViewMatrix.computeNormalMatrix();\n\n            for (let i: number = 0; i < mesh.normals.length; i++) {\n                normalMatrix.multiplyHomArr(mesh.normals[i], mesh.normals2[i]);\n            }\n        }\n\n        for (let i: number = 0; i < mesh.points.length; i++) {\n            this.modelViewMatrix.multiplyHomArr(mesh.points[i], mesh.points2[i]);\n        }\n\n        for (let i: number = 0; i < mesh.faces.length; i++) {\n            const v1: Vector4f = mesh.points2[mesh.faces[i].vertices[0]];\n            const v2: Vector4f = mesh.points2[mesh.faces[i].vertices[1]];\n            const v3: Vector4f = mesh.points2[mesh.faces[i].vertices[2]];\n\n            if (this.isInFrontOfNearPlane(v1) &&\n                this.isInFrontOfNearPlane(v2) &&\n                this.isInFrontOfNearPlane(v3)) {\n\n                this.project2(v1, this.projectedVertices[0]);\n                this.project2(v2, this.projectedVertices[1]);\n                this.project2(v3, this.projectedVertices[2]);\n\n                if (this.isTriangleCCW(\n                    this.projectedVertices[0],\n                    this.projectedVertices[1],\n                    this.projectedVertices[2])) {\n\n                    this.vertexArray[0].projection = this.projectedVertices[0]; // p1 is Vector3f\n                    this.vertexArray[1].projection = this.projectedVertices[1];\n                    this.vertexArray[2].projection = this.projectedVertices[2];\n\n                    if (this.sphereMapping) {\n                        const n1: Vector4f = mesh.normals2[mesh.faces[i].normals[0]];\n                        const n2: Vector4f = mesh.normals2[mesh.faces[i].normals[1]];\n                        const n3: Vector4f = mesh.normals2[mesh.faces[i].normals[2]];\n                        framebuffer.fakeSphere(n1, this.vertexArray[0]);\n                        framebuffer.fakeSphere(n2, this.vertexArray[1]);\n                        framebuffer.fakeSphere(n3, this.vertexArray[2]);\n                    } else {\n                        this.vertexArray[0].textureCoordinate = mesh.uv[mesh.faces[i].uv[0]];\n                        this.vertexArray[1].textureCoordinate = mesh.uv[mesh.faces[i].uv[1]];\n                        this.vertexArray[2].textureCoordinate = mesh.uv[mesh.faces[i].uv[2]];\n                    }\n\n                    this.clipConvexPolygon(framebuffer, this.vertexArray);\n                }\n            } else if (!this.isInFrontOfNearPlane(v1) &&\n                !this.isInFrontOfNearPlane(v2) &&\n                !this.isInFrontOfNearPlane(v3)) {\n                continue;\n            } else {\n                this.vertexArray[0].position = v1; // v1 is Vector4f\n                this.vertexArray[0].textureCoordinate = mesh.uv[mesh.faces[i].uv[0]];\n\n                this.vertexArray[1].position = v2;\n                this.vertexArray[1].textureCoordinate = mesh.uv[mesh.faces[i].uv[1]];\n\n                this.vertexArray[2].position = v3;\n                this.vertexArray[2].textureCoordinate = mesh.uv[mesh.faces[i].uv[2]];\n\n                this.zClipTriangle(framebuffer, this.vertexArray);\n            }\n        }\n    }\n\n    public project2(t1: { x: number, y: number, z: number }, result: Vector4f): void {\n        result.x = Math.round((this.framebuffer.width / 2) + (292 * t1.x / (-t1.z)));\n        result.y = Math.round((this.framebuffer.height / 2) - (t1.y * 292 / (-t1.z)));\n        result.z = t1.z;\n    }\n\n    public computeNearPlaneIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const ratio: number = (this.NEAR_PLANE_Z - p1.position.z) / (p2.position.z - p1.position.z);\n        const vertex: Vertex = new Vertex();\n\n        vertex.position = new Vector4f(\n            ratio * (p2.position.x - p1.position.x) + p1.position.x,\n            ratio * (p2.position.y - p1.position.y) + p1.position.y,\n            this.NEAR_PLANE_Z\n        );\n\n        vertex.textureCoordinate = new TextureCoordinate(\n            ratio * (p2.textureCoordinate.u - p1.textureCoordinate.u) + p1.textureCoordinate.u,\n            ratio * (p2.textureCoordinate.v - p1.textureCoordinate.v) + p1.textureCoordinate.v\n        );\n\n        return vertex;\n    }\n\n    public zClipTriangle(framebuffer: Framebuffer, subject: Array<Vertex>): void {\n        const input: Array<Vertex> = subject;\n        const output: Array<Vertex> = new Array<Vertex>();\n        let S: Vertex = input[input.length - 1];\n\n        for (let i: number = 0; i < input.length; i++) {\n            const point: Vertex = input[i];\n            if (this.isInFrontOfNearPlane(point.position)) {\n                if (!this.isInFrontOfNearPlane(S.position)) {\n                    output.push(this.computeNearPlaneIntersection(S, point));\n                }\n                output.push(point);\n            } else if (this.isInFrontOfNearPlane(S.position)) {\n                output.push(this.computeNearPlaneIntersection(S, point));\n            }\n            S = point;\n        }\n\n        if (output.length < 3) {\n            return;\n        }\n\n        for (let j: number = 0; j < output.length; j++) {\n            this.project2(output[j].position, output[j].projection);\n        }\n\n        if (output.length === 3 &&\n            !this.isTriangleCCW(output[0].projection, output[1].projection, output[2].projection)) {\n            return;\n        }\n\n        if (output.length === 4 &&\n            !this.isTriangleCCW2(\n                output[0].projection,\n                output[1].projection,\n                output[2].projection,\n                output[3].projection\n            )) {\n            return;\n        }\n\n        this.clipConvexPolygon(framebuffer, output);\n    }\n\n\n    public clipConvexPolygon(framebuffer: Framebuffer, subject: Array<Vertex>): void {\n\n        let output = subject;\n\n        for (let j = 0; j < framebuffer.clipRegion.length; j++) {\n            const edge = framebuffer.clipRegion[j];\n            const input = output;\n            output = new Array<Vertex>();\n            let S = input[input.length - 1];\n\n            for (let i = 0; i < input.length; i++) {\n                const point = input[i];\n                if (edge.isInside2(point)) {\n                    if (!edge.isInside2(S)) {\n                        output.push(edge.computeIntersection2(S, point));\n                    }\n                    output.push(point);\n                } else if (edge.isInside2(S)) {\n                    output.push(edge.computeIntersection2(S, point));\n                }\n                S = point;\n            }\n        }\n\n        if (output.length < 3) {\n            return;\n        }\n\n        // triangulate new point set\n        for (let i = 0; i < output.length - 2; i++) {\n            this.triangleRasterizer.drawTriangleDDA(framebuffer, output[0], output[1 + i], output[2 + i]);\n        }\n    }\n\n}\n","import { Vertex } from '../Vertex';\n\n// TODO:\n// - use polymorphism in order to have different intersection methods\n// - one for plain clipping / one for tex coords / one for multitexturing / gouraud shading etc\nexport abstract class AbstractClipEdge {\n\n    public abstract isInside(p: Vertex): boolean;\n    public abstract isInside2(p: Vertex): boolean;\n    public abstract computeIntersection(p1: Vertex, p2: Vertex): Vertex;\n    public abstract computeIntersection2(p1: Vertex, p2: Vertex): Vertex;\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\n\nexport class BottomClipEdge extends AbstractClipEdge {\n\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.y >= this.framebuffer.minWindow.y;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.y >= this.framebuffer.minWindow.y;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        // since this is for flat shading no interpolation is required\n        const factor: number = (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(\n            Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * factor),\n            this.framebuffer.minWindow.y,\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex: Vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.minWindow.y,\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)));\n\n        const textCoord: TextureCoordinate = new TextureCoordinate();\n        const z: number = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.minWindow.y - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector3f } from '../math/Vector3f';\n\nexport class CohenSutherlandLineClipper {\n\n    public static REGION_CODE_CENTER = 0b0000;\n    public static REGION_CODE_LEFT = 0b0001;\n    public static REGION_CODE_RIGHT = 0b0010;\n    public static REGION_CODE_BOTTOM = 0b0100;\n    public static REGION_CODE_TOP = 0b1000;\n\n    constructor(private framebuffer: Framebuffer) { }\n\n    public cohenSutherlandLineClipper(start: Vector3f, end: Vector3f, col: number) {\n        let p1: Vector3f = new Vector3f(start.x, start.y, start.z);\n        let p2: Vector3f = new Vector3f(end.x, end.y, end.z);\n\n        let code1: number = this.computeRegionCode(p1);\n        let code2: number = this.computeRegionCode(p2);\n\n        let accept: boolean = false;\n        let done: boolean = false;\n\n        while (!done) {\n\n            if (this.isTrivialAccept(code1, code2)) {\n                accept = true;\n                done = true;\n            } else if (this.isTrivialReject(code1, code2)) {\n                done = true;\n            } else {\n\n                if (code1 === CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    const tempCode: number = code1;\n                    code1 = code2;\n                    code2 = tempCode;\n\n                    const tempPoint: Vector3f = p1;\n                    p1 = p2;\n                    p2 = tempPoint;\n                }\n\n                if ((code1 & CohenSutherlandLineClipper.REGION_CODE_TOP) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.x = (p1.x + (p2.x - p1.x) * (this.framebuffer.maxWindow.y - p1.y) / (p2.y - p1.y));\n                    p1.y = this.framebuffer.maxWindow.y;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_BOTTOM) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.x = (p1.x + (p2.x - p1.x) * (this.framebuffer.minWindow.y - p1.y) / (p2.y - p1.y));\n                    p1.y = this.framebuffer.minWindow.y;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_RIGHT) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.y = (p1.y + (p2.y - p1.y) * (this.framebuffer.maxWindow.x - p1.x) / (p2.x - p1.x));\n                    p1.x = this.framebuffer.maxWindow.x;\n                } else if ((code1 & CohenSutherlandLineClipper.REGION_CODE_LEFT) !== CohenSutherlandLineClipper.REGION_CODE_CENTER) {\n                    p1.y = (p1.y + (p2.y - p1.y) * (this.framebuffer.minWindow.x - p1.x) / (p2.x - p1.x));\n                    p1.x = this.framebuffer.minWindow.x;\n                }\n\n                code1 = this.computeRegionCode(p1);\n            }\n        }\n\n        if (accept) {\n            this.framebuffer.drawLineDDA(p1, p2, col);\n        }\n    }\n\n    public isTrivialAccept(code1: number, code2: number): boolean {\n        return (code1 | code2) === CohenSutherlandLineClipper.REGION_CODE_CENTER;\n    }\n\n    public isTrivialReject(code1: number, code2: number): boolean {\n        return (code1 & code2) !== CohenSutherlandLineClipper.REGION_CODE_CENTER;\n    }\n\n    public computeRegionCode(point: Vector3f): number {\n        let regionCode: number = CohenSutherlandLineClipper.REGION_CODE_CENTER;\n\n        if (point.x < this.framebuffer.minWindow.x) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_LEFT;\n        } else if (point.x > this.framebuffer.maxWindow.x) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_RIGHT;\n        }\n\n        if (point.y < this.framebuffer.minWindow.y) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_BOTTOM;\n        } else if (point.y > this.framebuffer.maxWindow.y) {\n            regionCode |= CohenSutherlandLineClipper.REGION_CODE_TOP;\n        }\n\n        return regionCode;\n    }\n\n}\n","import { AbstractClipEdge } from './AbstractClipEdge';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math/Vector4f';\n\nexport class LeftClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.x >= 0;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.x >= 0;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(this.framebuffer.minWindow.x,\n            Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * factor),\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.minWindow.x,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.minWindow.x - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        vertex.textureCoordinate = textCoord;\n\n        return vertex;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\nimport { Vector4f } from '../math/Vector4f';\n\nexport class RightClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.x < this.framebuffer.width;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.x < this.framebuffer.width;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x);\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(this.framebuffer.maxWindow.x + 1,\n            Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * factor),\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(this.framebuffer.maxWindow.x + 1,\n                Math.round(p1.projection.y + (p2.projection.y - p1.projection.y) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)),\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.maxWindow.x + 1 - p1.projection.x) / (p2.projection.x - p1.projection.x)) * z;\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vector4f } from '../math';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { Vertex } from '../Vertex';\nimport { AbstractClipEdge } from './AbstractClipEdge';\n\nexport class TopClipEdge extends AbstractClipEdge {\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    public isInside(p: Vertex): boolean {\n        return p.projection.y < this.framebuffer.maxWindow.y + 1;\n    }\n\n    public isInside2(p: Vertex): boolean {\n        return p.projection.y < this.framebuffer.maxWindow.y + 1;\n    }\n\n    public computeIntersection(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        const factor: number = (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y);\n        // this interpolation is not perspective correct but linear!!\n        vertex.color = p2.color.sub(p1.color).mul(factor).add(p1.color);\n        vertex.projection = new Vector4f(\n            Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * factor),\n            this.framebuffer.maxWindow.y + 1,\n            1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * factor));\n        return vertex;\n    }\n\n    public computeIntersection2(p1: Vertex, p2: Vertex): Vertex {\n        const vertex = new Vertex();\n        vertex.projection =\n            new Vector4f(\n                Math.round(p1.projection.x + (p2.projection.x - p1.projection.x) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)),\n                this.framebuffer.maxWindow.y + 1,\n                1 / (1 / p1.projection.z + (1 / p2.projection.z - 1 / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)));\n\n        const textCoord = new TextureCoordinate();\n        const z = vertex.projection.z;\n        textCoord.u = (p1.textureCoordinate.u / p1.projection.z + (p2.textureCoordinate.u / p2.projection.z - p1.textureCoordinate.u / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n        textCoord.v = (p1.textureCoordinate.v / p1.projection.z + (p2.textureCoordinate.v / p2.projection.z - p1.textureCoordinate.v / p1.projection.z) * (this.framebuffer.maxWindow.y + 1 - p1.projection.y) / (p2.projection.y - p1.projection.y)) * z;\n\n        vertex.textureCoordinate = textCoord;\n        return vertex;\n    }\n\n\n}\n","export class Texture {\n\n\n    public texture: Uint32Array;\n    public width: number;\n    public height: number;\n    public maxWidth: number;\n    public maxHeight: number;\n    private clamp: boolean = false;\n\n    setClamp(clamp: boolean) {\n        this.clamp = clamp;\n    }\n    constructor(texture?: Uint32Array, width?: number, height?: number) {\n        this.texture = texture;\n        this.width = width;\n        this.height = height;\n        this.maxHeight = (height-1) |0;\n        this.maxWidth = (width-1)|0;\n    }\n\n    public getPixel(texture: Texture, x: number, y: number): number {\n        return texture.texture[(x & 0xff) + (y & 0xff) * 256];\n    }\n\n    public getBilinearFilteredPixel(x: number, y: number): number {\n        const x0 = (((x | 0) % 256) + 256) % 256;\n        const x1 = ((((x + 1) | 0) % 256) + 256) % 256;\n        const y0 = (((y | 0) % 256) + 256) % 256;\n        const y1 = ((((y + 1) | 0) % 256) + 256) % 256;\n\n        const x0y0 = this.getPixel(this, x0, y0) & 0xff;\n        const x1y0 = this.getPixel(this, x1, y0) & 0xff;\n        const x0y1 = this.getPixel(this, x0, y1) & 0xff;\n        const x1y1 = this.getPixel(this, x1, y1) & 0xff;\n\n        const col1 = x0y0 * (1 - (x - Math.floor(x))) + (x1y0 * ((x - Math.floor(x))));\n        const col2 = x0y1 * (1 - (x - Math.floor(x))) + (x1y1 * ((x - Math.floor(x))));\n        const col = col1 * (1 - (y - Math.floor(y))) + (col2 * ((y - Math.floor(y))));\n\n        return col;\n    }\n\n    public getBilinearFilteredPixel2(x: number, y: number) {\n\n        let x0;\n        let  x1 ;\n        let  y0;\n        let y1 ;\n\n        if (this.clamp) {\n            x = Math.max(Math.min(x, this.width - 1), 0);\n            y = Math.max(Math.min(y, this.height - 1), 0);\n\n            //x= ((x%this.width)+ this.width) % this.width;\n            //y= ((y%this.height)+ this.height) % this.height;\n\n\n            x0 = Math.floor(x);\n            x1 =  Math.max(Math.min(x0+1, this.width - 1), 0);\n              y0 = Math.floor(y);\n             y1 =Math.max(Math.min(y0+1, this.height - 1), 0);\n        } else {\n            x= ((x%this.width)+ this.width) % this.width;\n            y= ((y%this.height)+ this.height) % this.height;\n\n\n        x0 = x | 0;\n        x1 = (x+ 1 | 0)%this.width ;\n          y0 = y | 0;\n         y1 = (y+ 1 | 0)%this.height ;\n        }\n\n\n\n        const x0y0 = this.getPixel2(this, x0, y0);\n        const x1y0 = this.getPixel2(this, x1, y0);\n        const x0y1 = this.getPixel2(this, x0, y1);\n        const x1y1 = this.getPixel2(this, x1, y1);\n\n        return this.interpolateComp(x, y, x0y0, x1y0 , x0y1, x1y1 );\n    }\n\n    public getPixel2(texture: Texture, x: number, y: number): number {\n        return this.texture[x + y * this.width];\n    }\n\n    /**\n     * highly optimized version only for power of 2 textures\n     */\n    public getBilinearFilteredPixelRasterizer(x: number, y: number) {\n        let x0 = x | 0;\n        let x1 = (x | 0) + 1;\n        let y0 = y | 0;\n        let y1 = (y | 0) + 1;\n\n        let x0y0: number;\n        let x1y0: number;\n        let x0y1: number;\n        let x1y1: number;\n\n        if (this.clamp) {\n             x0 = Math.max(Math.min(x0, this.width - 1), 0);\n             x1 = Math.max(Math.min(x1, this.width - 1), 0);\n             y0 = Math.max(Math.min(y0, this.height - 1), 0);\n             y1 = Math.max(Math.min(y1, this.height - 1), 0);\n\n             x0y0 = this.getPixel2(this, x0, y0);\n             x1y0 = this.getPixel2(this, x1, y0);\n             x0y1 = this.getPixel2(this, x0, y1);\n             x1y1 = this.getPixel2(this, x1, y1);\n        } else {\n            x0y0 = this.getPixelRasterizer(this, x0, y0);\n            x1y0 = this.getPixelRasterizer(this, x1, y0);\n            x0y1 = this.getPixelRasterizer(this, x0, y1);\n            x1y1 = this.getPixelRasterizer(this, x1, y1);\n        }\n        return this.interpolateComp(x, y, x0y0, x1y0, x0y1, x1y1);\n    }\n\n    public getPixelRasterizer(texture: Texture, x: number, y: number): number {\n        return this.texture[(x & (this.width-1)) + (y&(this.height-1)) * this.width];\n    }\n\n    public getPixel3(texture: Texture, x: number, y: number): number {\n        return this.texture[\n            (((x % this.width) + this.width) % this.width) +\n            (((y % this.height) + this.height) % this.height) * this.width];\n    }\n\n    private interpolateComp(x, y, x0y0, x1y0, x0y1, x1y1): number {\n        // reuse these values for all color components\n        const xFrac = x - (x | 0);\n        const yFrac = y - (y | 0);\n        const oneMinusXfrac = 1 - xFrac;\n        const oneMinusYfrac = 1 - yFrac;\n\n        const x0y0_r = x0y0 & 0xff;\n        const x1y0_r = x1y0 & 0xff;\n        const x0y1_r = x0y1 & 0xff;\n        const x1y1_r = x1y1 & 0xff;\n\n        const col1_r = x0y0_r * oneMinusXfrac + x1y0_r * xFrac;\n        const col2_r = x0y1_r * oneMinusXfrac + x1y1_r * xFrac;\n        const col_r = col1_r * oneMinusYfrac + (col2_r * yFrac);\n\n        const x0y0_g = x0y0 >> 8 & 0xff;\n        const x1y0_g = x1y0 >> 8 & 0xff;\n        const x0y1_g = x0y1 >> 8 & 0xff;\n        const x1y1_g = x1y1 >> 8 & 0xff;\n\n        const col1_g = x0y0_g * oneMinusXfrac + x1y0_g * xFrac;\n        const col2_g = x0y1_g * oneMinusXfrac + x1y1_g * xFrac;\n        const col_g = col1_g * oneMinusYfrac + (col2_g * yFrac);\n\n        const x0y0_b = x0y0 >> 16 & 0xff;\n        const x1y0_b = x1y0 >> 16 & 0xff;\n        const x0y1_b = x0y1 >> 16 & 0xff;\n        const x1y1_b = x1y1 >> 16 & 0xff;\n\n        const col1_b = x0y0_b * oneMinusXfrac + x1y0_b * xFrac;\n        const col2_b = x0y1_b * oneMinusXfrac + x1y1_b * xFrac;\n        const col_b = col1_b * oneMinusYfrac + (col2_b * yFrac);\n\n        const x0y0_a = x0y0 >> 24 & 0xff;\n        const x1y0_a = x1y0 >> 24 & 0xff;\n        const x0y1_a = x0y1 >> 24 & 0xff;\n        const x1y1_a = x1y1 >> 24 & 0xff;\n\n        const col1_a = x0y0_a * oneMinusXfrac + x1y0_a * xFrac;\n        const col2_a = x0y1_a * oneMinusXfrac + x1y1_a * xFrac;\n        const col_a = col1_a * oneMinusYfrac + (col2_a * yFrac);\n\n        return col_r | col_g << 8 | col_b << 16 | col_a << 24;\n    }\n\n}\n","\nimport { ScaleClipBlitter } from './blitter/ScaleClipBlitter';\nimport { ControllableCamera } from './camera';\nimport { Color } from './core/Color';\nimport { CullFace } from './CullFace';\nimport { Torus } from './geometrical-objects/Torus';\nimport { Matrix3f, Matrix4f, Vector2f, Vector3f, Vector4f } from './math';\nimport { Interpolator } from './math/Interpolator';\nimport { Sphere } from './math/Sphere';\nimport RandomNumberGenerator from './RandomNumberGenerator';\nimport { FlatShadingTriangleRasterizer } from './rasterizer/FlatShadingTriangleRasterizer';\nimport { LineRasterizerDda } from './rasterizer/line/LineRasterizer';\nimport { LineRasterizerNoZ } from './rasterizer/line/LineRasterizerNoZ';\nimport { TexturedTriangleRasterizer } from './rasterizer/TexturedTriangleRasterizer';\nimport { TexturingRenderingPipeline } from './rendering-pipelines/TexturingRenderingPipeline';\nimport { AbstractClipEdge } from './screen-space-clipping/AbstractClipEdge';\nimport { BottomClipEdge } from './screen-space-clipping/BottomClipEdge';\nimport { CohenSutherlandLineClipper } from './screen-space-clipping/CohenSutherlandLineClipper';\nimport { LeftClipEdge } from './screen-space-clipping/LeftClipEdge';\nimport { RightClipEdge } from './screen-space-clipping/RightClipEdge';\nimport { TopClipEdge } from './screen-space-clipping/TopClipEdge';\nimport { Texture } from './texture/Texture';\nimport { TextureCoordinate } from './TextureCoordinate';\nimport { Vertex } from './Vertex';\n\n/*\nimport { FlatShadingRenderingPipeline } from './rendering-pipelines/FlatShadingRenderingPipeline';\nimport { TexturingRenderingPipeline } from './rendering-pipelines/TexturingRenderingPipeline';\nimport { BlenderJsonParser } from './blender/BlenderJsonParser';\nimport { Material } from './shading/material/Material';\nimport { PointLight } from './shading/light/PointLight';\n*/\n\n\n// let labJson2 = <any>require('./assets/lab2.json');\n// let bakedJson = <any>require('./assets/abstract.json');\n\nexport class Framebuffer {\n\n    public static PIXEL_SIZE_IN_BYTES = 4;\n\n    public minWindow: Vector2f;\n    public maxWindow: Vector2f;\n\n\n    public framebuffer: Uint32Array;\n    public wBuffer: Float32Array;\n\n    public cullMode: CullFace = CullFace.BACK;\n\n    public camera: ControllableCamera;\n    public bob: Texture;\n    public triangleRasterizer = new FlatShadingTriangleRasterizer(this);\n    public texturedTriangleRasterizer = new TexturedTriangleRasterizer(this);\n\n    public scaleClipBlitter = new ScaleClipBlitter(this);\n    // public renderingPipeline: FlatShadingRenderingPipeline;\n     public texturedRenderingPipeline: TexturingRenderingPipeline;\n    public lineRasterizer = new LineRasterizerDda(this);\n    public lineRasterizerNo = new LineRasterizerNoZ(this);\n    public tmpGlitch: Uint32Array;\n\n    public lensFlareVisible: boolean = false;\n    public lensFlareStart = 0;\n    public lensFlareEnd = 0;\n\n    public width: number;\n    public height: number;\n    private imageData: ImageData;\n    private unsignedIntArray: Uint8ClampedArray;\n\n    private torus = new Torus();\n\n    private plane: {\n        points: Vector4f[];\n        points2: Vector4f[];\n        normals: Vector4f[];\n        normals2: Vector4f[];\n        index:Array<number>;\n    };\n\n    private cylinder2: {\n        points: Vector4f[];\n        points2: Vector4f[];\n        normals: Vector4f[];\n        normals2: Vector4f[];\n        index:Array<number>;\n    };\n\n    private linerClipper = new CohenSutherlandLineClipper(this);\n    public clipRegion = Array<AbstractClipEdge>();\n    private texture = new Texture();\n\n    constructor(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n\n        this.imageData = new ImageData(width, height);\n        this.wBuffer = new Float32Array(width * height);\n        const arrayBuffer = new ArrayBuffer(this.width * this.height * Framebuffer.PIXEL_SIZE_IN_BYTES);\n        this.unsignedIntArray = new Uint8ClampedArray(arrayBuffer);\n        this.framebuffer = new Uint32Array(arrayBuffer);\n        this.tmpGlitch = new Uint32Array(width * height);\n        // this.renderingPipeline = new FlatShadingRenderingPipeline(this);\n     this.texturedRenderingPipeline = new TexturingRenderingPipeline(this);\n        this.minWindow = new Vector2f(0, 0);\n        this.maxWindow = new Vector2f(width - 1, height - 1);\n\n        this.clipRegion = new Array<AbstractClipEdge>(\n            new RightClipEdge(this),\n            new LeftClipEdge(this),\n            new BottomClipEdge(this),\n            new TopClipEdge(this)\n        );\n    }\n\n    public setCullFace(face: CullFace): void {\n        this.cullMode = face;\n    }\n\n    public setTexture(texture: Texture): void {\n        this.bob = texture;\n    }\n\n    /*\n    public precompute(texture: Texture): void {\n        // this.blengetBlenderScene(hoodlumJson, false);\n\n         //this.cylinder = this.createCylinder();\n\n        // this.sphereDisp = this.createSphereDistplaced(texture);\n    }\n    */\n\n    public getImageData(): ImageData {\n        this.imageData.data.set(this.unsignedIntArray);\n        return this.imageData;\n    }\n\n    public clear() {\n        const color: number = Color.BLACK.toPackedFormat();\n        const count: number = this.width * this.height;\n        for (let i = 0; i < count; i++) {\n            this.framebuffer[i] = color;\n        }\n    }\n\n    public clearColorBuffer(color: number) {\n        this.framebuffer.fill(color);\n    }\n\n    public drawPixel(x: number, y: number, color: number) {\n        this.framebuffer[x + y * this.width] = color;\n\n    }\n    public drawPixel4(x: number, y: number, color: number, alpha: number) {\n        const index: number = x + y * this.width;\n        const inverseAlpha = 1 - alpha;\n        const r = (((this.framebuffer[index] >> 0) & 0xff) * (inverseAlpha)\n            + ((color >> 0) & 0xff) * (alpha)) | 0;\n        const g = (((this.framebuffer[index] >> 8) & 0xff) * (inverseAlpha) +\n            ((color >> 8) & 0xff) * (alpha)) | 0;\n        const b = (((this.framebuffer[index] >> 16) & 0xff) * (inverseAlpha) +\n            ((color >> 16) & 0xff) * (alpha)) | 0;\n        this.framebuffer[x + y * this.width] = r | (g << 8) | (b << 16) | (255 << 24);\n\n    }\n\n    public drawPixel3(x: number, y: number, color: number, alpha2: number) {\n\n        const index: number = x + y * this.width;\n        const alpha = ((color >> 24) & 0xff) / 255 * alpha2;\n        const inverseAlpha = 1 - alpha;\n\n        const r = (((this.framebuffer[index] >> 0) & 0xff) * (inverseAlpha)\n            + ((color >> 0) & 0xff) * (alpha)) | 0;\n        const g = (((this.framebuffer[index] >> 8) & 0xff) * (inverseAlpha) +\n            ((color >> 8) & 0xff) * (alpha)) | 0;\n        const b = (((this.framebuffer[index] >> 16) & 0xff) * (inverseAlpha) +\n            ((color >> 16) & 0xff) * (alpha)) | 0;\n\n        this.framebuffer[index] = r | (g << 8) | (b << 16) | (255 << 24);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * blended with the framebuffer background\n     *\n     * @param  {x} number                 this can be a float\n     * @param  {y} number                 this can be a float\n     * @param  {color} number             color to blend into framebuffer\n     */\n    drawPixelAntiAliased(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        const roundedX = Math.floor(x);\n        const roundedY = Math.floor(y);\n        const percentX = 1 - Math.abs(x - roundedX);\n        const percentY = 1 - Math.abs(y - roundedY);\n        const percent = percentX * percentY;\n        this.drawPixel3(roundedX, roundedY, color, percent);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * to the framebuffer background\n     */\n    drawPixelAliased(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        const roundedX = Math.round(x);\n        const roundedY = Math.round(y)\n        this.drawPixel(roundedX, roundedY, color);\n    }\n\n    /**\n     * Renders a pixel using fractional x,y coordinates\n     * blended with the framebuffer background in a 4x4 matrix\n     * https://en.wikipedia.org/wiki/Spatial_anti-aliasing\n     */\n    drawPixelAntiAliasedSpacial(x: number, y: number, color: number) {\n        if ((x < 0 || x >= this.width) || (y < 0 || y >= this.height)) return;\n        for (let roundedX = Math.floor(x); roundedX <= Math.ceil(x); roundedX++) {\n            for (let roundedY = Math.floor(y); roundedY <= Math.ceil(y); roundedY++) {\n                const percentX = 1 - Math.abs(x - roundedX);\n                const percentY = 1 - Math.abs(y - roundedY);\n                const percent = percentX * percentY;\n                this.drawPixel4(roundedX, roundedY, color, percent);\n            }\n        }\n    }\n\n    public readPixel(x: number, y: number): number {\n        return this.framebuffer[x + y * this.width];\n    }\n\n    public drawRect(x, y, width, color) {\n        let start = x + y * this.width;\n\n        for (let i = 0; i < width; i++) {\n            this.framebuffer[start++] = color;\n        }\n    }\n\n    public drawRect2(x: number, y: number, width: number, height: number, color: number) {\n        let start = x + y * this.width;\n        for (let j = 0; j < height; j++) {\n            for (let i = 0; i < width; i++) {\n\n                this.framebuffer[start++] = color;\n\n            }\n            start += this.width - width;\n        }\n    }\n\n    public drawText(x: number, y: number, text: string, texture: Texture): void {\n        let xpos = x;\n        const firstIndex = ' '.charCodeAt(0);\n        for (let i = 0; i < text.length; i++) {\n            const index = text.charCodeAt(i) - firstIndex;\n            const tx = Math.floor(index % 32) * 8;\n            const ty = Math.floor(index / 32) * 8;\n            this.drawTextureRectFastAlpha(xpos, y, tx, ty, 8, 8, texture);\n            xpos += 8;\n        }\n    }\n\n    public addReflections() {\n        const start = 150;\n        for (let i = 0; i < 50; i++) {\n            for (let x = 0; x < this.width; x++) {\n                this.framebuffer[(start + i) * this.width + x] = this.framebuffer[(start - i * 3 - 1) * this.width + x +\n                    Interpolator.interpolate(0, 50, i) * (Math.sin(Date.now() * 0.002 + i * 0.2) * 14) | 0];\n            }\n        }\n    }\n\n    public drawTextureRect2(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture, alpha2: number): void {\n        for (let w = 0; w < width; w++) {\n            for (let h = 0; h < height; h++) {\n                const texIndex = (xt + w) + ((yt + h) * texture.width);\n                const frIndex = (xs + w) + ((ys + h) * this.width);\n                const alpha = ((texture.texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (((this.framebuffer[frIndex] >> 0) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 0) & 0xff) * (alpha)) | 0;\n                const g = (((this.framebuffer[frIndex] >> 8) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 8) & 0xff) * (alpha)) | 0;\n                const b = (((this.framebuffer[frIndex] >> 16) & 0xff) * (inverseAlpha) + ((texture.texture[texIndex] >> 16) & 0xff) * (alpha)) | 0;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n            }\n        }\n    }\n\n    public drawTextureRectFastAlpha(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const color = texture.texture[texIndex];\n                if (color & 0xff000000) {\n                    this.framebuffer[frIndex] = color;\n                }\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n\n    public drawTextureColorized(x: number, y: number, texture: Texture, color: Color): void {\n\n        let frIndex = x + y * this.width;\n        let texIndex = 0;\n\n        for (let h = 0; h < texture.height; h++) {\n            for (let w = 0; w < texture.width; w++) {\n                const txPixel = texture.texture[texIndex];\n\n\n                const r = (txPixel >> 0 & 0xff) * color.r / 255;\n                const g = (txPixel >> 8 & 0xff) * color.g / 255;\n                const b = (txPixel >> 16 & 0xff) * color.b / 255;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                texIndex++;\n                frIndex++;\n            }\n\n            frIndex += this.width - texture.width;\n        }\n    }\n\n    public drawTextureRectNoAlpha(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                this.framebuffer[frIndex] = texture.texture[texIndex];\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    /**\n     * Transitions from one pixel to another using alpha\n     *\n     * @param  {number} c1\n     * @param  {number} c2\n     * @param  {number} alpha number ranging from 0-255\n     * @return {number}     color blended difference between c1 and c2\n     */\n    public static blend(c1: number, c2: number, nAlpha: number): number {\n\n        if (0 === nAlpha) {\n            return c1;\n        }\n\n        if (255 === nAlpha) {\n            return c2;\n        }\n\n        const nInvAlpha: number = 255 - nAlpha;\n\n        const r1: number = (c1 & 0x00FF0000) >> 16;\n        const r2: number = (c2 & 0x00FF0000) >> 16;\n        const r: number = (r2 * nAlpha + r1 * nInvAlpha) >> 8;\n\n        const g1: number = (c1 & 0x0000FF00) >> 8;\n        const g2: number = (c2 & 0x0000FF00) >> 8;\n        const g: number = (g2 * nAlpha + g1 * nInvAlpha) >> 8;\n\n        const b1: number = (c1 & 0x000000FF);\n        const b2: number = (c2 & 0x000000FF);\n        const b: number = (b2 * nAlpha + b1 * nInvAlpha) >> 8;\n\n        return 0xff000000 | r << 16 | g << 8 | b;\n    }\n\n\n    public static addColor(c1: number, c2: number) {\n        //int a1 = (c1 >> 24) & 0xff;\n        const r1 = (c1 >> 16) & 0xFF;\n        const g1 = (c1 >>  8) & 0xFF;\n        const b1 =  c1        & 0xFF;\n\n        const r2 = (c2 >> 16) & 0xFF;\n        const g2 = (c2 >>  8) & 0xFF;\n        const b2 =  c2        & 0xFF;\n\n        const r = r1 + r2 < 0xFF ? r1 + r2 : 0xFF;\n        const g = g1 + g2 < 0xFF ? g1 + g2 : 0xFF;\n        const b = b1 + b2 < 0xFF ? b1 + b2 : 0xFF;\n\n        return (0xFF << 24 | r << 16 | g << 8 | b);\n      }\n\n    public drawTextureRect(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Uint32Array, pixelWidth: number, alpha2: number): void {\n        let texIndex = xt + yt * pixelWidth;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const alpha = ((texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n                const inverseAlpha = 1 - alpha;\n\n                const fbPixel = this.framebuffer[frIndex];\n                const txPixel = texture[texIndex];\n\n                const r = (fbPixel >> 0 & 0xff) * inverseAlpha + (txPixel >> 0 & 0xff) * alpha;\n                const g = (fbPixel >> 8 & 0xff) * inverseAlpha + (txPixel >> 8 & 0xff) * alpha;\n                const b = (fbPixel >> 16 & 0xff) * inverseAlpha + (txPixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += pixelWidth - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    public drawTextureRectAdd(xs: number, ys: number, xt: number, yt: number, width: number, height: number, texture: Texture, alpha2: number): void {\n        let texIndex = xt + yt * texture.width;\n        let frIndex = xs + ys * this.width;\n\n        for (let h = 0; h < height; h++) {\n            for (let w = 0; w < width; w++) {\n                const alpha = ((texture.texture[texIndex] >> 24) & 0xff) / 255 * alpha2;\n\n                const fbPixel = this.framebuffer[frIndex];\n                const txPixel = texture.texture[texIndex];\n\n                const r = Math.min(255, (fbPixel >> 0 & 0xff) + (txPixel >> 0 & 0xff) * alpha);\n                const g = Math.min(255, (fbPixel >> 8 & 0xff) + (txPixel >> 8 & 0xff) * alpha);\n                const b = Math.min(255, (fbPixel >> 16 & 0xff) + (txPixel >> 16 & 0xff) * alpha);\n\n                this.framebuffer[frIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n                texIndex++;\n                frIndex++;\n            }\n            texIndex += texture.width - width;\n            frIndex += this.width - width;\n        }\n    }\n\n    public pixelate() {\n        const xoff = 200;\n        const yoff = 50;\n\n        for (let x = 0; x < 10; x++) {\n            for (let y = 0; y < 10; y++) {\n                this.drawBox2(x * 10 + xoff, y * 10 + yoff, 10, 10, this.readPixel(x * 10 + xoff, y * 10 + yoff));\n            }\n        }\n        this.drawLineDDA(new Vector3f(xoff, yoff, -0.3), new Vector3f(xoff + 20 * 5, yoff, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff, yoff + 20 * 5, -0.3), new Vector3f(xoff + 20 * 5, yoff + 20 * 5, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff, yoff, -0.3), new Vector3f(xoff, yoff + 20 * 5, -0.3), 0xffffffff);\n        this.drawLineDDA(new Vector3f(xoff + 20 * 5, yoff, -0.3), new Vector3f(xoff + 20 * 5, yoff + 20 * 5, -0.3), 0xffffffff);\n    }\n\n    public fastFramebufferCopyOffset(src: Uint32Array, dest: Uint32Array, offset = 0) {\n        let i = this.width * this.height / 32 + 1;\n        let k = this.width * this.height;\n        let l = this.width * (this.height - offset);\n        while (--i) {\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n            src[--k] = dest[--l]; src[--k] = dest[--l];\n        }\n    }\n\n    // 6 times faster than the slow method that clips and does alpha blending\n    public fastFramebufferCopy(dest: Uint32Array, src: Uint32Array) {\n        dest.set(src);\n    }\n\n    public noise(elapsedTime: number, texture: Texture, scale: number = 0.07): void {\n        const rng = new RandomNumberGenerator();\n        rng.setSeed(elapsedTime);\n        for (let y = 0; y < this.height; y++) {\n            this.drawTextureRect(0, y, Math.floor(rng.getFloat() * (texture.texture.length - this.width)), 0, this.width, 1, texture.texture, texture.width, scale);\n        }\n    }\n\n    public drawTexturedBillboard(xp: number, yp: number, width: number, height: number, texture: Texture, z: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n                    this.wBuffer[index2] = z;\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const r = (this.framebuffer[index2] >> 0 & 0xff) + (texture.texture[textureIndex] >> 0 & 0xff);\n                    const g = (this.framebuffer[index2] >> 8 & 0xff) + (texture.texture[textureIndex] >> 8 & 0xff);\n                    const b = (this.framebuffer[index2] >> 16 & 0xff) + (texture.texture[textureIndex] >> 16 & 0xff);\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += yStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle(xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle2(\n        xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number,\n        imgNum: number = 0, spritH: number): void {\n        const xStep = texture.width / width;\n        const yStep = spritH / height;\n        let xx = 0;\n        let yy = 0;\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n        let xTextureStart: number;\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, spritH - 1) * texture.width +\n                        spritH * texture.width * imgNum;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticle2Sub(\n        xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number,\n        imgNum: number = 0, spritH: number, rr:number=1,gg:number=1,bb:number=1) : void {\n        const xStep = texture.width / width;\n        const yStep = spritH / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > this.height - 1 ||\n            xp + width < 0 ||\n            xp > this.width - 1) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - (this.height), 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - (this.height - 1), 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = Math.ceil((width + xp) - Math.max(xp + width - (this.width), 0));\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = Math.ceil(width - Math.max(xp + width - (this.width - 1), 0));\n        }\n\n        const sub: number = Math.ceil(xp) - xp;\n        const suby: number = Math.ceil(yp) - yp;\n        xTextureStart += sub * xStep;\n        yy += suby * yStep;\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = Math.ceil(xStart) + Math.ceil(yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n\n                    const textureIndex = Math.min(Math.round(xx) | 0, texture.width - 1) +\n                        Math.min(Math.round(yy) | 0, spritH - 1) * texture.width +\n                        spritH * texture.width * imgNum;\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                    const inverseAlpha = 1 - alpha;\n                    const framebufferPixel = this.framebuffer[index2];\n                    const texturePixel = texture.texture[textureIndex];\n                    const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha*rr;\n                    const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha*gg;\n                    const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha*bb;\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawParticleNoDepth(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > this.height - 1 ||\n            xp + width < 0 ||\n            xp > this.width - 1) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n\n                const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale;\n                const inverseAlpha = 1 - alpha;\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawSoftParticle(xp: number, yp: number, width: number, height: number, texture: Texture, z: number, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                if (this.wBuffer[index2] > z) {\n                    // float scale = 0.2f;\n                    // float fade = clamp((depthMapDepth.x-depth)*scale, 0.0, 1.0);\n                    const zDist = Math.min(Math.max(((1 / z - 1 / this.wBuffer[index2])), 0.0), 1.0);\n                    // this.wBuffer[index2] = z;\n                    const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                    const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * alphaScale * zDist;\n                    const inverseAlpha = 1 - alpha;\n\n                    const r = (this.framebuffer[index2] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                    const g = (this.framebuffer[index2] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                    const b = (this.framebuffer[index2] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                    this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                }\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawFog(color: Color, fogScale: number, fogOffset: number): void {\n        const videoMemorySize: number = this.width * this.height;\n        const wBufferScale: number = -fogScale;\n\n        for (let index: number = 0; index < videoMemorySize; index++) {\n            const alpha = Math.max(Math.min(wBufferScale * (1 / this.wBuffer[index] + fogOffset), 1.0), 0.0);\n            const inverseAlpha = 1.0 - alpha;\n\n            const r = (this.framebuffer[index] >> 0 & 0xff) * inverseAlpha + color.r * alpha;\n            const g = (this.framebuffer[index] >> 8 & 0xff) * inverseAlpha + color.g * alpha;\n            const b = (this.framebuffer[index] >> 16 & 0xff) * inverseAlpha + color.b * alpha;\n\n            this.framebuffer[index] = r | (g << 8) | (b << 16) | (255 << 24);\n        }\n    }\n\n    public drawScaledTextureClipBi(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        const alphaScale = 1 / 255 * alphaBlend;\n        let index2 = (xStart) + (yStart) * this.width;\n\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n               // console.log(xx, yy);\n                // let textureIndex = //Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n                const color = texture.getBilinearFilteredPixel2(xx, yy);\n\n                const alpha = 255 * alphaScale;\n                const inverseAlpha = 1 - alpha;\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = color;\n\n                const r = (framebufferPixel >> 0 & 0xff) * inverseAlpha + (texturePixel >> 0 & 0xff) * alpha;\n                const g = (framebufferPixel >> 8 & 0xff) * inverseAlpha + (texturePixel >> 8 & 0xff) * alpha;\n                const b = (framebufferPixel >> 16 & 0xff) * inverseAlpha + (texturePixel >> 16 & 0xff) * alpha;\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawScaledTextureClipBiAdd(xp: number, yp: number, width: number, height: number, texture: Texture, alphaBlend: number): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                // let textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n                const color = texture.getBilinearFilteredPixel2(xx, yy);\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = color;\n\n                const r = Math.min((framebufferPixel >> 0 & 0xff) + (texturePixel >> 0 & 0xff) * alphaBlend, 255);\n                const g = Math.min((framebufferPixel >> 8 & 0xff) + (texturePixel >> 8 & 0xff) * alphaBlend, 255);\n                const b = Math.min((framebufferPixel >> 16 & 0xff) + (texturePixel >> 16 & 0xff) * alphaBlend, 255);\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawScaledTextureClipAdd(xp: number, yp: number, width: number, height: number, texture: Texture, alpha: number = 1.0): void {\n        const xStep = texture.width / width;\n        const yStep = texture.height / height;\n        let xx = 0;\n        let yy = 0;\n\n        let newHeight: number;\n        let newWidth: number;\n        let yStart: number;\n        let xStart: number;\n\n        if (yp + height < 0 ||\n            yp > (this.height - 1) ||\n            xp + width < 0 ||\n            xp > (this.width - 1)) {\n            return;\n        }\n\n        if (yp < 0) {\n            yy = yStep * -yp;\n            newHeight = (height + yp) - Math.max(yp + height - this.height, 0);\n            yStart = 0;\n        } else {\n            yStart = yp;\n            newHeight = height - Math.max(yp + height - this.height, 0);\n        }\n\n        let xTextureStart: number;\n\n        if (xp < 0) {\n            xTextureStart = xx = xStep * -xp;\n            newWidth = (width + xp) - Math.max(xp + width - this.width, 0);\n            xStart = 0;\n        } else {\n            xTextureStart = 0;\n            xStart = xp;\n            newWidth = width - Math.max(xp + width - this.width, 0);\n        }\n\n        let index2 = (xStart) + (yStart) * this.width;\n        for (let y = 0; y < newHeight; y++) {\n            for (let x = 0; x < newWidth; x++) {\n                const textureIndex = Math.min(xx | 0, texture.width - 1) + Math.min(yy | 0, texture.height - 1) * texture.width;\n\n                const framebufferPixel = this.framebuffer[index2];\n                const texturePixel = texture.texture[textureIndex];\n\n                const r = Math.min((framebufferPixel >> 0 & 0xff) + (texturePixel >> 0 & 0xff) * alpha, 255);\n                const g = Math.min((framebufferPixel >> 8 & 0xff) + (texturePixel >> 8 & 0xff) * alpha, 255);\n                const b = Math.min((framebufferPixel >> 16 & 0xff) + (texturePixel >> 16 & 0xff) * alpha, 255);\n\n                this.framebuffer[index2] = r | (g << 8) | (b << 16) | (255 << 24);\n                xx += xStep;\n                index2++;\n            }\n            yy += yStep;\n            xx = xTextureStart;\n            index2 += -newWidth + this.width;\n        }\n    }\n\n    public drawTexture(x: number, y: number, texture: Texture, alpha2: number) {\n        const SCREEN_WIDTH = this.width;\n        const SCREEN_HEIGHT = this.height;\n\n        let framebufferIndex: number = Math.max(x, 0) + Math.max(y, 0) * this.width;\n        let textureIndex: number = Math.max(0, 0 - x) + Math.max(0, 0 - y) * texture.width;\n\n        const width: number = Math.min(texture.width, SCREEN_WIDTH - x) - Math.max(0, 0 - x);\n        const height: number = Math.min(texture.height, SCREEN_HEIGHT - y) - Math.max(0, 0 - y);\n\n        const textureRowOffset = texture.width - width;\n        const framebufferRowOffset = this.width - width;\n\n        const div = 1 / 255 * alpha2;\n\n        for (let yHeight: number = 0; yHeight < height; yHeight++) {\n            for (let xWidth: number = 0; xWidth < width; xWidth++) {\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * div;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            textureIndex += textureRowOffset;\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n    public drawTextureFullscreen(texture: Texture, alpha2: number) {\n\n        let framebufferIndex: number = 0;\n        const inverseAlpha = 1 - alpha2;\n        for (let y: number = 0; y < this.width * this.height; y++) {\n\n            const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 0 & 0xff) * alpha2;\n            const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 8 & 0xff) * alpha2;\n            const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[framebufferIndex] >> 16 & 0xff) * alpha2;\n\n            this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n            framebufferIndex++;\n        }\n    }\n\n    public drawTexture3(x: number, y: number, texture: Texture, alpha2: number, time: number) {\n        const SCREEN_WIDTH = this.width;\n        const SCREEN_HEIGHT = this.height;\n\n        let framebufferIndex: number = Math.max(x, 0) + Math.max(y, 0) * this.width;\n        let textureIndex: number = Math.max(0, 0 - x) + Math.max(0, 0 - y) * texture.width;\n\n        const width: number = Math.min(texture.width, SCREEN_WIDTH - x) - Math.max(0, 0 - x);\n        const height: number = Math.min(texture.height, SCREEN_HEIGHT - y) - Math.max(0, 0 - y);\n\n        const textureRowOffset = texture.width - width;\n        const framebufferRowOffset = this.width - width;\n\n        const div = 1 / 255 * alpha2;\n\n        const mHeight = Math.floor(height * Math.max(Math.min(1, time), 0));\n\n        for (let yHeight: number = 0; yHeight < mHeight; yHeight++) {\n            for (let xWidth: number = 0; xWidth < width; xWidth++) {\n                const alpha = (texture.texture[textureIndex] >> 24 & 0xff) * div;\n                const inverseAlpha = 1 - alpha;\n\n                const r = (this.framebuffer[framebufferIndex] >> 0 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 0 & 0xff) * alpha;\n                const g = (this.framebuffer[framebufferIndex] >> 8 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 8 & 0xff) * alpha;\n                const b = (this.framebuffer[framebufferIndex] >> 16 & 0xff) * inverseAlpha + (texture.texture[textureIndex] >> 16 & 0xff) * alpha;\n\n                this.framebuffer[framebufferIndex] = r | (g << 8) | (b << 16) | (255 << 24);\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            textureIndex += textureRowOffset;\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n    public drawTextureNoClipAlpha(x: number, y: number, texture: Texture): void {\n        let framebufferIndex: number = x + y * this.width;\n        let textureIndex: number = 0;\n\n        const framebufferRowOffset = this.width - texture.width;\n\n        for (let yHeight = 0; yHeight < texture.height; yHeight++) {\n            for (let xWidth = 0; xWidth < texture.width; xWidth++) {\n                const color = texture.texture[textureIndex];\n\n                if (color & 0xff000000) {\n                    this.framebuffer[framebufferIndex] = color;\n                }\n\n                framebufferIndex++;\n                textureIndex++;\n            }\n\n            framebufferIndex += framebufferRowOffset;\n        }\n    }\n\n     // https://math.stackexchange.com/questions/859454/maximum-number-of-vertices-in-intersection-of-triangle-with-box/\n     public nearPlaneClipping(t1: Vector3f, t2: Vector3f, color: number): void {\n        const NEAR_PLANE_Z = -1.7;\n\n        if (t1.z < NEAR_PLANE_Z && t2.z < NEAR_PLANE_Z) {\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t1), this.project(t2), color);\n        } else if (t1.z > NEAR_PLANE_Z && t2.z > NEAR_PLANE_Z) {\n            return;\n        } else if (t1.z < NEAR_PLANE_Z) {\n            const ratio = (NEAR_PLANE_Z - t1.z) / (t2.z - t1.z);\n            const t3 = new Vector3f(ratio * (t2.x - t1.x) + t1.x, ratio * (t2.y - t1.y) + t1.y, NEAR_PLANE_Z);\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t1), this.project(t3), color);\n        } else if (t2.z < NEAR_PLANE_Z) {\n            const ratio = (NEAR_PLANE_Z - t2.z) / (t1.z - t2.z);\n            const t3 = new Vector3f(ratio * (t1.x - t2.x) + t2.x, ratio * (t1.y - t2.y) + t2.y, NEAR_PLANE_Z);\n            this.linerClipper.cohenSutherlandLineClipper(this.project(t2), this.project(t3), color);\n        }\n    }\n\n    public project(t1: { x: number, y: number, z: number }): Vector3f {\n        return new Vector3f(Math.round((this.width / 2) + (292 * t1.x / (-t1.z))),\n            Math.round((this.height / 2) - (t1.y * 292 / (-t1.z))),\n            t1.z);\n    }\n\n    public clearDepthBuffer(): void {\n        this.wBuffer.fill(-1 / 900);\n    }\n\n    public drawBox() {\n        const height = this.maxWindow.y - this.minWindow.y + 1;\n        const width = this.maxWindow.x - this.minWindow.x + 1;\n        let index = this.minWindow.y * this.width + this.minWindow.x;\n        for (let i = 0; i < height; i++) {\n            this.framebuffer.fill(255 << 24 | 55 << 16 | 55 << 8 | 55, index, index + width);\n            index += this.width;\n        }\n    }\n\n    public drawBox2(x1: number, y1: number, width: number, height: number, color: number) {\n\n        let index = y1 * this.width + x1;\n        for (let i = 0; i < height; i++) {\n            this.framebuffer.fill(color, index, index + width);\n            index += this.width;\n        }\n    }\n\n    // TODO: implement subpixel accuracy\n    // https://github.com/specht/cruiser\n    public wireFrameSphereClipping(elapsedTime: number): void {\n\n        this.wBuffer.fill(100);\n\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 16;\n        const STEPS2 = 16;\n\n        // TODO: move into setup method\n        for (let i = 0; i <= STEPS; i++) {\n            for (let r = 0; r < STEPS2; r++) {\n                points.push(this.sphereFunction2(-i * Math.PI / STEPS - Math.PI / 2, -r * 2 * Math.PI / STEPS2));\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2)); // 2\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 1\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2)); // 4\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 5\n            }\n        }\n\n        // Create MV Matrix\n        const scale = 10.8 + 5 * (Math.sin(elapsedTime * 0.16) + 1) / 2;\n        let modelViewMartrix = Matrix4f.constructScaleMatrix(scale, scale, scale).multiplyMatrix(Matrix4f.constructYRotationMatrix(elapsedTime * 0.08));\n        modelViewMartrix = modelViewMartrix.multiplyMatrix(Matrix4f.constructXRotationMatrix(elapsedTime * 0.08));\n        modelViewMartrix = Matrix4f.constructTranslationMatrix(0 + 20 * Math.sin(elapsedTime * 0.04), 5 * Math.sin(elapsedTime * 0.06), -22).multiplyMatrix(modelViewMartrix);\n\n        const points2: Array<Vector3f> = new Array<Vector3f>();\n\n        for (let p = 0; p < points.length; p++) {\n            const transformed = modelViewMartrix.multiplyHom(points[p]);\n\n            const x = transformed.x;\n            const y = transformed.y;\n            const z = transformed.z;\n\n            const xx = (this.width * 0.5) + (x / (-z * 0.0078));\n            const yy = (this.height * 0.5) + (y / (-z * 0.0078));\n\n            points2.push(new Vector3f(xx, yy, z));\n        }\n\n        // draw clip region\n        const colred = 255 << 24 | 230 << 16 | this.height << 16 | this.height;\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.minWindow.y - 1, 0), new Vector3f(this.minWindow.x - 1, this.maxWindow.y + 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.maxWindow.x + 1, this.minWindow.y - 1, 0), new Vector3f(this.maxWindow.x + 1, this.maxWindow.y + 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.minWindow.y - 1, 0), new Vector3f(this.maxWindow.x + 1, this.minWindow.y - 1, 0), colred);\n        this.drawLineDDA(new Vector3f(this.minWindow.x - 1, this.maxWindow.y + 1, 0), new Vector3f(this.maxWindow.x + 2, this.maxWindow.y + 1, 0), colred);\n\n        this.drawBox();\n\n        for (let i = 0; i < index.length; i += 3) {\n            const v1 = points2[index[i]];\n            const v2 = points2[index[i + 1]];\n            const v3 = points2[index[i + 2]];\n\n            const colLine = 255 << 24 | 255 << 16 | 255 << 8 | 255;\n            if (this.isTriangleCCW(v1, v2, v3)) {\n                this.linerClipper.cohenSutherlandLineClipper(v1, v2, colLine);\n                this.linerClipper.cohenSutherlandLineClipper(v1, v3, colLine);\n                this.linerClipper.cohenSutherlandLineClipper(v3, v2, colLine);\n            }\n        }\n    }\n\n    public isTriangleCCW(v1: { x: number, y: number, z: number },\n        v2: { x: number, y: number, z: number },\n        v3: { x: number, y: number, z: number }): boolean {\n        const det: number =\n            v1.x * v2.y - v2.x * v1.y +\n            v2.x * v3.y - v3.x * v2.y +\n            v3.x * v1.y - v1.x * v3.y;\n        if (this.cullMode === CullFace.BACK) {\n            return det < 0.0;\n        } else {\n            return det > 0.0;\n        }\n    }\n\n        public wireFrameTerrain(elapsedTime: number, heightmap: Texture): void {\n\n            this.clearDepthBuffer();\n\n            const index: Array<number> = [\n            ];\n\n            const points: Array<Vector3f> = [];\n            for (let y = 0; y < 256; y++) {\n                for (let x = 0; x < 256; x++) {\n                    points.push(new Vector3f((x - 128) * 20.0, (heightmap.texture[x + y * 256] & 0x000000ff) * 128 / 256 - 70, (y - 128) * 20.0));\n                }\n            }\n\n            for (let y = 0; y < 256; y += 1) {\n                for (let x = 0; x < 256 - 1; x += 1) {\n                    index.push(0 + x + (y * 256));\n                    index.push(1 + x + (y * 256));\n                }\n            }\n\n            for (let x = 0; x < 256; x += 1) {\n                for (let y = 0; y < 256 - 1; y += 1) {\n\n                    index.push(x + ((y + 0) * 256));\n                    index.push(x + ((y + 1) * 256));\n                }\n            }\n\n            const modelViewMartrix = Matrix3f.constructYRotationMatrix(elapsedTime * 0.003);\n\n            const points2: Array<Vector3f> = new Array<Vector3f>();\n\n            const xOff = + Math.cos(elapsedTime * 0.000001) * 128 * 20;\n            const zOff = Math.sin(elapsedTime * 0.000001) * 128 * 20;\n            points.forEach(element => {\n                const transformed = modelViewMartrix.multiply(element);\n\n                const x = transformed.x + xOff;\n                const y = transformed.y;\n                const z = transformed.z + zOff; // TODO: use translation matrix!\n\n                points2.push(new Vector3f(x, y, z));\n            });\n\n            for (let i = 0; i < index.length; i += 2) {\n                const scale = (1 - Math.min(255, -points2[index[i]].z * 0.9) / 255);\n                const color = (255 * scale) << 8 | 100 * scale | (this.height * scale) << 16 | 255 << 24;\n                this.nearPlaneClipping(points2[index[i]], points2[index[i + 1]], color);\n            }\n        }\n\n    public drawBoundingSphere(sphere: Sphere, matrix: Matrix4f, color: number): void {\n        const points: Array<Vector4f> = [];\n\n        const STEPS = 8;\n        const STEPS2 = 8;\n\n        // TODO: move into setup method\n        for (let i = 0; i <= STEPS; i++) {\n            for (let r = 0; r < STEPS2; r++) {\n\n                const pos = this.sphereFunction2(-i * Math.PI / STEPS - Math.PI / 2, -r * 2 * Math.PI / STEPS2).mul(sphere.getRadius() + 0.01).add(sphere.getCenter());\n                pos.w = 1;\n\n                points.push(pos);\n            }\n        }\n\n        const index: Array<number> = [];\n\n        for (let j = 0; j < STEPS; j++) {\n            for (let i = 0; i < STEPS2; i++) {\n                index.push(((STEPS2 * j) + (1 + i) % STEPS2)); // 2\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 1\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n\n                index.push(((STEPS2 * j) + STEPS2 + (0 + i) % STEPS2)); // 4\n                index.push(((STEPS2 * j) + STEPS2 + (1 + i) % STEPS2)); // 3\n                index.push(((STEPS2 * j) + (0 + i) % STEPS2)); // 5\n            }\n        }\n\n        const modelViewMartrix = matrix;\n\n        const points2: Array<Vector3f> = new Array<Vector3f>();\n\n        for (let p = 0; p < points.length; p++) {\n            const transformed = modelViewMartrix.multiplyHom(points[p]);\n            points2.push(new Vector3f(transformed.x, transformed.y, transformed.z));\n        }\n\n        for (let i = 0; i < index.length; i += 3) {\n\n            const v1 = points2[index[i]];\n            const v2 = points2[index[i + 1]];\n            const v3 = points2[index[i + 2]];\n\n            this.nearPlaneClipping(v1, v2, color);\n            this.nearPlaneClipping(v1, v3, color);\n            this.nearPlaneClipping(v3, v2, color);\n\n        }\n    }\n    public drawPlanedeformationTunnelAnim(elapsedTime: number, texture: Texture) {\n\n        let i = 0;\n        for (let y = 0; y < this.height; y++) {\n            for (let x = 0; x < this.width; x++) {\n                const xdist = (x - this.width / 2);\n                const ydist = (y - this.height / 2);\n                const dist = 256 * 0.2 / Math.max(1.0, Math.sqrt(xdist * xdist + ydist * ydist));\n                const dist2 = dist + elapsedTime * 0.002;\n                const angle = (Math.atan2(xdist, ydist) / Math.PI + 1.0) * 16 + elapsedTime * 0.00069;\n\n                const color1 = texture.texture[(dist2 & 0x1f) + (angle & 0x1f) * 32];\n                // darkening can be done with alpha blended texture\n                const scale = 1 - Interpolator.cosineInterpolate(1.0, 6.0, dist);\n                const r = ((color1 >> 0) & 0xff) * scale;\n                const g = ((color1 >> 8) & 0xff) * scale;\n                const b = ((color1 >> 16) & 0xff) * scale;\n                const final = r | g << 8 | b << 16;\n\n                this.framebuffer[i++] = final;\n            }\n        }\n    }\n\n\n    public drawScreenBounds(framebuffer: Framebuffer): void {\n        const color: number = Color.WHITE.toPackedFormat();\n        const width: number = this.width / 2;\n        const height: number = this.height / 2;\n\n        framebuffer.drawLineDDANoZ(\n            new Vector3f(width / 2, height / 2, 0),\n            new Vector3f(width / 2 + width, height / 2, -100),\n            color\n        );\n\n        framebuffer.drawLineDDANoZ(\n            new Vector3f(width / 2, height / 2, 0),\n            new Vector3f(width / 2, height / 2 + height, -100),\n            color\n        );\n\n        framebuffer.drawLineDDANoZ(\n            new Vector3f(width / 2 + width, height / 2, 0),\n            new Vector3f(width / 2 + width, height / 2 + height, -100),\n            color\n        );\n\n        framebuffer.drawLineDDANoZ(\n            new Vector3f(width / 2, height / 2 + height, 0),\n            new Vector3f(width / 2 + width, height / 2 + height, -100),\n            color\n        );\n    }\n\n    public drawParticleStreams(framebuffer: Framebuffer, elapsedTime: number, texture: Texture, light: Vector3f) {\n\n        const points: Array<Vector3f> = new Array<Vector3f>();\n        const points2: Array<Vector3f> = new Array<Vector3f>(points.length);\n        const transformed = framebuffer.project(light);\n\n        points2.push(transformed);\n        points2.sort((a, b) => {\n            return a.z - b.z;\n        });\n\n        points2.forEach(element => {\n            // let size = -(2.0 * 192 / (element.z));\n            const size = -(80.3 * 192 / (element.z));\n\n            framebuffer.drawParticle2(\n                Math.round(element.x - size / 2),\n                Math.round(element.y - size / 2),\n                Math.round(size), Math.round(size), texture, 1 / element.z, 1.0, 0, 200);\n        });\n\n    }\n\n    public drawPlaneDeformation(elapsedTime: number, texture: Texture): void {\n        // optimize\n        // power of two modulo with &\n        // this.framebuffer.clearColor(new Color());\n        // precompute LUD + render to half size backbuffer\n        const IMG_WIDTH = texture.width;\n        const IMG_HEIGHT = texture.height;\n\n        let framebufferIndex = 0;\n\n        for (let y = 0; y < this.height; y++) {\n            const yy = (-1.00 + 2.00 * y / this.height);\n\n            for (let x = 0; x < this.width; x++) {\n\n                const xx = (-1.00 + 2.00 * x / this.width);\n\n                // magic formulas here\n                const u = ((xx / Math.abs(yy)) * IMG_WIDTH * 0.05) | 0;\n                const v = (1.0 / Math.abs(yy) * IMG_HEIGHT * 0.05 + elapsedTime * 0.008) | 0;\n\n                const scale = 1 - Math.max(Math.min(1 / Math.abs(yy) * 0.2, 1), 0);\n                let color = texture.texture[(u & 0xff) + (v & 0xff) * IMG_WIDTH];\n                const r = ((color >> 0) & 0xff) * scale;\n                const g = ((color >> 8) & 0xff) * scale;\n                const b = ((color >> 16) & 0xff) * scale;\n                color = (255 << 24) | (b << 16) | (g << 8) | (r << 0);\n\n                this.framebuffer[framebufferIndex++] = color;\n            }\n        }\n    }\n\n    public torusFunction(alpha: number): Vector3f {\n        return new Vector3f(Math.sin(alpha) * 10, 0, Math.cos(alpha) * 10);\n    }\n\n    public fakeSphere(normal: Vector4f, vertex: Vertex): void {\n        // https://www.mvps.org/directx/articles/spheremap.htm\n        // vertex.textureCoordinate.u = 0.5 + normal.x * 0.5;\n        // vertex.textureCoordinate.v = 0.5 - normal.y * 0.5;\n        vertex.textureCoordinate.u = 0.5 + Math.asin(normal.x) / Math.PI;\n        vertex.textureCoordinate.v = 0.5 - Math.asin(normal.y) / Math.PI;\n    }\n\n    public fakeSphere2(normal: Vector3f, tex: TextureCoordinate): void {\n        tex.u = 0.5 + Math.asin(normal.x) / Math.PI;\n        tex.v = 0.5 - Math.asin(normal.y) / Math.PI;\n    }\n\n    public drawLineDDA(start: Vector3f, end: Vector3f, color: number): void {\n        this.lineRasterizer.drawLineDDA(start, end, color);\n    }\n\n    public drawLineDDANoZ(start: Vector3f, end: Vector3f, color: number): void {\n        this.lineRasterizerNo.drawLineDDANoZ(start, end, color);\n    }\n\n    private sphereFunction2(theta: number, phi: number): Vector4f {\n        const pos = new Vector4f(Math.cos(theta) * Math.cos(phi),\n            Math.cos(theta) * Math.sin(phi),\n            Math.sin(theta), 1.0);\n\n        return pos;\n    }\n\n}\n","export class FullscreenUtils {\n\n    public static toggleFullscreen(element: Element): void {\n        if (!this.fullscreen) {\n            FullscreenUtils.enterFullscreen(element);\n            this.fullscreen = true;\n            this.setStyle(element, 'cursor: none');\n        } else {\n            FullscreenUtils.exitFullscreen();\n            this.fullscreen = false;\n            this.setStyle(element, 'cursor: zoom-in');\n        }\n    }\n\n    private static setStyle(el, css) {\n        el.setAttribute('style', el.getAttribute('style') + ';' + css);\n    }\n\n    public static enterFullscreen(element: Element): void {\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.mozRequestFullScreen) {\n            element.mozRequestFullScreen();\n        } else if (element.msRequestFullscreen) {\n            element.msRequestFullscreen();\n        } else if (element.webkitRequestFullScreen) {\n            element.webkitRequestFullScreen();\n        }\n    }\n\n    public static exitFullscreen(): void {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    }\n\n    private static fullscreen: boolean = false;\n\n}\n","import { Framebuffer } from './Framebuffer';\nimport { FullscreenUtils } from './fullscreen/FullscreenUtils';\nimport { AbstractScene } from './scenes/AbstractScene';\n\nexport class Canvas {\n\n    public framebuffer: Framebuffer;\n    private canvas: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D;\n    private startTime: number;\n    private boundRenderLoop: FrameRequestCallback;\n\n    constructor(width: number, height: number, private scene: AbstractScene) {\n        this.canvas = document.createElement('canvas');\n\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.canvas.id = 'aisa-canvas';\n\n        this.canvas.style.cssText = 'image-rendering: optimizeSpeed;' + // FireFox < 6.0\n            'image-rendering: -moz-crisp-edges;' + // FireFox\n            'image-rendering: -o-crisp-edges;' +  // Opera\n            'image-rendering: -webkit-crisp-edges;' + // Chrome\n            'image-rendering: crisp-edges;' + // Chrome\n            'image-rendering: -webkit-optimize-contrast;' + // Safari\n            'image-rendering: pixelated; ' + // Future browsers\n            '-ms-interpolation-mode: nearest-neighbor;'; // IE\n\n        this.canvas.style.width = `${width * 2}px`;\n        this.canvas.style.height = `${height * 2}px`;\n\n        this.context = this.canvas.getContext('2d');\n\n        // FIXME: make this cross browser compatible!\n        (this.context as any).oImageSmoothingEnabled = false;\n        this.context.imageSmoothingEnabled = false;\n        (this.context as any).webkitImageSmoothingEnabled = false;\n\n        this.framebuffer = new Framebuffer(width, height);\n        this.boundRenderLoop = this.renderLoop.bind(this);\n    }\n\n    public init(): void {\n        // add canvas element to target element\n        this.appendTo(document.getElementById('aisa'));\n\n        // Add fullscreen toggle on click\n        this.canvas.addEventListener('click', (event: MouseEvent) => {\n            event.preventDefault();\n            FullscreenUtils.toggleFullscreen(this.canvas);\n        });\n\n        // Init scene and start rendering\n        this.scene.init(this.framebuffer).then(\n            () => {\n                this.scene.onInit();\n                this.startTime = Date.now();\n                this.renderLoop();\n            }\n        );\n    }\n\n    public renderLoop(): void {\n        this.scene.render(this.framebuffer, Date.now() - this.startTime);\n        this.flipBackbuffer();\n        requestAnimationFrame(this.boundRenderLoop);\n    }\n\n    public flipBackbuffer(): void {\n        this.context.putImageData(this.framebuffer.getImageData(), 0, 0);\n    }\n\n    public appendTo(element: HTMLElement): void {\n        element.appendChild(this.canvas);\n    }\n\n}\n","\nimport { AbstractClipEdge } from './AbstractClipEdge';\nimport { RightClipEdge } from './RightClipEdge';\nimport { LeftClipEdge } from './LeftClipEdge';\nimport { BottomClipEdge } from './BottomClipEdge';\nimport { TopClipEdge } from './TopClipEdge';\nimport { Vertex } from '../Vertex';\nimport { Framebuffer } from '../Framebuffer';\n\nexport class SutherlandHodgman2DClipper {\n\n\n    private clipRegion: Array<AbstractClipEdge>;\n\n    constructor(private framebuffer: Framebuffer) {\n        this.clipRegion = new Array<AbstractClipEdge>(\n            new RightClipEdge(framebuffer),\n            new LeftClipEdge(framebuffer),\n            new BottomClipEdge(framebuffer),\n            new TopClipEdge(framebuffer)\n        );\n\n    }\n\n    /**\n     * FIXME: optimize by minimizing creation of new arrays\n     *\n     * @param {Array<Vertex>} subject\n     * @return {Array<Vertex>}\n     */\n    public clipConvexPolygon(subject: Array<Vertex>): Array<Vertex> {\n\n        let output = subject;\n\n        for (let j = 0; j < this.clipRegion.length; j++) {\n            const edge: AbstractClipEdge = this.clipRegion[j];\n            const input = output;\n            output = new Array<Vertex>();\n            let S = input[input.length - 1];\n\n            for (let i = 0; i < input.length; i++) {\n                const point = input[i];\n                if (edge.isInside(point)) {\n                    if (!edge.isInside(S)) {\n                        output.push(edge.computeIntersection(S, point));\n                    }\n                    output.push(point);\n                } else if (edge.isInside(S)) {\n                    output.push(edge.computeIntersection(S, point));\n                }\n                S = point;\n            }\n        }\n\n        return output;\n    }\n\n}\n","import { Vector4f } from '../../math/index';\nimport { PointLight } from '../light/PointLight';\nimport { Material } from '../material/Material';\n\nexport class PhongLighting {\n\n    public computeColor(mat: Material, lights: Array<PointLight>, normal: Vector4f, vertex: Vector4f): Vector4f {\n        let finalColor: Vector4f = new Vector4f(0, 0, 0);\n\n        for (let x: number = 0; x < lights.length; x++) {\n            const light: PointLight = lights[x];\n            const ambientIntensity: Vector4f = this.computeAmbientIntensity(mat, light);\n            const diffuseIntensity: Vector4f = this.computeDiffuseIntensity(mat, light, normal, vertex);\n            const specularIntensity: Vector4f = this.computeSpecularIntensity(mat, light, normal, vertex);\n\n            finalColor = finalColor.add(ambientIntensity)\n                .add(diffuseIntensity)\n                .add(specularIntensity);\n        }\n\n        return finalColor;\n    }\n\n    private computeAmbientIntensity(mat: Material, l: PointLight): Vector4f {\n        return mat.ambientColor.componentWiseMul(l.ambientIntensity);\n    }\n\n    private computeDiffuseIntensity(mat: Material, l: PointLight, normal: Vector4f, vertex: Vector4f): Vector4f {\n        const lightDirection: Vector4f = l.position.sub(vertex).normalize();\n        const scale: number = Math.min(Math.max(normal.dot(lightDirection), 0), 1.0);\n        return mat.diffuseColor.componentWiseMul(l.diffuseIntensity).mul(scale);\n    }\n\n    private computeSpecularIntensity(mat: Material, l: PointLight, normal: Vector4f, vertex: Vector4f): Vector4f {\n        const lightDirection: Vector4f = l.position.sub(vertex).normalize();\n        const r: Vector4f = normal.mul(normal.dot(lightDirection) * 2.0).sub(lightDirection);\n        const v: Vector4f = vertex.mul(-1).normalize();\n        const scale: number = Math.pow(Math.max(r.dot(v), 0), mat.shininess);\n        return mat.specularColor.componentWiseMul(l.specularIntensity).mul(scale);\n    }\n\n}\n","import { Vector4f } from '../../math/index';\n\nexport abstract class Light {\n\n    public ambientIntensity: Vector4f;\n    public diffuseIntensity: Vector4f;\n    public specularIntensity: Vector4f;\n\n}\n","import { Vector4f } from '../../math/index';\nimport { Light } from './Light';\n\nexport class PointLight extends Light {\n\n    public position: Vector4f;\n\n}\n","import { Vector4f } from '../../math/index';\n\nexport class Material {\n\n    public ambientColor: Vector4f;\n    public diffuseColor: Vector4f;\n    public specularColor: Vector4f;\n    public emissiveColor: Vector4f;\n\n    public shininess: number;\n\n}\n","import { Color } from '../core/Color';\n\nexport class ColorInterpolator {\n\n    public startColor: Color = new Color();\n    public colorSlope: Color = new Color();\n\n    public setup(c1: Color, c2: Color, distance: number): void {\n        this.colorSlope.r = (c2.r - c1.r) / distance;\n        this.colorSlope.g = (c2.g - c1.g) / distance;\n        this.colorSlope.b = (c2.b - c1.b) / distance;\n\n        this.startColor.r = c1.r;\n        this.startColor.g = c1.g;\n        this.startColor.b = c1.b;\n    }\n\n    public advance(): void {\n        this.startColor.r += this.colorSlope.r;\n        this.startColor.g += this.colorSlope.g;\n        this.startColor.b += this.colorSlope.b;\n    }\n\n}\n","import { Vertex } from '../Vertex';\n\nexport class SlopeInterpolator {\n\n    yDistance: number;\n    slope: number;\n    zslope: number;\n    currentZ: number;\n    currentX: number;\n    yStart: number;\n\n    setup(top: Vertex, bottom: Vertex) {\n        this.yDistance = bottom.projection.y - top.projection.y;\n        this.slope = (bottom.projection.x - top.projection.x) / this.yDistance;\n        this.zslope = (1 / bottom.projection.z - 1 / top.projection.z) / this.yDistance;\n        this.currentZ = 1.0 / top.projection.z;\n        this.currentX = top.projection.x;\n        this.yStart = top.projection.y;\n    }\n\n    advance() {\n        this.currentX += this.slope;\n        this.currentZ += this.zslope;\n    }\n}\n","import { Framebuffer } from '../Framebuffer';\nimport { Vertex } from '../Vertex';\nimport { AbstractScannlineTriangleRasterizer } from './AbstractScanlineTriangleRasterizer';\nimport { ColorInterpolator } from './ColorInterpolator';\nimport { SlopeInterpolator } from './SlopeInterpolator';\n\nexport class GouraudShadingTriangleRasterizer extends AbstractScannlineTriangleRasterizer {\n\n\n    private colorInterpolator1: ColorInterpolator = new ColorInterpolator();\n    private colorInterpolator2: ColorInterpolator = new ColorInterpolator();\n    private colorInterpolator3: ColorInterpolator = new ColorInterpolator();\n    private rowColorInterpolator: ColorInterpolator = new ColorInterpolator();\n    private leftSlope: SlopeInterpolator = new SlopeInterpolator();\n    private rightSlope: SlopeInterpolator = new SlopeInterpolator();\n\n    constructor(private framebuffer: Framebuffer) {\n        super();\n    }\n\n    protected fillLongRightTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        this.leftSlope.setup(v1, v2);\n        this.rightSlope.setup(v1, v3);\n        this.colorInterpolator1.setup(v1.color, v2.color, this.leftSlope.yDistance);\n        this.colorInterpolator2.setup(v1.color, v3.color, this.rightSlope.yDistance);\n        this.drawSpan(framebuffer, this.leftSlope, this.colorInterpolator1, this.colorInterpolator2, this.leftSlope, this.rightSlope);\n\n        this.leftSlope.setup(v2, v3);\n        this.colorInterpolator3.setup(v2.color, v3.color, this.leftSlope.yDistance);\n        this.drawSpan(framebuffer, this.leftSlope, this.colorInterpolator3, this.colorInterpolator2,this.leftSlope, this.rightSlope);\n    }\n\n    protected fillLongLeftTriangle(framebuffer: Framebuffer, v1: Vertex, v2: Vertex, v3: Vertex): void {\n        this.leftSlope.setup(v1, v3);\n        this.rightSlope.setup(v1, v2);\n        this.colorInterpolator2.setup(v1.color, v2.color, this.rightSlope.yDistance);\n        this.colorInterpolator1.setup(v1.color, v3.color, this.leftSlope.yDistance);\n        this.drawSpan(framebuffer, this.rightSlope, this.colorInterpolator1, this.colorInterpolator2,this.leftSlope, this.rightSlope);\n\n        this.rightSlope.setup(v2, v3);\n        this.colorInterpolator3.setup(v2.color, v3.color, this.rightSlope.yDistance);\n        this.drawSpan(framebuffer, this.rightSlope, this.colorInterpolator1, this.colorInterpolator3,this.leftSlope, this.rightSlope);\n    }\n\n    drawSpan(framebuffer: Framebuffer, shortSlope: SlopeInterpolator, colorInterpolator1: ColorInterpolator, colorInterpolator2: ColorInterpolator,\n        leftSlope: SlopeInterpolator, rightSlope: SlopeInterpolator) {\n        \n        let yPosition = shortSlope.yStart;\n        for (let i = 0; i < shortSlope.yDistance; i++) {\n            const length = Math.round(rightSlope.currentX) - Math.round(leftSlope.currentX);\n            this.rowColorInterpolator.setup(colorInterpolator1.startColor, colorInterpolator2.startColor, length);\n            let framebufferIndex = Math.round(yPosition) * framebuffer.width + Math.round(leftSlope.currentX);\n            const spanzStep = (rightSlope.currentZ - leftSlope.currentZ) / length;\n            let wStart = leftSlope.currentZ;\n            for (let j = 0; j < length; j++) {\n                if (wStart < framebuffer.wBuffer[framebufferIndex]) {\n                    framebuffer.wBuffer[framebufferIndex] = wStart;\n                    framebuffer.framebuffer[framebufferIndex] = this.rowColorInterpolator.startColor.toPackedFormat();\n                }\n                framebufferIndex++;\n                wStart += spanzStep;\n                this.rowColorInterpolator.advance();\n            }\n\n            leftSlope.advance()\n            rightSlope.advance();\n           \n            colorInterpolator1.advance();\n            colorInterpolator2.advance();\n\n            yPosition++;\n        }\n    }\n\n}\n","import { Color } from '../core/Color';\nimport { Framebuffer } from '../Framebuffer';\nimport { FlatshadedMesh } from '../geometrical-objects/FlatshadedMesh';\nimport { Vector4f } from '../math/index';\nimport { Matrix4f } from '../math/Matrix4f';\nimport { SutherlandHodgman2DClipper } from '../screen-space-clipping/SutherlandHodgman2DClipper';\nimport { Fog } from '../shading/fog/Fog';\nimport { PhongLighting } from '../shading/illumination-models/PhongLighting';\nimport { PointLight } from '../shading/light/PointLight';\nimport { Material } from '../shading/material/Material';\nimport { Vertex } from '../Vertex';\nimport { AbstractRenderingPipeline } from './AbstractRenderingPipeline';\nimport { AbstractTriangleRasterizer } from '../rasterizer/AbstractTriangleRasterizer';\nimport { GouraudShadingTriangleRasterizer } from '../rasterizer/GouraudShadingTriangleRasterizer';\n\n/**\n * TODO:\n * - object with position, rotation, material, color\n * - remove tempp matrix objects: instead store one global MV  matrix and manipulate\n *   it directly without generating temp amtrices every frame\n * - no lighting for culled triangles\n * - only z clip if necessary (no clip, fully visible)\n * Optimization:\n * - no shading / only texture mapping (use function pointers to set correct rasterization function)\n * - use delta step method from black art of 3d programming\n * - generate object only once\n * - dont use temp arrays / instead use always the same array preallocated\n */\nexport class GouraudShadingRenderingPipeline extends AbstractRenderingPipeline {\n\n    private fog: Fog = null;\n    private lights: Array<PointLight> = null;\n    private material: Material = null;\n    private lighting: boolean = true;\n    private color: Color = Color.WHITE;\n\n    // it is possible to change the rasterizer here for\n    // flat, gouroud, texture mapping etc.. should be done with clipper as well!\n    private triangleRasterizer: AbstractTriangleRasterizer = null;\n    private clipper: SutherlandHodgman2DClipper;\n\n    private projectedVertices: Array<Vector4f> = new Array<Vector4f>(\n        new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1), new Vector4f(0, 0, 0, 1)\n    );\n\n    private vertexArray: Array<Vertex> = new Array<Vertex>(\n        new Vertex(), new Vertex(), new Vertex()\n    );\n\n    public constructor(framebuffer: Framebuffer) {\n        super(framebuffer);\n        this.clipper = new SutherlandHodgman2DClipper(framebuffer);\n\n        const light1: PointLight = new PointLight();\n        light1.ambientIntensity = new Vector4f(1, 1, 1, 1);\n        light1.diffuseIntensity = new Vector4f(1, 1, 1, 1);\n        light1.specularIntensity = new Vector4f(1, 1, 1, 1);\n        light1.position = new Vector4f(3, 0, -2, 1);\n\n        const light2: PointLight = new PointLight();\n        light2.ambientIntensity = new Vector4f(0, 0, 1, 1);\n        light2.diffuseIntensity = new Vector4f(0, 0.6, 1, 1);\n        light2.specularIntensity = new Vector4f(0.8, 0.8, 0.8, 1);\n        light2.position = new Vector4f(0, -380, -180, 1);\n\n        this.lights = [light1, light2];\n\n        const mat: Material = new Material();\n        mat.ambientColor = new Vector4f(0.12, 0.14, 0.1, 0);\n        mat.diffuseColor = new Vector4f(0.38, 0.4, 0.4, 1);\n        mat.specularColor = new Vector4f(0.8, 0.5, 0.5, 0);\n        mat.shininess = 2;\n\n        this.material = mat;\n        this.triangleRasterizer = new GouraudShadingTriangleRasterizer(framebuffer);\n    }\n\n    public setFramebuffer(framebuffer: Framebuffer) {\n        this.framebuffer = framebuffer;\n    }\n\n    public setFog(fog: Fog): void {\n        this.fog = fog;\n    }\n\n    public setLights(lights: Array<PointLight>): void {\n        this.lights = lights;\n    }\n\n    public enableLighting(enable: boolean): void {\n        this.lighting = enable;\n    }\n\n    public setMaterial(material: Material): void {\n        this.material = material;\n    }\n\n    public setColor(color: Color): void {\n        this.color = color;\n    }\n\n    public drawMeshArray(framebuffer: Framebuffer, meshes: Array<FlatshadedMesh>, modelViewMartrix: Matrix4f): void {\n        for (let j: number = 0; j < meshes.length; j++) {\n            const model: FlatshadedMesh = meshes[j];\n            this.draw(framebuffer, model,modelViewMartrix);\n        }\n    }\n\n\n    public draw(framebuffer: Framebuffer, mesh: FlatshadedMesh, modelViewMartrix: Matrix4f): void {\n\n        const normalMatrix: Matrix4f = modelViewMartrix.computeNormalMatrix();\n\n        for (let i: number = 0; i < mesh.normals.length; i++) {\n            normalMatrix.multiplyHomArr(mesh.normals[i], mesh.transformedNormals[i]);\n        }\n\n        for (let i: number = 0; i < mesh.points.length; i++) {\n            modelViewMartrix.multiplyHomArr(mesh.points[i], mesh.transformedPoints[i]);\n        }\n\n        for (let i: number = 0; i < mesh.faces.length; i++) {\n            const v1: Vector4f = mesh.transformedPoints[mesh.faces[i].v1];\n            const v2: Vector4f = mesh.transformedPoints[mesh.faces[i].v2];\n            const v3: Vector4f = mesh.transformedPoints[mesh.faces[i].v3];\n\n            const normal1: Vector4f = mesh.transformedNormals[mesh.faces[i].n1];\n            const normal2: Vector4f = mesh.transformedNormals[mesh.faces[i].n2];\n            const normal3: Vector4f = mesh.transformedNormals[mesh.faces[i].n3];\n\n            if (this.isInFrontOfNearPlane(v1) &&\n                this.isInFrontOfNearPlane(v2) &&\n                this.isInFrontOfNearPlane(v3)) {\n\n                this.project2(v1, this.projectedVertices[0]);\n                this.project2(v2, this.projectedVertices[1]);\n                this.project2(v3, this.projectedVertices[2]);\n\n                this.vertexArray[0].position = v1;\n                this.vertexArray[0].projection = this.projectedVertices[0];\n                this.vertexArray[0].normal = normal1;\n\n                this.vertexArray[1].position = v2;\n                this.vertexArray[1].projection = this.projectedVertices[1];\n                this.vertexArray[1].normal = normal2;\n\n                this.vertexArray[2].position = v3;\n                this.vertexArray[2].projection = this.projectedVertices[2];\n                this.vertexArray[2].normal = normal3;\n\n                this.renderConvexPolygon(framebuffer, this.vertexArray, true);\n            } else if (!this.isInFrontOfNearPlane(v1) &&\n                !this.isInFrontOfNearPlane(v2) &&\n                !this.isInFrontOfNearPlane(v3)) {\n                continue;\n            } else {\n                this.vertexArray[0].position = v1;\n                this.vertexArray[1].position = v2;\n                this.vertexArray[2].position = v3;\n\n                if (this.lighting) {\n                    this.vertexArray[0].color = this.computeColor(normal1, v1);\n                    this.vertexArray[1].color = this.computeColor(normal2, v2);\n                    this.vertexArray[2].color = this.computeColor(normal3, v3);\n                } else {\n                    this.vertexArray[0].color = this.color;\n                    this.vertexArray[1].color = this.color;\n                    this.vertexArray[2].color = this.color;\n                }\n\n                const output: Array<Vertex> = this.zClipTriangle(this.vertexArray);\n\n                if (output.length < 3) {\n                    return;\n                }\n\n                for (let j: number = 0; j < output.length; j++) {\n                    output[j].projection = this.project(output[j].position);\n                }\n\n                this.renderConvexPolygon(framebuffer, output, false);\n            }\n        }\n    }\n\n    public project(t1: { x: number, y: number, z: number }): Vector4f {\n        return new Vector4f(\n            Math.round((this.framebuffer.width / 2) + (292 * t1.x / (-t1.z))),\n            Math.round((this.framebuffer.height / 2) - (t1.y * 292 / (-t1.z))),\n            t1.z\n        );\n    }\n\n    public project2(t1: { x: number, y: number, z: number }, result: Vector4f): void {\n        result.x = Math.round((this.framebuffer.width / 2) + (292 * t1.x / (-t1.z)));\n        result.y = Math.round((this.framebuffer.height / 2) - (t1.y * 292 / (-t1.z)));\n        result.z = t1.z;\n    }\n\n    public computeNearPlaneIntersection(p1: Vertex, p2: Vertex): Vertex {\n        // TODO: interpolate color linear\n        const ratio: number = (this.NEAR_PLANE_Z - p1.position.z) / (p2.position.z - p1.position.z);\n        const vertex: Vertex = new Vertex();\n        vertex.position = new Vector4f(\n            ratio * (p2.position.x - p1.position.x) + p1.position.x,\n            ratio * (p2.position.y - p1.position.y) + p1.position.y,\n            this.NEAR_PLANE_Z\n        );\n        vertex.color = p2.color.sub(p1.color).mul(ratio).add(p1.color);\n        return vertex;\n    }\n\n    public zClipTriangle(subject: Array<Vertex>): Array<Vertex> {\n        const input: Array<Vertex> = subject;\n        const output: Array<Vertex> = new Array<Vertex>();\n        let S: Vertex = input[input.length - 1];\n\n        for (let i: number = 0; i < input.length; i++) {\n            const point: Vertex = input[i];\n            if (this.isInFrontOfNearPlane(point.position)) {\n                if (!this.isInFrontOfNearPlane(S.position)) {\n                    output.push(this.computeNearPlaneIntersection(S, point));\n                }\n                output.push(point);\n            } else if (this.isInFrontOfNearPlane(S.position)) {\n                output.push(this.computeNearPlaneIntersection(S, point));\n            }\n            S = point;\n        }\n\n        return output;\n    }\n\n    private renderConvexPolygon(framebuffer: Framebuffer, projected: Array<Vertex>, late: boolean = false): void {\n        if (projected.length === 3 &&\n            !this.isTriangleCCW(\n                projected[0].projection,\n                projected[1].projection,\n                projected[2].projection)) {\n            return;\n        }\n\n        if (late) {\n            if (this.lighting) {\n                this.vertexArray[0].color = this.computeColor(this.vertexArray[0].normal, this.vertexArray[0].position);\n                this.vertexArray[1].color = this.computeColor(this.vertexArray[1].normal, this.vertexArray[1].position);\n                this.vertexArray[2].color = this.computeColor(this.vertexArray[2].normal, this.vertexArray[2].position);\n            } else {\n                this.vertexArray[0].color = this.color;\n                this.vertexArray[1].color = this.color;\n                this.vertexArray[2].color = this.color;\n            }\n\n        }\n\n        if (projected.length === 4 &&\n            !this.isTriangleCCW2(\n                projected[0].projection,\n                projected[1].projection,\n                projected[2].projection,\n                projected[3].projection)\n        ) {\n            return;\n        }\n\n        const clippedPolygon: Array<Vertex> = this.clipper.clipConvexPolygon(projected);\n\n        if (clippedPolygon.length < 3) {\n            return;\n        }\n\n        this.triangulateConvexPolygon(framebuffer, clippedPolygon);\n    }\n\n    private triangulateConvexPolygon(framebuffer:Framebuffer, clippedPolygon: Array<Vertex>): void {\n        for (let j: number = 0; j < clippedPolygon.length - 2; j++) {\n            this.triangleRasterizer.drawTriangleDDA(\n                framebuffer,\n                clippedPolygon[0],\n                clippedPolygon[1 + j],\n                clippedPolygon[2 + j]\n            );\n        }\n    }\n\n    private computeColor(normal: Vector4f, vertex: Vector4f): Color {\n\n        // TODO: if lighting is enabled use mat and light\n        // else use Color set\n\n        let vertexColor: Vector4f = new PhongLighting().computeColor(this.material, this.lights, normal, vertex);\n\n        if (this.fog !== null) {\n            vertexColor = this.fog.computeVertexColor(vertexColor, vertex);\n        }\n\n        return new Color(\n            Math.min(255, vertexColor.x * 255),\n            Math.min(255, vertexColor.y * 255),\n            Math.min(255, vertexColor.z * 255),\n            255\n        );\n    }\n\n}\n","import { Framebuffer } from './../Framebuffer';\n\nexport abstract class AbstractScene {\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public init(framebuffer: Framebuffer): Promise<any> {\n        return Promise.all([]);\n    }\n\n    public onInit(): void {\n\n    }\n\n    public abstract render(framebuffer: Framebuffer, time: number): void;\n\n}\n","import RandomNumberGenerator from '../RandomNumberGenerator';\nimport { Texture } from './Texture';\n\nexport class TextureUtils {\n\n    public static generateProceduralNoise(): Promise<Texture> {\n        return new Promise<Texture>((resolve: (value?: Texture) => void): void => {\n            const texture: Texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng: RandomNumberGenerator = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let i: number = 0; i < 256 * 256; i++) {\n                const scale: number = rng.getFloat();\n                texture.texture[i] = 200 * scale | 255 * scale << 8 | 205 * scale << 16 | 255 << 24;\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static generateProceduralParticleTexture(): Promise<Texture> {\n        return new Promise((resolve: (value?: Texture) => void): void => {\n            const texture: Texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng: RandomNumberGenerator = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let y: number = 0; y < 256; y++) {\n                for (let x: number = 0; x < 256; x++) {\n                    const dx: number = 127 - x;\n                    const dy: number = 127 - y;\n                    const r: number = Math.sqrt(dx * dx + dy * dy) / 127;\n                    let c: number = 1 - r;\n                    c = c * c * c;\n                    if (r > 1) {\n                        c = 0;\n                    }\n                    c = Math.min(1, c * 2.9);\n\n                    texture.texture[x + y * 256] = 235 | 255 << 8 | 235 << 16 | (c * 255) << 24;\n                }\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static generateProceduralParticleTexture2(): Promise<Texture> {\n        return new Promise((resolve) => {\n            const texture = new Texture();\n            texture.texture = new Uint32Array(256 * 256);\n\n            const rng = new RandomNumberGenerator();\n            rng.setSeed(100);\n\n            for (let y = 0; y < 256; y++) {\n                for (let x = 0; x < 256; x++) {\n                    const dx = 127 - x;\n                    const dy = 127 - y;\n                    const r = Math.sqrt(dx * dx + dy * dy) / 127;\n                    let c = 1 - r;\n                    c = c * c;\n                    if (r > 1) { c = 0; }\n                    c = Math.min(1, c * 40);\n                    texture.texture[x + y * 256] = 255 | 205 << 8 | 255 << 16 | (c * 255) << 24;\n                }\n            }\n\n            texture.width = 256;\n            texture.height = 256;\n            resolve(texture);\n        });\n    }\n\n    public static load(filename: string, transparency: boolean): Promise<Texture> {\n        return new Promise<Texture>((resolve: (texture?: Texture) => void): void => {\n            const image: HTMLImageElement = new Image();\n            image.onload = (): void => {\n                const texture: Texture = new Texture();\n                texture.texture = this.getImageData(image, transparency);\n                texture.width = image.width;\n                texture.height = image.height;\n                resolve(texture);\n            };\n            image.onerror = (): void => resolve();\n            image.src = filename;\n        });\n    }\n\n    private static getImageData(image: HTMLImageElement, withAlpha: boolean = false): Uint32Array {\n        const canvas: HTMLCanvasElement = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const context: CanvasRenderingContext2D = canvas.getContext('2d');\n        context.drawImage(image, 0, 0);\n        const data: Uint8ClampedArray = context.getImageData(0, 0, image.width, image.height).data;\n        const conv: Uint32Array = new Uint32Array(data.length / 4);\n        let c: number = 0;\n        for (let i: number = 0; i < data.length; i += 4) {\n            if (withAlpha) {\n                conv[c] = (data[i + 3] << 24) | (data[i + 2] << 16) | (data[i + 1] << 8) | data[i + 0];\n            } else {\n                conv[c] = (255 << 24) | (data[i + 2] << 16) | (data[i + 1] << 8) | data[i + 0];\n            }\n\n            c++;\n        }\n        return conv;\n    }\n\n}\n","import { BoundingVolume } from './BoundingVolume';\nimport { Vector4f } from './index';\nimport { Matrix4f } from './Matrix4f';\nimport { Plane } from './Plane';\n\nexport class Sphere implements BoundingVolume {\n\n    private center: Vector4f;\n    private radius: number;\n\n    public constructor(position: Vector4f, radius: number) {\n        this.center = position;\n        this.radius = radius;\n    }\n\n    /**\n     *\n     * @param {Plane} plane\n     * @returns {boolean}\n     * @memberof Sphere\n     */\n    public isInsidePositiveHalfSpace(plane: Plane): boolean {\n        return plane.getNormal().dot(this.center) - plane.getDistance() > - this.radius;\n    }\n\n    public getTran(mat: Matrix4f): Vector4f {\n        return mat.multiplyHom(this.center);\n    }\n\n    public getRadius(): number {\n        return this.radius;\n    }\n\n    public getCenter(): Vector4f {\n        return this.center;\n    }\n\n}\n","import { Vector4f } from './index';\nimport { Sphere } from './Sphere';\n\nexport class ComputationalGeometryUtils {\n\n    public computeBoundingSphere(vertices: Array<Vector4f>): Sphere {\n\n        if (vertices.length === 0) {\n            throw new Error('More than one vertex required.');\n        }\n\n        if (vertices.length === 1) {\n            return new Sphere(vertices[0], 0);\n        }\n\n        let center = new Vector4f(0, 0, 0, 0);\n        let radius = 0;\n\n        vertices.forEach(point => {\n            center = center.add(new Vector4f(point.x, point.y, point.z, 0.0));\n        });\n\n        center = center.mul(1.0 / vertices.length);\n\n        vertices.forEach(point => {\n            radius = Math.max(radius, center.sub(point).length());\n        });\n\n        return new Sphere(center, radius);\n    }\n\n}\n","import { FlatShadedFace } from '../geometrical-objects/FlatShadedFace';\nimport { FlatshadedMesh } from '../geometrical-objects/FlatshadedMesh';\nimport { Vector4f } from '../math/index';\nimport { BlenderScene } from './BlenderScene';\nimport { Face } from './face';\nimport { Mesh } from './mesh';\nimport { Vector } from './vector';\nimport { TexturedMesh } from '../rendering-pipelines/TexturedMesh';\nimport { TextureCoordinate } from '../TextureCoordinate';\nimport { ComputationalGeometryUtils } from '../math/Geometry';\nimport { TexCoord } from './tex-coord';\n\nexport class BlenderJsonParser {\n\n    public static parse(blenderScene: BlenderScene, invert: boolean = false): Array<FlatshadedMesh> {\n        const scene: Array<FlatshadedMesh> = [];\n\n        blenderScene.forEach((object: Mesh) => {\n            const points: Array<Vector4f> = new Array<Vector4f>();\n            const normals: Array<Vector4f> = new Array<Vector4f>();\n\n            object.vertices.forEach((v: Vector) => {\n                points.push(new Vector4f(v.x, v.y, v.z).mul(1));\n            });\n\n            object.normals.forEach((v: Vector) => {\n                normals.push(\n                    invert ? new Vector4f(v.x, v.y, v.z).normalize().mul(-1) : new Vector4f(v.x, v.y, v.z).normalize()\n                );\n            });\n\n            const faces: Array<FlatShadedFace> = [];\n            object.faces.forEach((f: Face) => {\n                faces.push({\n                    n1: f.normals[0],\n                    n2: f.normals[1],\n                    n3: f.normals[2],\n                    v1: f.vertices[0],\n                    v2: f.vertices[1],\n                    v3: f.vertices[2],\n                });\n            });\n\n            const obj: FlatshadedMesh = {\n                faces,\n                normals,\n                points,\n                transformedNormals: normals.map(() => new Vector4f(0, 0, 0, 0)),\n                transformedPoints: points.map(() => new Vector4f(0, 0, 0, 0)),\n            };\n\n            scene.push(obj);\n        });\n\n        return scene;\n    }\n\n    public static getBlenderScene(\n        file: BlenderScene, disp: boolean = true): Array<TexturedMesh> {\n        const scene: Array<TexturedMesh> = [];\n\n        file.forEach((object: Mesh) => {\n            const points: Array<Vector4f> = new Array<Vector4f>();\n            const normals: Array<Vector4f> = new Array<Vector4f>();\n            let coords: Array<TextureCoordinate>;\n\n            if (object.uv) {\n                coords = [];\n                object.uv.forEach((v: TexCoord) => {\n                    const uv: TextureCoordinate = new TextureCoordinate();\n                    uv.u = v.u;\n                    uv.v = 1.0 - v.v;\n                    coords.push(uv);\n                });\n            }\n\n            object.vertices.forEach((v: Vector) => {\n                // some transformation in order for the vertices to be in worldspace\n                if (disp)\n                    points.push(new Vector4f(v.x, v.y, v.z).mul(2).add(new Vector4f(0, -2.7, 0, 0)));\n                else\n                    points.push(new Vector4f(v.x, v.y, v.z).mul(2));\n            });\n\n            object.normals.forEach((v: Vector) => {\n                normals.push(new Vector4f(v.x, v.y, v.z));\n            });\n\n            const sphere = new ComputationalGeometryUtils().computeBoundingSphere(points);\n            sphere.getCenter().w = 1;\n\n            // Create class for objects\n            const obj = {\n                points,\n                normals,\n                uv: coords,           // NO!!!\n                faces: object.faces, // NOO!!!\n                points2: points.map(() => new Vector4f(0, 0, 0, 0)),\n                normals2: normals.map(() => new Vector4f(0, 0, 0, 0)),\n                boundingSphere: sphere, // NO!!!\n                name: object.name /// NO!\n            };\n            scene.push(obj);\n        });\n\n        return scene;\n    }\n\n}\n","import { BlenderJsonParser } from '../../blender/BlenderJsonParser';\nimport { FlatshadedMesh } from '../../geometrical-objects/FlatshadedMesh';\nimport { TexturedMesh } from '../../rendering-pipelines/TexturedMesh';\nimport { BlenderScene } from '../../blender/BlenderScene';\n\n/**\n * Load Wavefront OBJ file that was converted via obj2json utility.\n * to save the convertToMeshArray step\n * renamed to JSX file to load file at runtime\n */\nexport class BlenderLoader {\n\n    public static load(filename: string): Promise<Array<FlatshadedMesh>> {\n        return fetch(filename).then((response: Response) => {\n            return response.json();\n        }).then((meshes: BlenderScene) => {\n            return BlenderJsonParser.parse(meshes);\n        });\n    }\n\n    public static loadWithTexture(filename: string): Promise<Array<TexturedMesh>> {\n        return fetch(filename).then((response: Response) => {\n            return response.json();\n        }).then((meshes: BlenderScene) => {\n            return BlenderJsonParser.getBlenderScene(meshes, false);\n        });\n    }\n\n    private constructor() {\n\n    }\n}\n","import { Framebuffer } from '../../Framebuffer';\nimport { Vector3f } from '../../math';\nimport { Texture, TextureUtils } from '../../texture';\n\nexport class FontRenderer {\n\n    private fontTexture: Texture;\n    private charToIndex: Map<number, number>;\n\n    constructor(\n        private framebuffer: Framebuffer,\n        private width: number,\n        private height: number,\n        fonts: string,\n        private file: any) {\n        this.charToIndex = new Map<number, number>();\n\n        for (let x: number = 0; x < fonts.length; x++) {\n            this.addCharInex(fonts.charCodeAt(x), x);\n        }\n    }\n\n    public init(): Promise<any> {\n        return Promise.all([\n            TextureUtils.load(this.file, true).then(\n                (texture: Texture) => this.fontTexture = texture\n            )\n        ]);\n    }\n\n    public draw(): void {\n        this.framebuffer.drawTextureRectFastAlpha(0, 0, 0, 0, 50, 50, this.fontTexture);\n    }\n\n    public drawText2(x: number, y: number, text: string): void {\n        let xpos: number = x;\n        const xFonts: number = this.fontTexture.width / this.width;\n\n        for (let i: number = 0; i < text.length; i++) {\n            const asciiCode: number = text.charCodeAt(i);\n            const index: number = this.charToIndex.has(asciiCode) ? this.charToIndex.get(asciiCode) : 0;\n            const tx: number = Math.floor(index % xFonts) * this.width;\n            const ty: number = Math.floor(index / xFonts) * this.height;\n            this.framebuffer.drawTextureRectFastAlpha(xpos, y, tx, ty, this.width, this.height, this.fontTexture);\n            xpos += this.width;\n        }\n    }\n\n    public drawText(framebuffer: Framebuffer, x: number, y: number, text: string, time: number, sine: boolean = true): void {\n        let xpos: number = x;\n        const xFonts: number = this.fontTexture.width / this.width;\n\n        const speed: number = 0.07;\n        const xOff: number = Math.floor(time * speed) % this.width;\n        const textOff: number = Math.floor((time * speed) / this.width) % text.length;\n        xpos -= xOff;\n        for (let i: number = 0; i < Math.floor(this.framebuffer.width / this.width + 1); i++) {\n            const asciiCode: number = text.charCodeAt((i + textOff) % text.length);\n            const index: number = this.charToIndex.has(asciiCode) ? this.charToIndex.get(asciiCode) : 0;\n            const tx: number = Math.floor(index % xFonts) * this.width;\n            const ty: number = Math.floor(index / xFonts) * this.height;\n            this.drawTextureRectFastAlpha(framebuffer, xpos,\n                y, tx, ty, this.width, this.height, this.fontTexture, time, sine);\n            xpos += this.width;\n        }\n    }\n\n    public drawText3(framebuffer: Framebuffer, x: number, y: number, text: string, time: number, sine: boolean = true, points: Array<Vector3f>): void {\n        let xpos: number = x;\n        const xFonts: number = this.fontTexture.width / this.width;\n\n        const speed: number = 0.07;\n        const xOff: number = Math.floor(time * speed) % this.width;\n        const textOff: number = Math.floor((time * speed) / this.width) % text.length;\n        xpos -= xOff;\n        for (let i: number = 0; i < Math.floor(this.framebuffer.width / this.width + 1); i++) {\n            const asciiCode: number = text.charCodeAt((i + textOff) % text.length);\n            const index: number = this.charToIndex.has(asciiCode) ? this.charToIndex.get(asciiCode) : 0;\n            const tx: number = Math.floor(index % xFonts) * this.width;\n            const ty: number = Math.floor(index / xFonts) * this.height;\n            this.drawTextureRectFastAlpha3(framebuffer, xpos,\n                y, tx, ty, this.width, this.height, this.fontTexture, time, sine, points);\n            xpos += this.width;\n        }\n    }\n\n\n    public drawTextureRectFastAlpha3(framebuffer: Framebuffer, xs: number, ys: number, xt: number, yt: number,\n        width: number, height: number, texture: Texture, time: number, sine: boolean = true, points: Array<Vector3f>): void {\n        const startW: number = Math.max(0, 0 - xs);\n        const endW: number = Math.min(xs + width, framebuffer.width) - xs;\n        const speed: number = 0.07;\n        const xOff: number =(time * speed) % 1;\n        for (let w: number = startW; w < endW; w++) {\n\n            const yDisp: number = sine ? Math.round(Math.sin(time * 0.004 + (xs + w) * 0.013) * 30) : 0;\n            let texIndex: number = xt + w + yt * texture.width;\n            let frIndex: number = xs + w + (ys + yDisp) * framebuffer.width;\n\n            for (let h: number = 0; h < height; h++) {\n                const color: number = texture.texture[texIndex];\n                if (((color & 0x00000ff)>>0) > 100) {\n\n                    let y = 0-h*1.2+4;\n                    let xpos=  (xs+w)*1.2-160-xOff*1.2;\n                    points.push(new Vector3f(\n                        xpos,\n                        Math.sin(xpos*0.06)*y+Math.sin(xpos*0.2)*1,\n                        Math.cos(xpos*0.06)*y+Math.cos(xpos*0.2)*1));\n                }\n\n                texIndex += texture.width;\n                frIndex += this.framebuffer.width;\n            }\n\n        }\n\n    }\n\n    public drawTextureRectFastAlpha(framebuffer: Framebuffer, xs: number, ys: number, xt: number, yt: number,\n        width: number, height: number, texture: Texture, time: number, sine: boolean = true): void {\n        const startW: number = Math.max(0, 0 - xs);\n        const endW: number = Math.min(xs + width, framebuffer.width) - xs;\n        for (let w: number = startW; w < endW; w++) {\n\n            const yDisp: number = sine ? Math.round(Math.sin(time * 0.004 + (xs + w) * 0.013) * 30) : 0;\n            let texIndex: number = xt + w + yt * texture.width;\n            let frIndex: number = xs + w + (ys + yDisp) * framebuffer.width;\n\n            for (let h: number = 0; h < height; h++) {\n                const color: number = texture.texture[texIndex];\n                if (color & 0xff000000) {\n                    framebuffer.framebuffer[frIndex] = color;\n                }\n\n                texIndex += texture.width;\n                frIndex += this.framebuffer.width;\n            }\n\n        }\n\n    }\n\n    private addCharInex(char: number, index: number): void {\n        this.charToIndex.set(char, index);\n    }\n}\n","export interface musicProperties {\n    timeSeconds: number;\n    timeMilliseconds: number;\n    sceneData: sceneData;\n}\n\n// scene variables | things you set through jsRocket\nexport interface sceneData {\n    effect: any;\n    transitionType: any;\n    transitionValue: any;\n    snare: any;\n    bass: any;\n}\n\n// Beats per minute of your demo tune\nexport const BPM = 125;\n\n// The resolution between two beats, four is usually fine,- eight adds a bit more finer control\nexport const ROWS_PER_BEAT = 6;\n\n// we calculate this now, so we can translate between rows and seconds later on\nexport const ROW_RATE = BPM / 60 * ROWS_PER_BEAT;\n","import './JSRocket';\nimport './cowbell/cowbell'\nimport './cowbell/audio_player'\nimport './cowbell/web_audio_player'\nimport './cowbell/openmpt/openmpt_player'\nimport {\n    musicProperties,\n    ROW_RATE,\n    sceneData\n} from './MusicProperties';\nexport class SoundManager {\n\n    public syncDevice;\n    public isPlaying = false;\n    public demoMode: boolean;\n    public row = 0;    // the current row we're on\n\n    //  container for audio values to be used by effects (time, bass, effect, transitions)\n    public musicProperties: musicProperties;\n    public sceneData: sceneData;\n    public audioElement: HTMLAudioElement;\n\n    public constructor() {\n\n        // Initialize JS Rocket\n        this.syncDevice = new JSRocket.SyncDevice();\n        this.syncDevice.connected = false;\n\n    }\n\n    /**\n     * Load audio files supported by cowbell\n     *\n     * @param {string} filename     audio file to load\n     * @returns {Promise<void>}     promise\n     */\n    public loadMusic(filename: string): Promise<void> {\n        return new Promise((resolve) => {\n\n            const fileExtension = filename.split('.').pop().toLowerCase();\n            let audioPlayer;\n\n            switch (fileExtension) {\n                case 'it':\n                case 'xm':\n                case 's3m':\n                case 'mod':\n                    audioPlayer = new Cowbell.Player.OpenMPT({\n                        'pathToLibOpenMPT': './openmpt/libopenmpt.js'\n                    });\n                    break;\n                case 'ogg':\n                case 'mp3':\n                default:\n                    audioPlayer = new Cowbell.Player.Audio();\n                    break;\n            }\n            const track = new audioPlayer.Track(filename);\n            this.audioElement = track.open();\n            resolve();\n        });\n    }\n\n    /**\n     * Load XML file for music syncronization for use with JS Rocket\n     *\n     * @param {string} filename      XML file to load\n     * @param {string} demoMode      use true for release mode (uses file) | false when using rocket editor\n     * @returns {Promise<void>}      promise\n     */\n    prepareSync(filename: string, demoMode: boolean): Promise<void> {\n        this.demoMode = demoMode;\n        return new Promise((resolve) => {\n            if (this.demoMode) {\n                this.syncDevice.setConfig({\n                    'rocketXML': filename\n                });\n                this.syncDevice.init('demo');\n\n            } else {\n                this.syncDevice.init();\n            }\n\n            // XML file from JS Rocket library was loaded and parsed, make sure your ogg is ready\n            this.syncDevice.on('ready', () => this.onSyncReady());\n\n            // [JS Rocket - Arrow keys] whenever you change the row, a value or interpolation mode this will get called\n            this.syncDevice.on('update', (newRow: number) => this.onSyncUpdate(newRow));\n\n            // [JS Rocket - Spacebar] in Rocket calls one of those\n            this.syncDevice.on('play', () => this.onPlay());\n            this.syncDevice.on('pause', () => this.onPause());\n            resolve()\n        });\n    }\n\n    onSyncReady() {\n        this.syncDevice.connected = true;\n\n        this.sceneData = {\n            effect: this.syncDevice.getTrack('effect'),\n            snare: this.syncDevice.getTrack('snare'),\n            bass: this.syncDevice.getTrack('bass'),\n            transitionType: this.syncDevice.getTrack('transitionType'),\n            transitionValue: this.syncDevice.getTrack('transitionValue')\n        }\n    }\n\n    // row is only given if you navigate, or change a value on the row in Rocket\n    // on interpolation change (hit [i]) no row value is sent, as the current there is the upper row of your block\n    onSyncUpdate(newRow: number) {\n        if (!isNaN(newRow)) {\n            this.row = newRow;\n        }\n        this.audioElement.currentTime = newRow / ROW_RATE;\n    }\n\n    updateMusic() {\n        // show message if rocket app is not running in background\n        if (!this.syncDevice.connected && !this.demoMode) {\n            return;\n        }\n\n        // update music properties\n        this.musicProperties = {\n            timeSeconds: (this.audioElement?.currentTime) || 0,\n            timeMilliseconds: (this.audioElement?.currentTime) * 1000,\n            sceneData: {\n                effect: this.sceneData.effect.getValue(this.row),\n                transitionType: this.sceneData.transitionType.getValue(this.row),\n                transitionValue: this.sceneData.transitionValue.getValue(this.row),\n                snare: this.sceneData.snare.getValue(this.row),\n                bass: this.sceneData.bass.getValue(this.row),\n            }\n        }\n\n        this.row = this.musicProperties.timeSeconds * ROW_RATE;\n\n        // update JS rocket\n        if (this.audioElement && this.audioElement.paused === false) {\n            // otherwise we may jump into a point in the audio where there's\n            // no timeframe, resulting in Rocket setting row 2 and we report\n            // row 1 back - thus Rocket spasming out\n\n            // this informs Rocket where we are\n            this.syncDevice.update(this.row);\n        }\n\n        // stop once timeline reaches end\n        if (Math.floor(this.audioElement.duration) === Math.floor(this.musicProperties.timeSeconds)) {\n            document.getElementById('ticker_stop').click();\n        }\n    }\n\n    onPlay() {\n        if (!this.isPlaying && this.audioElement) {\n            if (this.audioElement.currentTime) {\n                this.audioElement.currentTime = this.row / ROW_RATE;\n            }\n            this.isPlaying = true;\n            this.audioElement.play();\n        }\n        console.log('[onPlay]');\n    }\n\n    onPause() {\n        this.row = this.audioElement.currentTime * ROW_RATE;\n        if (!this.audioElement.paused && this.isPlaying) {\n            this.audioElement.pause();\n            this.isPlaying = false;\n        }\n        console.info('[onPause]');\n    }\n\n    /**\n     * find the prev/next effect and jump to it\n     *\n     * @param   {number} time       where we are in the audio timeline\n     * @param   {number} direction  direction to skip -1 goes backwards.  1 goes forward\n     */\n    public jump(time: number, direction: number, sceneLength: number) {\n        this.row = time * ROW_RATE;\n        const effectJump = Number(this.sceneData.effect.getValue(this.row).toFixed(1));\n        if (Math.trunc(Number(this.musicProperties.sceneData.effect)) !== Math.trunc(effectJump) && effectJump >= 1) {\n            // if running into transition effect 2.5..then keep searching and only land on whole numbers\n            if (parseInt(effectJump.toString(), 10) !== effectJump) {\n                this.jump(time + (0.12 * direction), direction, sceneLength);\n            } else {\n                this.seek(time);\n            }\n        } else {\n            if (time >= 0 && effectJump < sceneLength - 3) {\n                this.jump(time + (0.12 * direction), direction, sceneLength);\n            } else {\n                // go back to the beginning\n                this.seek(0);\n            }\n        }\n    }\n\n    /**\n     * Jumps to a point in the audio timeline in milliseconds\n     *\n     * @param  {number} time            time in milliseconds\n     */\n    public seek(time: number) {\n        this.audioElement.currentTime = time;\n        // update rocket editor position to new timeline location\n        if (!this.demoMode) {\n            this.syncDevice.update(this.audioElement.currentTime * ROW_RATE);\n        }\n    }\n\n    /**\n     * Turns music volume on or off\n     *\n     * @param  {HTMLElement} ref         volume icon to toggle\n     * @param  {boolean} isMuted         on or off\n     */\n    public toggleSound(ref: HTMLElement, isMuted: boolean) {\n        if (isMuted) {\n            ref.setAttribute('title', 'enable sound');\n            ref.classList.remove('fa-volume-up');\n            ref.classList.add('fa-volume-off');\n        } else {\n            ref.setAttribute('title', 'mute sound');\n            ref.classList.remove('fa-volume-off');\n            ref.classList.add('fa-volume-up');\n        }\n        this.audioElement.muted = isMuted;\n    }\n\n    /**\n     * Restore position of timeline & mute preferences on reloads\n     */\n    public initTimeline() {\n        // jump to last position on timeline for local development reloading\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const newLocal = this;\n        const jumpTo = Number(localStorage.getItem('lastTime'));\n\n        // poll for mod player since library does not use promises\n        if ((window as any).libopenmpt) {\n            (function poll() {\n                // check if mod was loaded then seek\n                if ((window as any).modulePtr) {\n\n                    // openmpt does not support volume control or muting\n                    document.getElementById('ticker_volume').style.display = 'none';\n                    newLocal.updateRange(newLocal.audioElement.duration);\n                    newLocal.seek(jumpTo);\n                    return;\n                }\n                setTimeout(poll, 150);\n            })();\n        } else {\n            newLocal.audioElement.onloadedmetadata = function () {\n                newLocal.updateRange(newLocal.audioElement.duration);\n            };\n            newLocal.seek(jumpTo);\n        }\n\n        // remember last sound preferences\n        const isMuted = localStorage.getItem('soundToggle') === 'true';\n        this.toggleSound(document.getElementById('ticker_volume'), isMuted);\n    }\n\n    /**\n     * Set timeline slider max range\n     *\n     * @param  {number} value         length time in seconds\n     */\n    private updateRange(value: number) {\n        (document.getElementById(\"timeline\") as HTMLInputElement).max = String(Math.floor(value) * 1000);\n    }\n\n    /*\n    // todo: add effect # markers to timeline\n    fetch(rocketData.default).then(response => response.text())\n        .then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\n        .then(data => {\n            const tracks: Element[] = Array.from(data.documentElement.getElementsByTagName(\"track\"));\n            tracks.forEach((element) => {\n                if (element.getAttribute(\"name\") === 'effect') {\n                    const keys: Element[] = Array.from(element.getElementsByTagName(\"key\"));\n                    keys.forEach((elementKey) => {\n                        const p = document.createElement(\"option\");\n                        const value = elementKey.getAttribute('row').valueOf();\n                        const label = elementKey.getAttribute('value').valueOf();\n\n                        // remap rows to a range between 0 and 1000\n                        const newValue = Utils.map(Number(label), 0, 1520, 0, 1000);\n\n                        p.value = value;\n                        p.label = label;\n                        // this.tickmarkRef.appendChild(p);\n                    })\n                }\n            });\n        });\n        */\n\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { CullFace } from '../../CullFace';\nimport { Framebuffer } from '../../Framebuffer';\nimport { FlatshadedMesh } from '../../geometrical-objects/FlatshadedMesh';\nimport { Matrix4f } from '../../math';\nimport { GouraudShadingRenderingPipeline } from '../../rendering-pipelines/GouraudShadingRenderingPipeline';\nimport { AbstractScene } from '../../scenes/AbstractScene';\nimport { Texture, TextureUtils } from '../../texture';\nimport { BlenderLoader } from '../../model/blender/BlenderLoader';\nimport { FontRenderer } from '../sine-scroller/FontRenderer';\nimport { SoundManager } from '../../sound/SoundManager';\n\nimport './style.css';\n\nexport class RotatingGearsScene extends AbstractScene {\n\n    private blurred: Texture;\n    private noise: Texture;\n    private hoodlumLogo: Texture;\n    private robot: Texture;\n\n    private gearsMesh: Array<FlatshadedMesh>;\n\n    private accumulationBuffer: Uint32Array;\n    private renderingPipeline: GouraudShadingRenderingPipeline;\n    private soundManager: SoundManager = new SoundManager();\n    fontRenderer: FontRenderer;\n\n    public init(framebuffer: Framebuffer): Promise<any> {\n        this.accumulationBuffer = new Uint32Array(framebuffer.width * framebuffer.height);\n        this.renderingPipeline = new GouraudShadingRenderingPipeline(framebuffer);\n        this.renderingPipeline.setCullFace(CullFace.FRONT);\n\n        const fonts: string =\n        ' !\\'><C+\\'()@+,-./0123456789:; = ? ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    this.fontRenderer = new FontRenderer(\n        framebuffer,\n        8, 8, fonts,\n        require('../../assets/font.png')\n    );\n        return Promise.all([\n            this.fontRenderer.init(),\n            this.soundManager.loadMusic(require(\"../../assets/music/ctrix_-_rok_at_party.mod\")),\n            BlenderLoader.load(require('../../assets/jsx/gear.jsx')).then(\n                (mesh: Array<FlatshadedMesh>) => this.gearsMesh = mesh\n            ),\n            TextureUtils.load(require('../../assets/blurredBackground.png'), false).then(\n                (texture: Texture) => this.blurred = texture\n            ),\n            TextureUtils.generateProceduralNoise().then(\n                (texture: Texture) => this.noise = texture\n            ),\n            TextureUtils.load(require('../../assets/hoodlumLogo.png'), true).then(\n                (texture: Texture) => this.hoodlumLogo = texture\n            ),\n            TextureUtils.load(require('../../assets/robot.png'), true).then(\n                (texture: Texture) => this.robot = texture\n            )\n        ]);\n    }\n\n    public onInit(): void {\n        const button: HTMLButtonElement = document.createElement(\"button\");\n        button.textContent = \"Start Music\";\n        document.getElementsByTagName(\"body\")[0].appendChild(button);\n        button.addEventListener (\"click\", ()=> {\n\n            this.soundManager.onPause();\n            this.soundManager.onPlay()\n        });\n    }\n\n    public render(framebuffer: Framebuffer): void {\n        const time: number = Date.now();\n\n        framebuffer.drawScaledTextureClipBi(0,0,framebuffer.width, framebuffer.height, this.blurred, 1.0);\n        this.drawBlenderScene3(framebuffer, time);\n\n        framebuffer.noise(time, this.noise);\n        framebuffer.drawTexture(320 - this.robot.width +30, -8, this.robot, 1);\n        this.fontRenderer.drawText(framebuffer,0,200-16-4,\"YOUR ADVERTISEMENT COULD BE HERE +++ \", time, false);\n    }\n\n    public drawBlenderScene3(framebuffer: Framebuffer, elapsedTime: number): void {\n\n        framebuffer.clearDepthBuffer();\n\n        const camera: Matrix4f = Matrix4f.constructTranslationMatrix(0, 0, -5).multiplyMatrix(\n            Matrix4f.constructYRotationMatrix(elapsedTime * 0.0002)\n                .multiplyMatrix(\n                    Matrix4f.constructXRotationMatrix(elapsedTime * 0.0002)\n                )\n        );\n\n        for (let i: number = 0; i < 10; i++) {\n            const scale = (Math.sin(Math.PI * 2 / 10 * i + elapsedTime * 0.002) * 0.2 + 0.2 + 0.3) *2;\n            const mv: Matrix4f = camera.multiplyMatrix(\n                Matrix4f.constructTranslationMatrix(0, ((i + elapsedTime * 0.0008) % 10) - 5, 0).multiplyMatrix(\n                    Matrix4f.constructYRotationMatrix((i * 0.36 + elapsedTime * 0.0016)).multiplyMatrix(\n                        Matrix4f.constructScaleMatrix(scale, 2, scale)\n                    )\n                )\n            );\n            this.renderingPipeline.draw(framebuffer, this.gearsMesh[0], mv);\n        }\n        // let lensflareScreenSpace = framebuffer.project(camera.multiply(new Vector3f(16.0 * 20, 16.0 * 20, 0)));\n        // framebuffer.drawLensFlare(lensflareScreenSpace, elapsedTime * 0.3, texture, dirt);\n    }\n\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./default-style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./default-style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Canvas } from '../../Canvas';\nimport { RotatingGearsScene } from './RotatingGearsScene';\n\nimport './../../default-style.css';\n\nclass Application {\n\n    public static main(): void {\n        const canvas: Canvas = new Canvas(320, 200, new RotatingGearsScene());\n        canvas.init();\n    }\n\n}\n\nApplication.main();\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","JSRocket","SyncData","_track","getTrack","getIndexForName","name","getTrackLength","createIndex","varName","track","Track","getValue","row","keys","Object","idx","lo","hi","mi","findKeyIndex","Math","floor","value","k0","k1","a","b","t","interpolation","pow","add","SyncDevicePlayer","cfg","_urlRequest","_syncData","_eventHandler","load","url","XMLHttpRequest","open","onreadystatechange","urlRequestHandler","send","error","readyState","status","xmlString","key","tLen","kLen","trackList","DOMParser","parseFromString","getElementsByTagName","getAttribute","keyList","parseInt","parseFloat","ready","readXML","responseText","rocketXML","on","evt","handler","SyncDeviceClient","_ws","WebSocket","socketURL","toInt","arr","view","DataView","ArrayBuffer","setUint8","byteLength","getInt8","getInt32","onopen","binaryType","onmessage","queue","Uint8Array","cmd","pause","play","subarray","getFloat32","save","onclose","console","warn","onerror","utf8Name","replace","m","c","String","fromCharCode","message","charCodeAt","buffer","streamInt","SyncDevice","_device","_previousIntRow","_connected","_config","deviceReady","deviceUpdate","devicePlay","devicePause","init","mode","setConfig","option","hasOwnProperty","getConfig","Cowbell","Player","Audio","audio","src","body","createPlayer","containerElement","opts","getElementById","ui","UI","Basic","player","playerOpts","trackOpts","jQuery","fn","cowbell","each","OpenMPTGenerator","audioCtx","modulePtr","leftBufferPtr","rightBufferPtr","self","initModule","byteArray","Int8Array","ptrToFile","libopenmpt","_malloc","asciiToStack","str","stackStr","stackAlloc","writeAsciiToMemory","HEAPU8","set","_openmpt_module_create_from_memory","g","stack","stackSave","_openmpt_module_ctl_set","stackRestore","duration","_openmpt_module_get_duration_seconds","cleanup","_openmpt_module_destroy","_free","onReady","pathToLibOpenMPT","script","onRuntimeInitialized","ensureLibOpenMPT","channelCount","request","addEventListener","log","response","responseType","generateAudio","outputBuffer","outputL","getChannelData","outputR","framesToRender","framesRendered","framesPerChunk","min","actualFramesPerChunk","_openmpt_module_read_float_stereo","sampleRate","rawAudioLeft","HEAPF32","rawAudioRight","seekable","seek","position","_openmpt_module_set_position_seconds","reset","OpenMPT","Common","WebAudioPlayer","generatorConstructor","generator","AudioContext","webkitAudioContext","latencyHint","BUFFER_SIZE","HAVE_NOTHING","HAVE_METADATA","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","scriptNode","playStartTimestamp","generatorIsReady","playWasRequestedBeforeReady","hasStartedProcessing","playFromTime","newTime","disconnect","createScriptProcessor","onaudioprocess","paused","event","playbackTime","generatedLength","chan","numberOfChannels","channelData","currentTime","onended","ontimeupdate","onloadedmetadata","connect","destination","state","resume","onplay","pausedAtTrackTime","pausedAtTimestamp","onpause","__defineGetter__","__defineSetter__","close","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","globalThis","Function","prop","prototype","call","scriptUrl","importScripts","location","currentScript","scripts","p","nc","ScaleClipBlitter","framebuffer","constructor","drawScaledTextureClip","xp","yp","width","height","texture","alphaBlend","xStep","yStep","newHeight","newWidth","yStart","xStart","xTextureStart","xx","yy","max","alphaScale","index2","y","x","textureIndex","alpha","inverseAlpha","framebufferPixel","texturePixel","r","Color","static","toPackedFormat","sub","color","div","num","mul","CullFace","Vector4f","z","w","vec","cross","normalize","reci","sqrt","sub2","vec1","vec2","add2","scal","componentWiseMul","dot","cross2","normalize2","AbstractGeometricObject","mesh","inverse","buildMesh","points","normals","Array","normal","faces","n1","n2","n3","v1","v2","v3","transformedPoints","transformedNormals","getMesh","Vector3f","mult","scale","Torus","invert","super","STEPS2","frame","torusFunction","PI","frame2","up","right","pos","sin","cos","j","Vector2f","perp","Matrix4f","m11","m12","m13","m14","m21","m22","m23","m24","m31","m32","m33","m34","m41","m42","m43","m44","matrix","setIdentityMatrix","transpose","computeNormalMatrix","inverseTranslation","constructIdentityMatrix","scale1","scale2","scale3","inverseRotation","multiplyMatrix","getInverseRotation","getRotation","planePoint","planeNormal","lightPosition","NdotL","shadowMatrix","tx","ty","tz","setTranslationMatrix","setXRotationMatrix","setZRotationMatrix","setScaleMatrix","sx","sy","sz","setYRotationMatrix","setRotationMatrix","s","vector","multiply2","matrix2","multiply","multiplyHom","multiplyHomArr","multiplyHomArr2","multiplyArr","Matrix3f","angle","xScale","yScale","zScale","Interpolator","start","end","current","y1","y2","mu","mu2","RandomNumberGenerator","seed","getFloat","setSeed","AbstractTriangleRasterizer","AbstractScannlineTriangleRasterizer","temp","drawTriangleDDA","p1","p2","p3","projection","fillLongRightTriangle","fillLongLeftTriangle","FlatShadingTriangleRasterizer","slope1","slope2","zslope1","zslope2","curz1","curz2","xPosition","xPosition2","yPosition","yDistanceLeft","yDistanceRight","drawSpan","distance","spanzStep","round","wStart","framebufferIndex","wBuffer","LineRasterizerDda","drawLineDDA","xDistance","yDistance","dx","dy","abs","sign","wDelta","drawPixel","LineRasterizerNoZ","drawLineDDANoZ","TexturedTriangleRasterizer","tslope1u","textureCoordinate","u","tslope1v","v","curu1","curv1","tslope2u","tslope2v","curu2","curv2","spanuStep","spanvStep","uStart","vStart","bob","color2","getBilinearFilteredPixelRasterizer","TexturedAlphaBlendingTriangleRasterizer","pipeline","currentColor","TextureCoordinate","Vertex","AbstractRenderingPipeline","NEAR_PLANE_Z","cullMode","BACK","setCullFace","face","setAlpha","isInFrontOfNearPlane","isTriangleCCW","DISABLED","det","isTriangleCCW2","v4","TexturingRenderingPipeline","sphereMapping","triangleRasterizer","vertexArray","setSphereMapping","modelViewMatrix","projectedVertices","setFramebuffer","enableAlphaBlending","disableAlphaBlending","setModelViewMatrix","drawMeshArray","meshes","model","draw","normalMatrix","normals2","points2","vertices","project2","fakeSphere","uv","clipConvexPolygon","zClipTriangle","t1","computeNearPlaneIntersection","ratio","vertex","subject","input","output","S","point","clipRegion","edge","isInside2","computeIntersection2","AbstractClipEdge","BottomClipEdge","isInside","minWindow","computeIntersection","factor","textCoord","CohenSutherlandLineClipper","cohenSutherlandLineClipper","col","code1","computeRegionCode","code2","accept","done","isTrivialAccept","isTrivialReject","REGION_CODE_CENTER","tempCode","tempPoint","REGION_CODE_TOP","maxWindow","REGION_CODE_BOTTOM","REGION_CODE_RIGHT","REGION_CODE_LEFT","regionCode","LeftClipEdge","RightClipEdge","TopClipEdge","Texture","maxWidth","maxHeight","clamp","setClamp","getPixel","getBilinearFilteredPixel","x0","x1","y0","x0y0","x1y0","x0y1","x1y1","col1","col2","getBilinearFilteredPixel2","getPixel2","interpolateComp","getPixelRasterizer","getPixel3","xFrac","yFrac","oneMinusXfrac","oneMinusYfrac","Framebuffer","camera","texturedTriangleRasterizer","scaleClipBlitter","texturedRenderingPipeline","lineRasterizer","lineRasterizerNo","tmpGlitch","lensFlareVisible","lensFlareStart","lensFlareEnd","imageData","unsignedIntArray","torus","plane","cylinder2","linerClipper","ImageData","Float32Array","arrayBuffer","PIXEL_SIZE_IN_BYTES","Uint8ClampedArray","Uint32Array","setTexture","getImageData","clear","BLACK","clearColorBuffer","fill","drawPixel4","drawPixel3","alpha2","drawPixelAntiAliased","roundedX","roundedY","percent","drawPixelAliased","drawPixelAntiAliasedSpacial","ceil","readPixel","drawRect","drawRect2","drawText","text","xpos","firstIndex","drawTextureRectFastAlpha","addReflections","interpolate","Date","now","drawTextureRect2","xs","ys","xt","yt","h","texIndex","frIndex","drawTextureColorized","txPixel","drawTextureRectNoAlpha","c1","c2","nAlpha","nInvAlpha","r1","g1","b1","r2","g2","b2","drawTextureRect","pixelWidth","fbPixel","drawTextureRectAdd","pixelate","xoff","yoff","drawBox2","fastFramebufferCopyOffset","dest","offset","l","fastFramebufferCopy","noise","elapsedTime","rng","drawTexturedBillboard","drawParticle","drawParticle2","imgNum","spritH","drawParticle2Sub","rr","gg","bb","drawParticleNoDepth","drawSoftParticle","zDist","drawFog","fogScale","fogOffset","videoMemorySize","wBufferScale","drawScaledTextureClipBi","drawScaledTextureClipBiAdd","drawScaledTextureClipAdd","drawTexture","SCREEN_WIDTH","SCREEN_HEIGHT","textureRowOffset","framebufferRowOffset","yHeight","xWidth","drawTextureFullscreen","drawTexture3","time","mHeight","drawTextureNoClipAlpha","nearPlaneClipping","t2","project","t3","clearDepthBuffer","drawBox","wireFrameSphereClipping","sphereFunction2","modelViewMartrix","constructScaleMatrix","constructYRotationMatrix","constructXRotationMatrix","constructTranslationMatrix","transformed","colred","colLine","wireFrameTerrain","heightmap","xOff","zOff","forEach","drawBoundingSphere","sphere","getRadius","getCenter","drawPlanedeformationTunnelAnim","xdist","ydist","dist","dist2","atan2","color1","cosineInterpolate","final","drawScreenBounds","WHITE","drawParticleStreams","light","sort","size","drawPlaneDeformation","IMG_WIDTH","IMG_HEIGHT","asin","fakeSphere2","tex","theta","phi","FullscreenUtils","fullscreen","exitFullscreen","setStyle","enterFullscreen","el","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullScreen","mozCancelFullScreen","webkitExitFullscreen","Canvas","scene","canvas","context","startTime","boundRenderLoop","getContext","oImageSmoothingEnabled","imageSmoothingEnabled","webkitImageSmoothingEnabled","renderLoop","bind","appendTo","preventDefault","toggleFullscreen","then","onInit","render","flipBackbuffer","requestAnimationFrame","putImageData","SutherlandHodgman2DClipper","PhongLighting","computeColor","mat","lights","finalColor","ambientIntensity","computeAmbientIntensity","diffuseIntensity","computeDiffuseIntensity","specularIntensity","computeSpecularIntensity","ambientColor","lightDirection","diffuseColor","shininess","specularColor","Light","PointLight","Material","emissiveColor","ColorInterpolator","startColor","colorSlope","setup","advance","SlopeInterpolator","slope","zslope","currentZ","currentX","top","bottom","GouraudShadingTriangleRasterizer","colorInterpolator1","colorInterpolator2","colorInterpolator3","rowColorInterpolator","leftSlope","rightSlope","shortSlope","GouraudShadingRenderingPipeline","fog","material","lighting","clipper","light1","light2","setFog","setLights","enableLighting","enable","setMaterial","setColor","normal1","normal2","normal3","renderConvexPolygon","projected","late","clippedPolygon","triangulateConvexPolygon","vertexColor","computeVertexColor","AbstractScene","Promise","all","TextureUtils","resolve","filename","transparency","image","Image","onload","withAlpha","drawImage","conv","Sphere","center","radius","isInsidePositiveHalfSpace","getNormal","getDistance","getTran","ComputationalGeometryUtils","computeBoundingSphere","BlenderJsonParser","blenderScene","object","f","file","disp","coords","boundingSphere","BlenderLoader","fetch","json","parse","getBlenderScene","FontRenderer","fontTexture","charToIndex","fonts","Map","addCharInex","drawText2","xFonts","asciiCode","has","sine","textOff","drawText3","drawTextureRectFastAlpha3","startW","endW","yDisp","char","ROW_RATE","BPM","SoundManager","syncDevice","isPlaying","demoMode","musicProperties","sceneData","audioElement","connected","loadMusic","audioPlayer","split","pop","toLowerCase","prepareSync","onSyncReady","newRow","onSyncUpdate","onPlay","onPause","effect","snare","bass","transitionType","transitionValue","isNaN","updateMusic","timeSeconds","timeMilliseconds","click","info","jump","direction","sceneLength","effectJump","Number","toFixed","trunc","toggleSound","ref","isMuted","classList","muted","initTimeline","newLocal","jumpTo","localStorage","getItem","poll","display","updateRange","setTimeout","locals","RotatingGearsScene","blurred","hoodlumLogo","robot","gearsMesh","accumulationBuffer","renderingPipeline","soundManager","fontRenderer","FRONT","generateProceduralNoise","button","textContent","drawBlenderScene3","mv","main"],"sourceRoot":""}